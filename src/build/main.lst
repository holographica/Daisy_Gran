ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
  19              		.align	1
  20              		.weak	_ZN7daisysp8ReverbScD2Ev
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZN7daisysp8ReverbScD2Ev:
  26              	.LVL0:
  27              	.LFB3569:
  28              		.file 1 "../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Copyright (c) 2023 Electrosmith, Corp, Sean Costello, Istvan Varga, Paul Batchelor
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** namespace daisysp
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** typedef struct
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 2


  31:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** } ReverbScDl;
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /** Stereo Reverb */
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** class ReverbSc
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****   public:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ReverbSc() {}
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
  29              		.loc 1 38 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 38 18 is_stmt 0 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE3569:
  39              		.weak	_ZN7daisysp8ReverbScD1Ev
  40              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
  41              		.section	.text._ZN5daisy12SdmmcHandlerD2Ev,"axG",%progbits,_ZN5daisy12SdmmcHandlerD5Ev,comdat
  42              		.align	1
  43              		.weak	_ZN5daisy12SdmmcHandlerD2Ev
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	_ZN5daisy12SdmmcHandlerD2Ev:
  49              	.LVL1:
  50              	.LFB4014:
  51              		.file 2 "../libDaisy/src/per/sdmmc.h"
   1:../libDaisy/src/per/sdmmc.h **** /*
   2:../libDaisy/src/per/sdmmc.h **** TODO: 
   3:../libDaisy/src/per/sdmmc.h **** - Implement configuration (currently all settings are fixed).
   4:../libDaisy/src/per/sdmmc.h **** */
   5:../libDaisy/src/per/sdmmc.h **** #pragma once
   6:../libDaisy/src/per/sdmmc.h **** #ifndef DSY_SDMMC_H
   7:../libDaisy/src/per/sdmmc.h **** #define DSY_SDMMC_H /**< macro */
   8:../libDaisy/src/per/sdmmc.h **** 
   9:../libDaisy/src/per/sdmmc.h **** #include <stdint.h>
  10:../libDaisy/src/per/sdmmc.h **** 
  11:../libDaisy/src/per/sdmmc.h **** 
  12:../libDaisy/src/per/sdmmc.h **** namespace daisy
  13:../libDaisy/src/per/sdmmc.h **** {
  14:../libDaisy/src/per/sdmmc.h **** /** @ingroup peripheral
  15:../libDaisy/src/per/sdmmc.h ****     @{
  16:../libDaisy/src/per/sdmmc.h ****     */
  17:../libDaisy/src/per/sdmmc.h **** 
  18:../libDaisy/src/per/sdmmc.h **** /** Configuration for interfacing with SD cards.
  19:../libDaisy/src/per/sdmmc.h ****  *  Currently only supports operation using FatFS filesystem
  20:../libDaisy/src/per/sdmmc.h ****  * 
  21:../libDaisy/src/per/sdmmc.h ****  *  Only SDMMC1 is supported at this time.
  22:../libDaisy/src/per/sdmmc.h ****  *
  23:../libDaisy/src/per/sdmmc.h ****  *  Pins are fixed to the following:
  24:../libDaisy/src/per/sdmmc.h ****  *  PC12 - SDMMC1 CK
  25:../libDaisy/src/per/sdmmc.h ****  *  PD2  - SDMMC1 CMD
  26:../libDaisy/src/per/sdmmc.h ****  *  PC8  - SDMMC1 D0
  27:../libDaisy/src/per/sdmmc.h ****  *  PC9  - SDMMC1 D1 (optional)
  28:../libDaisy/src/per/sdmmc.h ****  *  PC10 - SDMMC1 D2 (optional)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 3


  29:../libDaisy/src/per/sdmmc.h ****  *  PC11 - SDMMC1 D3 (optional)
  30:../libDaisy/src/per/sdmmc.h **** */
  31:../libDaisy/src/per/sdmmc.h **** class SdmmcHandler
  32:../libDaisy/src/per/sdmmc.h **** {
  33:../libDaisy/src/per/sdmmc.h ****   public:
  34:../libDaisy/src/per/sdmmc.h ****     /** Return values for the SdmmcHandler class */
  35:../libDaisy/src/per/sdmmc.h ****     enum class Result
  36:../libDaisy/src/per/sdmmc.h ****     {
  37:../libDaisy/src/per/sdmmc.h ****         OK,
  38:../libDaisy/src/per/sdmmc.h ****         ERROR,
  39:../libDaisy/src/per/sdmmc.h ****     };
  40:../libDaisy/src/per/sdmmc.h **** 
  41:../libDaisy/src/per/sdmmc.h ****     /** Sets whether 4-bit mode or 1-bit mode is used for the SDMMC */
  42:../libDaisy/src/per/sdmmc.h ****     enum class BusWidth
  43:../libDaisy/src/per/sdmmc.h ****     {
  44:../libDaisy/src/per/sdmmc.h ****         BITS_1, /**< Only 1 bit of data per clock is transferred */
  45:../libDaisy/src/per/sdmmc.h ****         BITS_4, /**< 4-bits of parallel data for each clock pulse */
  46:../libDaisy/src/per/sdmmc.h ****     };
  47:../libDaisy/src/per/sdmmc.h **** 
  48:../libDaisy/src/per/sdmmc.h ****     /** 
  49:../libDaisy/src/per/sdmmc.h ****     Sets the desired clock speed of the SD card bus. \n 
  50:../libDaisy/src/per/sdmmc.h ****     Initialization is always done at or below 400kHz, and then the user speed is set.
  51:../libDaisy/src/per/sdmmc.h ****     */
  52:../libDaisy/src/per/sdmmc.h ****     enum class Speed
  53:../libDaisy/src/per/sdmmc.h ****     {
  54:../libDaisy/src/per/sdmmc.h ****         SLOW, /**< 400kHz, initialization  performed at this rate, before moving to user value */
  55:../libDaisy/src/per/sdmmc.h ****         MEDIUM_SLOW, /**< 12.5MHz - half of standard rate */
  56:../libDaisy/src/per/sdmmc.h ****         STANDARD,    /**< 25MHz - DS (Default Speed for SDMMC) */
  57:../libDaisy/src/per/sdmmc.h ****         FAST,        /**< 50MHz - HS (High Speed signaling) */
  58:../libDaisy/src/per/sdmmc.h ****         VERY_FAST, /**< 100MHz - SDR50 Overclocked rate for maximum transfer rates */
  59:../libDaisy/src/per/sdmmc.h ****     };
  60:../libDaisy/src/per/sdmmc.h **** 
  61:../libDaisy/src/per/sdmmc.h ****     struct Config
  62:../libDaisy/src/per/sdmmc.h ****     {
  63:../libDaisy/src/per/sdmmc.h ****         Speed    speed;
  64:../libDaisy/src/per/sdmmc.h ****         BusWidth width;
  65:../libDaisy/src/per/sdmmc.h ****         bool
  66:../libDaisy/src/per/sdmmc.h ****             clock_powersave; /**< When true, the clock will stop between transfers to save power. *
  67:../libDaisy/src/per/sdmmc.h **** 
  68:../libDaisy/src/per/sdmmc.h ****         /** Configures settings to their default settings */
  69:../libDaisy/src/per/sdmmc.h ****         void Defaults()
  70:../libDaisy/src/per/sdmmc.h ****         {
  71:../libDaisy/src/per/sdmmc.h ****             speed           = Speed::FAST;
  72:../libDaisy/src/per/sdmmc.h ****             width           = BusWidth::BITS_4;
  73:../libDaisy/src/per/sdmmc.h ****             clock_powersave = false;
  74:../libDaisy/src/per/sdmmc.h ****         }
  75:../libDaisy/src/per/sdmmc.h ****     };
  76:../libDaisy/src/per/sdmmc.h **** 
  77:../libDaisy/src/per/sdmmc.h ****     SdmmcHandler() {}
  78:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
  52              		.loc 2 78 5 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              		.loc 2 78 22 is_stmt 0 view .LVU3
  58 0000 7047     		bx	lr
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 4


  59              		.cfi_endproc
  60              	.LFE4014:
  62              		.weak	_ZN5daisy12SdmmcHandlerD1Ev
  63              		.thumb_set _ZN5daisy12SdmmcHandlerD1Ev,_ZN5daisy12SdmmcHandlerD2Ev
  64              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  65              		.align	1
  66              		.weak	_ZN5daisy8DaisyPodD2Ev
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	_ZN5daisy8DaisyPodD2Ev:
  72              	.LVL2:
  73              	.LFB4851:
  74              		.file 3 "../libDaisy/src/daisy_pod.h"
   1:../libDaisy/src/daisy_pod.h **** #pragma once
   2:../libDaisy/src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../libDaisy/src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../libDaisy/src/daisy_pod.h **** 
   5:../libDaisy/src/daisy_pod.h **** #include "daisy_seed.h"
   6:../libDaisy/src/daisy_pod.h **** 
   7:../libDaisy/src/daisy_pod.h **** namespace daisy
   8:../libDaisy/src/daisy_pod.h **** {
   9:../libDaisy/src/daisy_pod.h **** /**
  10:../libDaisy/src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../libDaisy/src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../libDaisy/src/daisy_pod.h ****     @author Stephen Hensley
  13:../libDaisy/src/daisy_pod.h ****     @date November 2019
  14:../libDaisy/src/daisy_pod.h ****     @ingroup boards
  15:../libDaisy/src/daisy_pod.h **** */
  16:../libDaisy/src/daisy_pod.h **** class DaisyPod
  17:../libDaisy/src/daisy_pod.h **** {
  18:../libDaisy/src/daisy_pod.h ****   public:
  19:../libDaisy/src/daisy_pod.h ****     /** Switches */
  20:../libDaisy/src/daisy_pod.h ****     enum Sw
  21:../libDaisy/src/daisy_pod.h ****     {
  22:../libDaisy/src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../libDaisy/src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../libDaisy/src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../libDaisy/src/daisy_pod.h ****     };
  26:../libDaisy/src/daisy_pod.h **** 
  27:../libDaisy/src/daisy_pod.h ****     /** Knobs */
  28:../libDaisy/src/daisy_pod.h ****     enum Knob
  29:../libDaisy/src/daisy_pod.h ****     {
  30:../libDaisy/src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../libDaisy/src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../libDaisy/src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../libDaisy/src/daisy_pod.h ****     };
  34:../libDaisy/src/daisy_pod.h **** 
  35:../libDaisy/src/daisy_pod.h ****     DaisyPod() {}
  36:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
  75              		.loc 3 36 5 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LBB340:
  81              	.LBI340:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 5


  82              		.file 4 "../libDaisy/src/hid/midi.h"
   1:../libDaisy/src/hid/midi.h **** #pragma once
   2:../libDaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../libDaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../libDaisy/src/hid/midi.h **** 
   5:../libDaisy/src/hid/midi.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi.h **** #include <algorithm>
   8:../libDaisy/src/hid/midi.h **** #include "per/uart.h"
   9:../libDaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  10:../libDaisy/src/hid/midi.h **** #include "util/FIFO.h"
  11:../libDaisy/src/hid/midi.h **** #include "hid/midi_parser.h"
  12:../libDaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  13:../libDaisy/src/hid/midi.h **** #include "sys/dma.h"
  14:../libDaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../libDaisy/src/hid/midi.h **** 
  16:../libDaisy/src/hid/midi.h **** namespace daisy
  17:../libDaisy/src/hid/midi.h **** {
  18:../libDaisy/src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART
  19:../libDaisy/src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../libDaisy/src/hid/midi.h ****  *           There is an additional 2kB of RAM data used within this class
  21:../libDaisy/src/hid/midi.h ****  *           for processing bulk data from the UART peripheral
  22:../libDaisy/src/hid/midi.h ****  *  @ingroup midi
  23:../libDaisy/src/hid/midi.h **** */
  24:../libDaisy/src/hid/midi.h **** class MidiUartTransport
  25:../libDaisy/src/hid/midi.h **** {
  26:../libDaisy/src/hid/midi.h ****   public:
  27:../libDaisy/src/hid/midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  28:../libDaisy/src/hid/midi.h ****                                         size_t   size,
  29:../libDaisy/src/hid/midi.h ****                                         void*    context);
  30:../libDaisy/src/hid/midi.h **** 
  31:../libDaisy/src/hid/midi.h ****     MidiUartTransport() {}
  32:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  33:../libDaisy/src/hid/midi.h **** 
  34:../libDaisy/src/hid/midi.h ****     /** @brief Configuration structure for UART MIDI */
  35:../libDaisy/src/hid/midi.h ****     struct Config
  36:../libDaisy/src/hid/midi.h ****     {
  37:../libDaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  38:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  39:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  40:../libDaisy/src/hid/midi.h **** 
  41:../libDaisy/src/hid/midi.h ****         /** Pointer to buffer for DMA UART rx byte transfer in background.
  42:../libDaisy/src/hid/midi.h ****          *
  43:../libDaisy/src/hid/midi.h ****          *  @details By default this uses a shared buffer in DMA_BUFFER_MEM_SECTION,
  44:../libDaisy/src/hid/midi.h ****          *           which can only be utilized for a single UART peripheral. To
  45:../libDaisy/src/hid/midi.h ****          *           use MIDI with multiple UART peripherals, you must provide your own
  46:../libDaisy/src/hid/midi.h ****          *           buffer, allocated to a DMA-capable memory section.
  47:../libDaisy/src/hid/midi.h ****          */
  48:../libDaisy/src/hid/midi.h ****         uint8_t* rx_buffer;
  49:../libDaisy/src/hid/midi.h **** 
  50:../libDaisy/src/hid/midi.h ****         /** Size in bytes of rx_buffer.
  51:../libDaisy/src/hid/midi.h ****          *
  52:../libDaisy/src/hid/midi.h ****          *  @details This size determines the maximum Rx bytes readable by the UART in the backgrou
  53:../libDaisy/src/hid/midi.h ****          *           By default it's set to the size of the default shared rx_buffer (256 bytes).
  54:../libDaisy/src/hid/midi.h ****          *           While much smaller sizes can be used, data can get missed if the buffer is too
  55:../libDaisy/src/hid/midi.h ****          */
  56:../libDaisy/src/hid/midi.h ****         size_t rx_buffer_size;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 6


  57:../libDaisy/src/hid/midi.h **** 
  58:../libDaisy/src/hid/midi.h ****         Config();
  59:../libDaisy/src/hid/midi.h ****     };
  60:../libDaisy/src/hid/midi.h **** 
  61:../libDaisy/src/hid/midi.h ****     /** @brief Initialization of UART using config struct */
  62:../libDaisy/src/hid/midi.h ****     inline void Init(Config config)
  63:../libDaisy/src/hid/midi.h ****     {
  64:../libDaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  65:../libDaisy/src/hid/midi.h **** 
  66:../libDaisy/src/hid/midi.h ****         //defaults
  67:../libDaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  68:../libDaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  69:../libDaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  70:../libDaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  71:../libDaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  72:../libDaisy/src/hid/midi.h **** 
  73:../libDaisy/src/hid/midi.h ****         //user settings
  74:../libDaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  75:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  76:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  77:../libDaisy/src/hid/midi.h **** 
  78:../libDaisy/src/hid/midi.h ****         rx_buffer      = config.rx_buffer;
  79:../libDaisy/src/hid/midi.h ****         rx_buffer_size = config.rx_buffer_size;
  80:../libDaisy/src/hid/midi.h **** 
  81:../libDaisy/src/hid/midi.h ****         /** zero the buffer to ensure emptiness regardless of source memory */
  82:../libDaisy/src/hid/midi.h ****         std::fill(rx_buffer, rx_buffer + rx_buffer_size, 0);
  83:../libDaisy/src/hid/midi.h **** 
  84:../libDaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  85:../libDaisy/src/hid/midi.h ****     }
  86:../libDaisy/src/hid/midi.h **** 
  87:../libDaisy/src/hid/midi.h ****     /** @brief Start the UART peripheral in listening mode.
  88:../libDaisy/src/hid/midi.h ****      *  This will fill an internal data structure in the background */
  89:../libDaisy/src/hid/midi.h ****     inline void StartRx(MidiRxParseCallback parse_callback, void* context)
  90:../libDaisy/src/hid/midi.h ****     {
  91:../libDaisy/src/hid/midi.h ****         parse_context_  = context;
  92:../libDaisy/src/hid/midi.h ****         parse_callback_ = parse_callback;
  93:../libDaisy/src/hid/midi.h ****         dsy_dma_clear_cache_for_buffer((uint8_t*)this,
  94:../libDaisy/src/hid/midi.h ****                                        sizeof(MidiUartTransport));
  95:../libDaisy/src/hid/midi.h ****         uart_.DmaListenStart(
  96:../libDaisy/src/hid/midi.h ****             rx_buffer, rx_buffer_size, MidiUartTransport::rxCallback, this);
  97:../libDaisy/src/hid/midi.h ****     }
  98:../libDaisy/src/hid/midi.h **** 
  99:../libDaisy/src/hid/midi.h ****     /** @brief returns whether the UART peripheral is actively listening in the background or not *
 100:../libDaisy/src/hid/midi.h ****     inline bool RxActive() { return uart_.IsListening(); }
 101:../libDaisy/src/hid/midi.h **** 
 102:../libDaisy/src/hid/midi.h ****     /** @brief This is a no-op for UART transport - Rx is via DMA callback with circular buffer */
 103:../libDaisy/src/hid/midi.h ****     inline void FlushRx() {}
 104:../libDaisy/src/hid/midi.h **** 
 105:../libDaisy/src/hid/midi.h ****     /** @brief sends the buffer of bytes out of the UART peripheral */
 106:../libDaisy/src/hid/midi.h ****     inline void Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
 107:../libDaisy/src/hid/midi.h **** 
 108:../libDaisy/src/hid/midi.h ****   private:
 109:../libDaisy/src/hid/midi.h ****     UartHandler         uart_;
 110:../libDaisy/src/hid/midi.h ****     uint8_t*            rx_buffer;
 111:../libDaisy/src/hid/midi.h ****     size_t              rx_buffer_size;
 112:../libDaisy/src/hid/midi.h ****     void*               parse_context_;
 113:../libDaisy/src/hid/midi.h ****     MidiRxParseCallback parse_callback_;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 7


 114:../libDaisy/src/hid/midi.h **** 
 115:../libDaisy/src/hid/midi.h ****     /** Static callback for Uart MIDI that occurs when
 116:../libDaisy/src/hid/midi.h ****          *  new data is available from the peripheral.
 117:../libDaisy/src/hid/midi.h ****          *  The new data is transferred from the peripheral to the
 118:../libDaisy/src/hid/midi.h ****          *  MIDI instance's byte FIFO that feeds the MIDI parser.
 119:../libDaisy/src/hid/midi.h ****          *
 120:../libDaisy/src/hid/midi.h ****          *  TODO: Handle UartHandler errors better/at all.
 121:../libDaisy/src/hid/midi.h ****          *  (If there is a UART error, there's not really any recovery
 122:../libDaisy/src/hid/midi.h ****          *  option at the moment)
 123:../libDaisy/src/hid/midi.h ****          */
 124:../libDaisy/src/hid/midi.h ****     static void rxCallback(uint8_t*            data,
 125:../libDaisy/src/hid/midi.h ****                            size_t              size,
 126:../libDaisy/src/hid/midi.h ****                            void*               context,
 127:../libDaisy/src/hid/midi.h ****                            UartHandler::Result res)
 128:../libDaisy/src/hid/midi.h ****     {
 129:../libDaisy/src/hid/midi.h ****         /** Read context as transport type */
 130:../libDaisy/src/hid/midi.h ****         MidiUartTransport* transport
 131:../libDaisy/src/hid/midi.h ****             = reinterpret_cast<MidiUartTransport*>(context);
 132:../libDaisy/src/hid/midi.h ****         if(res == UartHandler::Result::OK)
 133:../libDaisy/src/hid/midi.h ****         {
 134:../libDaisy/src/hid/midi.h ****             if(transport->parse_callback_)
 135:../libDaisy/src/hid/midi.h ****             {
 136:../libDaisy/src/hid/midi.h ****                 transport->parse_callback_(
 137:../libDaisy/src/hid/midi.h ****                     data, size, transport->parse_context_);
 138:../libDaisy/src/hid/midi.h ****             }
 139:../libDaisy/src/hid/midi.h ****         }
 140:../libDaisy/src/hid/midi.h ****     }
 141:../libDaisy/src/hid/midi.h **** };
 142:../libDaisy/src/hid/midi.h **** 
 143:../libDaisy/src/hid/midi.h **** /**
 144:../libDaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n
 145:../libDaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n
 146:../libDaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
 147:../libDaisy/src/hid/midi.h ****     @author shensley
 148:../libDaisy/src/hid/midi.h ****     @date March 2020
 149:../libDaisy/src/hid/midi.h ****     @ingroup midi
 150:../libDaisy/src/hid/midi.h **** */
 151:../libDaisy/src/hid/midi.h **** template <typename Transport>
 152:../libDaisy/src/hid/midi.h **** class MidiHandler
 153:../libDaisy/src/hid/midi.h **** {
 154:../libDaisy/src/hid/midi.h ****   public:
 155:../libDaisy/src/hid/midi.h ****     MidiHandler() {}
 156:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
  83              		.loc 4 156 5 view .LVU5
  84              	.LBB341:
  85              	.LBI341:
  86              		.file 5 "../libDaisy/src/util/FIFO.h"
   1:../libDaisy/src/util/FIFO.h **** #pragma once
   2:../libDaisy/src/util/FIFO.h **** 
   3:../libDaisy/src/util/FIFO.h **** #include <stdint.h>
   4:../libDaisy/src/util/FIFO.h **** #include <stddef.h>
   5:../libDaisy/src/util/FIFO.h **** #include <initializer_list>
   6:../libDaisy/src/util/FIFO.h **** 
   7:../libDaisy/src/util/FIFO.h **** namespace daisy
   8:../libDaisy/src/util/FIFO.h **** {
   9:../libDaisy/src/util/FIFO.h **** /** Capacity-independent base class for FIFO. Use FIFO instead. */
  10:../libDaisy/src/util/FIFO.h **** template <typename T>
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 8


  11:../libDaisy/src/util/FIFO.h **** class FIFOBase
  12:../libDaisy/src/util/FIFO.h **** {
  13:../libDaisy/src/util/FIFO.h ****   protected:
  14:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize)
  15:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  16:../libDaisy/src/util/FIFO.h ****     {
  17:../libDaisy/src/util/FIFO.h ****     }
  18:../libDaisy/src/util/FIFO.h **** 
  19:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize, std::initializer_list<T> valuesToAdd)
  20:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  21:../libDaisy/src/util/FIFO.h ****     {
  22:../libDaisy/src/util/FIFO.h ****         PushBack(valuesToAdd);
  23:../libDaisy/src/util/FIFO.h ****     }
  24:../libDaisy/src/util/FIFO.h **** 
  25:../libDaisy/src/util/FIFO.h ****   public:
  26:../libDaisy/src/util/FIFO.h ****     /** Copies all elements from another FIFO */
  27:../libDaisy/src/util/FIFO.h ****     FIFOBase<T>& operator=(const FIFOBase<T>& other)
  28:../libDaisy/src/util/FIFO.h ****     {
  29:../libDaisy/src/util/FIFO.h ****         bufferIn_ = bufferOut_ = 0;
  30:../libDaisy/src/util/FIFO.h ****         if(!other.IsEmpty())
  31:../libDaisy/src/util/FIFO.h ****         {
  32:../libDaisy/src/util/FIFO.h ****             int readPtr = other.bufferOut_;
  33:../libDaisy/src/util/FIFO.h ****             while((readPtr != other.bufferIn_) && (bufferIn_ < bufferSize_))
  34:../libDaisy/src/util/FIFO.h ****             {
  35:../libDaisy/src/util/FIFO.h ****                 buffer_[bufferIn_++] = other.buffer_[readPtr++];
  36:../libDaisy/src/util/FIFO.h ****                 if(readPtr >= other.bufferSize_)
  37:../libDaisy/src/util/FIFO.h ****                     readPtr -= other.bufferSize_;
  38:../libDaisy/src/util/FIFO.h ****             }
  39:../libDaisy/src/util/FIFO.h ****         }
  40:../libDaisy/src/util/FIFO.h ****         return *this;
  41:../libDaisy/src/util/FIFO.h ****     }
  42:../libDaisy/src/util/FIFO.h ****     ~FIFOBase() {}
  43:../libDaisy/src/util/FIFO.h **** 
  44:../libDaisy/src/util/FIFO.h ****     /** Removes all elements from the FIFO */
  45:../libDaisy/src/util/FIFO.h ****     void Clear() { bufferIn_ = bufferOut_ = 0; }
  46:../libDaisy/src/util/FIFO.h **** 
  47:../libDaisy/src/util/FIFO.h ****     /** Adds an element to the back of the buffer, returning true on
  48:../libDaisy/src/util/FIFO.h ****         success */
  49:../libDaisy/src/util/FIFO.h ****     bool PushBack(const T& elementToAdd)
  50:../libDaisy/src/util/FIFO.h ****     {
  51:../libDaisy/src/util/FIFO.h ****         if(!IsFull())
  52:../libDaisy/src/util/FIFO.h ****         {
  53:../libDaisy/src/util/FIFO.h ****             buffer_[bufferIn_++] = elementToAdd;
  54:../libDaisy/src/util/FIFO.h ****             if(bufferIn_ >= bufferSize_)
  55:../libDaisy/src/util/FIFO.h ****                 bufferIn_ -= bufferSize_;
  56:../libDaisy/src/util/FIFO.h ****             return true;
  57:../libDaisy/src/util/FIFO.h ****         }
  58:../libDaisy/src/util/FIFO.h ****         return false;
  59:../libDaisy/src/util/FIFO.h ****     }
  60:../libDaisy/src/util/FIFO.h **** 
  61:../libDaisy/src/util/FIFO.h ****     /** Adds multiple elements and returns the number of elements that were added */
  62:../libDaisy/src/util/FIFO.h ****     int PushBack(std::initializer_list<T> valuesToAdd)
  63:../libDaisy/src/util/FIFO.h ****     {
  64:../libDaisy/src/util/FIFO.h ****         int numAdded = 0;
  65:../libDaisy/src/util/FIFO.h ****         for(const auto& v : valuesToAdd)
  66:../libDaisy/src/util/FIFO.h ****         {
  67:../libDaisy/src/util/FIFO.h ****             if(IsFull())
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 9


  68:../libDaisy/src/util/FIFO.h ****                 return numAdded;
  69:../libDaisy/src/util/FIFO.h **** 
  70:../libDaisy/src/util/FIFO.h ****             PushBack(v);
  71:../libDaisy/src/util/FIFO.h ****             numAdded++;
  72:../libDaisy/src/util/FIFO.h ****         }
  73:../libDaisy/src/util/FIFO.h ****         return numAdded;
  74:../libDaisy/src/util/FIFO.h ****     }
  75:../libDaisy/src/util/FIFO.h **** 
  76:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  77:../libDaisy/src/util/FIFO.h ****     T& Back()
  78:../libDaisy/src/util/FIFO.h ****     {
  79:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  80:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  81:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  82:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  83:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  84:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  85:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  86:../libDaisy/src/util/FIFO.h ****     }
  87:../libDaisy/src/util/FIFO.h **** 
  88:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  89:../libDaisy/src/util/FIFO.h ****     const T& Back() const
  90:../libDaisy/src/util/FIFO.h ****     {
  91:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  92:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  93:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  94:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  95:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  96:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  97:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  98:../libDaisy/src/util/FIFO.h ****     }
  99:../libDaisy/src/util/FIFO.h **** 
 100:../libDaisy/src/util/FIFO.h ****     /** removes and returns an element from the front of the buffer */
 101:../libDaisy/src/util/FIFO.h ****     T PopFront()
 102:../libDaisy/src/util/FIFO.h ****     {
 103:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 104:../libDaisy/src/util/FIFO.h ****             return T();
 105:../libDaisy/src/util/FIFO.h ****         else
 106:../libDaisy/src/util/FIFO.h ****         {
 107:../libDaisy/src/util/FIFO.h ****             const auto result = buffer_[bufferOut_];
 108:../libDaisy/src/util/FIFO.h ****             bufferOut_++;
 109:../libDaisy/src/util/FIFO.h ****             if(bufferOut_ >= bufferSize_)
 110:../libDaisy/src/util/FIFO.h ****                 bufferOut_ -= bufferSize_;
 111:../libDaisy/src/util/FIFO.h ****             return result;
 112:../libDaisy/src/util/FIFO.h ****         }
 113:../libDaisy/src/util/FIFO.h ****     }
 114:../libDaisy/src/util/FIFO.h **** 
 115:../libDaisy/src/util/FIFO.h ****     /** returns a copy of the first element */
 116:../libDaisy/src/util/FIFO.h ****     T& Front()
 117:../libDaisy/src/util/FIFO.h ****     {
 118:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 119:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 120:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 121:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 122:../libDaisy/src/util/FIFO.h ****     }
 123:../libDaisy/src/util/FIFO.h **** 
 124:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the first element */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 10


 125:../libDaisy/src/util/FIFO.h ****     const T& Front() const
 126:../libDaisy/src/util/FIFO.h ****     {
 127:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 128:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 129:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 130:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 131:../libDaisy/src/util/FIFO.h ****     }
 132:../libDaisy/src/util/FIFO.h **** 
 133:../libDaisy/src/util/FIFO.h ****     /** Returns true if the buffer contains an element equal to the provided value */
 134:../libDaisy/src/util/FIFO.h ****     bool Contains(const T& element)
 135:../libDaisy/src/util/FIFO.h ****     {
 136:../libDaisy/src/util/FIFO.h ****         auto idx = bufferOut_;
 137:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 138:../libDaisy/src/util/FIFO.h ****         {
 139:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 140:../libDaisy/src/util/FIFO.h ****                 return true;
 141:../libDaisy/src/util/FIFO.h ****             idx++;
 142:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 143:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 144:../libDaisy/src/util/FIFO.h ****         }
 145:../libDaisy/src/util/FIFO.h ****         return false;
 146:../libDaisy/src/util/FIFO.h ****     }
 147:../libDaisy/src/util/FIFO.h **** 
 148:../libDaisy/src/util/FIFO.h ****     /** Returns the number of elements in the buffer that are equal to the provided value */
 149:../libDaisy/src/util/FIFO.h ****     size_t CountEqualTo(const T& element)
 150:../libDaisy/src/util/FIFO.h ****     {
 151:../libDaisy/src/util/FIFO.h ****         size_t result = 0;
 152:../libDaisy/src/util/FIFO.h ****         size_t idx    = bufferOut_;
 153:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 154:../libDaisy/src/util/FIFO.h ****         {
 155:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 156:../libDaisy/src/util/FIFO.h ****                 result++;
 157:../libDaisy/src/util/FIFO.h ****             idx++;
 158:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 159:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 160:../libDaisy/src/util/FIFO.h ****         }
 161:../libDaisy/src/util/FIFO.h ****         return result;
 162:../libDaisy/src/util/FIFO.h ****     }
 163:../libDaisy/src/util/FIFO.h **** 
 164:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is empty */
 165:../libDaisy/src/util/FIFO.h ****     bool IsEmpty() const { return bufferIn_ == bufferOut_; }
 166:../libDaisy/src/util/FIFO.h **** 
 167:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is Full */
 168:../libDaisy/src/util/FIFO.h ****     bool IsFull() const { return GetNumElements() == bufferSize_ - 1; }
 169:../libDaisy/src/util/FIFO.h **** 
 170:../libDaisy/src/util/FIFO.h ****     /** returns the number of elements in the buffer */
 171:../libDaisy/src/util/FIFO.h ****     size_t GetNumElements() const
 172:../libDaisy/src/util/FIFO.h ****     {
 173:../libDaisy/src/util/FIFO.h ****         int32_t numElements = bufferIn_ - bufferOut_;
 174:../libDaisy/src/util/FIFO.h ****         if(numElements < 0)
 175:../libDaisy/src/util/FIFO.h ****             numElements += bufferSize_;
 176:../libDaisy/src/util/FIFO.h ****         return size_t(numElements);
 177:../libDaisy/src/util/FIFO.h ****     }
 178:../libDaisy/src/util/FIFO.h **** 
 179:../libDaisy/src/util/FIFO.h ****     /** inserts an element "idx" positions behind the first element and returns true if successful 
 180:../libDaisy/src/util/FIFO.h ****     bool Insert(size_t idx, const T& element)
 181:../libDaisy/src/util/FIFO.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 11


 182:../libDaisy/src/util/FIFO.h ****         if(idx > GetNumElements())
 183:../libDaisy/src/util/FIFO.h ****             return false;
 184:../libDaisy/src/util/FIFO.h ****         if(IsFull())
 185:../libDaisy/src/util/FIFO.h ****             return false;
 186:../libDaisy/src/util/FIFO.h ****         if(idx == GetNumElements())
 187:../libDaisy/src/util/FIFO.h ****         {
 188:../libDaisy/src/util/FIFO.h ****             PushBack(element);
 189:../libDaisy/src/util/FIFO.h ****             return true;
 190:../libDaisy/src/util/FIFO.h ****         }
 191:../libDaisy/src/util/FIFO.h ****         // copy last element
 192:../libDaisy/src/util/FIFO.h ****         PushBack(Back());
 193:../libDaisy/src/util/FIFO.h ****         // move remaining elements: n => n+1
 194:../libDaisy/src/util/FIFO.h ****         for(int i = GetNumElements() - 2; i > int(idx); i--)
 195:../libDaisy/src/util/FIFO.h ****             (*this)[i] = (*this)[i - 1];
 196:../libDaisy/src/util/FIFO.h ****         // insert element
 197:../libDaisy/src/util/FIFO.h ****         (*this)[idx] = element;
 198:../libDaisy/src/util/FIFO.h ****         return true;
 199:../libDaisy/src/util/FIFO.h ****     }
 200:../libDaisy/src/util/FIFO.h **** 
 201:../libDaisy/src/util/FIFO.h ****     /** removes the element "idx" positions behind the first element 
 202:../libDaisy/src/util/FIFO.h ****      *  and returns true if successful */
 203:../libDaisy/src/util/FIFO.h ****     bool Remove(size_t idx)
 204:../libDaisy/src/util/FIFO.h ****     {
 205:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 206:../libDaisy/src/util/FIFO.h ****             return false;
 207:../libDaisy/src/util/FIFO.h **** 
 208:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 209:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 210:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 211:../libDaisy/src/util/FIFO.h ****         size_t nextIndex = index + 1;
 212:../libDaisy/src/util/FIFO.h ****         if(nextIndex >= bufferSize_)
 213:../libDaisy/src/util/FIFO.h ****             nextIndex -= bufferSize_;
 214:../libDaisy/src/util/FIFO.h **** 
 215:../libDaisy/src/util/FIFO.h ****         while(nextIndex != bufferIn_)
 216:../libDaisy/src/util/FIFO.h ****         {
 217:../libDaisy/src/util/FIFO.h ****             buffer_[index] = buffer_[nextIndex];
 218:../libDaisy/src/util/FIFO.h ****             index++;
 219:../libDaisy/src/util/FIFO.h ****             nextIndex++;
 220:../libDaisy/src/util/FIFO.h ****             if(index >= bufferSize_)
 221:../libDaisy/src/util/FIFO.h ****                 index -= bufferSize_;
 222:../libDaisy/src/util/FIFO.h ****             if(nextIndex >= bufferSize_)
 223:../libDaisy/src/util/FIFO.h ****                 nextIndex -= bufferSize_;
 224:../libDaisy/src/util/FIFO.h ****         }
 225:../libDaisy/src/util/FIFO.h **** 
 226:../libDaisy/src/util/FIFO.h ****         int32_t nextBufferIn = int32_t(bufferIn_) - 1;
 227:../libDaisy/src/util/FIFO.h ****         if(nextBufferIn < 0)
 228:../libDaisy/src/util/FIFO.h ****             nextBufferIn += bufferSize_;
 229:../libDaisy/src/util/FIFO.h ****         bufferIn_ = size_t(nextBufferIn);
 230:../libDaisy/src/util/FIFO.h **** 
 231:../libDaisy/src/util/FIFO.h ****         return true;
 232:../libDaisy/src/util/FIFO.h ****     }
 233:../libDaisy/src/util/FIFO.h **** 
 234:../libDaisy/src/util/FIFO.h ****     /** removes all elements from the buffer for which
 235:../libDaisy/src/util/FIFO.h ****         (buffer(index) == element) returns true and returns the number of
 236:../libDaisy/src/util/FIFO.h ****         elements that were removed. */
 237:../libDaisy/src/util/FIFO.h ****     size_t RemoveAllEqualTo(const T& element)
 238:../libDaisy/src/util/FIFO.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 12


 239:../libDaisy/src/util/FIFO.h ****         size_t numRemoved = 0;
 240:../libDaisy/src/util/FIFO.h ****         int    idx        = GetNumElements() - 1;
 241:../libDaisy/src/util/FIFO.h ****         while(idx >= 0)
 242:../libDaisy/src/util/FIFO.h ****         {
 243:../libDaisy/src/util/FIFO.h ****             if((*this)[idx] == element)
 244:../libDaisy/src/util/FIFO.h ****             {
 245:../libDaisy/src/util/FIFO.h ****                 numRemoved++;
 246:../libDaisy/src/util/FIFO.h ****                 Remove(idx);
 247:../libDaisy/src/util/FIFO.h ****                 // was that the last element?
 248:../libDaisy/src/util/FIFO.h ****                 if(idx == int(GetNumElements()) - 1)
 249:../libDaisy/src/util/FIFO.h ****                     idx--;
 250:../libDaisy/src/util/FIFO.h ****             }
 251:../libDaisy/src/util/FIFO.h ****             else
 252:../libDaisy/src/util/FIFO.h ****                 idx--;
 253:../libDaisy/src/util/FIFO.h ****         }
 254:../libDaisy/src/util/FIFO.h ****         return numRemoved;
 255:../libDaisy/src/util/FIFO.h ****     }
 256:../libDaisy/src/util/FIFO.h **** 
 257:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 258:../libDaisy/src/util/FIFO.h ****     T& operator[](size_t idx)
 259:../libDaisy/src/util/FIFO.h ****     {
 260:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 261:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 262:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 263:../libDaisy/src/util/FIFO.h **** 
 264:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 265:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 266:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 267:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 268:../libDaisy/src/util/FIFO.h ****     }
 269:../libDaisy/src/util/FIFO.h **** 
 270:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 271:../libDaisy/src/util/FIFO.h ****     const T& operator[](size_t idx) const
 272:../libDaisy/src/util/FIFO.h ****     {
 273:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 274:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 275:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 276:../libDaisy/src/util/FIFO.h **** 
 277:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 278:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 279:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 280:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 281:../libDaisy/src/util/FIFO.h ****     }
 282:../libDaisy/src/util/FIFO.h **** 
 283:../libDaisy/src/util/FIFO.h ****     /** returns the total capacity */
 284:../libDaisy/src/util/FIFO.h ****     size_t GetCapacity() const { return bufferSize_ - 1; }
 285:../libDaisy/src/util/FIFO.h **** 
 286:../libDaisy/src/util/FIFO.h ****   private:
 287:../libDaisy/src/util/FIFO.h ****     FIFOBase(const FIFOBase<T>&) {} // non copyable
 288:../libDaisy/src/util/FIFO.h **** 
 289:../libDaisy/src/util/FIFO.h ****   private:
 290:../libDaisy/src/util/FIFO.h ****     T*           buffer_;
 291:../libDaisy/src/util/FIFO.h ****     const size_t bufferSize_;
 292:../libDaisy/src/util/FIFO.h ****     size_t       bufferIn_;
 293:../libDaisy/src/util/FIFO.h ****     size_t       bufferOut_;
 294:../libDaisy/src/util/FIFO.h **** };
 295:../libDaisy/src/util/FIFO.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 13


 296:../libDaisy/src/util/FIFO.h **** /** A simple FIFO ring buffer with a fixed size. */
 297:../libDaisy/src/util/FIFO.h **** template <typename T, size_t capacity>
 298:../libDaisy/src/util/FIFO.h **** class FIFO : public FIFOBase<T>
  87              		.loc 5 298 7 view .LVU6
  88              	.LBB342:
  89              	.LBI342:
  42:../libDaisy/src/util/FIFO.h **** 
  90              		.loc 5 42 5 view .LVU7
  42:../libDaisy/src/util/FIFO.h **** 
  91              		.loc 5 42 5 is_stmt 0 view .LVU8
  92              	.LBE342:
  93              	.LBE341:
  94              	.LBB343:
  95              	.LBI343:
  96              		.file 6 "../libDaisy/src/hid/midi_parser.h"
   1:../libDaisy/src/hid/midi_parser.h **** #pragma once
   2:../libDaisy/src/hid/midi_parser.h **** #ifndef DSY_MIDI_PARSER_H
   3:../libDaisy/src/hid/midi_parser.h **** #define DSY_MIDI_PARSER_H
   4:../libDaisy/src/hid/midi_parser.h **** 
   5:../libDaisy/src/hid/midi_parser.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi_parser.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi_parser.h **** #include "hid/MidiEvent.h"
   8:../libDaisy/src/hid/midi_parser.h **** 
   9:../libDaisy/src/hid/midi_parser.h **** namespace daisy
  10:../libDaisy/src/hid/midi_parser.h **** {
  11:../libDaisy/src/hid/midi_parser.h **** /** @brief   Utility class for parsing raw byte streams into MIDI messages
  12:../libDaisy/src/hid/midi_parser.h ****  *  @details Implemented as a state machine designed to parse one byte at a time
  13:../libDaisy/src/hid/midi_parser.h ****  *  @ingroup midi
  14:../libDaisy/src/hid/midi_parser.h ****  */
  15:../libDaisy/src/hid/midi_parser.h **** class MidiParser
  16:../libDaisy/src/hid/midi_parser.h **** {
  17:../libDaisy/src/hid/midi_parser.h ****   public:
  18:../libDaisy/src/hid/midi_parser.h ****     MidiParser(){};
  19:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
  97              		.loc 6 19 5 is_stmt 1 view .LVU9
  98              		.loc 6 19 5 is_stmt 0 view .LVU10
  99              	.LBE343:
 100              	.LBB344:
 101              	.LBI344:
  32:../libDaisy/src/hid/midi.h **** 
 102              		.loc 4 32 5 is_stmt 1 view .LVU11
  32:../libDaisy/src/hid/midi.h **** 
 103              		.loc 4 32 5 is_stmt 0 view .LVU12
 104              	.LBE344:
 105              	.LBE340:
 106              	.LBB345:
 107              	.LBI345:
 108              		.file 7 "../libDaisy/src/hid/rgb_led.h"
   1:../libDaisy/src/hid/rgb_led.h **** #pragma once
   2:../libDaisy/src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../libDaisy/src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../libDaisy/src/hid/rgb_led.h **** #include "hid/led.h"
   5:../libDaisy/src/hid/rgb_led.h **** #include "util/color.h"
   6:../libDaisy/src/hid/rgb_led.h **** 
   7:../libDaisy/src/hid/rgb_led.h **** namespace daisy
   8:../libDaisy/src/hid/rgb_led.h **** {
   9:../libDaisy/src/hid/rgb_led.h **** /** @addtogroup feedback
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 14


  10:../libDaisy/src/hid/rgb_led.h ****     @{
  11:../libDaisy/src/hid/rgb_led.h **** */
  12:../libDaisy/src/hid/rgb_led.h **** 
  13:../libDaisy/src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../libDaisy/src/hid/rgb_led.h **** class RgbLed
  15:../libDaisy/src/hid/rgb_led.h **** {
  16:../libDaisy/src/hid/rgb_led.h ****   public:
  17:../libDaisy/src/hid/rgb_led.h ****     RgbLed() {}
  18:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 109              		.loc 7 18 5 is_stmt 1 view .LVU13
 110              	.LBB346:
 111              	.LBI346:
 112              		.file 8 "../libDaisy/src/hid/led.h"
   1:../libDaisy/src/hid/led.h **** 
   2:../libDaisy/src/hid/led.h **** #pragma once
   3:../libDaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libDaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libDaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libDaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libDaisy/src/hid/led.h **** 
   8:../libDaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libDaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libDaisy/src/hid/led.h **** */
  11:../libDaisy/src/hid/led.h **** 
  12:../libDaisy/src/hid/led.h **** namespace daisy
  13:../libDaisy/src/hid/led.h **** {
  14:../libDaisy/src/hid/led.h **** /**
  15:../libDaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libDaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libDaisy/src/hid/led.h ****     @author shensley
  18:../libDaisy/src/hid/led.h ****     @date March 2020
  19:../libDaisy/src/hid/led.h ****     @ingroup feedback
  20:../libDaisy/src/hid/led.h **** */
  21:../libDaisy/src/hid/led.h **** class Led
  22:../libDaisy/src/hid/led.h **** {
  23:../libDaisy/src/hid/led.h ****   public:
  24:../libDaisy/src/hid/led.h ****     Led() {}
  25:../libDaisy/src/hid/led.h ****     ~Led() {}
 113              		.loc 8 25 5 view .LVU14
 114              		.loc 8 25 5 is_stmt 0 view .LVU15
 115              	.LBE346:
 116              	.LBB347:
 117              	.LBI347:
 118              		.loc 8 25 5 is_stmt 1 view .LVU16
 119              		.loc 8 25 5 is_stmt 0 view .LVU17
 120              	.LBE347:
 121              	.LBB348:
 122              	.LBI348:
 123              		.loc 8 25 5 is_stmt 1 view .LVU18
 124              		.loc 8 25 5 is_stmt 0 view .LVU19
 125              	.LBE348:
 126              	.LBE345:
 127              	.LBB349:
 128              	.LBI349:
 129              		.loc 7 18 5 is_stmt 1 view .LVU20
 130              	.LBB350:
 131              	.LBI350:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 15


 132              		.loc 8 25 5 view .LVU21
 133              		.loc 8 25 5 is_stmt 0 view .LVU22
 134              	.LBE350:
 135              	.LBB351:
 136              	.LBI351:
 137              		.loc 8 25 5 is_stmt 1 view .LVU23
 138              		.loc 8 25 5 is_stmt 0 view .LVU24
 139              	.LBE351:
 140              	.LBB352:
 141              	.LBI352:
 142              		.loc 8 25 5 is_stmt 1 view .LVU25
 143              		.loc 8 25 5 is_stmt 0 view .LVU26
 144              	.LBE352:
 145              	.LBE349:
 146              	.LBB353:
 147              	.LBI353:
 148              		.file 9 "../libDaisy/src/hid/switch.h"
   1:../libDaisy/src/hid/switch.h **** #pragma once
   2:../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libDaisy/src/hid/switch.h **** 
   8:../libDaisy/src/hid/switch.h **** namespace daisy
   9:../libDaisy/src/hid/switch.h **** {
  10:../libDaisy/src/hid/switch.h **** /** 
  11:../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../libDaisy/src/hid/switch.h **** */
  17:../libDaisy/src/hid/switch.h **** class Switch
  18:../libDaisy/src/hid/switch.h **** {
  19:../libDaisy/src/hid/switch.h ****   public:
  20:../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libDaisy/src/hid/switch.h ****     enum Type
  22:../libDaisy/src/hid/switch.h ****     {
  23:../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libDaisy/src/hid/switch.h ****     };
  26:../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libDaisy/src/hid/switch.h ****     enum Polarity
  28:../libDaisy/src/hid/switch.h ****     {
  29:../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libDaisy/src/hid/switch.h ****     };
  32:../libDaisy/src/hid/switch.h **** 
  33:../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libDaisy/src/hid/switch.h ****     enum Pull
  35:../libDaisy/src/hid/switch.h ****     {
  36:../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libDaisy/src/hid/switch.h ****     };
  40:../libDaisy/src/hid/switch.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 16


  41:../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 149              		.loc 9 42 5 is_stmt 1 view .LVU27
 150              		.loc 9 42 5 is_stmt 0 view .LVU28
 151              	.LBE353:
 152              	.LBB354:
 153              	.LBI354:
 154              		.loc 9 42 5 is_stmt 1 view .LVU29
 155              		.loc 9 42 5 is_stmt 0 view .LVU30
 156              	.LBE354:
 157              	.LBB355:
 158              	.LBI355:
 159              		.file 10 "../libDaisy/src/hid/ctrl.h"
   1:../libDaisy/src/hid/ctrl.h **** #pragma once
   2:../libDaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../libDaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../libDaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../libDaisy/src/hid/ctrl.h **** 
   6:../libDaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../libDaisy/src/hid/ctrl.h **** namespace daisy
   8:../libDaisy/src/hid/ctrl.h **** {
   9:../libDaisy/src/hid/ctrl.h **** /**
  10:../libDaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../libDaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../libDaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../libDaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/ctrl.h ****     @date November 2019
  15:../libDaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../libDaisy/src/hid/ctrl.h **** */
  17:../libDaisy/src/hid/ctrl.h **** class AnalogControl
  18:../libDaisy/src/hid/ctrl.h **** {
  19:../libDaisy/src/hid/ctrl.h ****   public:
  20:../libDaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../libDaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../libDaisy/src/hid/ctrl.h ****     /** destructor */
  23:../libDaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
 160              		.loc 10 23 5 is_stmt 1 view .LVU31
 161              		.loc 10 23 5 is_stmt 0 view .LVU32
 162              	.LBE355:
 163              	.LBB356:
 164              	.LBI356:
 165              		.loc 10 23 5 is_stmt 1 view .LVU33
 166              		.loc 10 23 5 is_stmt 0 view .LVU34
 167              	.LBE356:
 168              	.LBB357:
 169              	.LBI357:
 170              		.file 11 "../libDaisy/src/hid/encoder.h"
   1:../libDaisy/src/hid/encoder.h **** #pragma once
   2:../libDaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../libDaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../libDaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../libDaisy/src/hid/encoder.h **** 
   8:../libDaisy/src/hid/encoder.h **** namespace daisy
   9:../libDaisy/src/hid/encoder.h **** {
  10:../libDaisy/src/hid/encoder.h **** /** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 17


  11:../libDaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../libDaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../libDaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/encoder.h ****     @date December 2019
  15:../libDaisy/src/hid/encoder.h ****     @ingroup controls
  16:../libDaisy/src/hid/encoder.h **** */
  17:../libDaisy/src/hid/encoder.h **** class Encoder
  18:../libDaisy/src/hid/encoder.h **** {
  19:../libDaisy/src/hid/encoder.h ****   public:
  20:../libDaisy/src/hid/encoder.h ****     Encoder() {}
  21:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 171              		.loc 11 21 5 is_stmt 1 view .LVU35
 172              	.LBB358:
 173              	.LBI358:
 174              		.loc 9 42 5 view .LVU36
 175              		.loc 9 42 5 is_stmt 0 view .LVU37
 176              	.LBE358:
 177              	.LBE357:
 178              	.LBB359:
 179              	.LBI359:
 180              		.file 12 "../libDaisy/src/daisy_seed.h"
   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 181              		.loc 12 22 5 is_stmt 1 view .LVU38
 182              	.LBB360:
 183              	.LBI360:
 184              		.file 13 "../libDaisy/src/sys/system.h"
   1:../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libDaisy/src/sys/system.h **** 
   4:../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../libDaisy/src/sys/system.h **** 
   6:../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../libDaisy/src/sys/system.h **** 
   9:../libDaisy/src/sys/system.h **** namespace daisy
  10:../libDaisy/src/sys/system.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 18


  11:../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../libDaisy/src/sys/system.h ****  **
  15:../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../libDaisy/src/sys/system.h ****  */
  18:../libDaisy/src/sys/system.h **** class System
  19:../libDaisy/src/sys/system.h **** {
  20:../libDaisy/src/sys/system.h ****   public:
  21:../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../libDaisy/src/sys/system.h ****     struct Config
  23:../libDaisy/src/sys/system.h ****     {
  24:../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../libDaisy/src/sys/system.h ****         {
  27:../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../libDaisy/src/sys/system.h ****         };
  30:../libDaisy/src/sys/system.h **** 
  31:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../libDaisy/src/sys/system.h ****          ** */
  35:../libDaisy/src/sys/system.h ****         void Defaults()
  36:../libDaisy/src/sys/system.h ****         {
  37:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../libDaisy/src/sys/system.h ****         }
  42:../libDaisy/src/sys/system.h **** 
  43:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../libDaisy/src/sys/system.h ****          ** */
  47:../libDaisy/src/sys/system.h ****         void Boost()
  48:../libDaisy/src/sys/system.h ****         {
  49:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../libDaisy/src/sys/system.h ****         }
  54:../libDaisy/src/sys/system.h **** 
  55:../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../libDaisy/src/sys/system.h ****     };
  60:../libDaisy/src/sys/system.h **** 
  61:../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../libDaisy/src/sys/system.h ****     {
  64:../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../libDaisy/src/sys/system.h ****         SRAM_D1,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 19


  68:../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../libDaisy/src/sys/system.h ****         SDRAM,
  71:../libDaisy/src/sys/system.h ****         QSPI,
  72:../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../libDaisy/src/sys/system.h ****     };
  74:../libDaisy/src/sys/system.h **** 
  75:../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../libDaisy/src/sys/system.h ****     {
  78:../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../libDaisy/src/sys/system.h ****         {
  80:../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../libDaisy/src/sys/system.h ****         } status;
  85:../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../libDaisy/src/sys/system.h ****         {
  88:../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../libDaisy/src/sys/system.h ****             LAST
  93:../libDaisy/src/sys/system.h ****         } version;
  94:../libDaisy/src/sys/system.h ****     };
  95:../libDaisy/src/sys/system.h **** 
  96:../libDaisy/src/sys/system.h ****     System() {}
  97:../libDaisy/src/sys/system.h ****     ~System() {}
 185              		.loc 13 97 5 view .LVU39
 186              		.loc 13 97 5 is_stmt 0 view .LVU40
 187              	.LBE360:
 188              	.LBB361:
 189              	.LBI361:
 190              		.file 14 "../libDaisy/src/hid/usb.h"
   1:../libDaisy/src/hid/usb.h **** #pragma once
   2:../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libDaisy/src/hid/usb.h **** 
   7:../libDaisy/src/hid/usb.h **** namespace daisy
   8:../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../libDaisy/src/hid/usb.h ****     @{
  10:../libDaisy/src/hid/usb.h **** */
  11:../libDaisy/src/hid/usb.h **** 
  12:../libDaisy/src/hid/usb.h **** {
  13:../libDaisy/src/hid/usb.h **** /** 
  14:../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../libDaisy/src/hid/usb.h **** */
  18:../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../libDaisy/src/hid/usb.h **** {
  20:../libDaisy/src/hid/usb.h ****   public:
  21:../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 20


  22:../libDaisy/src/hid/usb.h ****     enum class Result
  23:../libDaisy/src/hid/usb.h ****     {
  24:../libDaisy/src/hid/usb.h ****         OK,
  25:../libDaisy/src/hid/usb.h ****         ERR,
  26:../libDaisy/src/hid/usb.h ****     };
  27:../libDaisy/src/hid/usb.h **** 
  28:../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libDaisy/src/hid/usb.h ****     {
  31:../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libDaisy/src/hid/usb.h ****     };
  35:../libDaisy/src/hid/usb.h **** 
  36:../libDaisy/src/hid/usb.h **** 
  37:../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libDaisy/src/hid/usb.h **** 
  40:../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libDaisy/src/hid/usb.h **** 
  42:../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
 191              		.loc 14 42 5 is_stmt 1 view .LVU41
 192              		.loc 14 42 5 is_stmt 0 view .LVU42
 193              	.LBE361:
 194              	.LBB362:
 195              	.LBI362:
 196              		.file 15 "../libDaisy/src/per/adc.h"
   1:../libDaisy/src/per/adc.h **** #pragma once
   2:../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libDaisy/src/per/adc.h **** 
   9:../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../libDaisy/src/per/adc.h **** 
  11:../libDaisy/src/per/adc.h **** namespace daisy
  12:../libDaisy/src/per/adc.h **** {
  13:../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../libDaisy/src/per/adc.h ****     @{
  15:../libDaisy/src/per/adc.h **** */
  16:../libDaisy/src/per/adc.h **** 
  17:../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libDaisy/src/per/adc.h **** */
  21:../libDaisy/src/per/adc.h **** 
  22:../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../libDaisy/src/per/adc.h ****  *           one channel.
  26:../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../libDaisy/src/per/adc.h **** */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 21


  31:../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../libDaisy/src/per/adc.h **** {
  33:../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../libDaisy/src/per/adc.h ****     {
  36:../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../libDaisy/src/per/adc.h ****     };
  41:../libDaisy/src/per/adc.h **** 
  42:../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../libDaisy/src/per/adc.h ****     {
  45:../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../libDaisy/src/per/adc.h ****     };
  54:../libDaisy/src/per/adc.h **** 
  55:../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../libDaisy/src/per/adc.h ****      */
  59:../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../libDaisy/src/per/adc.h **** 
  61:../libDaisy/src/per/adc.h ****     /** 
  62:../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../libDaisy/src/per/adc.h ****     */
  74:../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../libDaisy/src/per/adc.h **** 
  81:../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../libDaisy/src/per/adc.h **** };
  86:../libDaisy/src/per/adc.h **** 
  87:../libDaisy/src/per/adc.h **** /**
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 22


  88:../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../libDaisy/src/per/adc.h **** */
  90:../libDaisy/src/per/adc.h **** class AdcHandle
  91:../libDaisy/src/per/adc.h **** {
  92:../libDaisy/src/per/adc.h ****   public:
  93:../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../libDaisy/src/per/adc.h ****     {
  96:../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../libDaisy/src/per/adc.h ****     };
 108:../libDaisy/src/per/adc.h **** 
 109:../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 197              		.loc 15 110 5 is_stmt 1 view .LVU43
 198              		.loc 15 110 5 is_stmt 0 view .LVU44
 199              	.LBE362:
 200              	.LBB363:
 201              	.LBI363:
 202              		.file 16 "../libDaisy/src/hid/audio.h"
   1:../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libDaisy/src/hid/audio.h **** 
   4:../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libDaisy/src/hid/audio.h **** 
   6:../libDaisy/src/hid/audio.h **** namespace daisy
   7:../libDaisy/src/hid/audio.h **** {
   8:../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../libDaisy/src/hid/audio.h ****  */
  22:../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../libDaisy/src/hid/audio.h **** {
  24:../libDaisy/src/hid/audio.h ****   public:
  25:../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../libDaisy/src/hid/audio.h ****     struct Config
  28:../libDaisy/src/hid/audio.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 23


  29:../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../libDaisy/src/hid/audio.h **** 
  32:../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../libDaisy/src/hid/audio.h **** 
  35:../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../libDaisy/src/hid/audio.h ****         float postgain;
  37:../libDaisy/src/hid/audio.h **** 
  38:../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../libDaisy/src/hid/audio.h ****          */
  41:../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../libDaisy/src/hid/audio.h **** 
  43:../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../libDaisy/src/hid/audio.h ****         Config()
  45:../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../libDaisy/src/hid/audio.h ****         {
  50:../libDaisy/src/hid/audio.h ****         }
  51:../libDaisy/src/hid/audio.h ****     };
  52:../libDaisy/src/hid/audio.h **** 
  53:../libDaisy/src/hid/audio.h ****     enum class Result
  54:../libDaisy/src/hid/audio.h ****     {
  55:../libDaisy/src/hid/audio.h ****         OK,
  56:../libDaisy/src/hid/audio.h ****         ERR,
  57:../libDaisy/src/hid/audio.h ****     };
  58:../libDaisy/src/hid/audio.h **** 
  59:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../libDaisy/src/hid/audio.h ****      */
  63:../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../libDaisy/src/hid/audio.h **** 
  65:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../libDaisy/src/hid/audio.h ****      */
  68:../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../libDaisy/src/hid/audio.h **** 
  70:../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../libDaisy/src/hid/audio.h ****      */
  73:../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../libDaisy/src/hid/audio.h **** 
  77:../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../libDaisy/src/hid/audio.h ****     */
  81:../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../libDaisy/src/hid/audio.h **** 
  83:../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../libDaisy/src/hid/audio.h ****     */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 24


  86:../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../libDaisy/src/hid/audio.h **** 
  88:../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../libDaisy/src/hid/audio.h ****      */
  91:../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../libDaisy/src/hid/audio.h **** 
  95:../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 203              		.loc 16 96 5 is_stmt 1 view .LVU45
 204              		.loc 16 96 5 is_stmt 0 view .LVU46
 205              	.LBE363:
 206              	.LBE359:
 207              		.loc 3 36 18 view .LVU47
 208 0000 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE4851:
 212              		.weak	_ZN5daisy8DaisyPodD1Ev
 213              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 214              		.section	.text._ZN13GranularSynthD2Ev,"axG",%progbits,_ZN13GranularSynthD5Ev,comdat
 215              		.align	1
 216              		.weak	_ZN13GranularSynthD2Ev
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	_ZN13GranularSynthD2Ev:
 222              	.LVL3:
 223              	.LFB4904:
 224              		.file 17 "GranularSynth.h"
   1:GranularSynth.h **** #pragma once
   2:GranularSynth.h **** 
   3:GranularSynth.h **** #include "Grain.h"
   4:GranularSynth.h **** #include "daisy_pod.h"
   5:GranularSynth.h **** #include "debug_print.h"
   6:GranularSynth.h **** // #include "constants_utils.h"
   7:GranularSynth.h **** #include <vector>
   8:GranularSynth.h **** 
   9:GranularSynth.h **** class GranularSynth{
 225              		.loc 17 9 7 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              		.loc 17 9 7 is_stmt 0 view .LVU49
 231 0000 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE4904:
 235              		.weak	_ZN13GranularSynthD1Ev
 236              		.thumb_set _ZN13GranularSynthD1Ev,_ZN13GranularSynthD2Ev
 237              		.section	.text._ZN14GrannyChordAppD2Ev,"axG",%progbits,_ZN14GrannyChordAppD5Ev,comdat
 238              		.align	1
 239              		.weak	_ZN14GrannyChordAppD2Ev
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 25


 244              	_ZN14GrannyChordAppD2Ev:
 245              	.LVL4:
 246              	.LFB5506:
 247              		.file 18 "GrannyChordApp.h"
   1:GrannyChordApp.h **** #pragma once 
   2:GrannyChordApp.h **** #include "daisy_pod.h"
   3:GrannyChordApp.h **** #include "daisysp.h"
   4:GrannyChordApp.h **** #include "GranularSynth.h"
   5:GrannyChordApp.h **** #include "AudioFileManager.h"
   6:GrannyChordApp.h **** #include "constants_utils.h"
   7:GrannyChordApp.h **** #include "debug_print.h"
   8:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/compressor.h"
   9:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/moogladder.h"
  10:GrannyChordApp.h **** #include "StereoRotator.h"
  11:GrannyChordApp.h **** #include "AppState.h"
  12:GrannyChordApp.h **** 
  13:GrannyChordApp.h **** using namespace daisy;
  14:GrannyChordApp.h **** using namespace daisysp;
  15:GrannyChordApp.h **** 
  16:GrannyChordApp.h **** class GrannyChordApp {
 248              		.loc 18 16 7 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LBB364:
 254              	.LBI364:
  17:GrannyChordApp.h ****   public:
  18:GrannyChordApp.h ****   GrannyChordApp(DaisyPod& pod, GranularSynth& synth, AudioFileManager& filemgr,\
  19:GrannyChordApp.h ****                 ReverbSc &reverb)
  20:GrannyChordApp.h ****         : pod_(pod), synth_(synth), 
  21:GrannyChordApp.h ****           filemgr_(filemgr), reverb_(reverb){
  22:GrannyChordApp.h ****             instance_ = this;
  23:GrannyChordApp.h ****           };
  24:GrannyChordApp.h **** 
  25:GrannyChordApp.h ****     void Init(int16_t *left, int16_t *right);
  26:GrannyChordApp.h ****     void Run();
  27:GrannyChordApp.h **** 
  28:GrannyChordApp.h ****     CpuLoadMeter loadmeter;
  29:GrannyChordApp.h **** 
  30:GrannyChordApp.h ****     static void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t si
  31:GrannyChordApp.h ****     void ProcessAudio(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size);
  32:GrannyChordApp.h ****     static GrannyChordApp* instance_;
  33:GrannyChordApp.h **** 
  34:GrannyChordApp.h ****   private:
  35:GrannyChordApp.h ****     DaisyPod &pod_;
  36:GrannyChordApp.h ****     GranularSynth synth_;
  37:GrannyChordApp.h ****     AudioFileManager &filemgr_;
  38:GrannyChordApp.h ****     FIL *file_;
  39:GrannyChordApp.h **** 
  40:GrannyChordApp.h ****     /* UI and state objects */
  41:GrannyChordApp.h ****     AppState curr_state_;
  42:GrannyChordApp.h ****     AppState next_state_;
  43:GrannyChordApp.h ****     SynthMode curr_synth_mode_;
  44:GrannyChordApp.h ****     SynthMode prev_synth_mode_;
  45:GrannyChordApp.h ****     bool knob1_latched;
  46:GrannyChordApp.h ****     bool knob2_latched;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 26


  47:GrannyChordApp.h **** 
  48:GrannyChordApp.h **** 
  49:GrannyChordApp.h ****     /* audio FX and filters */
  50:GrannyChordApp.h ****     Compressor comp_;
  51:GrannyChordApp.h ****     Limiter limiter_;
  52:GrannyChordApp.h ****     ReverbSc& reverb_;
  53:GrannyChordApp.h ****     MoogLadder lowpass_moog_;
  54:GrannyChordApp.h ****     OnePole hipass_;
  55:GrannyChordApp.h ****     StereoRotator rotator_;
  56:GrannyChordApp.h ****     /* filter to reduce high end noise */
  57:GrannyChordApp.h ****     OnePole hicut_;
  58:GrannyChordApp.h **** 
  59:GrannyChordApp.h ****     /* audio data channel buffers */
  60:GrannyChordApp.h ****     int16_t *left_buf_;
  61:GrannyChordApp.h ****     int16_t *right_buf_;
  62:GrannyChordApp.h **** 
  63:GrannyChordApp.h ****     int file_idx_ = 0;
  64:GrannyChordApp.h ****     size_t wav_playhead_ = 0;
  65:GrannyChordApp.h ****     uint32_t audio_len_ = 0;
  66:GrannyChordApp.h ****     char fname_[MAX_FNAME_LEN];
  67:GrannyChordApp.h **** 
  68:GrannyChordApp.h ****     /* previous values for parameters controlled by knob 1*/
  69:GrannyChordApp.h ****     float prev_param_k1[NUM_SYNTH_MODES];
  70:GrannyChordApp.h ****     float prev_param_k2[NUM_SYNTH_MODES];
  71:GrannyChordApp.h **** 
  72:GrannyChordApp.h ****     float prev_k1_pos[NUM_SYNTH_MODES];
  73:GrannyChordApp.h ****     float prev_k2_pos[NUM_SYNTH_MODES];
  74:GrannyChordApp.h **** 
  75:GrannyChordApp.h ****     /* objects/variables for recording in and out */
  76:GrannyChordApp.h ****     WavWriter<16384> sd_writer_;
  77:GrannyChordApp.h ****     bool recorded_in_ = false;
  78:GrannyChordApp.h ****     size_t record_in_pos_ = 0;
  79:GrannyChordApp.h ****     bool recording_out_ = false;
  80:GrannyChordApp.h ****     size_t recording_count_ = 0;
  81:GrannyChordApp.h ****     size_t loop_count=0;
  82:GrannyChordApp.h ****     float temp_interleaved_buf_[2];
  83:GrannyChordApp.h **** 
  84:GrannyChordApp.h ****     struct Colours{
 255              		.loc 18 84 12 view .LVU51
 256              	.LBB365:
 257              	.LBI365:
 258              		.file 19 "../libDaisy/src/util/color.h"
   1:../libDaisy/src/util/color.h **** /* 
   2:../libDaisy/src/util/color.h **** TODO:
   3:../libDaisy/src/util/color.h **** - Add Blend(), Scale(), etc.
   4:../libDaisy/src/util/color.h **** - I'd also like to change the way the Color names are accessed.
   5:../libDaisy/src/util/color.h **** */
   6:../libDaisy/src/util/color.h **** /**        I'd like for it to be easy and not `Color::PresetColor::Foo`
   7:../libDaisy/src/util/color.h **** */
   8:../libDaisy/src/util/color.h **** /** - There's no way to change a color once its been created (without unintuitively reiniting it).
   9:../libDaisy/src/util/color.h **** */
  10:../libDaisy/src/util/color.h **** #pragma once
  11:../libDaisy/src/util/color.h **** #ifndef DSY_COLOR_H
  12:../libDaisy/src/util/color.h **** #define DSY_COLOR_H
  13:../libDaisy/src/util/color.h **** #include <stdint.h>
  14:../libDaisy/src/util/color.h **** 
  15:../libDaisy/src/util/color.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 27


  16:../libDaisy/src/util/color.h **** namespace daisy
  17:../libDaisy/src/util/color.h **** {
  18:../libDaisy/src/util/color.h **** /** @addtogroup utility
  19:../libDaisy/src/util/color.h ****     @{
  20:../libDaisy/src/util/color.h **** */
  21:../libDaisy/src/util/color.h **** 
  22:../libDaisy/src/util/color.h **** /** Class for handling simple colors */
  23:../libDaisy/src/util/color.h **** class Color
  24:../libDaisy/src/util/color.h **** {
  25:../libDaisy/src/util/color.h ****   public:
  26:../libDaisy/src/util/color.h ****     Color() {}
  27:../libDaisy/src/util/color.h ****     ~Color() {}
 259              		.loc 19 27 5 view .LVU52
 260              		.loc 19 27 5 is_stmt 0 view .LVU53
 261              	.LBE365:
 262              	.LBB366:
 263              	.LBI366:
 264              		.loc 19 27 5 is_stmt 1 view .LVU54
 265              		.loc 19 27 5 is_stmt 0 view .LVU55
 266              	.LBE366:
 267              	.LBB367:
 268              	.LBI367:
 269              		.loc 19 27 5 is_stmt 1 view .LVU56
 270              		.loc 19 27 5 is_stmt 0 view .LVU57
 271              	.LBE367:
 272              	.LBB368:
 273              	.LBI368:
 274              		.loc 19 27 5 is_stmt 1 view .LVU58
 275              		.loc 19 27 5 is_stmt 0 view .LVU59
 276              	.LBE368:
 277              	.LBB369:
 278              	.LBI369:
 279              		.loc 19 27 5 is_stmt 1 view .LVU60
 280              		.loc 19 27 5 is_stmt 0 view .LVU61
 281              	.LBE369:
 282              	.LBB370:
 283              	.LBI370:
 284              		.loc 19 27 5 is_stmt 1 view .LVU62
 285              		.loc 19 27 5 is_stmt 0 view .LVU63
 286              	.LBE370:
 287              	.LBB371:
 288              	.LBI371:
 289              		.loc 19 27 5 is_stmt 1 view .LVU64
 290              		.loc 19 27 5 is_stmt 0 view .LVU65
 291              	.LBE371:
 292              	.LBB372:
 293              	.LBI372:
 294              		.loc 19 27 5 is_stmt 1 view .LVU66
 295              		.loc 19 27 5 is_stmt 0 view .LVU67
 296              	.LBE372:
 297              	.LBE364:
 298              	.LBB373:
 299              	.LBI373:
 300              		.file 20 "../libDaisy/src/util/WavWriter.h"
   1:../libDaisy/src/util/WavWriter.h **** #pragma once
   2:../libDaisy/src/util/WavWriter.h **** #pragma once
   3:../libDaisy/src/util/WavWriter.h **** #include "fatfs.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 28


   4:../libDaisy/src/util/WavWriter.h **** 
   5:../libDaisy/src/util/WavWriter.h **** namespace daisy
   6:../libDaisy/src/util/WavWriter.h **** {
   7:../libDaisy/src/util/WavWriter.h **** /** Audio Recording Module
   8:../libDaisy/src/util/WavWriter.h ****  ** 
   9:../libDaisy/src/util/WavWriter.h ****  ** Record audio into a working buffer that is gradually written to a WAV file on an SD Card. 
  10:../libDaisy/src/util/WavWriter.h ****  **
  11:../libDaisy/src/util/WavWriter.h ****  ** Recordings are made with floating point input, and will be converted to the 
  12:../libDaisy/src/util/WavWriter.h ****  ** specified bits per sample internally 
  13:../libDaisy/src/util/WavWriter.h ****  **
  14:../libDaisy/src/util/WavWriter.h ****  ** For now only 16-bit and 32-bit (signed int) formats are supported
  15:../libDaisy/src/util/WavWriter.h ****  ** f32 and s24 formats will be added next
  16:../libDaisy/src/util/WavWriter.h ****  **
  17:../libDaisy/src/util/WavWriter.h ****  ** The transfer size determines the amount of internal memory used, and can have an
  18:../libDaisy/src/util/WavWriter.h ****  ** effect on the performance of the streaming behavior of the WavWriter.
  19:../libDaisy/src/util/WavWriter.h ****  ** Memory use can be calculated as: (2 * transfer_size) bytes
  20:../libDaisy/src/util/WavWriter.h ****  ** Performance optimal with sizes: 16384, 32768
  21:../libDaisy/src/util/WavWriter.h ****  ** 
  22:../libDaisy/src/util/WavWriter.h ****  ** To use:
  23:../libDaisy/src/util/WavWriter.h ****  ** 1. Create a WavWriter<size> object (e.g. WavWriter<32768> writer)
  24:../libDaisy/src/util/WavWriter.h ****  ** 2. Configure the settings as desired by creating a WavWriter<32768>::Config struct and setting 
  25:../libDaisy/src/util/WavWriter.h ****  ** 3. Initialize the object with the configuration struct.
  26:../libDaisy/src/util/WavWriter.h ****  ** 4. Open a new file for writing with: writer.OpenFile("FileName.wav")
  27:../libDaisy/src/util/WavWriter.h ****  ** 5. Write to it within your audio callback using: writer.Sample(value)
  28:../libDaisy/src/util/WavWriter.h ****  ** 6. Fill the Wav File on the SD Card with data from your main loop by running: writer.Write()
  29:../libDaisy/src/util/WavWriter.h ****  ** 7. When finished with the recording finalize, and close the file with: writer.SaveFile();
  30:../libDaisy/src/util/WavWriter.h ****  ** 
  31:../libDaisy/src/util/WavWriter.h ****  ** */
  32:../libDaisy/src/util/WavWriter.h **** template <size_t transfer_size>
  33:../libDaisy/src/util/WavWriter.h **** class WavWriter
  34:../libDaisy/src/util/WavWriter.h **** {
  35:../libDaisy/src/util/WavWriter.h ****   public:
  36:../libDaisy/src/util/WavWriter.h ****     WavWriter() {}
  37:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 301              		.loc 20 37 5 is_stmt 1 view .LVU68
 302              		.loc 20 37 5 is_stmt 0 view .LVU69
 303              	.LBE373:
 304              	.LBB374:
 305              	.LBI374:
 306              		.file 21 "../DaisySP/Source/Filters/onepole.h"
   1:../DaisySP/Source/Filters/onepole.h **** /*
   2:../DaisySP/Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Filters/onepole.h **** 
   4:../DaisySP/Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Filters/onepole.h **** */
   8:../DaisySP/Source/Filters/onepole.h **** 
   9:../DaisySP/Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../DaisySP/Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../DaisySP/Source/Filters/onepole.h **** 
  12:../DaisySP/Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../DaisySP/Source/Filters/onepole.h **** #include <cmath>
  14:../DaisySP/Source/Filters/onepole.h **** #include <algorithm>
  15:../DaisySP/Source/Filters/onepole.h **** 
  16:../DaisySP/Source/Filters/onepole.h **** namespace daisysp
  17:../DaisySP/Source/Filters/onepole.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 29


  18:../DaisySP/Source/Filters/onepole.h **** /**         
  19:../DaisySP/Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../DaisySP/Source/Filters/onepole.h ****     @author beserge
  21:../DaisySP/Source/Filters/onepole.h ****     @date Dec 2023 
  22:../DaisySP/Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../DaisySP/Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../DaisySP/Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../DaisySP/Source/Filters/onepole.h **** */
  26:../DaisySP/Source/Filters/onepole.h **** class OnePole
  27:../DaisySP/Source/Filters/onepole.h **** {
  28:../DaisySP/Source/Filters/onepole.h ****   public:
  29:../DaisySP/Source/Filters/onepole.h ****     OnePole() {}
  30:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 307              		.loc 21 30 5 is_stmt 1 view .LVU70
 308              		.loc 21 30 5 is_stmt 0 view .LVU71
 309              	.LBE374:
 310              	.LBB375:
 311              	.LBI375:
 312              		.loc 21 30 5 is_stmt 1 view .LVU72
 313              		.loc 21 30 5 is_stmt 0 view .LVU73
 314              	.LBE375:
 315              	.LBB376:
 316              	.LBI376:
 317              		.file 22 "../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Copyright (c) 2023 Electrosmith, Corp, Victor Lazzarini, John ffitch (fast tanh), Bob Moog
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifndef DSY_MOOGLADDER_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #define DSY_MOOGLADDER_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #include <stdint.h>
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifdef __cplusplus
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /** Moog ladder filter module*/
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** class MoogLadder
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****   public:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     MoogLadder() {}
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 318              		.loc 22 23 5 is_stmt 1 view .LVU74
 319              		.loc 22 23 5 is_stmt 0 view .LVU75
 320              	.LBE376:
 321              	.LBB377:
 322              	.LBI377:
 323              		.file 23 "../DaisySP/Source/Dynamics/limiter.h"
   1:../DaisySP/Source/Dynamics/limiter.h **** /*
   2:../DaisySP/Source/Dynamics/limiter.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Dynamics/limiter.h **** 
   4:../DaisySP/Source/Dynamics/limiter.h **** Use of this source code is governed by an MIT-style
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 30


   5:../DaisySP/Source/Dynamics/limiter.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Dynamics/limiter.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Dynamics/limiter.h **** */
   8:../DaisySP/Source/Dynamics/limiter.h **** 
   9:../DaisySP/Source/Dynamics/limiter.h **** #pragma once
  10:../DaisySP/Source/Dynamics/limiter.h **** #ifndef LIMITER_H
  11:../DaisySP/Source/Dynamics/limiter.h **** #define LIMITER_H
  12:../DaisySP/Source/Dynamics/limiter.h **** #include <stdlib.h>
  13:../DaisySP/Source/Dynamics/limiter.h **** namespace daisysp
  14:../DaisySP/Source/Dynamics/limiter.h **** {
  15:../DaisySP/Source/Dynamics/limiter.h **** /** Simple Peak Limiter
  16:../DaisySP/Source/Dynamics/limiter.h **** 
  17:../DaisySP/Source/Dynamics/limiter.h **** This was extracted from pichenettes/stmlib.
  18:../DaisySP/Source/Dynamics/limiter.h **** 
  19:../DaisySP/Source/Dynamics/limiter.h **** Credit to pichenettes/Mutable Instruments
  20:../DaisySP/Source/Dynamics/limiter.h **** */
  21:../DaisySP/Source/Dynamics/limiter.h **** class Limiter
  22:../DaisySP/Source/Dynamics/limiter.h **** {
  23:../DaisySP/Source/Dynamics/limiter.h ****   public:
  24:../DaisySP/Source/Dynamics/limiter.h ****     Limiter() {}
  25:../DaisySP/Source/Dynamics/limiter.h ****     ~Limiter() {}
 324              		.loc 23 25 5 is_stmt 1 view .LVU76
 325              		.loc 23 25 5 is_stmt 0 view .LVU77
 326              	.LBE377:
 327              	.LBB378:
 328              	.LBI378:
 329              		.file 24 "../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Copyright (c) 2023 Electrosmith, Corp, GRAME, Centre National de Creation Musicale.
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #ifndef DSY_COMPRESSOR_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #define DSY_COMPRESSOR_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #include "Utility/dsp.h"
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** namespace daisysp
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** {
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** /** dynamics compressor
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** influenced by compressor in soundpipe (from faust).
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Modifications made to do:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - Less calculations during each process loop (coefficients recalculated on parameter change).
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - C++-ified
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - added sidechain support
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - pulled gain apart for monitoring and multichannel support
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - improved readability
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - improved makeup-gain calculations
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - changing controls now costs a lot less
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - a lot less expensive
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 31


  31:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** by: shensley, improved upon by AvAars
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** \todo Add soft/hard knee settings
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** */
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** class Compressor
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** {
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****   public:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     Compressor() {}
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 330              		.loc 24 38 5 is_stmt 1 view .LVU78
 331              		.loc 24 38 5 is_stmt 0 view .LVU79
 332              	.LBE378:
 333              	.LBB379:
 334              	.LBI379:
 335              		.loc 17 9 7 is_stmt 1 view .LVU80
 336              		.loc 17 9 7 is_stmt 0 view .LVU81
 337              	.LBE379:
  16:GrannyChordApp.h ****   public:
 338              		.loc 18 16 7 view .LVU82
 339 0000 7047     		bx	lr
 340              		.cfi_endproc
 341              	.LFE5506:
 343              		.weak	_ZN14GrannyChordAppD1Ev
 344              		.thumb_set _ZN14GrannyChordAppD1Ev,_ZN14GrannyChordAppD2Ev
 345              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 346              	.LC0:
 347 0000 73746172 		.ascii	"started log\000"
 347      74656420 
 347      6C6F6700 
 348              		.section	.text.startup.main,"ax",%progbits
 349              		.align	1
 350              		.global	main
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	main:
 356              	.LFB4914:
 357              		.file 25 "main.cpp"
   1:main.cpp      **** #ifdef DEBUG_MODE // TODO: remove
   2:main.cpp      **** #pragma message("Debug mode is ON")
   3:main.cpp      **** #else
   4:main.cpp      **** #pragma message("Debug mode is OFF")
   5:main.cpp      **** #endif
   6:main.cpp      **** 
   7:main.cpp      **** #include <stdio.h>
   8:main.cpp      **** #include "daisysp.h"
   9:main.cpp      **** #include "daisy_pod.h"
  10:main.cpp      **** #include "AudioFileManager.h"
  11:main.cpp      **** #include "GranularSynth.h"
  12:main.cpp      **** #include "GrannyChordApp.h"
  13:main.cpp      **** #include "constants_utils.h"
  14:main.cpp      **** #include "DaisySP-LGPL-FX/reverb.h"
  15:main.cpp      **** #include "debug_print.h"
  16:main.cpp      **** 
  17:main.cpp      **** using namespace daisy;
  18:main.cpp      **** using namespace daisysp;
  19:main.cpp      **** using namespace std;
  20:main.cpp      **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 32


  21:main.cpp      **** /* SDRAM buffers for storing WAV files or recorded input audio */
  22:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t left_buf[CHNL_BUF_SIZE_SAMPS];
  23:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t right_buf[CHNL_BUF_SIZE_SAMPS];
  24:main.cpp      **** 
  25:main.cpp      **** /* hardware interfaces */
  26:main.cpp      **** SdmmcHandler sd;
  27:main.cpp      **** FatFSInterface fsi;
  28:main.cpp      **** DaisyPod pod;
  29:main.cpp      **** FIL file;
  30:main.cpp      **** 
  31:main.cpp      **** DSY_SDRAM_BSS ReverbSc reverb;
  32:main.cpp      **** /* software classes to run app */
  33:main.cpp      **** AudioFileManager filemgr(sd, fsi, pod, &file);
  34:main.cpp      **** static GranularSynth synth(pod);
  35:main.cpp      **** GrannyChordApp app(pod, synth, filemgr, reverb);
  36:main.cpp      **** 
  37:main.cpp      **** /* we set rng state here so we can use RNG fns across classes */
  38:main.cpp      **** uint32_t rng_state;
  39:main.cpp      **** 
  40:main.cpp      **** int main (void){
 358              		.loc 25 40 16 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
  41:main.cpp      ****   pod.Init();
 362              		.loc 25 41 3 view .LVU84
  40:main.cpp      ****   pod.Init();
 363              		.loc 25 40 16 is_stmt 0 view .LVU85
 364 0000 08B5     		push	{r3, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 368              		.loc 25 41 11 view .LVU86
 369 0002 0021     		movs	r1, #0
 370 0004 0948     		ldr	r0, .L7
 371 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 372              	.LVL5:
  42:main.cpp      ****   pod.seed.StartLog(true);
 373              		.loc 25 42 3 is_stmt 1 view .LVU87
 374              	.LBB380:
 375              	.LBI380:
  23:../libDaisy/src/daisy_seed.h **** 
  24:../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../libDaisy/src/daisy_seed.h ****      */
  27:../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../libDaisy/src/daisy_seed.h **** 
  29:../libDaisy/src/daisy_seed.h ****     /** 
  30:../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../libDaisy/src/daisy_seed.h **** 
  34:../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../libDaisy/src/daisy_seed.h ****     */
  38:../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 33


  39:../libDaisy/src/daisy_seed.h **** 
  40:../libDaisy/src/daisy_seed.h ****     /** 
  41:../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../libDaisy/src/daisy_seed.h ****     */
  43:../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../libDaisy/src/daisy_seed.h **** 
  45:../libDaisy/src/daisy_seed.h ****     /** 
  46:../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../libDaisy/src/daisy_seed.h ****     */
  49:../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../libDaisy/src/daisy_seed.h **** 
  51:../libDaisy/src/daisy_seed.h ****     /** 
  52:../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../libDaisy/src/daisy_seed.h ****     */
  55:../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../libDaisy/src/daisy_seed.h **** 
  57:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../libDaisy/src/daisy_seed.h ****     */
  61:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../libDaisy/src/daisy_seed.h **** 
  63:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../libDaisy/src/daisy_seed.h ****     */
  68:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../libDaisy/src/daisy_seed.h **** 
  70:../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../libDaisy/src/daisy_seed.h ****      */
  72:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../libDaisy/src/daisy_seed.h **** 
  74:../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../libDaisy/src/daisy_seed.h ****      */
  76:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../libDaisy/src/daisy_seed.h **** 
  78:../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../libDaisy/src/daisy_seed.h **** 
  81:../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../libDaisy/src/daisy_seed.h ****      */
  84:../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../libDaisy/src/daisy_seed.h **** 
  86:../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../libDaisy/src/daisy_seed.h ****      */
  88:../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../libDaisy/src/daisy_seed.h **** 
  90:../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../libDaisy/src/daisy_seed.h ****      */
  92:../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../libDaisy/src/daisy_seed.h **** 
  94:../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 34


  96:../libDaisy/src/daisy_seed.h **** 
  97:../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../libDaisy/src/daisy_seed.h **** 
 100:../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../libDaisy/src/daisy_seed.h ****      */
 105:../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../libDaisy/src/daisy_seed.h **** 
 107:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../libDaisy/src/daisy_seed.h ****      */
 109:../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../libDaisy/src/daisy_seed.h **** 
 111:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../libDaisy/src/daisy_seed.h ****      */
 113:../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../libDaisy/src/daisy_seed.h **** 
 115:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../libDaisy/src/daisy_seed.h ****      */
 117:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../libDaisy/src/daisy_seed.h ****     {
 120:../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../libDaisy/src/daisy_seed.h ****     }
 122:../libDaisy/src/daisy_seed.h **** 
 123:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../libDaisy/src/daisy_seed.h ****     */
 125:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../libDaisy/src/daisy_seed.h ****     {
 128:../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 129:../libDaisy/src/daisy_seed.h ****     }
 130:../libDaisy/src/daisy_seed.h **** 
 131:../libDaisy/src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:../libDaisy/src/daisy_seed.h ****     */
 133:../libDaisy/src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 376              		.loc 12 133 17 view .LVU88
 377              	.LBB381:
 134:../libDaisy/src/daisy_seed.h ****     {
 135:../libDaisy/src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 378              		.loc 12 135 9 view .LVU89
 379              		.loc 12 135 22 is_stmt 0 view .LVU90
 380 000a 0120     		movs	r0, #1
 381 000c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 382              	.LVL6:
 383              		.loc 12 135 22 view .LVU91
 384              	.LBE381:
 385              	.LBE380:
  43:main.cpp      ****   // DebugPrint(pod,"started log");
  44:main.cpp      ****   pod.seed.PrintLine("started log");
 386              		.loc 25 44 3 is_stmt 1 view .LVU92
 387              	.LBB382:
 388              	.LBI382:
 126:../libDaisy/src/daisy_seed.h ****     {
 389              		.loc 12 126 17 view .LVU93
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 35


 390              	.LBB383:
 128:../libDaisy/src/daisy_seed.h ****     }
 391              		.loc 12 128 23 is_stmt 0 view .LVU94
 392 0010 0748     		ldr	r0, .L7+4
 393 0012 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 394              	.LVL7:
 128:../libDaisy/src/daisy_seed.h ****     }
 395              		.loc 12 128 23 view .LVU95
 396              	.LBE383:
 397              	.LBE382:
  45:main.cpp      ****   // rng.Init(SAMPLE_RATE_FLOAT);
  46:main.cpp      ****   // rng.SetFreq(1.f);
  47:main.cpp      ****   // float x;
  48:main.cpp      ****   // float y;
  49:main.cpp      **** 
  50:main.cpp      ****   // while (1){
  51:main.cpp      ****   //   pod.ProcessDigitalControls();
  52:main.cpp      ****   //   if (pod.button1.FallingEdge()){
  53:main.cpp      ****   //     x = rng.Process();
  54:main.cpp      ****   //     pod.seed.PrintLine("smooth rng %.9f", x);
  55:main.cpp      ****   //   }
  56:main.cpp      ****   // }
  57:main.cpp      **** 
  58:main.cpp      **** 
  59:main.cpp      ****   app.Init(left_buf, right_buf);
 398              		.loc 25 59 3 is_stmt 1 view .LVU96
 399              		.loc 25 59 11 is_stmt 0 view .LVU97
 400 0016 074A     		ldr	r2, .L7+8
 401 0018 0749     		ldr	r1, .L7+12
 402 001a 0848     		ldr	r0, .L7+16
 403 001c FFF7FEFF 		bl	_ZN14GrannyChordApp4InitEPsS0_
 404              	.LVL8:
  60:main.cpp      ****   app.Run();
 405              		.loc 25 60 3 is_stmt 1 view .LVU98
 406              		.loc 25 60 10 is_stmt 0 view .LVU99
 407 0020 0648     		ldr	r0, .L7+16
 408 0022 FFF7FEFF 		bl	_ZN14GrannyChordApp3RunEv
 409              	.LVL9:
  61:main.cpp      **** }
 410              		.loc 25 61 1 view .LVU100
 411 0026 0020     		movs	r0, #0
 412 0028 08BD     		pop	{r3, pc}
 413              	.L8:
 414 002a 00BF     		.align	2
 415              	.L7:
 416 002c 00000000 		.word	pod
 417 0030 00000000 		.word	.LC0
 418 0034 00000000 		.word	right_buf
 419 0038 00000000 		.word	left_buf
 420 003c 00000000 		.word	app
 421              		.cfi_endproc
 422              	.LFE4914:
 424              		.section	.text.startup._GLOBAL__sub_I_left_buf,"ax",%progbits
 425              		.align	1
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 36


 430              	_GLOBAL__sub_I_left_buf:
 431              	.LFB5508:
 432              		.loc 25 61 1 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              	.LBB509:
 437              	.LBI509:
 438              		.loc 25 61 1 view .LVU102
 439              	.LVL10:
 440              	.LBB510:
 441              	.LBB511:
 442              	.LBI511:
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 443              		.loc 2 77 5 view .LVU103
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 444              		.loc 2 77 5 is_stmt 0 view .LVU104
 445              	.LBE511:
 446              	.LBE510:
 447              	.LBE509:
 448              		.loc 25 61 1 view .LVU105
 449 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 450              		.cfi_def_cfa_offset 24
 451              		.cfi_offset 4, -24
 452              		.cfi_offset 5, -20
 453              		.cfi_offset 6, -16
 454              		.cfi_offset 7, -12
 455              		.cfi_offset 8, -8
 456              		.cfi_offset 14, -4
 457              	.LBB665:
 458              	.LBB663:
  26:main.cpp      **** FatFSInterface fsi;
 459              		.loc 25 26 14 view .LVU106
 460 0004 414E     		ldr	r6, .L12
 461              	.LBB512:
 462              	.LBB513:
 463              	.LBB514:
 464              	.LBB515:
 465              	.LBB516:
 466              	.LBB517:
 467              	.LBB518:
 468              		.file 26 "../libDaisy/src/per/qspi.h"
   1:../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../libDaisy/src/per/qspi.h **** 
   4:../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../libDaisy/src/per/qspi.h **** 
   6:../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../libDaisy/src/per/qspi.h **** 
   9:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 37


  16:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../libDaisy/src/per/qspi.h **** 
  19:../libDaisy/src/per/qspi.h **** namespace daisy
  20:../libDaisy/src/per/qspi.h **** {
  21:../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../libDaisy/src/per/qspi.h **** @{
  23:../libDaisy/src/per/qspi.h **** */
  24:../libDaisy/src/per/qspi.h **** 
  25:../libDaisy/src/per/qspi.h **** /** 
  26:../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../libDaisy/src/per/qspi.h **** */
  30:../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../libDaisy/src/per/qspi.h **** {
  32:../libDaisy/src/per/qspi.h ****   public:
  33:../libDaisy/src/per/qspi.h ****     enum Result
  34:../libDaisy/src/per/qspi.h ****     {
  35:../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../libDaisy/src/per/qspi.h ****         ERR
  37:../libDaisy/src/per/qspi.h ****     };
  38:../libDaisy/src/per/qspi.h **** 
  39:../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../libDaisy/src/per/qspi.h ****          * 
  43:../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../libDaisy/src/per/qspi.h ****          */
  48:../libDaisy/src/per/qspi.h ****     enum Status
  49:../libDaisy/src/per/qspi.h ****     {
  50:../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../libDaisy/src/per/qspi.h ****     };
  55:../libDaisy/src/per/qspi.h **** 
  56:../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../libDaisy/src/per/qspi.h ****     struct Config
  58:../libDaisy/src/per/qspi.h ****     {
  59:../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../libDaisy/src/per/qspi.h ****         enum Device
  61:../libDaisy/src/per/qspi.h ****         {
  62:../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../libDaisy/src/per/qspi.h ****         };
  66:../libDaisy/src/per/qspi.h **** 
  67:../libDaisy/src/per/qspi.h ****         /** 
  68:../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 38


  73:../libDaisy/src/per/qspi.h ****         */
  74:../libDaisy/src/per/qspi.h ****         enum Mode
  75:../libDaisy/src/per/qspi.h ****         {
  76:../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../libDaisy/src/per/qspi.h ****         };
  80:../libDaisy/src/per/qspi.h **** 
  81:../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../libDaisy/src/per/qspi.h ****         struct
  83:../libDaisy/src/per/qspi.h ****         {
  84:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../libDaisy/src/per/qspi.h **** 
  92:../libDaisy/src/per/qspi.h ****         Device device;
  93:../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../libDaisy/src/per/qspi.h ****     };
  95:../libDaisy/src/per/qspi.h **** 
  96:../libDaisy/src/per/qspi.h ****     /** 
  97:../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../libDaisy/src/per/qspi.h ****         */
 101:../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../libDaisy/src/per/qspi.h **** 
 103:../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../libDaisy/src/per/qspi.h **** 
 106:../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../libDaisy/src/per/qspi.h ****     /** 
 109:../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../libDaisy/src/per/qspi.h ****         */
 113:../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../libDaisy/src/per/qspi.h **** 
 115:../libDaisy/src/per/qspi.h ****     /** 
 116:../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../libDaisy/src/per/qspi.h ****         */
 123:../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../libDaisy/src/per/qspi.h **** 
 125:../libDaisy/src/per/qspi.h ****     /** 
 126:../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 39


 130:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../libDaisy/src/per/qspi.h ****         */
 132:../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../libDaisy/src/per/qspi.h **** 
 134:../libDaisy/src/per/qspi.h ****     /** 
 135:../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../libDaisy/src/per/qspi.h ****         */
 142:../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../libDaisy/src/per/qspi.h **** 
 144:../libDaisy/src/per/qspi.h ****     /**  
 145:../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../libDaisy/src/per/qspi.h ****         */
 150:../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../libDaisy/src/per/qspi.h **** 
 152:../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../libDaisy/src/per/qspi.h ****      */
 155:../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../libDaisy/src/per/qspi.h **** 
 157:../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../libDaisy/src/per/qspi.h ****      * 
 161:../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../libDaisy/src/per/qspi.h ****     */
 164:../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../libDaisy/src/per/qspi.h **** 
 166:../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 469              		.loc 26 166 34 view .LVU107
 470 0006 0025     		movs	r5, #0
 471 0008 414C     		ldr	r4, .L12+4
 472              	.LBE518:
 473              	.LBE517:
 474              	.LBE516:
 475              	.LBE515:
 476              	.LBE514:
 477              	.LBE513:
 478              	.LBE512:
  26:main.cpp      **** FatFSInterface fsi;
 479              		.loc 25 26 14 view .LVU108
 480 000a 424A     		ldr	r2, .L12+8
 481 000c 3046     		mov	r0, r6
 482 000e 4249     		ldr	r1, .L12+12
 483 0010 FFF7FEFF 		bl	__aeabi_atexit
 484              	.LVL11:
 485              	.LBB603:
 486              	.LBI603:
 487              		.file 27 "../libDaisy/src/sys/fatfs.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 40


   1:../libDaisy/src/sys/fatfs.h **** #ifndef __fatfs_H
   2:../libDaisy/src/sys/fatfs.h **** #define __fatfs_H /**< & */
   3:../libDaisy/src/sys/fatfs.h **** 
   4:../libDaisy/src/sys/fatfs.h **** #include "ff.h"
   5:../libDaisy/src/sys/fatfs.h **** 
   6:../libDaisy/src/sys/fatfs.h **** namespace daisy
   7:../libDaisy/src/sys/fatfs.h **** {
   8:../libDaisy/src/sys/fatfs.h **** /** @brief Daisy FatFS Driver Interface
   9:../libDaisy/src/sys/fatfs.h ****  *  @details Specifies the desired media (SD Card, USB, etc.) to be mountable with FatFS
  10:../libDaisy/src/sys/fatfs.h ****  *           within a given application. Once initialization is called, the standard
  11:../libDaisy/src/sys/fatfs.h ****  *           FatFS API will be usable with the media mounted in the order 
  12:../libDaisy/src/sys/fatfs.h ****  *           they are listed in the Media config struct. 
  13:../libDaisy/src/sys/fatfs.h ****  *           For example, when only using an SD Card, it will mount at "0:/",
  14:../libDaisy/src/sys/fatfs.h ****  *           when only using USB, it will mount at "0:/". However, when mounting 
  15:../libDaisy/src/sys/fatfs.h ****  *           with SD card and USB, the SD card will mount at "0:/", and the USB 
  16:../libDaisy/src/sys/fatfs.h ****  *           will mount at "1:/".
  17:../libDaisy/src/sys/fatfs.h ****  *           The relevant hardware peripheral (SDMMC, or MSD) needs to be initialized
  18:../libDaisy/src/sys/fatfs.h ****  *           separately by the application before using FatFS.
  19:../libDaisy/src/sys/fatfs.h ****  *          
  20:../libDaisy/src/sys/fatfs.h ****  *           This object has some memory limitations due to the media connected to it.
  21:../libDaisy/src/sys/fatfs.h ****  *           The SDMMC1 peripheral can only communicate with the AXI SRAM, and the DTCMRAM 
  22:../libDaisy/src/sys/fatfs.h ****  *           cannot communicate with the DMA. So the FatFSInterface object should always be
  23:../libDaisy/src/sys/fatfs.h ****  *           located in the AXI SRAM. This is the default location for all data/bss memory
  24:../libDaisy/src/sys/fatfs.h ****  *           using the standard build. However, applciations using the electrosmith bootloader
  25:../libDaisy/src/sys/fatfs.h ****  *           will need special consideration when using this object AND an SD Card. 
  26:../libDaisy/src/sys/fatfs.h ****  */
  27:../libDaisy/src/sys/fatfs.h **** class FatFSInterface
  28:../libDaisy/src/sys/fatfs.h **** {
  29:../libDaisy/src/sys/fatfs.h ****   public:
  30:../libDaisy/src/sys/fatfs.h ****     /** Return values specifying specific errors for linking Daisy to FatFS */
  31:../libDaisy/src/sys/fatfs.h ****     enum Result
  32:../libDaisy/src/sys/fatfs.h ****     {
  33:../libDaisy/src/sys/fatfs.h ****         OK,
  34:../libDaisy/src/sys/fatfs.h ****         ERR_TOO_MANY_VOLUMES,
  35:../libDaisy/src/sys/fatfs.h ****         ERR_NO_MEDIA_SELECTED,
  36:../libDaisy/src/sys/fatfs.h ****         ERR_GENERIC,
  37:../libDaisy/src/sys/fatfs.h ****     };
  38:../libDaisy/src/sys/fatfs.h **** 
  39:../libDaisy/src/sys/fatfs.h ****     /** Config structure for configuring Daisy to FatFS */
  40:../libDaisy/src/sys/fatfs.h ****     struct Config
  41:../libDaisy/src/sys/fatfs.h ****     {
  42:../libDaisy/src/sys/fatfs.h ****         /** Selected Media that will be linked to FatFS 
  43:../libDaisy/src/sys/fatfs.h ****          *  These values can be OR'd together when multiple
  44:../libDaisy/src/sys/fatfs.h ****          *  volumes are desired 
  45:../libDaisy/src/sys/fatfs.h ****          *  i.e. config.media = Media::SD | Media::USBH;
  46:../libDaisy/src/sys/fatfs.h ****          * 
  47:../libDaisy/src/sys/fatfs.h ****          *  When mounting multiple volumes, ffconf.h must have 
  48:../libDaisy/src/sys/fatfs.h ****          *  _VOLUMES set to an appropriate value.
  49:../libDaisy/src/sys/fatfs.h ****          * 
  50:../libDaisy/src/sys/fatfs.h ****          *  FatFS will register multiple volumes in the order of the enum,
  51:../libDaisy/src/sys/fatfs.h ****          *   the first registered class will mount at "0:/",
  52:../libDaisy/src/sys/fatfs.h ****          *   the second registered class will mount at "1:/", and so on
  53:../libDaisy/src/sys/fatfs.h ****          */
  54:../libDaisy/src/sys/fatfs.h ****         enum Media : uint8_t
  55:../libDaisy/src/sys/fatfs.h ****         {
  56:../libDaisy/src/sys/fatfs.h ****             MEDIA_SD  = 0x01,
  57:../libDaisy/src/sys/fatfs.h ****             MEDIA_USB = 0x02,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 41


  58:../libDaisy/src/sys/fatfs.h ****             // MEDIA_QSPI = 0x04,
  59:../libDaisy/src/sys/fatfs.h ****         };
  60:../libDaisy/src/sys/fatfs.h **** 
  61:../libDaisy/src/sys/fatfs.h ****         uint8_t media;
  62:../libDaisy/src/sys/fatfs.h ****     };
  63:../libDaisy/src/sys/fatfs.h **** 
  64:../libDaisy/src/sys/fatfs.h ****     FatFSInterface() {}
 488              		.loc 27 64 5 is_stmt 1 view .LVU109
 489              		.loc 27 64 5 is_stmt 0 view .LVU110
 490              	.LBE603:
 491              	.LBB604:
 492              	.LBI512:
  35:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
 493              		.loc 3 35 5 is_stmt 1 view .LVU111
 494              	.LBB599:
 495              	.LBB537:
 496              	.LBI514:
  21:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 497              		.loc 12 21 5 view .LVU112
 498              	.LBB535:
 499              	.LBB521:
 500              	.LBI516:
 501              		.loc 26 166 5 view .LVU113
 502              	.LBE521:
 503              	.LBE535:
 504              	.LBE537:
 505              	.LBB538:
 506              	.LBB539:
 507              	.LBB540:
 508              	.LBB541:
 157:../libDaisy/src/hid/midi.h **** 
 158:../libDaisy/src/hid/midi.h ****     struct Config
 509              		.loc 4 158 12 is_stmt 0 view .LVU114
 510 0014 04F5C070 		add	r0, r4, #384
 511              	.LBE541:
 512              	.LBE540:
 513              	.LBE539:
 514              	.LBE538:
 515              	.LBB577:
 516              	.LBB536:
 517              	.LBB522:
 518              	.LBB520:
 519              	.LBB519:
 520              		.loc 26 166 34 view .LVU115
 521 0018 2560     		str	r5, [r4]
 522              	.LVL12:
 523              		.loc 26 166 34 view .LVU116
 524              	.LBE519:
 525              	.LBE520:
 526              	.LBE522:
 527              	.LBB523:
 528              	.LBI523:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 529              		.loc 16 95 5 is_stmt 1 view .LVU117
 530              	.LBB524:
 531              	.LBB525:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 42


 532              		.loc 16 95 35 is_stmt 0 view .LVU118
 533 001a 6561     		str	r5, [r4, #20]
 534              	.LVL13:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 535              		.loc 16 95 35 view .LVU119
 536              	.LBE525:
 537              	.LBE524:
 538              	.LBE523:
 539              	.LBB526:
 540              	.LBI526:
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 541              		.loc 15 109 5 is_stmt 1 view .LVU120
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 542              		.loc 15 109 5 is_stmt 0 view .LVU121
 543              	.LBE526:
 544              	.LBB527:
 545              	.LBI527:
 546              		.file 28 "../libDaisy/src/per/dac.h"
   1:../libDaisy/src/per/dac.h **** #pragma once
   2:../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libDaisy/src/per/dac.h **** 
   5:../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/dac.h **** 
   7:../libDaisy/src/per/dac.h **** namespace daisy
   8:../libDaisy/src/per/dac.h **** {
   9:../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../libDaisy/src/per/dac.h ****  ** 
  12:../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../libDaisy/src/per/dac.h ****  **
  15:../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../libDaisy/src/per/dac.h ****  **
  17:../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../libDaisy/src/per/dac.h ****  ***/
  21:../libDaisy/src/per/dac.h **** class DacHandle
  22:../libDaisy/src/per/dac.h **** {
  23:../libDaisy/src/per/dac.h ****   public:
  24:../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../libDaisy/src/per/dac.h ****     enum class Result
  26:../libDaisy/src/per/dac.h ****     {
  27:../libDaisy/src/per/dac.h ****         OK,
  28:../libDaisy/src/per/dac.h ****         ERR,
  29:../libDaisy/src/per/dac.h ****     };
  30:../libDaisy/src/per/dac.h **** 
  31:../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../libDaisy/src/per/dac.h ****     enum class Channel
  33:../libDaisy/src/per/dac.h ****     {
  34:../libDaisy/src/per/dac.h ****         ONE,
  35:../libDaisy/src/per/dac.h ****         TWO,
  36:../libDaisy/src/per/dac.h ****         BOTH,
  37:../libDaisy/src/per/dac.h ****     };
  38:../libDaisy/src/per/dac.h **** 
  39:../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 43


  40:../libDaisy/src/per/dac.h ****      **
  41:../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../libDaisy/src/per/dac.h ****      **
  43:../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../libDaisy/src/per/dac.h ****      ***/
  46:../libDaisy/src/per/dac.h ****     enum class Mode
  47:../libDaisy/src/per/dac.h ****     {
  48:../libDaisy/src/per/dac.h ****         POLLING,
  49:../libDaisy/src/per/dac.h ****         DMA,
  50:../libDaisy/src/per/dac.h ****     };
  51:../libDaisy/src/per/dac.h **** 
  52:../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../libDaisy/src/per/dac.h ****      ***/
  56:../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../libDaisy/src/per/dac.h ****     {
  58:../libDaisy/src/per/dac.h ****         BITS_8,
  59:../libDaisy/src/per/dac.h ****         BITS_12
  60:../libDaisy/src/per/dac.h ****     };
  61:../libDaisy/src/per/dac.h **** 
  62:../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../libDaisy/src/per/dac.h ****     {
  65:../libDaisy/src/per/dac.h ****         ENABLED,
  66:../libDaisy/src/per/dac.h ****         DISABLED,
  67:../libDaisy/src/per/dac.h ****     };
  68:../libDaisy/src/per/dac.h **** 
  69:../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../libDaisy/src/per/dac.h ****     struct Config
  71:../libDaisy/src/per/dac.h ****     {
  72:../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../libDaisy/src/per/dac.h **** 
  78:../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../libDaisy/src/per/dac.h ****     };
  83:../libDaisy/src/per/dac.h **** 
  84:../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 547              		.loc 28 84 5 is_stmt 1 view .LVU122
 548              	.LBB528:
 549              	.LBB529:
 550              		.loc 28 84 33 is_stmt 0 view .LVU123
 551 001c 2562     		str	r5, [r4, #32]
 552              	.LVL14:
 553              		.loc 28 84 33 view .LVU124
 554              	.LBE529:
 555              	.LBE528:
 556              	.LBE527:
 557              	.LBB530:
 558              	.LBI530:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 44


  40:../libDaisy/src/hid/usb.h **** 
 559              		.loc 14 40 5 is_stmt 1 view .LVU125
  40:../libDaisy/src/hid/usb.h **** 
 560              		.loc 14 40 5 is_stmt 0 view .LVU126
 561              	.LBE530:
 562              	.LBB531:
 563              	.LBI531:
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 564              		.loc 13 96 5 is_stmt 1 view .LVU127
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 565              		.loc 13 96 5 is_stmt 0 view .LVU128
 566              	.LBE531:
 567              	.LBB532:
 568              	.LBI532:
 569              		.file 29 "../libDaisy/src/per/sai.h"
   1:../libDaisy/src/per/sai.h **** #pragma once
   2:../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../libDaisy/src/per/sai.h **** 
   5:../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/sai.h **** 
   7:../libDaisy/src/per/sai.h **** namespace daisy
   8:../libDaisy/src/per/sai.h **** {
   9:../libDaisy/src/per/sai.h **** /** 
  10:../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../libDaisy/src/per/sai.h ****  * 
  14:../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../libDaisy/src/per/sai.h ****  *
  18:../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../libDaisy/src/per/sai.h ****  * 
  21:../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../libDaisy/src/per/sai.h ****  * 
  23:../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../libDaisy/src/per/sai.h ****  */
  42:../libDaisy/src/per/sai.h **** class SaiHandle
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 45


  43:../libDaisy/src/per/sai.h **** {
  44:../libDaisy/src/per/sai.h ****   public:
  45:../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../libDaisy/src/per/sai.h ****     struct Config
  47:../libDaisy/src/per/sai.h ****     {
  48:../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../libDaisy/src/per/sai.h ****         {
  51:../libDaisy/src/per/sai.h ****             SAI_1,
  52:../libDaisy/src/per/sai.h ****             SAI_2,
  53:../libDaisy/src/per/sai.h ****         };
  54:../libDaisy/src/per/sai.h **** 
  55:../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../libDaisy/src/per/sai.h ****         {
  58:../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../libDaisy/src/per/sai.h ****         };
  64:../libDaisy/src/per/sai.h **** 
  65:../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../libDaisy/src/per/sai.h ****         {
  68:../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../libDaisy/src/per/sai.h ****         };
  72:../libDaisy/src/per/sai.h **** 
  73:../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../libDaisy/src/per/sai.h ****          */
  77:../libDaisy/src/per/sai.h ****         enum class Sync
  78:../libDaisy/src/per/sai.h ****         {
  79:../libDaisy/src/per/sai.h ****             MASTER,
  80:../libDaisy/src/per/sai.h ****             SLAVE,
  81:../libDaisy/src/per/sai.h ****         };
  82:../libDaisy/src/per/sai.h **** 
  83:../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../libDaisy/src/per/sai.h ****         enum class Direction
  85:../libDaisy/src/per/sai.h ****         {
  86:../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../libDaisy/src/per/sai.h ****         };
  89:../libDaisy/src/per/sai.h **** 
  90:../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../libDaisy/src/per/sai.h ****         struct
  92:../libDaisy/src/per/sai.h ****         {
  93:../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../libDaisy/src/per/sai.h ****         } pin_config;
  95:../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../libDaisy/src/per/sai.h ****     };
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 46


 100:../libDaisy/src/per/sai.h **** 
 101:../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../libDaisy/src/per/sai.h ****     enum class Result
 103:../libDaisy/src/per/sai.h ****     {
 104:../libDaisy/src/per/sai.h ****         OK,
 105:../libDaisy/src/per/sai.h ****         ERR,
 106:../libDaisy/src/per/sai.h ****     };
 107:../libDaisy/src/per/sai.h **** 
 108:../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 570              		.loc 29 108 5 is_stmt 1 view .LVU129
 571              	.LBB533:
 572              	.LBB534:
 573              		.loc 29 108 33 is_stmt 0 view .LVU130
 574 001e E563     		str	r5, [r4, #60]
 575              	.LVL15:
 576              		.loc 29 108 33 view .LVU131
 577              	.LBE534:
 578              	.LBE533:
 579              	.LBE532:
 580              	.LBE536:
 581              	.LBE577:
 582              	.LBB578:
 583              	.LBI578:
  20:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 584              		.loc 11 20 5 is_stmt 1 view .LVU132
 585              	.LBB579:
 586              	.LBB580:
 587              	.LBI580:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 588              		.loc 9 41 5 view .LVU133
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 589              		.loc 9 41 5 is_stmt 0 view .LVU134
 590              	.LBE580:
 591              	.LBE579:
 592              	.LBE578:
 593              	.LBB581:
 594              	.LBI581:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 595              		.loc 10 21 5 is_stmt 1 view .LVU135
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 596              		.loc 10 21 5 is_stmt 0 view .LVU136
 597              	.LBE581:
 598              	.LBB582:
 599              	.LBI582:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 600              		.loc 10 21 5 is_stmt 1 view .LVU137
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 601              		.loc 10 21 5 is_stmt 0 view .LVU138
 602              	.LBE582:
 603              	.LBB583:
 604              	.LBI583:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 605              		.loc 9 41 5 is_stmt 1 view .LVU139
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 606              		.loc 9 41 5 is_stmt 0 view .LVU140
 607              	.LBE583:
 608              	.LBB584:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 47


 609              	.LBI584:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 610              		.loc 9 41 5 is_stmt 1 view .LVU141
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 611              		.loc 9 41 5 is_stmt 0 view .LVU142
 612              	.LBE584:
 613              	.LBB585:
 614              	.LBI585:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 615              		.loc 7 17 5 is_stmt 1 view .LVU143
 616              	.LBB586:
 617              	.LBB587:
 618              	.LBI587:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 619              		.loc 8 24 5 view .LVU144
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 620              		.loc 8 24 5 is_stmt 0 view .LVU145
 621              	.LBE587:
 622              	.LBB588:
 623              	.LBI588:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 624              		.loc 8 24 5 is_stmt 1 view .LVU146
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 625              		.loc 8 24 5 is_stmt 0 view .LVU147
 626              	.LBE588:
 627              	.LBB589:
 628              	.LBI589:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 629              		.loc 8 24 5 is_stmt 1 view .LVU148
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 630              		.loc 8 24 5 is_stmt 0 view .LVU149
 631              	.LBE589:
 632              	.LBE586:
 633              	.LBE585:
 634              	.LBB590:
 635              	.LBI590:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 636              		.loc 7 17 5 is_stmt 1 view .LVU150
 637              	.LBB591:
 638              	.LBB592:
 639              	.LBI592:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 640              		.loc 8 24 5 view .LVU151
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 641              		.loc 8 24 5 is_stmt 0 view .LVU152
 642              	.LBE592:
 643              	.LBB593:
 644              	.LBI593:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 645              		.loc 8 24 5 is_stmt 1 view .LVU153
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 646              		.loc 8 24 5 is_stmt 0 view .LVU154
 647              	.LBE593:
 648              	.LBB594:
 649              	.LBI594:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 650              		.loc 8 24 5 is_stmt 1 view .LVU155
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 48


  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 651              		.loc 8 24 5 is_stmt 0 view .LVU156
 652              	.LBE594:
 653              	.LBE591:
 654              	.LBE590:
 655              	.LBB595:
 656              	.LBI538:
 155:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 657              		.loc 4 155 5 is_stmt 1 view .LVU157
 658              	.LBB573:
 659              	.LBB543:
 660              	.LBI540:
 661              		.loc 4 158 12 view .LVU158
 662              	.LBB542:
 663 0020 FFF7FEFF 		bl	_ZN5daisy17MidiUartTransport6ConfigC1Ev
 664              	.LVL16:
 665              		.loc 4 158 12 is_stmt 0 view .LVU159
 666              	.LBE542:
 667              	.LBE543:
 668              	.LBB544:
 669              	.LBI544:
  31:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 670              		.loc 4 31 5 is_stmt 1 view .LVU160
 671              	.LBB545:
 672              	.LBB546:
 673              	.LBI546:
 674              		.file 30 "../libDaisy/src/per/uart.h"
   1:../libDaisy/src/per/uart.h **** /* 
   2:../libDaisy/src/per/uart.h **** TODO
   3:../libDaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   4:../libDaisy/src/per/uart.h **** */
   5:../libDaisy/src/per/uart.h **** 
   6:../libDaisy/src/per/uart.h **** #pragma once
   7:../libDaisy/src/per/uart.h **** #ifndef DSY_UART_H
   8:../libDaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
   9:../libDaisy/src/per/uart.h **** #include "daisy_core.h"
  10:../libDaisy/src/per/uart.h **** 
  11:../libDaisy/src/per/uart.h **** 
  12:../libDaisy/src/per/uart.h **** namespace daisy
  13:../libDaisy/src/per/uart.h **** {
  14:../libDaisy/src/per/uart.h **** /** @addtogroup serial
  15:../libDaisy/src/per/uart.h ****     @{
  16:../libDaisy/src/per/uart.h ****     */
  17:../libDaisy/src/per/uart.h **** 
  18:../libDaisy/src/per/uart.h **** /** 
  19:../libDaisy/src/per/uart.h ****     Uart Peripheral
  20:../libDaisy/src/per/uart.h ****     @author shensley
  21:../libDaisy/src/per/uart.h ****     @date March 2020
  22:../libDaisy/src/per/uart.h ****     */
  23:../libDaisy/src/per/uart.h **** class UartHandler
  24:../libDaisy/src/per/uart.h **** {
  25:../libDaisy/src/per/uart.h ****   public:
  26:../libDaisy/src/per/uart.h ****     struct Config
  27:../libDaisy/src/per/uart.h ****     {
  28:../libDaisy/src/per/uart.h ****         enum class Peripheral
  29:../libDaisy/src/per/uart.h ****         {
  30:../libDaisy/src/per/uart.h ****             USART_1,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 49


  31:../libDaisy/src/per/uart.h ****             USART_2,
  32:../libDaisy/src/per/uart.h ****             USART_3,
  33:../libDaisy/src/per/uart.h ****             UART_4,
  34:../libDaisy/src/per/uart.h ****             UART_5,
  35:../libDaisy/src/per/uart.h ****             USART_6,
  36:../libDaisy/src/per/uart.h ****             UART_7,
  37:../libDaisy/src/per/uart.h ****             UART_8,
  38:../libDaisy/src/per/uart.h ****             LPUART_1,
  39:../libDaisy/src/per/uart.h ****         };
  40:../libDaisy/src/per/uart.h **** 
  41:../libDaisy/src/per/uart.h ****         enum class StopBits
  42:../libDaisy/src/per/uart.h ****         {
  43:../libDaisy/src/per/uart.h ****             BITS_0_5,
  44:../libDaisy/src/per/uart.h ****             BITS_1,
  45:../libDaisy/src/per/uart.h ****             BITS_1_5,
  46:../libDaisy/src/per/uart.h ****             BITS_2,
  47:../libDaisy/src/per/uart.h ****         };
  48:../libDaisy/src/per/uart.h **** 
  49:../libDaisy/src/per/uart.h ****         enum class Parity
  50:../libDaisy/src/per/uart.h ****         {
  51:../libDaisy/src/per/uart.h ****             NONE,
  52:../libDaisy/src/per/uart.h ****             EVEN,
  53:../libDaisy/src/per/uart.h ****             ODD,
  54:../libDaisy/src/per/uart.h ****         };
  55:../libDaisy/src/per/uart.h **** 
  56:../libDaisy/src/per/uart.h ****         enum class Mode
  57:../libDaisy/src/per/uart.h ****         {
  58:../libDaisy/src/per/uart.h ****             RX,
  59:../libDaisy/src/per/uart.h ****             TX,
  60:../libDaisy/src/per/uart.h ****             TX_RX,
  61:../libDaisy/src/per/uart.h ****         };
  62:../libDaisy/src/per/uart.h **** 
  63:../libDaisy/src/per/uart.h ****         enum class WordLength
  64:../libDaisy/src/per/uart.h ****         {
  65:../libDaisy/src/per/uart.h ****             BITS_7,
  66:../libDaisy/src/per/uart.h ****             BITS_8,
  67:../libDaisy/src/per/uart.h ****             BITS_9,
  68:../libDaisy/src/per/uart.h ****         };
  69:../libDaisy/src/per/uart.h **** 
  70:../libDaisy/src/per/uart.h ****         struct
  71:../libDaisy/src/per/uart.h ****         {
  72:../libDaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  73:../libDaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  74:../libDaisy/src/per/uart.h ****         } pin_config;        /**< & */
  75:../libDaisy/src/per/uart.h **** 
  76:../libDaisy/src/per/uart.h ****         Config()
  77:../libDaisy/src/per/uart.h ****         {
  78:../libDaisy/src/per/uart.h ****             // user must init periph, pin_config, and mode
  79:../libDaisy/src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  80:../libDaisy/src/per/uart.h ****             parity     = Parity::NONE;
  81:../libDaisy/src/per/uart.h ****             wordlength = WordLength::BITS_8;
  82:../libDaisy/src/per/uart.h ****             baudrate   = 31250;
  83:../libDaisy/src/per/uart.h ****         }
  84:../libDaisy/src/per/uart.h **** 
  85:../libDaisy/src/per/uart.h ****         Peripheral periph;
  86:../libDaisy/src/per/uart.h ****         StopBits   stopbits;
  87:../libDaisy/src/per/uart.h ****         Parity     parity;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 50


  88:../libDaisy/src/per/uart.h ****         Mode       mode;
  89:../libDaisy/src/per/uart.h ****         WordLength wordlength;
  90:../libDaisy/src/per/uart.h ****         uint32_t   baudrate;
  91:../libDaisy/src/per/uart.h ****     };
  92:../libDaisy/src/per/uart.h **** 
  93:../libDaisy/src/per/uart.h **** 
  94:../libDaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 675              		.loc 30 94 5 view .LVU161
 676              		.loc 30 94 5 is_stmt 0 view .LVU162
 677              	.LBE546:
 678              	.LBE545:
 679              	.LBE544:
 680              	.LBB551:
 681              	.LBI551:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 682              		.loc 6 18 5 is_stmt 1 view .LVU163
 683              	.LBB552:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 684              		.loc 6 18 17 is_stmt 0 view .LVU164
 685 0024 3D4B     		ldr	r3, .L12+16
 686              	.LBE552:
 687              	.LBE551:
 688              	.LBE573:
 689              	.LBE595:
 690              	.LBE599:
 691              	.LBE604:
  28:main.cpp      **** FIL file;
 692              		.loc 25 28 10 view .LVU165
 693 0026 2046     		mov	r0, r4
 694 0028 3A4A     		ldr	r2, .L12+8
 695              	.LBB605:
 696              	.LBB600:
 697              	.LBB596:
 698              	.LBB574:
 699              	.LBB555:
 700              	.LBB553:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 701              		.loc 6 18 17 view .LVU166
 702 002a C4F83832 		str	r3, [r4, #568]
 703 002e 40F20F73 		movw	r3, #1807
 704              	.LBE553:
 705              	.LBE555:
 706              	.LBE574:
 707              	.LBE596:
 708              	.LBE600:
 709              	.LBE605:
  28:main.cpp      **** FIL file;
 710              		.loc 25 28 10 view .LVU167
 711 0032 3B49     		ldr	r1, .L12+20
 712              	.LBB606:
 713              	.LBB601:
 714              	.LBB597:
 715              	.LBB575:
 716              	.LBB556:
 717              	.LBB554:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 718              		.loc 6 18 17 view .LVU168
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 51


 719 0034 A4F83C32 		strh	r3, [r4, #572]	@ movhi
 720              	.LVL17:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 721              		.loc 6 18 17 view .LVU169
 722              	.LBE554:
 723              	.LBE556:
 724              	.LBB557:
 725              	.LBI557:
 299:../libDaisy/src/util/FIFO.h **** {
 300:../libDaisy/src/util/FIFO.h ****   public:
 301:../libDaisy/src/util/FIFO.h ****     /** Creates an empty FIFO */
 302:../libDaisy/src/util/FIFO.h ****     FIFO() : FIFOBase<T>(buffer_, capacity + 1) {}
 726              		.loc 5 302 5 is_stmt 1 view .LVU170
 727              	.LBB558:
 728              	.LBB559:
 729              	.LBI559:
  14:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
 730              		.loc 5 14 5 view .LVU171
 731              	.LBB560:
 732              	.LBB561:
  15:../libDaisy/src/util/FIFO.h ****     {
 733              		.loc 5 15 75 is_stmt 0 view .LVU172
 734 0038 04F51473 		add	r3, r4, #592
 735              	.LBE561:
 736              	.LBE560:
 737              	.LBE559:
 738              	.LBE558:
 739              	.LBE557:
 740              	.LBB570:
 741              	.LBB550:
 742              	.LBB549:
 743              	.LBB547:
 744              	.LBB548:
 745              		.loc 30 94 35 view .LVU173
 746 003c C4F89051 		str	r5, [r4, #400]
 747              	.LBE548:
 748              	.LBE547:
 749              	.LBE549:
 750              	.LBE550:
 751              	.LBE570:
 752              	.LBB571:
 753              	.LBB568:
 754              	.LBB566:
 755              	.LBB564:
 756              	.LBB562:
  15:../libDaisy/src/util/FIFO.h ****     {
 757              		.loc 5 15 75 view .LVU174
 758 0040 C4F84032 		str	r3, [r4, #576]
 759 0044 40F20113 		movw	r3, #257
 760 0048 C4F84C52 		str	r5, [r4, #588]
 761              	.LVL18:
  15:../libDaisy/src/util/FIFO.h ****     {
 762              		.loc 5 15 75 view .LVU175
 763              	.LBE562:
 764              	.LBE564:
 765              	.LBE566:
 766              	.LBE568:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 52


 767              	.LBE571:
 768              	.LBE575:
 769              	.LBE597:
 770              	.LBE601:
 771              	.LBE606:
 772              	.LBB607:
 773              	.LBB608:
 774              	.LBB609:
 775              		.file 31 "AudioFileManager.h"
   1:AudioFileManager.h **** #pragma once
   2:AudioFileManager.h **** #include <stdio.h>
   3:AudioFileManager.h **** #include <stdint.h>
   4:AudioFileManager.h **** #include <vector>
   5:AudioFileManager.h **** #include "daisy_pod.h"
   6:AudioFileManager.h **** #include "constants_utils.h"
   7:AudioFileManager.h **** #include "debug_print.h"
   8:AudioFileManager.h **** 
   9:AudioFileManager.h **** using namespace daisy; 
  10:AudioFileManager.h **** 
  11:AudioFileManager.h **** class AudioFileManager {
  12:AudioFileManager.h ****   public:
  13:AudioFileManager.h ****     AudioFileManager(SdmmcHandler &sd, FatFSInterface &fsi, DaisyPod &pod, FIL *file)
  14:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
  15:AudioFileManager.h ****         left_buf_(nullptr), right_buf_(nullptr) {};
 776              		.loc 31 15 47 view .LVU176
 777 004c 354F     		ldr	r7, .L12+24
 778              	.LBE609:
 779              	.LBE608:
 780              	.LBE607:
 781              	.LBB612:
 782              	.LBB602:
 783              	.LBB598:
 784              	.LBB576:
 785              	.LBB572:
 786              	.LBB569:
 787              	.LBB567:
 788              	.LBB565:
 789              	.LBB563:
  15:../libDaisy/src/util/FIFO.h ****     {
 790              		.loc 5 15 75 view .LVU177
 791 004e C4E99135 		strd	r3, r5, [r4, #580]
 792              	.LBE563:
 793              	.LBE565:
 794              	.LBE567:
 795              	.LBE569:
 796              	.LBE572:
 797              	.LBE576:
 798              	.LBE598:
 799              	.LBE602:
 800              	.LBE612:
  28:main.cpp      **** FIL file;
 801              		.loc 25 28 10 view .LVU178
 802 0052 FFF7FEFF 		bl	__aeabi_atexit
 803              	.LVL19:
 804              	.LBB613:
 805              	.LBI613:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 53


 806              		.loc 1 37 5 is_stmt 1 view .LVU179
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 807              		.loc 1 37 5 is_stmt 0 view .LVU180
 808              	.LBE613:
  31:main.cpp      **** /* software classes to run app */
 809              		.loc 25 31 24 view .LVU181
 810 0056 3449     		ldr	r1, .L12+28
 811 0058 2E4A     		ldr	r2, .L12+8
 812 005a 3448     		ldr	r0, .L12+32
 813 005c FFF7FEFF 		bl	__aeabi_atexit
 814              	.LVL20:
 815              	.LBB614:
 816              	.LBI607:
  13:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
 817              		.loc 31 13 5 is_stmt 1 view .LVU182
 818              	.LBB611:
 819              	.LBB610:
 820              		.loc 31 15 47 is_stmt 0 view .LVU183
 821 0060 334B     		ldr	r3, .L12+36
 822 0062 BD61     		str	r5, [r7, #24]
 823 0064 7E60     		str	r6, [r7, #4]
 824 0066 C7E90234 		strd	r3, r4, [r7, #8]
 825 006a 324B     		ldr	r3, .L12+40
 826 006c C7E90435 		strd	r3, r5, [r7, #16]
 827 0070 07F58053 		add	r3, r7, #4096
 828 0074 DD83     		strh	r5, [r3, #30]	@ movhi
 829              	.LVL21:
 830              		.loc 31 15 47 view .LVU184
 831              	.LBE610:
 832              	.LBE611:
 833              	.LBE614:
 834              	.LBB615:
 835              	.LBI615:
  10:GranularSynth.h ****   public:
  11:GranularSynth.h ****     GranularSynth(DaisyPod& pod) 
 836              		.loc 17 11 5 is_stmt 1 view .LVU185
 837              	.LBB616:
 838              	.LBB617:
  12:GranularSynth.h ****       : pod_(pod), left_buf_(nullptr), right_buf_(nullptr), audio_len_(0),
  13:GranularSynth.h ****         grains_(){}
 839              		.loc 17 13 17 is_stmt 0 view .LVU186
 840 0076 304B     		ldr	r3, .L12+44
 841 0078 C3E90045 		strd	r4, r5, [r3]
 842 007c C3E90255 		strd	r5, r5, [r3, #8]
 843              		.loc 17 13 17 is_stmt 1 view .LVU187
 844 0080 1946     		mov	r1, r3
 845 0082 0525     		movs	r5, #5
 846              	.L10:
 847              	.LVL22:
 848              	.LBB618:
 849              	.LBI618:
 850              		.file 32 "Grain.h"
   1:Grain.h       **** #pragma once
   2:Grain.h       **** 
   3:Grain.h       **** #include "daisy_pod.h"
   4:Grain.h       **** #include "daisysp.h"
   5:Grain.h       **** #include "sample.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 54


   6:Grain.h       **** #include "GrainPhasor.h"
   7:Grain.h       **** 
   8:Grain.h       **** using namespace daisy;
   9:Grain.h       **** using namespace daisysp;
  10:Grain.h       **** 
  11:Grain.h       **** class Grain {
  12:Grain.h       ****   public:
  13:Grain.h       ****     Grain():
 851              		.loc 32 13 5 view .LVU188
 852              	.LBB619:
  14:Grain.h       ****       is_active_(false){}
 853              		.loc 32 14 23 is_stmt 0 view .LVU189
 854 0084 0022     		movs	r2, #0
 855              	.LBB620:
 856              	.LBB621:
 857              		.file 33 "GrainPhasor.h"
   1:GrainPhasor.h **** #include "constants_utils.h"
   2:GrainPhasor.h **** class GrainPhasor {
   3:GrainPhasor.h ****   public:
   4:GrainPhasor.h **** 
   5:GrainPhasor.h ****     GrainPhasor(): 
   6:GrainPhasor.h ****       phase_(0.0f), increment_(0.0f), grain_finished_(false) {};
 858              		.loc 33 6 60 view .LVU190
 859 0086 4FF00008 		mov	r8, #0
 860              	.LBE621:
 861              	.LBE620:
 862              	.LBE619:
 863              	.LBE618:
 864              		.loc 17 13 17 view .LVU191
 865 008a 013D     		subs	r5, r5, #1
 866              	.LBB625:
 867              	.LBB624:
 868              		.loc 32 14 23 view .LVU192
 869 008c 1A74     		strb	r2, [r3, #16]
 870              	.LVL23:
 871              	.LBB623:
 872              	.LBI620:
   5:GrainPhasor.h ****       phase_(0.0f), increment_(0.0f), grain_finished_(false) {};
 873              		.loc 33 5 5 is_stmt 1 view .LVU193
 874              	.LBB622:
 875              		.loc 33 6 60 is_stmt 0 view .LVU194
 876 008e C3F81480 		str	r8, [r3, #20]	@ float
 877 0092 C3F81880 		str	r8, [r3, #24]	@ float
 878 0096 03F81C2F 		strb	r2, [r3, #28]!
 879              	.LVL24:
 880              		.loc 33 6 60 view .LVU195
 881              	.LBE622:
 882              	.LBE623:
 883              	.LBE624:
 884              	.LBE625:
 885              		.loc 17 13 17 is_stmt 1 view .LVU196
 886              		.loc 17 13 17 view .LVU197
 887 009a F3D1     		bne	.L10
 888              	.LBE617:
 889              	.LBE616:
 890              	.LBE615:
 891              	.LBB628:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 55


 892              	.LBB629:
 893              	.LBB630:
  21:GrannyChordApp.h ****             instance_ = this;
 894              		.loc 18 21 44 is_stmt 0 view .LVU198
 895 009c 274E     		ldr	r6, .L12+48
 896              	.LBE630:
 897              	.LBE629:
 898              	.LBE628:
 899              	.LBB659:
 900              	.LBB627:
 901              	.LBB626:
 902              		.loc 17 13 17 view .LVU199
 903 009e C1F8B850 		str	r5, [r1, #184]
 904              	.LVL25:
 905              		.loc 17 13 17 view .LVU200
 906              	.LBE626:
 907              	.LBE627:
 908              	.LBE659:
  34:main.cpp      **** GrannyChordApp app(pod, synth, filemgr, reverb);
 909              		.loc 25 34 22 view .LVU201
 910 00a2 1C4A     		ldr	r2, .L12+8
 911 00a4 2649     		ldr	r1, .L12+52
 912 00a6 2448     		ldr	r0, .L12+44
 913 00a8 FFF7FEFF 		bl	__aeabi_atexit
 914              	.LVL26:
 915              	.LBB660:
 916              	.LBI628:
  18:GrannyChordApp.h ****                 ReverbSc &reverb)
 917              		.loc 18 18 3 is_stmt 1 view .LVU202
 918              	.LBB656:
 919              	.LBB653:
 920              	.LBB631:
 921              	.LBI631:
 922              		.file 34 "../libDaisy/src/util/CpuLoadMeter.h"
   1:../libDaisy/src/util/CpuLoadMeter.h **** #pragma once
   2:../libDaisy/src/util/CpuLoadMeter.h **** 
   3:../libDaisy/src/util/CpuLoadMeter.h **** #include "sys/system.h"
   4:../libDaisy/src/util/CpuLoadMeter.h **** #include <cmath>
   5:../libDaisy/src/util/CpuLoadMeter.h **** 
   6:../libDaisy/src/util/CpuLoadMeter.h **** namespace daisy
   7:../libDaisy/src/util/CpuLoadMeter.h **** {
   8:../libDaisy/src/util/CpuLoadMeter.h **** /** @brief CPU load metering
   9:../libDaisy/src/util/CpuLoadMeter.h ****  *  @author jelliesen
  10:../libDaisy/src/util/CpuLoadMeter.h ****  *  @addtogroup utility
  11:../libDaisy/src/util/CpuLoadMeter.h ****  * 
  12:../libDaisy/src/util/CpuLoadMeter.h ****  *  To measure the CPU load of your audio processing, create a CpuLoadMeter
  13:../libDaisy/src/util/CpuLoadMeter.h ****  *  and initialize it with your block size and sample rate.
  14:../libDaisy/src/util/CpuLoadMeter.h ****  *  Then at the beginning of the audio callback, call `OnBlockStart()`, 
  15:../libDaisy/src/util/CpuLoadMeter.h ****  *  and at the end of the audio callback, call `OnBlockEnd()`.
  16:../libDaisy/src/util/CpuLoadMeter.h ****  *  You can then read out the minimum, maximum and average CPU load.
  17:../libDaisy/src/util/CpuLoadMeter.h ****  */
  18:../libDaisy/src/util/CpuLoadMeter.h **** class CpuLoadMeter
  19:../libDaisy/src/util/CpuLoadMeter.h **** {
  20:../libDaisy/src/util/CpuLoadMeter.h ****   public:
  21:../libDaisy/src/util/CpuLoadMeter.h ****     CpuLoadMeter(){};
 923              		.loc 34 21 5 view .LVU203
 924              		.loc 34 21 5 is_stmt 0 view .LVU204
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 56


 925              	.LBE631:
  21:GrannyChordApp.h ****             instance_ = this;
 926              		.loc 18 21 44 view .LVU205
 927 00ac BC22     		movs	r2, #188
 928 00ae 2249     		ldr	r1, .L12+44
 929 00b0 06F12000 		add	r0, r6, #32
 930 00b4 F461     		str	r4, [r6, #28]
 931 00b6 FFF7FEFF 		bl	memcpy
 932              	.LVL27:
 933 00ba 1C4B     		ldr	r3, .L12+32
 934              	.LBE653:
 935              	.LBE656:
 936              	.LBE660:
  35:main.cpp      **** 
 937              		.loc 25 35 16 view .LVU206
 938 00bc 3046     		mov	r0, r6
 939              	.LBB661:
 940              	.LBB657:
 941              	.LBB654:
  21:GrannyChordApp.h ****             instance_ = this;
 942              		.loc 18 21 44 view .LVU207
 943 00be C6F8DC70 		str	r7, [r6, #220]
 944              	.LVL28:
 945              	.LBB632:
 946              	.LBI632:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 947              		.loc 24 37 5 is_stmt 1 view .LVU208
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 948              		.loc 24 37 5 is_stmt 0 view .LVU209
 949              	.LBE632:
 950              	.LBB633:
 951              	.LBI633:
  24:../DaisySP/Source/Dynamics/limiter.h ****     ~Limiter() {}
 952              		.loc 23 24 5 is_stmt 1 view .LVU210
  24:../DaisySP/Source/Dynamics/limiter.h ****     ~Limiter() {}
 953              		.loc 23 24 5 is_stmt 0 view .LVU211
 954              	.LBE633:
  21:GrannyChordApp.h ****             instance_ = this;
 955              		.loc 18 21 44 view .LVU212
 956 00c2 C6F83C31 		str	r3, [r6, #316]
 957              	.LVL29:
 958              	.LBB634:
 959              	.LBI634:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 960              		.loc 22 22 5 is_stmt 1 view .LVU213
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 961              		.loc 22 22 5 is_stmt 0 view .LVU214
 962              	.LBE634:
 963              	.LBB635:
 964              	.LBI635:
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 965              		.loc 21 29 5 is_stmt 1 view .LVU215
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 966              		.loc 21 29 5 is_stmt 0 view .LVU216
 967              	.LBE635:
 968              	.LBB636:
 969              	.LBI636:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 57


 970              		.file 35 "StereoRotator.h"
   1:StereoRotator.h **** #include <cmath>
   2:StereoRotator.h **** 
   3:StereoRotator.h **** class StereoRotator{
   4:StereoRotator.h ****   public:
   5:StereoRotator.h ****     StereoRotator(){}
 971              		.loc 35 5 5 is_stmt 1 view .LVU217
 972              	.LBB637:
 973              	.LBB638:
 974              		.loc 35 5 20 is_stmt 0 view .LVU218
 975 00c6 1F4B     		ldr	r3, .L12+56
 976 00c8 C6F89481 		str	r8, [r6, #404]	@ float
 977 00cc C6F89831 		str	r3, [r6, #408]	@ float
 978              	.LBE638:
 979              	.LBE637:
 980              	.LBE636:
  21:GrannyChordApp.h ****             instance_ = this;
 981              		.loc 18 21 44 view .LVU219
 982 00d0 06F50043 		add	r3, r6, #32768
 983              	.LBB641:
 984              	.LBB640:
 985              	.LBB639:
 986              		.loc 35 5 20 view .LVU220
 987 00d4 C6F89C81 		str	r8, [r6, #412]	@ float
 988              	.LVL30:
 989              		.loc 35 5 20 view .LVU221
 990              	.LBE639:
 991              	.LBE640:
 992              	.LBE641:
 993              	.LBB642:
 994              	.LBI642:
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 995              		.loc 21 29 5 is_stmt 1 view .LVU222
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 996              		.loc 21 29 5 is_stmt 0 view .LVU223
 997              	.LBE642:
  21:GrannyChordApp.h ****             instance_ = this;
 998              		.loc 18 21 44 view .LVU224
 999 00d8 83F8F854 		strb	r5, [r3, #1272]
 1000 00dc C3F8FC54 		str	r5, [r3, #1276]
 1001 00e0 83F80055 		strb	r5, [r3, #1280]
 1002 00e4 C3F80455 		str	r5, [r3, #1284]
 1003 00e8 C3F80855 		str	r5, [r3, #1288]
 1004 00ec 83F87455 		strb	r5, [r3, #1396]
 1005 00f0 C3F87855 		str	r5, [r3, #1400]
  22:GrannyChordApp.h ****           };
 1006              		.loc 18 22 23 view .LVU225
 1007 00f4 144B     		ldr	r3, .L12+60
  21:GrannyChordApp.h ****             instance_ = this;
 1008              		.loc 18 21 44 view .LVU226
 1009 00f6 C6F8C051 		str	r5, [r6, #448]
 1010              	.LVL31:
 1011              	.LBB643:
 1012              	.LBI643:
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 1013              		.loc 20 36 5 is_stmt 1 view .LVU227
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 58


 1014              		.loc 20 36 5 is_stmt 0 view .LVU228
 1015              	.LBE643:
 1016              	.LBB644:
 1017              	.LBI644:
 1018              		.loc 18 84 12 is_stmt 1 view .LVU229
 1019              	.LBB645:
 1020              	.LBI645:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1021              		.loc 19 26 5 view .LVU230
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1022              		.loc 19 26 5 is_stmt 0 view .LVU231
 1023              	.LBE645:
 1024              	.LBB646:
 1025              	.LBI646:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1026              		.loc 19 26 5 is_stmt 1 view .LVU232
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1027              		.loc 19 26 5 is_stmt 0 view .LVU233
 1028              	.LBE646:
 1029              	.LBB647:
 1030              	.LBI647:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1031              		.loc 19 26 5 is_stmt 1 view .LVU234
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1032              		.loc 19 26 5 is_stmt 0 view .LVU235
 1033              	.LBE647:
 1034              	.LBB648:
 1035              	.LBI648:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1036              		.loc 19 26 5 is_stmt 1 view .LVU236
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1037              		.loc 19 26 5 is_stmt 0 view .LVU237
 1038              	.LBE648:
 1039              	.LBB649:
 1040              	.LBI649:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1041              		.loc 19 26 5 is_stmt 1 view .LVU238
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1042              		.loc 19 26 5 is_stmt 0 view .LVU239
 1043              	.LBE649:
 1044              	.LBB650:
 1045              	.LBI650:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1046              		.loc 19 26 5 is_stmt 1 view .LVU240
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1047              		.loc 19 26 5 is_stmt 0 view .LVU241
 1048              	.LBE650:
 1049              	.LBB651:
 1050              	.LBI651:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1051              		.loc 19 26 5 is_stmt 1 view .LVU242
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1052              		.loc 19 26 5 is_stmt 0 view .LVU243
 1053              	.LBE651:
 1054              	.LBB652:
 1055              	.LBI652:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 59


 1056              		.loc 19 26 5 is_stmt 1 view .LVU244
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1057              		.loc 19 26 5 is_stmt 0 view .LVU245
 1058              	.LBE652:
 1059              	.LBE644:
  22:GrannyChordApp.h ****           };
 1060              		.loc 18 22 13 is_stmt 1 view .LVU246
  22:GrannyChordApp.h ****           };
 1061              		.loc 18 22 23 is_stmt 0 view .LVU247
 1062 00fa 1E60     		str	r6, [r3]
 1063              	.LVL32:
  22:GrannyChordApp.h ****           };
 1064              		.loc 18 22 23 view .LVU248
 1065              	.LBE654:
 1066              	.LBE657:
 1067              	.LBE661:
  35:main.cpp      **** 
 1068              		.loc 25 35 16 view .LVU249
 1069 00fc 054A     		ldr	r2, .L12+8
 1070 00fe 1349     		ldr	r1, .L12+64
 1071              	.LBB662:
 1072              	.LBB658:
 1073              	.LBB655:
  21:GrannyChordApp.h ****             instance_ = this;
 1074              		.loc 18 21 44 view .LVU250
 1075 0100 C6E96E55 		strd	r5, r5, [r6, #440]
 1076              	.LBE655:
 1077              	.LBE658:
 1078              	.LBE662:
 1079              	.LBE663:
 1080              	.LBE665:
 1081              		.loc 25 61 1 view .LVU251
 1082 0104 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1083              		.cfi_restore 14
 1084              		.cfi_restore 8
 1085              		.cfi_restore 7
 1086              		.cfi_restore 6
 1087              		.cfi_restore 5
 1088              		.cfi_restore 4
 1089              		.cfi_def_cfa_offset 0
 1090              	.LBB666:
 1091              	.LBB664:
  35:main.cpp      **** 
 1092              		.loc 25 35 16 view .LVU252
 1093 0108 FFF7FEBF 		b	__aeabi_atexit
 1094              	.LVL33:
 1095              	.L13:
 1096              		.align	2
 1097              	.L12:
 1098 010c 00000000 		.word	.LANCHOR0
 1099 0110 00000000 		.word	pod
 1100 0114 00000000 		.word	__dso_handle
 1101 0118 00000000 		.word	_ZN5daisy12SdmmcHandlerD1Ev
 1102 011c 0080707F 		.word	2138079232
 1103 0120 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 1104 0124 00000000 		.word	filemgr
 1105 0128 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 60


 1106 012c 00000000 		.word	reverb
 1107 0130 00000000 		.word	.LANCHOR1
 1108 0134 00000000 		.word	.LANCHOR2
 1109 0138 00000000 		.word	.LANCHOR3
 1110 013c 00000000 		.word	app
 1111 0140 00000000 		.word	_ZN13GranularSynthD1Ev
 1112 0144 CDCCCC3D 		.word	1036831949
 1113 0148 00000000 		.word	_ZN14GrannyChordApp9instance_E
 1114 014c 00000000 		.word	_ZN14GrannyChordAppD1Ev
 1115              	.LBE664:
 1116              	.LBE666:
 1117              		.cfi_endproc
 1118              	.LFE5508:
 1120              		.section	.init_array,"aw",%init_array
 1121              		.align	2
 1122 0000 00000000 		.word	_GLOBAL__sub_I_left_buf(target1)
 1123              		.global	rng_state
 1124              		.global	app
 1125              		.global	filemgr
 1126              		.global	reverb
 1127              		.global	file
 1128              		.global	pod
 1129              		.global	fsi
 1130              		.global	sd
 1131              		.global	right_buf
 1132              		.global	left_buf
 1133              		.section	.bss._ZL5synth,"aw",%nobits
 1134              		.align	2
 1135              		.set	.LANCHOR3,. + 0
 1138              	_ZL5synth:
 1139 0000 00000000 		.space	188
 1139      00000000 
 1139      00000000 
 1139      00000000 
 1139      00000000 
 1140              		.section	.bss.app,"aw",%nobits
 1141              		.align	2
 1144              	app:
 1145 0000 00000000 		.space	34172
 1145      00000000 
 1145      00000000 
 1145      00000000 
 1145      00000000 
 1146              		.section	.bss.file,"aw",%nobits
 1147              		.align	2
 1148              		.set	.LANCHOR2,. + 0
 1151              	file:
 1152 0000 00000000 		.space	556
 1152      00000000 
 1152      00000000 
 1152      00000000 
 1152      00000000 
 1153              		.section	.bss.filemgr,"aw",%nobits
 1154              		.align	2
 1157              	filemgr:
 1158 0000 00000000 		.space	4148
 1158      00000000 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 61


 1158      00000000 
 1158      00000000 
 1158      00000000 
 1159              		.section	.bss.fsi,"aw",%nobits
 1160              		.align	2
 1161              		.set	.LANCHOR1,. + 0
 1164              	fsi:
 1165 0000 00000000 		.space	1152
 1165      00000000 
 1165      00000000 
 1165      00000000 
 1165      00000000 
 1166              		.section	.bss.pod,"aw",%nobits
 1167              		.align	2
 1170              	pod:
 1171 0000 00000000 		.space	37600
 1171      00000000 
 1171      00000000 
 1171      00000000 
 1171      00000000 
 1172              		.section	.bss.rng_state,"aw",%nobits
 1173              		.align	2
 1176              	rng_state:
 1177 0000 00000000 		.space	4
 1178              		.section	.bss.sd,"aw",%nobits
 1179              		.set	.LANCHOR0,. + 0
 1182              	sd:
 1183 0000 00       		.space	1
 1184              		.section	.sdram_bss,"aw"
 1185              		.align	4
 1188              	reverb:
 1189 0000 00000000 		.space	396104
 1189      00000000 
 1189      00000000 
 1189      00000000 
 1189      00000000 
 1190 60b48 00000000 		.space	8
 1190      00000000 
 1193              	right_buf:
 1194 60b50 00000000 		.space	16777216
 1194      00000000 
 1194      00000000 
 1194      00000000 
 1194      00000000 
 1197              	left_buf:
 1198 1060b50 00000000 		.space	16777216
 1198      00000000 
 1198      00000000 
 1198      00000000 
 1198      00000000 
 1199              		.text
 1200              	.Letext0:
 1201              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1202              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1203              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1204              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1205              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 62


 1206              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1207              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1208              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1209              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1210              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1211              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1212              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 1213              		.file 48 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1214              		.file 49 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1215              		.file 50 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 1216              		.file 51 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1217              		.file 52 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 1218              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 1219              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1220              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1221              		.file 56 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 1222              		.file 57 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1223              		.file 58 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1224              		.file 59 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1225              		.file 60 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1226              		.file 61 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1227              		.file 62 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1228              		.file 63 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1229              		.file 64 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1230              		.file 65 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1231              		.file 66 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1232              		.file 67 "../DaisySP/Source/Control/adenv.h"
 1233              		.file 68 "../DaisySP/Source/Utility/dsp.h"
 1234              		.file 69 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 1235              		.file 70 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/time.h"
 1236              		.file 71 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 1237              		.file 72 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1238              		.file 73 "../DaisySP/Source/Effects/../../../src/sample.h"
 1239              		.file 74 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1240              		.file 75 "../libDaisy/src/daisy_core.h"
 1241              		.file 76 "../libDaisy/src/per/tim.h"
 1242              		.file 77 "../libDaisy/src/hid/MidiEvent.h"
 1243              		.file 78 "../libDaisy/src/hid/logger_impl.h"
 1244              		.file 79 "../libDaisy/src/util/wav_format.h"
 1245              		.file 80 "../libDaisy/src/dev/max11300.h"
 1246              		.file 81 "../libDaisy/src/hid/logger.h"
 1247              		.file 82 "../libDaisy/src/per/gpio.h"
 1248              		.file 83 "../libDaisy/src/dev/sdram.h"
 1249              		.file 84 "../libDaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 1250              		.file 85 "../libDaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 1251              		.file 86 "constants_utils.h"
 1252              		.file 87 "../libDaisy/src/dev/sr_595.h"
 1253              		.file 88 "AppState.h"
 1254              		.file 89 "<built-in>"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:19     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:25     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:25     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:42     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:48     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:48     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:65     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:71     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:71     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:215    .text._ZN13GranularSynthD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:238    .text._ZN14GrannyChordAppD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:244    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:244    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:349    .text.startup.main:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:355    .text.startup.main:0000000000000000 main
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:416    .text.startup.main:000000000000002c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1170   .bss.pod:0000000000000000 pod
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1193   .sdram_bss:0000000000060b50 right_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1197   .sdram_bss:0000000001060b50 left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1144   .bss.app:0000000000000000 app
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:425    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:430    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 _GLOBAL__sub_I_left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1098   .text.startup._GLOBAL__sub_I_left_buf:000000000000010c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1157   .bss.filemgr:0000000000000000 filemgr
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1188   .sdram_bss:0000000000000000 reverb
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1121   .init_array:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1176   .bss.rng_state:0000000000000000 rng_state
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1151   .bss.file:0000000000000000 file
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1164   .bss.fsi:0000000000000000 fsi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1182   .bss.sd:0000000000000000 sd
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1134   .bss._ZL5synth:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1138   .bss._ZL5synth:0000000000000000 _ZL5synth
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1141   .bss.app:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1147   .bss.file:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1154   .bss.filemgr:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1160   .bss.fsi:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1167   .bss.pod:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1173   .bss.rng_state:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1183   .bss.sd:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s:1185   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN7daisysp8ReverbScD5Ev
                           .group:0000000000000000 _ZN5daisy12SdmmcHandlerD5Ev
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev
                           .group:0000000000000000 _ZN13GranularSynthD5Ev
                           .group:0000000000000000 _ZN14GrannyChordAppD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN14GrannyChordApp4InitEPsS0_
_ZN14GrannyChordApp3RunEv
__aeabi_atexit
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cchAxMvZ.s 			page 64


_ZN5daisy17MidiUartTransport6ConfigC1Ev
memcpy
__dso_handle
_ZN14GrannyChordApp9instance_E

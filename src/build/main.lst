ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
  19              		.align	1
  20              		.weak	_ZN7daisysp8ReverbScD2Ev
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZN7daisysp8ReverbScD2Ev:
  26              	.LVL0:
  27              	.LFB3569:
  28              		.file 1 "../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Copyright (c) 2023 Electrosmith, Corp, Sean Costello, Istvan Varga, Paul Batchelor
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** // #define DSY_REVERBSC_MAX_SIZE 49468
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** typedef struct
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 2


  31:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** } ReverbScDl;
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /** Stereo Reverb */
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** class ReverbSc
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****   public:
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ReverbSc() {}
  39:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
  29              		.loc 1 39 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 39 18 is_stmt 0 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE3569:
  39              		.weak	_ZN7daisysp8ReverbScD1Ev
  40              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
  41              		.section	.text._ZN5daisy12SdmmcHandlerD2Ev,"axG",%progbits,_ZN5daisy12SdmmcHandlerD5Ev,comdat
  42              		.align	1
  43              		.weak	_ZN5daisy12SdmmcHandlerD2Ev
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	_ZN5daisy12SdmmcHandlerD2Ev:
  49              	.LVL1:
  50              	.LFB4014:
  51              		.file 2 "../libDaisy/src/per/sdmmc.h"
   1:../libDaisy/src/per/sdmmc.h **** /*
   2:../libDaisy/src/per/sdmmc.h **** TODO: 
   3:../libDaisy/src/per/sdmmc.h **** - Implement configuration (currently all settings are fixed).
   4:../libDaisy/src/per/sdmmc.h **** */
   5:../libDaisy/src/per/sdmmc.h **** #pragma once
   6:../libDaisy/src/per/sdmmc.h **** #ifndef DSY_SDMMC_H
   7:../libDaisy/src/per/sdmmc.h **** #define DSY_SDMMC_H /**< macro */
   8:../libDaisy/src/per/sdmmc.h **** 
   9:../libDaisy/src/per/sdmmc.h **** #include <stdint.h>
  10:../libDaisy/src/per/sdmmc.h **** 
  11:../libDaisy/src/per/sdmmc.h **** 
  12:../libDaisy/src/per/sdmmc.h **** namespace daisy
  13:../libDaisy/src/per/sdmmc.h **** {
  14:../libDaisy/src/per/sdmmc.h **** /** @ingroup peripheral
  15:../libDaisy/src/per/sdmmc.h ****     @{
  16:../libDaisy/src/per/sdmmc.h ****     */
  17:../libDaisy/src/per/sdmmc.h **** 
  18:../libDaisy/src/per/sdmmc.h **** /** Configuration for interfacing with SD cards.
  19:../libDaisy/src/per/sdmmc.h ****  *  Currently only supports operation using FatFS filesystem
  20:../libDaisy/src/per/sdmmc.h ****  * 
  21:../libDaisy/src/per/sdmmc.h ****  *  Only SDMMC1 is supported at this time.
  22:../libDaisy/src/per/sdmmc.h ****  *
  23:../libDaisy/src/per/sdmmc.h ****  *  Pins are fixed to the following:
  24:../libDaisy/src/per/sdmmc.h ****  *  PC12 - SDMMC1 CK
  25:../libDaisy/src/per/sdmmc.h ****  *  PD2  - SDMMC1 CMD
  26:../libDaisy/src/per/sdmmc.h ****  *  PC8  - SDMMC1 D0
  27:../libDaisy/src/per/sdmmc.h ****  *  PC9  - SDMMC1 D1 (optional)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 3


  28:../libDaisy/src/per/sdmmc.h ****  *  PC10 - SDMMC1 D2 (optional)
  29:../libDaisy/src/per/sdmmc.h ****  *  PC11 - SDMMC1 D3 (optional)
  30:../libDaisy/src/per/sdmmc.h **** */
  31:../libDaisy/src/per/sdmmc.h **** class SdmmcHandler
  32:../libDaisy/src/per/sdmmc.h **** {
  33:../libDaisy/src/per/sdmmc.h ****   public:
  34:../libDaisy/src/per/sdmmc.h ****     /** Return values for the SdmmcHandler class */
  35:../libDaisy/src/per/sdmmc.h ****     enum class Result
  36:../libDaisy/src/per/sdmmc.h ****     {
  37:../libDaisy/src/per/sdmmc.h ****         OK,
  38:../libDaisy/src/per/sdmmc.h ****         ERROR,
  39:../libDaisy/src/per/sdmmc.h ****     };
  40:../libDaisy/src/per/sdmmc.h **** 
  41:../libDaisy/src/per/sdmmc.h ****     /** Sets whether 4-bit mode or 1-bit mode is used for the SDMMC */
  42:../libDaisy/src/per/sdmmc.h ****     enum class BusWidth
  43:../libDaisy/src/per/sdmmc.h ****     {
  44:../libDaisy/src/per/sdmmc.h ****         BITS_1, /**< Only 1 bit of data per clock is transferred */
  45:../libDaisy/src/per/sdmmc.h ****         BITS_4, /**< 4-bits of parallel data for each clock pulse */
  46:../libDaisy/src/per/sdmmc.h ****     };
  47:../libDaisy/src/per/sdmmc.h **** 
  48:../libDaisy/src/per/sdmmc.h ****     /** 
  49:../libDaisy/src/per/sdmmc.h ****     Sets the desired clock speed of the SD card bus. \n 
  50:../libDaisy/src/per/sdmmc.h ****     Initialization is always done at or below 400kHz, and then the user speed is set.
  51:../libDaisy/src/per/sdmmc.h ****     */
  52:../libDaisy/src/per/sdmmc.h ****     enum class Speed
  53:../libDaisy/src/per/sdmmc.h ****     {
  54:../libDaisy/src/per/sdmmc.h ****         SLOW, /**< 400kHz, initialization  performed at this rate, before moving to user value */
  55:../libDaisy/src/per/sdmmc.h ****         MEDIUM_SLOW, /**< 12.5MHz - half of standard rate */
  56:../libDaisy/src/per/sdmmc.h ****         STANDARD,    /**< 25MHz - DS (Default Speed for SDMMC) */
  57:../libDaisy/src/per/sdmmc.h ****         FAST,        /**< 50MHz - HS (High Speed signaling) */
  58:../libDaisy/src/per/sdmmc.h ****         VERY_FAST, /**< 100MHz - SDR50 Overclocked rate for maximum transfer rates */
  59:../libDaisy/src/per/sdmmc.h ****     };
  60:../libDaisy/src/per/sdmmc.h **** 
  61:../libDaisy/src/per/sdmmc.h ****     struct Config
  62:../libDaisy/src/per/sdmmc.h ****     {
  63:../libDaisy/src/per/sdmmc.h ****         Speed    speed;
  64:../libDaisy/src/per/sdmmc.h ****         BusWidth width;
  65:../libDaisy/src/per/sdmmc.h ****         bool
  66:../libDaisy/src/per/sdmmc.h ****             clock_powersave; /**< When true, the clock will stop between transfers to save power. *
  67:../libDaisy/src/per/sdmmc.h **** 
  68:../libDaisy/src/per/sdmmc.h ****         /** Configures settings to their default settings */
  69:../libDaisy/src/per/sdmmc.h ****         void Defaults()
  70:../libDaisy/src/per/sdmmc.h ****         {
  71:../libDaisy/src/per/sdmmc.h ****             speed           = Speed::FAST;
  72:../libDaisy/src/per/sdmmc.h ****             width           = BusWidth::BITS_4;
  73:../libDaisy/src/per/sdmmc.h ****             clock_powersave = false;
  74:../libDaisy/src/per/sdmmc.h ****         }
  75:../libDaisy/src/per/sdmmc.h ****     };
  76:../libDaisy/src/per/sdmmc.h **** 
  77:../libDaisy/src/per/sdmmc.h ****     SdmmcHandler() {}
  78:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
  52              		.loc 2 78 5 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              		.loc 2 78 22 is_stmt 0 view .LVU3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 4


  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE4014:
  62              		.weak	_ZN5daisy12SdmmcHandlerD1Ev
  63              		.thumb_set _ZN5daisy12SdmmcHandlerD1Ev,_ZN5daisy12SdmmcHandlerD2Ev
  64              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  65              		.align	1
  66              		.weak	_ZN5daisy8DaisyPodD2Ev
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	_ZN5daisy8DaisyPodD2Ev:
  72              	.LVL2:
  73              	.LFB4851:
  74              		.file 3 "../libDaisy/src/daisy_pod.h"
   1:../libDaisy/src/daisy_pod.h **** #pragma once
   2:../libDaisy/src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../libDaisy/src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../libDaisy/src/daisy_pod.h **** 
   5:../libDaisy/src/daisy_pod.h **** #include "daisy_seed.h"
   6:../libDaisy/src/daisy_pod.h **** 
   7:../libDaisy/src/daisy_pod.h **** namespace daisy
   8:../libDaisy/src/daisy_pod.h **** {
   9:../libDaisy/src/daisy_pod.h **** /**
  10:../libDaisy/src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../libDaisy/src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../libDaisy/src/daisy_pod.h ****     @author Stephen Hensley
  13:../libDaisy/src/daisy_pod.h ****     @date November 2019
  14:../libDaisy/src/daisy_pod.h ****     @ingroup boards
  15:../libDaisy/src/daisy_pod.h **** */
  16:../libDaisy/src/daisy_pod.h **** class DaisyPod
  17:../libDaisy/src/daisy_pod.h **** {
  18:../libDaisy/src/daisy_pod.h ****   public:
  19:../libDaisy/src/daisy_pod.h ****     /** Switches */
  20:../libDaisy/src/daisy_pod.h ****     enum Sw
  21:../libDaisy/src/daisy_pod.h ****     {
  22:../libDaisy/src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../libDaisy/src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../libDaisy/src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../libDaisy/src/daisy_pod.h ****     };
  26:../libDaisy/src/daisy_pod.h **** 
  27:../libDaisy/src/daisy_pod.h ****     /** Knobs */
  28:../libDaisy/src/daisy_pod.h ****     enum Knob
  29:../libDaisy/src/daisy_pod.h ****     {
  30:../libDaisy/src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../libDaisy/src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../libDaisy/src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../libDaisy/src/daisy_pod.h ****     };
  34:../libDaisy/src/daisy_pod.h **** 
  35:../libDaisy/src/daisy_pod.h ****     DaisyPod() {}
  36:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
  75              		.loc 3 36 5 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LBB366:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 5


  81              	.LBI366:
  82              		.file 4 "../libDaisy/src/hid/midi.h"
   1:../libDaisy/src/hid/midi.h **** #pragma once
   2:../libDaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../libDaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../libDaisy/src/hid/midi.h **** 
   5:../libDaisy/src/hid/midi.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi.h **** #include <algorithm>
   8:../libDaisy/src/hid/midi.h **** #include "per/uart.h"
   9:../libDaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  10:../libDaisy/src/hid/midi.h **** #include "util/FIFO.h"
  11:../libDaisy/src/hid/midi.h **** #include "hid/midi_parser.h"
  12:../libDaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  13:../libDaisy/src/hid/midi.h **** #include "sys/dma.h"
  14:../libDaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../libDaisy/src/hid/midi.h **** 
  16:../libDaisy/src/hid/midi.h **** namespace daisy
  17:../libDaisy/src/hid/midi.h **** {
  18:../libDaisy/src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART
  19:../libDaisy/src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../libDaisy/src/hid/midi.h ****  *           There is an additional 2kB of RAM data used within this class
  21:../libDaisy/src/hid/midi.h ****  *           for processing bulk data from the UART peripheral
  22:../libDaisy/src/hid/midi.h ****  *  @ingroup midi
  23:../libDaisy/src/hid/midi.h **** */
  24:../libDaisy/src/hid/midi.h **** class MidiUartTransport
  25:../libDaisy/src/hid/midi.h **** {
  26:../libDaisy/src/hid/midi.h ****   public:
  27:../libDaisy/src/hid/midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  28:../libDaisy/src/hid/midi.h ****                                         size_t   size,
  29:../libDaisy/src/hid/midi.h ****                                         void*    context);
  30:../libDaisy/src/hid/midi.h **** 
  31:../libDaisy/src/hid/midi.h ****     MidiUartTransport() {}
  32:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  33:../libDaisy/src/hid/midi.h **** 
  34:../libDaisy/src/hid/midi.h ****     /** @brief Configuration structure for UART MIDI */
  35:../libDaisy/src/hid/midi.h ****     struct Config
  36:../libDaisy/src/hid/midi.h ****     {
  37:../libDaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  38:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  39:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  40:../libDaisy/src/hid/midi.h **** 
  41:../libDaisy/src/hid/midi.h ****         /** Pointer to buffer for DMA UART rx byte transfer in background.
  42:../libDaisy/src/hid/midi.h ****          *
  43:../libDaisy/src/hid/midi.h ****          *  @details By default this uses a shared buffer in DMA_BUFFER_MEM_SECTION,
  44:../libDaisy/src/hid/midi.h ****          *           which can only be utilized for a single UART peripheral. To
  45:../libDaisy/src/hid/midi.h ****          *           use MIDI with multiple UART peripherals, you must provide your own
  46:../libDaisy/src/hid/midi.h ****          *           buffer, allocated to a DMA-capable memory section.
  47:../libDaisy/src/hid/midi.h ****          */
  48:../libDaisy/src/hid/midi.h ****         uint8_t* rx_buffer;
  49:../libDaisy/src/hid/midi.h **** 
  50:../libDaisy/src/hid/midi.h ****         /** Size in bytes of rx_buffer.
  51:../libDaisy/src/hid/midi.h ****          *
  52:../libDaisy/src/hid/midi.h ****          *  @details This size determines the maximum Rx bytes readable by the UART in the backgrou
  53:../libDaisy/src/hid/midi.h ****          *           By default it's set to the size of the default shared rx_buffer (256 bytes).
  54:../libDaisy/src/hid/midi.h ****          *           While much smaller sizes can be used, data can get missed if the buffer is too
  55:../libDaisy/src/hid/midi.h ****          */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 6


  56:../libDaisy/src/hid/midi.h ****         size_t rx_buffer_size;
  57:../libDaisy/src/hid/midi.h **** 
  58:../libDaisy/src/hid/midi.h ****         Config();
  59:../libDaisy/src/hid/midi.h ****     };
  60:../libDaisy/src/hid/midi.h **** 
  61:../libDaisy/src/hid/midi.h ****     /** @brief Initialization of UART using config struct */
  62:../libDaisy/src/hid/midi.h ****     inline void Init(Config config)
  63:../libDaisy/src/hid/midi.h ****     {
  64:../libDaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  65:../libDaisy/src/hid/midi.h **** 
  66:../libDaisy/src/hid/midi.h ****         //defaults
  67:../libDaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  68:../libDaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  69:../libDaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  70:../libDaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  71:../libDaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  72:../libDaisy/src/hid/midi.h **** 
  73:../libDaisy/src/hid/midi.h ****         //user settings
  74:../libDaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  75:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  76:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  77:../libDaisy/src/hid/midi.h **** 
  78:../libDaisy/src/hid/midi.h ****         rx_buffer      = config.rx_buffer;
  79:../libDaisy/src/hid/midi.h ****         rx_buffer_size = config.rx_buffer_size;
  80:../libDaisy/src/hid/midi.h **** 
  81:../libDaisy/src/hid/midi.h ****         /** zero the buffer to ensure emptiness regardless of source memory */
  82:../libDaisy/src/hid/midi.h ****         std::fill(rx_buffer, rx_buffer + rx_buffer_size, 0);
  83:../libDaisy/src/hid/midi.h **** 
  84:../libDaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  85:../libDaisy/src/hid/midi.h ****     }
  86:../libDaisy/src/hid/midi.h **** 
  87:../libDaisy/src/hid/midi.h ****     /** @brief Start the UART peripheral in listening mode.
  88:../libDaisy/src/hid/midi.h ****      *  This will fill an internal data structure in the background */
  89:../libDaisy/src/hid/midi.h ****     inline void StartRx(MidiRxParseCallback parse_callback, void* context)
  90:../libDaisy/src/hid/midi.h ****     {
  91:../libDaisy/src/hid/midi.h ****         parse_context_  = context;
  92:../libDaisy/src/hid/midi.h ****         parse_callback_ = parse_callback;
  93:../libDaisy/src/hid/midi.h ****         dsy_dma_clear_cache_for_buffer((uint8_t*)this,
  94:../libDaisy/src/hid/midi.h ****                                        sizeof(MidiUartTransport));
  95:../libDaisy/src/hid/midi.h ****         uart_.DmaListenStart(
  96:../libDaisy/src/hid/midi.h ****             rx_buffer, rx_buffer_size, MidiUartTransport::rxCallback, this);
  97:../libDaisy/src/hid/midi.h ****     }
  98:../libDaisy/src/hid/midi.h **** 
  99:../libDaisy/src/hid/midi.h ****     /** @brief returns whether the UART peripheral is actively listening in the background or not *
 100:../libDaisy/src/hid/midi.h ****     inline bool RxActive() { return uart_.IsListening(); }
 101:../libDaisy/src/hid/midi.h **** 
 102:../libDaisy/src/hid/midi.h ****     /** @brief This is a no-op for UART transport - Rx is via DMA callback with circular buffer */
 103:../libDaisy/src/hid/midi.h ****     inline void FlushRx() {}
 104:../libDaisy/src/hid/midi.h **** 
 105:../libDaisy/src/hid/midi.h ****     /** @brief sends the buffer of bytes out of the UART peripheral */
 106:../libDaisy/src/hid/midi.h ****     inline void Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
 107:../libDaisy/src/hid/midi.h **** 
 108:../libDaisy/src/hid/midi.h ****   private:
 109:../libDaisy/src/hid/midi.h ****     UartHandler         uart_;
 110:../libDaisy/src/hid/midi.h ****     uint8_t*            rx_buffer;
 111:../libDaisy/src/hid/midi.h ****     size_t              rx_buffer_size;
 112:../libDaisy/src/hid/midi.h ****     void*               parse_context_;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 7


 113:../libDaisy/src/hid/midi.h ****     MidiRxParseCallback parse_callback_;
 114:../libDaisy/src/hid/midi.h **** 
 115:../libDaisy/src/hid/midi.h ****     /** Static callback for Uart MIDI that occurs when
 116:../libDaisy/src/hid/midi.h ****          *  new data is available from the peripheral.
 117:../libDaisy/src/hid/midi.h ****          *  The new data is transferred from the peripheral to the
 118:../libDaisy/src/hid/midi.h ****          *  MIDI instance's byte FIFO that feeds the MIDI parser.
 119:../libDaisy/src/hid/midi.h ****          *
 120:../libDaisy/src/hid/midi.h ****          *  TODO: Handle UartHandler errors better/at all.
 121:../libDaisy/src/hid/midi.h ****          *  (If there is a UART error, there's not really any recovery
 122:../libDaisy/src/hid/midi.h ****          *  option at the moment)
 123:../libDaisy/src/hid/midi.h ****          */
 124:../libDaisy/src/hid/midi.h ****     static void rxCallback(uint8_t*            data,
 125:../libDaisy/src/hid/midi.h ****                            size_t              size,
 126:../libDaisy/src/hid/midi.h ****                            void*               context,
 127:../libDaisy/src/hid/midi.h ****                            UartHandler::Result res)
 128:../libDaisy/src/hid/midi.h ****     {
 129:../libDaisy/src/hid/midi.h ****         /** Read context as transport type */
 130:../libDaisy/src/hid/midi.h ****         MidiUartTransport* transport
 131:../libDaisy/src/hid/midi.h ****             = reinterpret_cast<MidiUartTransport*>(context);
 132:../libDaisy/src/hid/midi.h ****         if(res == UartHandler::Result::OK)
 133:../libDaisy/src/hid/midi.h ****         {
 134:../libDaisy/src/hid/midi.h ****             if(transport->parse_callback_)
 135:../libDaisy/src/hid/midi.h ****             {
 136:../libDaisy/src/hid/midi.h ****                 transport->parse_callback_(
 137:../libDaisy/src/hid/midi.h ****                     data, size, transport->parse_context_);
 138:../libDaisy/src/hid/midi.h ****             }
 139:../libDaisy/src/hid/midi.h ****         }
 140:../libDaisy/src/hid/midi.h ****     }
 141:../libDaisy/src/hid/midi.h **** };
 142:../libDaisy/src/hid/midi.h **** 
 143:../libDaisy/src/hid/midi.h **** /**
 144:../libDaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n
 145:../libDaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n
 146:../libDaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
 147:../libDaisy/src/hid/midi.h ****     @author shensley
 148:../libDaisy/src/hid/midi.h ****     @date March 2020
 149:../libDaisy/src/hid/midi.h ****     @ingroup midi
 150:../libDaisy/src/hid/midi.h **** */
 151:../libDaisy/src/hid/midi.h **** template <typename Transport>
 152:../libDaisy/src/hid/midi.h **** class MidiHandler
 153:../libDaisy/src/hid/midi.h **** {
 154:../libDaisy/src/hid/midi.h ****   public:
 155:../libDaisy/src/hid/midi.h ****     MidiHandler() {}
 156:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
  83              		.loc 4 156 5 view .LVU5
  84              	.LBB367:
  85              	.LBI367:
  86              		.file 5 "../libDaisy/src/util/FIFO.h"
   1:../libDaisy/src/util/FIFO.h **** #pragma once
   2:../libDaisy/src/util/FIFO.h **** 
   3:../libDaisy/src/util/FIFO.h **** #include <stdint.h>
   4:../libDaisy/src/util/FIFO.h **** #include <stddef.h>
   5:../libDaisy/src/util/FIFO.h **** #include <initializer_list>
   6:../libDaisy/src/util/FIFO.h **** 
   7:../libDaisy/src/util/FIFO.h **** namespace daisy
   8:../libDaisy/src/util/FIFO.h **** {
   9:../libDaisy/src/util/FIFO.h **** /** Capacity-independent base class for FIFO. Use FIFO instead. */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 8


  10:../libDaisy/src/util/FIFO.h **** template <typename T>
  11:../libDaisy/src/util/FIFO.h **** class FIFOBase
  12:../libDaisy/src/util/FIFO.h **** {
  13:../libDaisy/src/util/FIFO.h ****   protected:
  14:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize)
  15:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  16:../libDaisy/src/util/FIFO.h ****     {
  17:../libDaisy/src/util/FIFO.h ****     }
  18:../libDaisy/src/util/FIFO.h **** 
  19:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize, std::initializer_list<T> valuesToAdd)
  20:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  21:../libDaisy/src/util/FIFO.h ****     {
  22:../libDaisy/src/util/FIFO.h ****         PushBack(valuesToAdd);
  23:../libDaisy/src/util/FIFO.h ****     }
  24:../libDaisy/src/util/FIFO.h **** 
  25:../libDaisy/src/util/FIFO.h ****   public:
  26:../libDaisy/src/util/FIFO.h ****     /** Copies all elements from another FIFO */
  27:../libDaisy/src/util/FIFO.h ****     FIFOBase<T>& operator=(const FIFOBase<T>& other)
  28:../libDaisy/src/util/FIFO.h ****     {
  29:../libDaisy/src/util/FIFO.h ****         bufferIn_ = bufferOut_ = 0;
  30:../libDaisy/src/util/FIFO.h ****         if(!other.IsEmpty())
  31:../libDaisy/src/util/FIFO.h ****         {
  32:../libDaisy/src/util/FIFO.h ****             int readPtr = other.bufferOut_;
  33:../libDaisy/src/util/FIFO.h ****             while((readPtr != other.bufferIn_) && (bufferIn_ < bufferSize_))
  34:../libDaisy/src/util/FIFO.h ****             {
  35:../libDaisy/src/util/FIFO.h ****                 buffer_[bufferIn_++] = other.buffer_[readPtr++];
  36:../libDaisy/src/util/FIFO.h ****                 if(readPtr >= other.bufferSize_)
  37:../libDaisy/src/util/FIFO.h ****                     readPtr -= other.bufferSize_;
  38:../libDaisy/src/util/FIFO.h ****             }
  39:../libDaisy/src/util/FIFO.h ****         }
  40:../libDaisy/src/util/FIFO.h ****         return *this;
  41:../libDaisy/src/util/FIFO.h ****     }
  42:../libDaisy/src/util/FIFO.h ****     ~FIFOBase() {}
  43:../libDaisy/src/util/FIFO.h **** 
  44:../libDaisy/src/util/FIFO.h ****     /** Removes all elements from the FIFO */
  45:../libDaisy/src/util/FIFO.h ****     void Clear() { bufferIn_ = bufferOut_ = 0; }
  46:../libDaisy/src/util/FIFO.h **** 
  47:../libDaisy/src/util/FIFO.h ****     /** Adds an element to the back of the buffer, returning true on
  48:../libDaisy/src/util/FIFO.h ****         success */
  49:../libDaisy/src/util/FIFO.h ****     bool PushBack(const T& elementToAdd)
  50:../libDaisy/src/util/FIFO.h ****     {
  51:../libDaisy/src/util/FIFO.h ****         if(!IsFull())
  52:../libDaisy/src/util/FIFO.h ****         {
  53:../libDaisy/src/util/FIFO.h ****             buffer_[bufferIn_++] = elementToAdd;
  54:../libDaisy/src/util/FIFO.h ****             if(bufferIn_ >= bufferSize_)
  55:../libDaisy/src/util/FIFO.h ****                 bufferIn_ -= bufferSize_;
  56:../libDaisy/src/util/FIFO.h ****             return true;
  57:../libDaisy/src/util/FIFO.h ****         }
  58:../libDaisy/src/util/FIFO.h ****         return false;
  59:../libDaisy/src/util/FIFO.h ****     }
  60:../libDaisy/src/util/FIFO.h **** 
  61:../libDaisy/src/util/FIFO.h ****     /** Adds multiple elements and returns the number of elements that were added */
  62:../libDaisy/src/util/FIFO.h ****     int PushBack(std::initializer_list<T> valuesToAdd)
  63:../libDaisy/src/util/FIFO.h ****     {
  64:../libDaisy/src/util/FIFO.h ****         int numAdded = 0;
  65:../libDaisy/src/util/FIFO.h ****         for(const auto& v : valuesToAdd)
  66:../libDaisy/src/util/FIFO.h ****         {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 9


  67:../libDaisy/src/util/FIFO.h ****             if(IsFull())
  68:../libDaisy/src/util/FIFO.h ****                 return numAdded;
  69:../libDaisy/src/util/FIFO.h **** 
  70:../libDaisy/src/util/FIFO.h ****             PushBack(v);
  71:../libDaisy/src/util/FIFO.h ****             numAdded++;
  72:../libDaisy/src/util/FIFO.h ****         }
  73:../libDaisy/src/util/FIFO.h ****         return numAdded;
  74:../libDaisy/src/util/FIFO.h ****     }
  75:../libDaisy/src/util/FIFO.h **** 
  76:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  77:../libDaisy/src/util/FIFO.h ****     T& Back()
  78:../libDaisy/src/util/FIFO.h ****     {
  79:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  80:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  81:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  82:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  83:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  84:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  85:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  86:../libDaisy/src/util/FIFO.h ****     }
  87:../libDaisy/src/util/FIFO.h **** 
  88:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  89:../libDaisy/src/util/FIFO.h ****     const T& Back() const
  90:../libDaisy/src/util/FIFO.h ****     {
  91:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  92:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  93:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  94:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  95:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  96:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  97:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  98:../libDaisy/src/util/FIFO.h ****     }
  99:../libDaisy/src/util/FIFO.h **** 
 100:../libDaisy/src/util/FIFO.h ****     /** removes and returns an element from the front of the buffer */
 101:../libDaisy/src/util/FIFO.h ****     T PopFront()
 102:../libDaisy/src/util/FIFO.h ****     {
 103:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 104:../libDaisy/src/util/FIFO.h ****             return T();
 105:../libDaisy/src/util/FIFO.h ****         else
 106:../libDaisy/src/util/FIFO.h ****         {
 107:../libDaisy/src/util/FIFO.h ****             const auto result = buffer_[bufferOut_];
 108:../libDaisy/src/util/FIFO.h ****             bufferOut_++;
 109:../libDaisy/src/util/FIFO.h ****             if(bufferOut_ >= bufferSize_)
 110:../libDaisy/src/util/FIFO.h ****                 bufferOut_ -= bufferSize_;
 111:../libDaisy/src/util/FIFO.h ****             return result;
 112:../libDaisy/src/util/FIFO.h ****         }
 113:../libDaisy/src/util/FIFO.h ****     }
 114:../libDaisy/src/util/FIFO.h **** 
 115:../libDaisy/src/util/FIFO.h ****     /** returns a copy of the first element */
 116:../libDaisy/src/util/FIFO.h ****     T& Front()
 117:../libDaisy/src/util/FIFO.h ****     {
 118:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 119:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 120:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 121:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 122:../libDaisy/src/util/FIFO.h ****     }
 123:../libDaisy/src/util/FIFO.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 10


 124:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the first element */
 125:../libDaisy/src/util/FIFO.h ****     const T& Front() const
 126:../libDaisy/src/util/FIFO.h ****     {
 127:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 128:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 129:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 130:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 131:../libDaisy/src/util/FIFO.h ****     }
 132:../libDaisy/src/util/FIFO.h **** 
 133:../libDaisy/src/util/FIFO.h ****     /** Returns true if the buffer contains an element equal to the provided value */
 134:../libDaisy/src/util/FIFO.h ****     bool Contains(const T& element)
 135:../libDaisy/src/util/FIFO.h ****     {
 136:../libDaisy/src/util/FIFO.h ****         auto idx = bufferOut_;
 137:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 138:../libDaisy/src/util/FIFO.h ****         {
 139:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 140:../libDaisy/src/util/FIFO.h ****                 return true;
 141:../libDaisy/src/util/FIFO.h ****             idx++;
 142:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 143:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 144:../libDaisy/src/util/FIFO.h ****         }
 145:../libDaisy/src/util/FIFO.h ****         return false;
 146:../libDaisy/src/util/FIFO.h ****     }
 147:../libDaisy/src/util/FIFO.h **** 
 148:../libDaisy/src/util/FIFO.h ****     /** Returns the number of elements in the buffer that are equal to the provided value */
 149:../libDaisy/src/util/FIFO.h ****     size_t CountEqualTo(const T& element)
 150:../libDaisy/src/util/FIFO.h ****     {
 151:../libDaisy/src/util/FIFO.h ****         size_t result = 0;
 152:../libDaisy/src/util/FIFO.h ****         size_t idx    = bufferOut_;
 153:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 154:../libDaisy/src/util/FIFO.h ****         {
 155:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 156:../libDaisy/src/util/FIFO.h ****                 result++;
 157:../libDaisy/src/util/FIFO.h ****             idx++;
 158:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 159:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 160:../libDaisy/src/util/FIFO.h ****         }
 161:../libDaisy/src/util/FIFO.h ****         return result;
 162:../libDaisy/src/util/FIFO.h ****     }
 163:../libDaisy/src/util/FIFO.h **** 
 164:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is empty */
 165:../libDaisy/src/util/FIFO.h ****     bool IsEmpty() const { return bufferIn_ == bufferOut_; }
 166:../libDaisy/src/util/FIFO.h **** 
 167:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is Full */
 168:../libDaisy/src/util/FIFO.h ****     bool IsFull() const { return GetNumElements() == bufferSize_ - 1; }
 169:../libDaisy/src/util/FIFO.h **** 
 170:../libDaisy/src/util/FIFO.h ****     /** returns the number of elements in the buffer */
 171:../libDaisy/src/util/FIFO.h ****     size_t GetNumElements() const
 172:../libDaisy/src/util/FIFO.h ****     {
 173:../libDaisy/src/util/FIFO.h ****         int32_t numElements = bufferIn_ - bufferOut_;
 174:../libDaisy/src/util/FIFO.h ****         if(numElements < 0)
 175:../libDaisy/src/util/FIFO.h ****             numElements += bufferSize_;
 176:../libDaisy/src/util/FIFO.h ****         return size_t(numElements);
 177:../libDaisy/src/util/FIFO.h ****     }
 178:../libDaisy/src/util/FIFO.h **** 
 179:../libDaisy/src/util/FIFO.h ****     /** inserts an element "idx" positions behind the first element and returns true if successful 
 180:../libDaisy/src/util/FIFO.h ****     bool Insert(size_t idx, const T& element)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 11


 181:../libDaisy/src/util/FIFO.h ****     {
 182:../libDaisy/src/util/FIFO.h ****         if(idx > GetNumElements())
 183:../libDaisy/src/util/FIFO.h ****             return false;
 184:../libDaisy/src/util/FIFO.h ****         if(IsFull())
 185:../libDaisy/src/util/FIFO.h ****             return false;
 186:../libDaisy/src/util/FIFO.h ****         if(idx == GetNumElements())
 187:../libDaisy/src/util/FIFO.h ****         {
 188:../libDaisy/src/util/FIFO.h ****             PushBack(element);
 189:../libDaisy/src/util/FIFO.h ****             return true;
 190:../libDaisy/src/util/FIFO.h ****         }
 191:../libDaisy/src/util/FIFO.h ****         // copy last element
 192:../libDaisy/src/util/FIFO.h ****         PushBack(Back());
 193:../libDaisy/src/util/FIFO.h ****         // move remaining elements: n => n+1
 194:../libDaisy/src/util/FIFO.h ****         for(int i = GetNumElements() - 2; i > int(idx); i--)
 195:../libDaisy/src/util/FIFO.h ****             (*this)[i] = (*this)[i - 1];
 196:../libDaisy/src/util/FIFO.h ****         // insert element
 197:../libDaisy/src/util/FIFO.h ****         (*this)[idx] = element;
 198:../libDaisy/src/util/FIFO.h ****         return true;
 199:../libDaisy/src/util/FIFO.h ****     }
 200:../libDaisy/src/util/FIFO.h **** 
 201:../libDaisy/src/util/FIFO.h ****     /** removes the element "idx" positions behind the first element 
 202:../libDaisy/src/util/FIFO.h ****      *  and returns true if successful */
 203:../libDaisy/src/util/FIFO.h ****     bool Remove(size_t idx)
 204:../libDaisy/src/util/FIFO.h ****     {
 205:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 206:../libDaisy/src/util/FIFO.h ****             return false;
 207:../libDaisy/src/util/FIFO.h **** 
 208:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 209:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 210:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 211:../libDaisy/src/util/FIFO.h ****         size_t nextIndex = index + 1;
 212:../libDaisy/src/util/FIFO.h ****         if(nextIndex >= bufferSize_)
 213:../libDaisy/src/util/FIFO.h ****             nextIndex -= bufferSize_;
 214:../libDaisy/src/util/FIFO.h **** 
 215:../libDaisy/src/util/FIFO.h ****         while(nextIndex != bufferIn_)
 216:../libDaisy/src/util/FIFO.h ****         {
 217:../libDaisy/src/util/FIFO.h ****             buffer_[index] = buffer_[nextIndex];
 218:../libDaisy/src/util/FIFO.h ****             index++;
 219:../libDaisy/src/util/FIFO.h ****             nextIndex++;
 220:../libDaisy/src/util/FIFO.h ****             if(index >= bufferSize_)
 221:../libDaisy/src/util/FIFO.h ****                 index -= bufferSize_;
 222:../libDaisy/src/util/FIFO.h ****             if(nextIndex >= bufferSize_)
 223:../libDaisy/src/util/FIFO.h ****                 nextIndex -= bufferSize_;
 224:../libDaisy/src/util/FIFO.h ****         }
 225:../libDaisy/src/util/FIFO.h **** 
 226:../libDaisy/src/util/FIFO.h ****         int32_t nextBufferIn = int32_t(bufferIn_) - 1;
 227:../libDaisy/src/util/FIFO.h ****         if(nextBufferIn < 0)
 228:../libDaisy/src/util/FIFO.h ****             nextBufferIn += bufferSize_;
 229:../libDaisy/src/util/FIFO.h ****         bufferIn_ = size_t(nextBufferIn);
 230:../libDaisy/src/util/FIFO.h **** 
 231:../libDaisy/src/util/FIFO.h ****         return true;
 232:../libDaisy/src/util/FIFO.h ****     }
 233:../libDaisy/src/util/FIFO.h **** 
 234:../libDaisy/src/util/FIFO.h ****     /** removes all elements from the buffer for which
 235:../libDaisy/src/util/FIFO.h ****         (buffer(index) == element) returns true and returns the number of
 236:../libDaisy/src/util/FIFO.h ****         elements that were removed. */
 237:../libDaisy/src/util/FIFO.h ****     size_t RemoveAllEqualTo(const T& element)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 12


 238:../libDaisy/src/util/FIFO.h ****     {
 239:../libDaisy/src/util/FIFO.h ****         size_t numRemoved = 0;
 240:../libDaisy/src/util/FIFO.h ****         int    idx        = GetNumElements() - 1;
 241:../libDaisy/src/util/FIFO.h ****         while(idx >= 0)
 242:../libDaisy/src/util/FIFO.h ****         {
 243:../libDaisy/src/util/FIFO.h ****             if((*this)[idx] == element)
 244:../libDaisy/src/util/FIFO.h ****             {
 245:../libDaisy/src/util/FIFO.h ****                 numRemoved++;
 246:../libDaisy/src/util/FIFO.h ****                 Remove(idx);
 247:../libDaisy/src/util/FIFO.h ****                 // was that the last element?
 248:../libDaisy/src/util/FIFO.h ****                 if(idx == int(GetNumElements()) - 1)
 249:../libDaisy/src/util/FIFO.h ****                     idx--;
 250:../libDaisy/src/util/FIFO.h ****             }
 251:../libDaisy/src/util/FIFO.h ****             else
 252:../libDaisy/src/util/FIFO.h ****                 idx--;
 253:../libDaisy/src/util/FIFO.h ****         }
 254:../libDaisy/src/util/FIFO.h ****         return numRemoved;
 255:../libDaisy/src/util/FIFO.h ****     }
 256:../libDaisy/src/util/FIFO.h **** 
 257:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 258:../libDaisy/src/util/FIFO.h ****     T& operator[](size_t idx)
 259:../libDaisy/src/util/FIFO.h ****     {
 260:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 261:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 262:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 263:../libDaisy/src/util/FIFO.h **** 
 264:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 265:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 266:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 267:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 268:../libDaisy/src/util/FIFO.h ****     }
 269:../libDaisy/src/util/FIFO.h **** 
 270:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 271:../libDaisy/src/util/FIFO.h ****     const T& operator[](size_t idx) const
 272:../libDaisy/src/util/FIFO.h ****     {
 273:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 274:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 275:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 276:../libDaisy/src/util/FIFO.h **** 
 277:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 278:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 279:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 280:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 281:../libDaisy/src/util/FIFO.h ****     }
 282:../libDaisy/src/util/FIFO.h **** 
 283:../libDaisy/src/util/FIFO.h ****     /** returns the total capacity */
 284:../libDaisy/src/util/FIFO.h ****     size_t GetCapacity() const { return bufferSize_ - 1; }
 285:../libDaisy/src/util/FIFO.h **** 
 286:../libDaisy/src/util/FIFO.h ****   private:
 287:../libDaisy/src/util/FIFO.h ****     FIFOBase(const FIFOBase<T>&) {} // non copyable
 288:../libDaisy/src/util/FIFO.h **** 
 289:../libDaisy/src/util/FIFO.h ****   private:
 290:../libDaisy/src/util/FIFO.h ****     T*           buffer_;
 291:../libDaisy/src/util/FIFO.h ****     const size_t bufferSize_;
 292:../libDaisy/src/util/FIFO.h ****     size_t       bufferIn_;
 293:../libDaisy/src/util/FIFO.h ****     size_t       bufferOut_;
 294:../libDaisy/src/util/FIFO.h **** };
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 13


 295:../libDaisy/src/util/FIFO.h **** 
 296:../libDaisy/src/util/FIFO.h **** /** A simple FIFO ring buffer with a fixed size. */
 297:../libDaisy/src/util/FIFO.h **** template <typename T, size_t capacity>
 298:../libDaisy/src/util/FIFO.h **** class FIFO : public FIFOBase<T>
  87              		.loc 5 298 7 view .LVU6
  88              	.LBB368:
  89              	.LBI368:
  42:../libDaisy/src/util/FIFO.h **** 
  90              		.loc 5 42 5 view .LVU7
  42:../libDaisy/src/util/FIFO.h **** 
  91              		.loc 5 42 5 is_stmt 0 view .LVU8
  92              	.LBE368:
  93              	.LBE367:
  94              	.LBB369:
  95              	.LBI369:
  96              		.file 6 "../libDaisy/src/hid/midi_parser.h"
   1:../libDaisy/src/hid/midi_parser.h **** #pragma once
   2:../libDaisy/src/hid/midi_parser.h **** #ifndef DSY_MIDI_PARSER_H
   3:../libDaisy/src/hid/midi_parser.h **** #define DSY_MIDI_PARSER_H
   4:../libDaisy/src/hid/midi_parser.h **** 
   5:../libDaisy/src/hid/midi_parser.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi_parser.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi_parser.h **** #include "hid/MidiEvent.h"
   8:../libDaisy/src/hid/midi_parser.h **** 
   9:../libDaisy/src/hid/midi_parser.h **** namespace daisy
  10:../libDaisy/src/hid/midi_parser.h **** {
  11:../libDaisy/src/hid/midi_parser.h **** /** @brief   Utility class for parsing raw byte streams into MIDI messages
  12:../libDaisy/src/hid/midi_parser.h ****  *  @details Implemented as a state machine designed to parse one byte at a time
  13:../libDaisy/src/hid/midi_parser.h ****  *  @ingroup midi
  14:../libDaisy/src/hid/midi_parser.h ****  */
  15:../libDaisy/src/hid/midi_parser.h **** class MidiParser
  16:../libDaisy/src/hid/midi_parser.h **** {
  17:../libDaisy/src/hid/midi_parser.h ****   public:
  18:../libDaisy/src/hid/midi_parser.h ****     MidiParser(){};
  19:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
  97              		.loc 6 19 5 is_stmt 1 view .LVU9
  98              		.loc 6 19 5 is_stmt 0 view .LVU10
  99              	.LBE369:
 100              	.LBB370:
 101              	.LBI370:
  32:../libDaisy/src/hid/midi.h **** 
 102              		.loc 4 32 5 is_stmt 1 view .LVU11
  32:../libDaisy/src/hid/midi.h **** 
 103              		.loc 4 32 5 is_stmt 0 view .LVU12
 104              	.LBE370:
 105              	.LBE366:
 106              	.LBB371:
 107              	.LBI371:
 108              		.file 7 "../libDaisy/src/hid/rgb_led.h"
   1:../libDaisy/src/hid/rgb_led.h **** #pragma once
   2:../libDaisy/src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../libDaisy/src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../libDaisy/src/hid/rgb_led.h **** #include "hid/led.h"
   5:../libDaisy/src/hid/rgb_led.h **** #include "util/color.h"
   6:../libDaisy/src/hid/rgb_led.h **** 
   7:../libDaisy/src/hid/rgb_led.h **** namespace daisy
   8:../libDaisy/src/hid/rgb_led.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 14


   9:../libDaisy/src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../libDaisy/src/hid/rgb_led.h ****     @{
  11:../libDaisy/src/hid/rgb_led.h **** */
  12:../libDaisy/src/hid/rgb_led.h **** 
  13:../libDaisy/src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../libDaisy/src/hid/rgb_led.h **** class RgbLed
  15:../libDaisy/src/hid/rgb_led.h **** {
  16:../libDaisy/src/hid/rgb_led.h ****   public:
  17:../libDaisy/src/hid/rgb_led.h ****     RgbLed() {}
  18:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 109              		.loc 7 18 5 is_stmt 1 view .LVU13
 110              	.LBB372:
 111              	.LBI372:
 112              		.file 8 "../libDaisy/src/hid/led.h"
   1:../libDaisy/src/hid/led.h **** 
   2:../libDaisy/src/hid/led.h **** #pragma once
   3:../libDaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libDaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libDaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libDaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libDaisy/src/hid/led.h **** 
   8:../libDaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libDaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libDaisy/src/hid/led.h **** */
  11:../libDaisy/src/hid/led.h **** 
  12:../libDaisy/src/hid/led.h **** namespace daisy
  13:../libDaisy/src/hid/led.h **** {
  14:../libDaisy/src/hid/led.h **** /**
  15:../libDaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libDaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libDaisy/src/hid/led.h ****     @author shensley
  18:../libDaisy/src/hid/led.h ****     @date March 2020
  19:../libDaisy/src/hid/led.h ****     @ingroup feedback
  20:../libDaisy/src/hid/led.h **** */
  21:../libDaisy/src/hid/led.h **** class Led
  22:../libDaisy/src/hid/led.h **** {
  23:../libDaisy/src/hid/led.h ****   public:
  24:../libDaisy/src/hid/led.h ****     Led() {}
  25:../libDaisy/src/hid/led.h ****     ~Led() {}
 113              		.loc 8 25 5 view .LVU14
 114              		.loc 8 25 5 is_stmt 0 view .LVU15
 115              	.LBE372:
 116              	.LBB373:
 117              	.LBI373:
 118              		.loc 8 25 5 is_stmt 1 view .LVU16
 119              		.loc 8 25 5 is_stmt 0 view .LVU17
 120              	.LBE373:
 121              	.LBB374:
 122              	.LBI374:
 123              		.loc 8 25 5 is_stmt 1 view .LVU18
 124              		.loc 8 25 5 is_stmt 0 view .LVU19
 125              	.LBE374:
 126              	.LBE371:
 127              	.LBB375:
 128              	.LBI375:
 129              		.loc 7 18 5 is_stmt 1 view .LVU20
 130              	.LBB376:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 15


 131              	.LBI376:
 132              		.loc 8 25 5 view .LVU21
 133              		.loc 8 25 5 is_stmt 0 view .LVU22
 134              	.LBE376:
 135              	.LBB377:
 136              	.LBI377:
 137              		.loc 8 25 5 is_stmt 1 view .LVU23
 138              		.loc 8 25 5 is_stmt 0 view .LVU24
 139              	.LBE377:
 140              	.LBB378:
 141              	.LBI378:
 142              		.loc 8 25 5 is_stmt 1 view .LVU25
 143              		.loc 8 25 5 is_stmt 0 view .LVU26
 144              	.LBE378:
 145              	.LBE375:
 146              	.LBB379:
 147              	.LBI379:
 148              		.file 9 "../libDaisy/src/hid/switch.h"
   1:../libDaisy/src/hid/switch.h **** #pragma once
   2:../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libDaisy/src/hid/switch.h **** 
   8:../libDaisy/src/hid/switch.h **** namespace daisy
   9:../libDaisy/src/hid/switch.h **** {
  10:../libDaisy/src/hid/switch.h **** /** 
  11:../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../libDaisy/src/hid/switch.h **** */
  17:../libDaisy/src/hid/switch.h **** class Switch
  18:../libDaisy/src/hid/switch.h **** {
  19:../libDaisy/src/hid/switch.h ****   public:
  20:../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libDaisy/src/hid/switch.h ****     enum Type
  22:../libDaisy/src/hid/switch.h ****     {
  23:../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libDaisy/src/hid/switch.h ****     };
  26:../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libDaisy/src/hid/switch.h ****     enum Polarity
  28:../libDaisy/src/hid/switch.h ****     {
  29:../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libDaisy/src/hid/switch.h ****     };
  32:../libDaisy/src/hid/switch.h **** 
  33:../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libDaisy/src/hid/switch.h ****     enum Pull
  35:../libDaisy/src/hid/switch.h ****     {
  36:../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libDaisy/src/hid/switch.h ****     };
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 16


  40:../libDaisy/src/hid/switch.h **** 
  41:../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 149              		.loc 9 42 5 is_stmt 1 view .LVU27
 150              		.loc 9 42 5 is_stmt 0 view .LVU28
 151              	.LBE379:
 152              	.LBB380:
 153              	.LBI380:
 154              		.loc 9 42 5 is_stmt 1 view .LVU29
 155              		.loc 9 42 5 is_stmt 0 view .LVU30
 156              	.LBE380:
 157              	.LBB381:
 158              	.LBI381:
 159              		.file 10 "../libDaisy/src/hid/ctrl.h"
   1:../libDaisy/src/hid/ctrl.h **** #pragma once
   2:../libDaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../libDaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../libDaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../libDaisy/src/hid/ctrl.h **** 
   6:../libDaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../libDaisy/src/hid/ctrl.h **** namespace daisy
   8:../libDaisy/src/hid/ctrl.h **** {
   9:../libDaisy/src/hid/ctrl.h **** /**
  10:../libDaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../libDaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../libDaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../libDaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/ctrl.h ****     @date November 2019
  15:../libDaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../libDaisy/src/hid/ctrl.h **** */
  17:../libDaisy/src/hid/ctrl.h **** class AnalogControl
  18:../libDaisy/src/hid/ctrl.h **** {
  19:../libDaisy/src/hid/ctrl.h ****   public:
  20:../libDaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../libDaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../libDaisy/src/hid/ctrl.h ****     /** destructor */
  23:../libDaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
 160              		.loc 10 23 5 is_stmt 1 view .LVU31
 161              		.loc 10 23 5 is_stmt 0 view .LVU32
 162              	.LBE381:
 163              	.LBB382:
 164              	.LBI382:
 165              		.loc 10 23 5 is_stmt 1 view .LVU33
 166              		.loc 10 23 5 is_stmt 0 view .LVU34
 167              	.LBE382:
 168              	.LBB383:
 169              	.LBI383:
 170              		.file 11 "../libDaisy/src/hid/encoder.h"
   1:../libDaisy/src/hid/encoder.h **** #pragma once
   2:../libDaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../libDaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../libDaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../libDaisy/src/hid/encoder.h **** 
   8:../libDaisy/src/hid/encoder.h **** namespace daisy
   9:../libDaisy/src/hid/encoder.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 17


  10:../libDaisy/src/hid/encoder.h **** /** 
  11:../libDaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../libDaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../libDaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/encoder.h ****     @date December 2019
  15:../libDaisy/src/hid/encoder.h ****     @ingroup controls
  16:../libDaisy/src/hid/encoder.h **** */
  17:../libDaisy/src/hid/encoder.h **** class Encoder
  18:../libDaisy/src/hid/encoder.h **** {
  19:../libDaisy/src/hid/encoder.h ****   public:
  20:../libDaisy/src/hid/encoder.h ****     Encoder() {}
  21:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 171              		.loc 11 21 5 is_stmt 1 view .LVU35
 172              	.LBB384:
 173              	.LBI384:
 174              		.loc 9 42 5 view .LVU36
 175              		.loc 9 42 5 is_stmt 0 view .LVU37
 176              	.LBE384:
 177              	.LBE383:
 178              	.LBB385:
 179              	.LBI385:
 180              		.file 12 "../libDaisy/src/daisy_seed.h"
   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 181              		.loc 12 22 5 is_stmt 1 view .LVU38
 182              	.LBB386:
 183              	.LBI386:
 184              		.file 13 "../libDaisy/src/sys/system.h"
   1:../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libDaisy/src/sys/system.h **** 
   4:../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../libDaisy/src/sys/system.h **** 
   6:../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../libDaisy/src/sys/system.h **** 
   9:../libDaisy/src/sys/system.h **** namespace daisy
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 18


  10:../libDaisy/src/sys/system.h **** {
  11:../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../libDaisy/src/sys/system.h ****  **
  15:../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../libDaisy/src/sys/system.h ****  */
  18:../libDaisy/src/sys/system.h **** class System
  19:../libDaisy/src/sys/system.h **** {
  20:../libDaisy/src/sys/system.h ****   public:
  21:../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../libDaisy/src/sys/system.h ****     struct Config
  23:../libDaisy/src/sys/system.h ****     {
  24:../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../libDaisy/src/sys/system.h ****         {
  27:../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../libDaisy/src/sys/system.h ****         };
  30:../libDaisy/src/sys/system.h **** 
  31:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../libDaisy/src/sys/system.h ****          ** */
  35:../libDaisy/src/sys/system.h ****         void Defaults()
  36:../libDaisy/src/sys/system.h ****         {
  37:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../libDaisy/src/sys/system.h ****         }
  42:../libDaisy/src/sys/system.h **** 
  43:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../libDaisy/src/sys/system.h ****          ** */
  47:../libDaisy/src/sys/system.h ****         void Boost()
  48:../libDaisy/src/sys/system.h ****         {
  49:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../libDaisy/src/sys/system.h ****         }
  54:../libDaisy/src/sys/system.h **** 
  55:../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../libDaisy/src/sys/system.h ****     };
  60:../libDaisy/src/sys/system.h **** 
  61:../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../libDaisy/src/sys/system.h ****     {
  64:../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../libDaisy/src/sys/system.h ****         DTCMRAM,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 19


  67:../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../libDaisy/src/sys/system.h ****         SDRAM,
  71:../libDaisy/src/sys/system.h ****         QSPI,
  72:../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../libDaisy/src/sys/system.h ****     };
  74:../libDaisy/src/sys/system.h **** 
  75:../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../libDaisy/src/sys/system.h ****     {
  78:../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../libDaisy/src/sys/system.h ****         {
  80:../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../libDaisy/src/sys/system.h ****         } status;
  85:../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../libDaisy/src/sys/system.h ****         {
  88:../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../libDaisy/src/sys/system.h ****             LAST
  93:../libDaisy/src/sys/system.h ****         } version;
  94:../libDaisy/src/sys/system.h ****     };
  95:../libDaisy/src/sys/system.h **** 
  96:../libDaisy/src/sys/system.h ****     System() {}
  97:../libDaisy/src/sys/system.h ****     ~System() {}
 185              		.loc 13 97 5 view .LVU39
 186              		.loc 13 97 5 is_stmt 0 view .LVU40
 187              	.LBE386:
 188              	.LBB387:
 189              	.LBI387:
 190              		.file 14 "../libDaisy/src/hid/usb.h"
   1:../libDaisy/src/hid/usb.h **** #pragma once
   2:../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libDaisy/src/hid/usb.h **** 
   7:../libDaisy/src/hid/usb.h **** namespace daisy
   8:../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../libDaisy/src/hid/usb.h ****     @{
  10:../libDaisy/src/hid/usb.h **** */
  11:../libDaisy/src/hid/usb.h **** 
  12:../libDaisy/src/hid/usb.h **** {
  13:../libDaisy/src/hid/usb.h **** /** 
  14:../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../libDaisy/src/hid/usb.h **** */
  18:../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../libDaisy/src/hid/usb.h **** {
  20:../libDaisy/src/hid/usb.h ****   public:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 20


  21:../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libDaisy/src/hid/usb.h ****     enum class Result
  23:../libDaisy/src/hid/usb.h ****     {
  24:../libDaisy/src/hid/usb.h ****         OK,
  25:../libDaisy/src/hid/usb.h ****         ERR,
  26:../libDaisy/src/hid/usb.h ****     };
  27:../libDaisy/src/hid/usb.h **** 
  28:../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libDaisy/src/hid/usb.h ****     {
  31:../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libDaisy/src/hid/usb.h ****     };
  35:../libDaisy/src/hid/usb.h **** 
  36:../libDaisy/src/hid/usb.h **** 
  37:../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libDaisy/src/hid/usb.h **** 
  40:../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libDaisy/src/hid/usb.h **** 
  42:../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
 191              		.loc 14 42 5 is_stmt 1 view .LVU41
 192              		.loc 14 42 5 is_stmt 0 view .LVU42
 193              	.LBE387:
 194              	.LBB388:
 195              	.LBI388:
 196              		.file 15 "../libDaisy/src/per/adc.h"
   1:../libDaisy/src/per/adc.h **** #pragma once
   2:../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libDaisy/src/per/adc.h **** 
   9:../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../libDaisy/src/per/adc.h **** 
  11:../libDaisy/src/per/adc.h **** namespace daisy
  12:../libDaisy/src/per/adc.h **** {
  13:../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../libDaisy/src/per/adc.h ****     @{
  15:../libDaisy/src/per/adc.h **** */
  16:../libDaisy/src/per/adc.h **** 
  17:../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libDaisy/src/per/adc.h **** */
  21:../libDaisy/src/per/adc.h **** 
  22:../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../libDaisy/src/per/adc.h ****  *           one channel.
  26:../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../libDaisy/src/per/adc.h ****  *           inputs connected.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 21


  30:../libDaisy/src/per/adc.h **** */
  31:../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../libDaisy/src/per/adc.h **** {
  33:../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../libDaisy/src/per/adc.h ****     {
  36:../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../libDaisy/src/per/adc.h ****     };
  41:../libDaisy/src/per/adc.h **** 
  42:../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../libDaisy/src/per/adc.h ****     {
  45:../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../libDaisy/src/per/adc.h ****     };
  54:../libDaisy/src/per/adc.h **** 
  55:../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../libDaisy/src/per/adc.h ****      */
  59:../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../libDaisy/src/per/adc.h **** 
  61:../libDaisy/src/per/adc.h ****     /** 
  62:../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../libDaisy/src/per/adc.h ****     */
  74:../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../libDaisy/src/per/adc.h **** 
  81:../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../libDaisy/src/per/adc.h **** };
  86:../libDaisy/src/per/adc.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 22


  87:../libDaisy/src/per/adc.h **** /**
  88:../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../libDaisy/src/per/adc.h **** */
  90:../libDaisy/src/per/adc.h **** class AdcHandle
  91:../libDaisy/src/per/adc.h **** {
  92:../libDaisy/src/per/adc.h ****   public:
  93:../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../libDaisy/src/per/adc.h ****     {
  96:../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../libDaisy/src/per/adc.h ****     };
 108:../libDaisy/src/per/adc.h **** 
 109:../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 197              		.loc 15 110 5 is_stmt 1 view .LVU43
 198              		.loc 15 110 5 is_stmt 0 view .LVU44
 199              	.LBE388:
 200              	.LBB389:
 201              	.LBI389:
 202              		.file 16 "../libDaisy/src/hid/audio.h"
   1:../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libDaisy/src/hid/audio.h **** 
   4:../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libDaisy/src/hid/audio.h **** 
   6:../libDaisy/src/hid/audio.h **** namespace daisy
   7:../libDaisy/src/hid/audio.h **** {
   8:../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../libDaisy/src/hid/audio.h ****  */
  22:../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../libDaisy/src/hid/audio.h **** {
  24:../libDaisy/src/hid/audio.h ****   public:
  25:../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../libDaisy/src/hid/audio.h ****     struct Config
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 23


  28:../libDaisy/src/hid/audio.h ****     {
  29:../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../libDaisy/src/hid/audio.h **** 
  32:../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../libDaisy/src/hid/audio.h **** 
  35:../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../libDaisy/src/hid/audio.h ****         float postgain;
  37:../libDaisy/src/hid/audio.h **** 
  38:../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../libDaisy/src/hid/audio.h ****          */
  41:../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../libDaisy/src/hid/audio.h **** 
  43:../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../libDaisy/src/hid/audio.h ****         Config()
  45:../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../libDaisy/src/hid/audio.h ****         {
  50:../libDaisy/src/hid/audio.h ****         }
  51:../libDaisy/src/hid/audio.h ****     };
  52:../libDaisy/src/hid/audio.h **** 
  53:../libDaisy/src/hid/audio.h ****     enum class Result
  54:../libDaisy/src/hid/audio.h ****     {
  55:../libDaisy/src/hid/audio.h ****         OK,
  56:../libDaisy/src/hid/audio.h ****         ERR,
  57:../libDaisy/src/hid/audio.h ****     };
  58:../libDaisy/src/hid/audio.h **** 
  59:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../libDaisy/src/hid/audio.h ****      */
  63:../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../libDaisy/src/hid/audio.h **** 
  65:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../libDaisy/src/hid/audio.h ****      */
  68:../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../libDaisy/src/hid/audio.h **** 
  70:../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../libDaisy/src/hid/audio.h ****      */
  73:../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../libDaisy/src/hid/audio.h **** 
  77:../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../libDaisy/src/hid/audio.h ****     */
  81:../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../libDaisy/src/hid/audio.h **** 
  83:../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 24


  85:../libDaisy/src/hid/audio.h ****     */
  86:../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../libDaisy/src/hid/audio.h **** 
  88:../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../libDaisy/src/hid/audio.h ****      */
  91:../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../libDaisy/src/hid/audio.h **** 
  95:../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 203              		.loc 16 96 5 is_stmt 1 view .LVU45
 204              		.loc 16 96 5 is_stmt 0 view .LVU46
 205              	.LBE389:
 206              	.LBE385:
 207              		.loc 3 36 18 view .LVU47
 208 0000 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE4851:
 212              		.weak	_ZN5daisy8DaisyPodD1Ev
 213              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 214              		.section	.text._ZN13GranularSynthD2Ev,"axG",%progbits,_ZN13GranularSynthD5Ev,comdat
 215              		.align	1
 216              		.weak	_ZN13GranularSynthD2Ev
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	_ZN13GranularSynthD2Ev:
 222              	.LVL3:
 223              	.LFB4903:
 224              		.file 17 "GranularSynth.h"
   1:GranularSynth.h **** #pragma once
   2:GranularSynth.h **** 
   3:GranularSynth.h **** #include "Grain.h"
   4:GranularSynth.h **** #include "daisy_pod.h"
   5:GranularSynth.h **** #include "debug_print.h"
   6:GranularSynth.h **** #include <vector>
   7:GranularSynth.h **** 
   8:GranularSynth.h **** class GranularSynth{
 225              		.loc 17 8 7 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LBB390:
 231              	.LBI390:
 232              		.file 18 "../DaisySP/Source/Utility/smooth_random.h"
   1:../DaisySP/Source/Utility/smooth_random.h **** /*
   2:../DaisySP/Source/Utility/smooth_random.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Utility/smooth_random.h **** 
   4:../DaisySP/Source/Utility/smooth_random.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Utility/smooth_random.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Utility/smooth_random.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Utility/smooth_random.h **** */
   8:../DaisySP/Source/Utility/smooth_random.h **** 
   9:../DaisySP/Source/Utility/smooth_random.h **** #pragma once
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 25


  10:../DaisySP/Source/Utility/smooth_random.h **** #ifndef DSY_SMOOTHRANDOM_H
  11:../DaisySP/Source/Utility/smooth_random.h **** #define DSY_SMOOTHRANDOM_H
  12:../DaisySP/Source/Utility/smooth_random.h **** 
  13:../DaisySP/Source/Utility/smooth_random.h **** #include "dsp.h"
  14:../DaisySP/Source/Utility/smooth_random.h **** #include <stdint.h>
  15:../DaisySP/Source/Utility/smooth_random.h **** #include <stdlib.h>
  16:../DaisySP/Source/Utility/smooth_random.h **** #ifdef __cplusplus
  17:../DaisySP/Source/Utility/smooth_random.h **** 
  18:../DaisySP/Source/Utility/smooth_random.h **** /** @file smooth_random.h */
  19:../DaisySP/Source/Utility/smooth_random.h **** 
  20:../DaisySP/Source/Utility/smooth_random.h **** namespace daisysp
  21:../DaisySP/Source/Utility/smooth_random.h **** {
  22:../DaisySP/Source/Utility/smooth_random.h **** /**  
  23:../DaisySP/Source/Utility/smooth_random.h ****     @brief Smooth random generator for internal modulation. \n
  24:../DaisySP/Source/Utility/smooth_random.h ****     @author Ported by Ben Sergentanis 
  25:../DaisySP/Source/Utility/smooth_random.h ****     @date Jan 2021 
  26:../DaisySP/Source/Utility/smooth_random.h ****     Ported from pichenettes/eurorack/plaits/dsp/noise/smooth_random_generator.h \n
  27:../DaisySP/Source/Utility/smooth_random.h ****     to an independent module. \n
  28:../DaisySP/Source/Utility/smooth_random.h ****     Original code written by Emilie Gillet in 2016. \n
  29:../DaisySP/Source/Utility/smooth_random.h **** */
  30:../DaisySP/Source/Utility/smooth_random.h **** class SmoothRandomGenerator
  31:../DaisySP/Source/Utility/smooth_random.h **** {
  32:../DaisySP/Source/Utility/smooth_random.h ****   public:
  33:../DaisySP/Source/Utility/smooth_random.h ****     SmoothRandomGenerator() {}
  34:../DaisySP/Source/Utility/smooth_random.h ****     ~SmoothRandomGenerator() {}
 233              		.loc 18 34 5 view .LVU49
 234              		.loc 18 34 5 is_stmt 0 view .LVU50
 235              	.LBE390:
 236              		.loc 17 8 7 view .LVU51
 237 0000 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE4903:
 241              		.weak	_ZN13GranularSynthD1Ev
 242              		.thumb_set _ZN13GranularSynthD1Ev,_ZN13GranularSynthD2Ev
 243              		.section	.text._ZN14GrannyChordAppD2Ev,"axG",%progbits,_ZN14GrannyChordAppD5Ev,comdat
 244              		.align	1
 245              		.weak	_ZN14GrannyChordAppD2Ev
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	_ZN14GrannyChordAppD2Ev:
 251              	.LVL4:
 252              	.LFB5505:
 253              		.file 19 "GrannyChordApp.h"
   1:GrannyChordApp.h **** #pragma once 
   2:GrannyChordApp.h **** #include "daisy_pod.h"
   3:GrannyChordApp.h **** #include "daisysp.h"
   4:GrannyChordApp.h **** #include "GranularSynth.h"
   5:GrannyChordApp.h **** #include "AudioFileManager.h"
   6:GrannyChordApp.h **** #include "constants_utils.h"
   7:GrannyChordApp.h **** #include "debug_print.h"
   8:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/reverb.h"
   9:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/compressor.h"
  10:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/moogladder.h"
  11:GrannyChordApp.h **** #include "StereoRotator.h"
  12:GrannyChordApp.h **** #include "AppState.h"
  13:GrannyChordApp.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 26


  14:GrannyChordApp.h **** using namespace daisy;
  15:GrannyChordApp.h **** using namespace daisysp;
  16:GrannyChordApp.h **** 
  17:GrannyChordApp.h **** class GrannyChordApp {
 254              		.loc 19 17 7 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LBB391:
 260              	.LBI391:
  18:GrannyChordApp.h ****   public:
  19:GrannyChordApp.h ****   GrannyChordApp(DaisyPod& pod, GranularSynth& synth, AudioFileManager& filemgr, ReverbSc &reverb)
  20:GrannyChordApp.h ****         : pod_(pod), synth_(synth), 
  21:GrannyChordApp.h ****           filemgr_(filemgr), reverb_(reverb){
  22:GrannyChordApp.h ****             instance_ = this;
  23:GrannyChordApp.h ****           };
  24:GrannyChordApp.h **** 
  25:GrannyChordApp.h ****     void Init(int16_t *left, int16_t *right);
  26:GrannyChordApp.h ****     void Run();
  27:GrannyChordApp.h **** 
  28:GrannyChordApp.h ****     CpuLoadMeter loadmeter;
  29:GrannyChordApp.h **** 
  30:GrannyChordApp.h ****     static void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t si
  31:GrannyChordApp.h ****     void ProcessAudio(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size);
  32:GrannyChordApp.h ****     static GrannyChordApp* instance_;
  33:GrannyChordApp.h **** 
  34:GrannyChordApp.h ****   private:
  35:GrannyChordApp.h ****     DaisyPod &pod_;
  36:GrannyChordApp.h ****     GranularSynth synth_;
  37:GrannyChordApp.h ****     AudioFileManager &filemgr_;
  38:GrannyChordApp.h ****     FIL *file_;
  39:GrannyChordApp.h **** 
  40:GrannyChordApp.h ****     /* UI and state objects */
  41:GrannyChordApp.h ****     AppState curr_state_;
  42:GrannyChordApp.h ****     AppState next_state_;
  43:GrannyChordApp.h ****     SynthMode curr_synth_mode_;
  44:GrannyChordApp.h ****     SynthMode prev_synth_mode_;
  45:GrannyChordApp.h ****     bool knob1_latched;
  46:GrannyChordApp.h ****     bool knob2_latched;
  47:GrannyChordApp.h **** 
  48:GrannyChordApp.h **** 
  49:GrannyChordApp.h ****     /* audio FX and filters */
  50:GrannyChordApp.h ****     Compressor comp_;
  51:GrannyChordApp.h ****     Limiter limiter_;
  52:GrannyChordApp.h ****     ReverbSc& reverb_;
  53:GrannyChordApp.h ****     Chorus chorus_;
  54:GrannyChordApp.h ****     MoogLadder lowpass_moog_;
  55:GrannyChordApp.h ****     OnePole hipass_;
  56:GrannyChordApp.h ****     StereoRotator rotator_;
  57:GrannyChordApp.h ****     /* filter to reduce high end noise */
  58:GrannyChordApp.h ****     OnePole hicut_;
  59:GrannyChordApp.h **** 
  60:GrannyChordApp.h ****     /* audio data channel buffers */
  61:GrannyChordApp.h ****     int16_t *left_buf_;
  62:GrannyChordApp.h ****     int16_t *right_buf_;
  63:GrannyChordApp.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 27


  64:GrannyChordApp.h ****     int file_idx_ = 0;
  65:GrannyChordApp.h ****     size_t wav_playhead_ = 0;
  66:GrannyChordApp.h ****     uint32_t audio_len_ = 0;
  67:GrannyChordApp.h ****     char fname_[MAX_FNAME_LEN];
  68:GrannyChordApp.h **** 
  69:GrannyChordApp.h ****     /* previous values for parameters controlled by knob 1*/
  70:GrannyChordApp.h ****     float prev_param_k1[NUM_SYNTH_MODES] = {0};
  71:GrannyChordApp.h ****     float prev_param_k2[NUM_SYNTH_MODES] = {0};
  72:GrannyChordApp.h **** 
  73:GrannyChordApp.h ****     /* stored previous knob values for passthru mode */
  74:GrannyChordApp.h ****     // float stored_k1[NUM_SYNTH_MODES] = {0.5f};
  75:GrannyChordApp.h ****     // float stored_k2[NUM_SYNTH_MODES] = {0.5f};
  76:GrannyChordApp.h ****     // bool pass_thru_k1 = false;
  77:GrannyChordApp.h ****     // bool pass_thru_k2 = false;
  78:GrannyChordApp.h **** 
  79:GrannyChordApp.h ****     /* objects/variables for recording in and out */
  80:GrannyChordApp.h ****     WavWriter<16384> sd_writer_;
  81:GrannyChordApp.h ****     bool recorded_in_ = false;
  82:GrannyChordApp.h ****     size_t record_in_pos_ = 0;
  83:GrannyChordApp.h ****     bool recording_out_ = false;
  84:GrannyChordApp.h ****     size_t recording_count_ = 0;
  85:GrannyChordApp.h ****     size_t loop_count=0;
  86:GrannyChordApp.h ****     float temp_interleaved_buf_[2];
  87:GrannyChordApp.h **** 
  88:GrannyChordApp.h ****     /* hardware input handler variables */
  89:GrannyChordApp.h ****     size_t last_action_time_ = 0;
  90:GrannyChordApp.h ****     /* these bools track whether the button has just been long pressed
  91:GrannyChordApp.h ****       vs whether it's already known to be pressed down */
  92:GrannyChordApp.h ****     bool btn1_long_press_fired_ = false;
  93:GrannyChordApp.h ****     bool btn2_long_press_fired_ = false;
  94:GrannyChordApp.h ****     bool both_btns_long_press_fired_ = false;
  95:GrannyChordApp.h **** 
  96:GrannyChordApp.h ****     struct Colours{
 261              		.loc 19 96 12 view .LVU53
 262              	.LBB392:
 263              	.LBI392:
 264              		.file 20 "../libDaisy/src/util/color.h"
   1:../libDaisy/src/util/color.h **** /* 
   2:../libDaisy/src/util/color.h **** TODO:
   3:../libDaisy/src/util/color.h **** - Add Blend(), Scale(), etc.
   4:../libDaisy/src/util/color.h **** - I'd also like to change the way the Color names are accessed.
   5:../libDaisy/src/util/color.h **** */
   6:../libDaisy/src/util/color.h **** /**        I'd like for it to be easy and not `Color::PresetColor::Foo`
   7:../libDaisy/src/util/color.h **** */
   8:../libDaisy/src/util/color.h **** /** - There's no way to change a color once its been created (without unintuitively reiniting it).
   9:../libDaisy/src/util/color.h **** */
  10:../libDaisy/src/util/color.h **** #pragma once
  11:../libDaisy/src/util/color.h **** #ifndef DSY_COLOR_H
  12:../libDaisy/src/util/color.h **** #define DSY_COLOR_H
  13:../libDaisy/src/util/color.h **** #include <stdint.h>
  14:../libDaisy/src/util/color.h **** 
  15:../libDaisy/src/util/color.h **** 
  16:../libDaisy/src/util/color.h **** namespace daisy
  17:../libDaisy/src/util/color.h **** {
  18:../libDaisy/src/util/color.h **** /** @addtogroup utility
  19:../libDaisy/src/util/color.h ****     @{
  20:../libDaisy/src/util/color.h **** */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 28


  21:../libDaisy/src/util/color.h **** 
  22:../libDaisy/src/util/color.h **** /** Class for handling simple colors */
  23:../libDaisy/src/util/color.h **** class Color
  24:../libDaisy/src/util/color.h **** {
  25:../libDaisy/src/util/color.h ****   public:
  26:../libDaisy/src/util/color.h ****     Color() {}
  27:../libDaisy/src/util/color.h ****     ~Color() {}
 265              		.loc 20 27 5 view .LVU54
 266              		.loc 20 27 5 is_stmt 0 view .LVU55
 267              	.LBE392:
 268              	.LBB393:
 269              	.LBI393:
 270              		.loc 20 27 5 is_stmt 1 view .LVU56
 271              		.loc 20 27 5 is_stmt 0 view .LVU57
 272              	.LBE393:
 273              	.LBB394:
 274              	.LBI394:
 275              		.loc 20 27 5 is_stmt 1 view .LVU58
 276              		.loc 20 27 5 is_stmt 0 view .LVU59
 277              	.LBE394:
 278              	.LBB395:
 279              	.LBI395:
 280              		.loc 20 27 5 is_stmt 1 view .LVU60
 281              		.loc 20 27 5 is_stmt 0 view .LVU61
 282              	.LBE395:
 283              	.LBB396:
 284              	.LBI396:
 285              		.loc 20 27 5 is_stmt 1 view .LVU62
 286              		.loc 20 27 5 is_stmt 0 view .LVU63
 287              	.LBE396:
 288              	.LBB397:
 289              	.LBI397:
 290              		.loc 20 27 5 is_stmt 1 view .LVU64
 291              		.loc 20 27 5 is_stmt 0 view .LVU65
 292              	.LBE397:
 293              	.LBB398:
 294              	.LBI398:
 295              		.loc 20 27 5 is_stmt 1 view .LVU66
 296              		.loc 20 27 5 is_stmt 0 view .LVU67
 297              	.LBE398:
 298              	.LBB399:
 299              	.LBI399:
 300              		.loc 20 27 5 is_stmt 1 view .LVU68
 301              		.loc 20 27 5 is_stmt 0 view .LVU69
 302              	.LBE399:
 303              	.LBE391:
 304              	.LBB400:
 305              	.LBI400:
 306              		.file 21 "../libDaisy/src/util/WavWriter.h"
   1:../libDaisy/src/util/WavWriter.h **** #pragma once
   2:../libDaisy/src/util/WavWriter.h **** #pragma once
   3:../libDaisy/src/util/WavWriter.h **** #include "fatfs.h"
   4:../libDaisy/src/util/WavWriter.h **** 
   5:../libDaisy/src/util/WavWriter.h **** namespace daisy
   6:../libDaisy/src/util/WavWriter.h **** {
   7:../libDaisy/src/util/WavWriter.h **** /** Audio Recording Module
   8:../libDaisy/src/util/WavWriter.h ****  ** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 29


   9:../libDaisy/src/util/WavWriter.h ****  ** Record audio into a working buffer that is gradually written to a WAV file on an SD Card. 
  10:../libDaisy/src/util/WavWriter.h ****  **
  11:../libDaisy/src/util/WavWriter.h ****  ** Recordings are made with floating point input, and will be converted to the 
  12:../libDaisy/src/util/WavWriter.h ****  ** specified bits per sample internally 
  13:../libDaisy/src/util/WavWriter.h ****  **
  14:../libDaisy/src/util/WavWriter.h ****  ** For now only 16-bit and 32-bit (signed int) formats are supported
  15:../libDaisy/src/util/WavWriter.h ****  ** f32 and s24 formats will be added next
  16:../libDaisy/src/util/WavWriter.h ****  **
  17:../libDaisy/src/util/WavWriter.h ****  ** The transfer size determines the amount of internal memory used, and can have an
  18:../libDaisy/src/util/WavWriter.h ****  ** effect on the performance of the streaming behavior of the WavWriter.
  19:../libDaisy/src/util/WavWriter.h ****  ** Memory use can be calculated as: (2 * transfer_size) bytes
  20:../libDaisy/src/util/WavWriter.h ****  ** Performance optimal with sizes: 16384, 32768
  21:../libDaisy/src/util/WavWriter.h ****  ** 
  22:../libDaisy/src/util/WavWriter.h ****  ** To use:
  23:../libDaisy/src/util/WavWriter.h ****  ** 1. Create a WavWriter<size> object (e.g. WavWriter<32768> writer)
  24:../libDaisy/src/util/WavWriter.h ****  ** 2. Configure the settings as desired by creating a WavWriter<32768>::Config struct and setting 
  25:../libDaisy/src/util/WavWriter.h ****  ** 3. Initialize the object with the configuration struct.
  26:../libDaisy/src/util/WavWriter.h ****  ** 4. Open a new file for writing with: writer.OpenFile("FileName.wav")
  27:../libDaisy/src/util/WavWriter.h ****  ** 5. Write to it within your audio callback using: writer.Sample(value)
  28:../libDaisy/src/util/WavWriter.h ****  ** 6. Fill the Wav File on the SD Card with data from your main loop by running: writer.Write()
  29:../libDaisy/src/util/WavWriter.h ****  ** 7. When finished with the recording finalize, and close the file with: writer.SaveFile();
  30:../libDaisy/src/util/WavWriter.h ****  ** 
  31:../libDaisy/src/util/WavWriter.h ****  ** */
  32:../libDaisy/src/util/WavWriter.h **** template <size_t transfer_size>
  33:../libDaisy/src/util/WavWriter.h **** class WavWriter
  34:../libDaisy/src/util/WavWriter.h **** {
  35:../libDaisy/src/util/WavWriter.h ****   public:
  36:../libDaisy/src/util/WavWriter.h ****     WavWriter() {}
  37:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 307              		.loc 21 37 5 is_stmt 1 view .LVU70
 308              		.loc 21 37 5 is_stmt 0 view .LVU71
 309              	.LBE400:
 310              	.LBB401:
 311              	.LBI401:
 312              		.file 22 "../DaisySP/Source/Filters/onepole.h"
   1:../DaisySP/Source/Filters/onepole.h **** /*
   2:../DaisySP/Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Filters/onepole.h **** 
   4:../DaisySP/Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Filters/onepole.h **** */
   8:../DaisySP/Source/Filters/onepole.h **** 
   9:../DaisySP/Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../DaisySP/Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../DaisySP/Source/Filters/onepole.h **** 
  12:../DaisySP/Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../DaisySP/Source/Filters/onepole.h **** #include <cmath>
  14:../DaisySP/Source/Filters/onepole.h **** #include <algorithm>
  15:../DaisySP/Source/Filters/onepole.h **** 
  16:../DaisySP/Source/Filters/onepole.h **** namespace daisysp
  17:../DaisySP/Source/Filters/onepole.h **** {
  18:../DaisySP/Source/Filters/onepole.h **** /**         
  19:../DaisySP/Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../DaisySP/Source/Filters/onepole.h ****     @author beserge
  21:../DaisySP/Source/Filters/onepole.h ****     @date Dec 2023 
  22:../DaisySP/Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 30


  23:../DaisySP/Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../DaisySP/Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../DaisySP/Source/Filters/onepole.h **** */
  26:../DaisySP/Source/Filters/onepole.h **** class OnePole
  27:../DaisySP/Source/Filters/onepole.h **** {
  28:../DaisySP/Source/Filters/onepole.h ****   public:
  29:../DaisySP/Source/Filters/onepole.h ****     OnePole() {}
  30:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 313              		.loc 22 30 5 is_stmt 1 view .LVU72
 314              		.loc 22 30 5 is_stmt 0 view .LVU73
 315              	.LBE401:
 316              	.LBB402:
 317              	.LBI402:
 318              		.loc 22 30 5 is_stmt 1 view .LVU74
 319              		.loc 22 30 5 is_stmt 0 view .LVU75
 320              	.LBE402:
 321              	.LBB403:
 322              	.LBI403:
 323              		.file 23 "../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Copyright (c) 2023 Electrosmith, Corp, Victor Lazzarini, John ffitch (fast tanh), Bob Moog
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifndef DSY_MOOGLADDER_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #define DSY_MOOGLADDER_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #include <stdint.h>
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifdef __cplusplus
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /** Moog ladder filter module*/
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** class MoogLadder
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****   public:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     MoogLadder() {}
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 324              		.loc 23 23 5 is_stmt 1 view .LVU76
 325              		.loc 23 23 5 is_stmt 0 view .LVU77
 326              	.LBE403:
 327              	.LBB404:
 328              	.LBI404:
 329              		.file 24 "../DaisySP/Source/Effects/chorus.h"
   1:../DaisySP/Source/Effects/chorus.h **** /*
   2:../DaisySP/Source/Effects/chorus.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../DaisySP/Source/Effects/chorus.h **** 
   4:../DaisySP/Source/Effects/chorus.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Effects/chorus.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Effects/chorus.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Effects/chorus.h **** */
   8:../DaisySP/Source/Effects/chorus.h **** 
   9:../DaisySP/Source/Effects/chorus.h **** #pragma once
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 31


  10:../DaisySP/Source/Effects/chorus.h **** #ifndef DSY_CHORUS_H
  11:../DaisySP/Source/Effects/chorus.h **** #define DSY_CHORUS_H
  12:../DaisySP/Source/Effects/chorus.h **** #ifdef __cplusplus
  13:../DaisySP/Source/Effects/chorus.h **** 
  14:../DaisySP/Source/Effects/chorus.h **** #include <stdint.h>
  15:../DaisySP/Source/Effects/chorus.h **** #include "Utility/delayline.h"
  16:../DaisySP/Source/Effects/chorus.h **** #include "../../../src/sample.h"
  17:../DaisySP/Source/Effects/chorus.h **** 
  18:../DaisySP/Source/Effects/chorus.h **** /** @file chorus.h */
  19:../DaisySP/Source/Effects/chorus.h **** 
  20:../DaisySP/Source/Effects/chorus.h **** namespace daisysp
  21:../DaisySP/Source/Effects/chorus.h **** {
  22:../DaisySP/Source/Effects/chorus.h **** /**  
  23:../DaisySP/Source/Effects/chorus.h ****     @brief Single Chorus engine. Used in Chorus.
  24:../DaisySP/Source/Effects/chorus.h ****     @author Ben Sergentanis
  25:../DaisySP/Source/Effects/chorus.h **** */
  26:../DaisySP/Source/Effects/chorus.h **** class ChorusEngine
  27:../DaisySP/Source/Effects/chorus.h **** {
  28:../DaisySP/Source/Effects/chorus.h ****   public:
  29:../DaisySP/Source/Effects/chorus.h ****     ChorusEngine() {}
  30:../DaisySP/Source/Effects/chorus.h ****     ~ChorusEngine() {}
  31:../DaisySP/Source/Effects/chorus.h **** 
  32:../DaisySP/Source/Effects/chorus.h ****     /** Initialize the module
  33:../DaisySP/Source/Effects/chorus.h ****         \param sample_rate Audio engine sample rate.
  34:../DaisySP/Source/Effects/chorus.h ****     */
  35:../DaisySP/Source/Effects/chorus.h ****     void Init(float sample_rate);
  36:../DaisySP/Source/Effects/chorus.h **** 
  37:../DaisySP/Source/Effects/chorus.h ****     /** Get the next sample
  38:../DaisySP/Source/Effects/chorus.h ****         \param in Sample to process
  39:../DaisySP/Source/Effects/chorus.h ****     */
  40:../DaisySP/Source/Effects/chorus.h ****     float Process(float in);
  41:../DaisySP/Source/Effects/chorus.h **** 
  42:../DaisySP/Source/Effects/chorus.h ****     /** How much to modulate the delay by.
  43:../DaisySP/Source/Effects/chorus.h ****         \param depth Works 0-1.
  44:../DaisySP/Source/Effects/chorus.h ****     */
  45:../DaisySP/Source/Effects/chorus.h ****     void SetLfoDepth(float depth);
  46:../DaisySP/Source/Effects/chorus.h **** 
  47:../DaisySP/Source/Effects/chorus.h ****     /** Set lfo frequency.
  48:../DaisySP/Source/Effects/chorus.h ****         \param freq Frequency in Hz
  49:../DaisySP/Source/Effects/chorus.h ****     */
  50:../DaisySP/Source/Effects/chorus.h ****     void SetLfoFreq(float freq);
  51:../DaisySP/Source/Effects/chorus.h **** 
  52:../DaisySP/Source/Effects/chorus.h ****     /** Set the internal delay rate. 
  53:../DaisySP/Source/Effects/chorus.h ****         \param delay Tuned for 0-1. Maps to .1 to 50 ms.
  54:../DaisySP/Source/Effects/chorus.h ****     */
  55:../DaisySP/Source/Effects/chorus.h ****     void SetDelay(float delay);
  56:../DaisySP/Source/Effects/chorus.h **** 
  57:../DaisySP/Source/Effects/chorus.h ****     /** Set the delay time in ms.
  58:../DaisySP/Source/Effects/chorus.h ****         \param ms Delay time in ms, 0 to 50 ms.
  59:../DaisySP/Source/Effects/chorus.h ****     */
  60:../DaisySP/Source/Effects/chorus.h ****     void SetDelayMs(float ms);
  61:../DaisySP/Source/Effects/chorus.h **** 
  62:../DaisySP/Source/Effects/chorus.h ****     /** Set the feedback amount.
  63:../DaisySP/Source/Effects/chorus.h ****         \param feedback Amount from 0-1.
  64:../DaisySP/Source/Effects/chorus.h ****     */
  65:../DaisySP/Source/Effects/chorus.h ****     void SetFeedback(float feedback);
  66:../DaisySP/Source/Effects/chorus.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 32


  67:../DaisySP/Source/Effects/chorus.h ****   private:
  68:../DaisySP/Source/Effects/chorus.h ****     float                    sample_rate_;
  69:../DaisySP/Source/Effects/chorus.h ****     static constexpr int32_t kDelayLength
  70:../DaisySP/Source/Effects/chorus.h ****         = 2400; // 50 ms at 48kHz = .05 * 48000
  71:../DaisySP/Source/Effects/chorus.h **** 
  72:../DaisySP/Source/Effects/chorus.h ****     //triangle lfos
  73:../DaisySP/Source/Effects/chorus.h ****     float lfo_phase_;
  74:../DaisySP/Source/Effects/chorus.h ****     float lfo_freq_;
  75:../DaisySP/Source/Effects/chorus.h ****     float lfo_amp_;
  76:../DaisySP/Source/Effects/chorus.h **** 
  77:../DaisySP/Source/Effects/chorus.h ****     float feedback_;
  78:../DaisySP/Source/Effects/chorus.h **** 
  79:../DaisySP/Source/Effects/chorus.h ****     float delay_;
  80:../DaisySP/Source/Effects/chorus.h **** 
  81:../DaisySP/Source/Effects/chorus.h ****     DelayLine<float, kDelayLength> del_;
  82:../DaisySP/Source/Effects/chorus.h **** 
  83:../DaisySP/Source/Effects/chorus.h ****     float ProcessLfo();
  84:../DaisySP/Source/Effects/chorus.h **** };
  85:../DaisySP/Source/Effects/chorus.h **** 
  86:../DaisySP/Source/Effects/chorus.h **** //wraps up all of the chorus engines
  87:../DaisySP/Source/Effects/chorus.h **** /**  
  88:../DaisySP/Source/Effects/chorus.h ****     @brief Chorus Effect.
  89:../DaisySP/Source/Effects/chorus.h ****     @author Ben Sergentanis
  90:../DaisySP/Source/Effects/chorus.h ****     @date Jan 2021
  91:../DaisySP/Source/Effects/chorus.h ****     Based on https://www.izotope.com/en/learn/understanding-chorus-flangers-and-phasers-in-audio-pr
  92:../DaisySP/Source/Effects/chorus.h ****     and https://www.researchgate.net/publication/236629475_Implementing_Professional_Audio_Effects_
  93:../DaisySP/Source/Effects/chorus.h **** */
  94:../DaisySP/Source/Effects/chorus.h **** class Chorus
  95:../DaisySP/Source/Effects/chorus.h **** {
  96:../DaisySP/Source/Effects/chorus.h ****   public:
  97:../DaisySP/Source/Effects/chorus.h ****     Chorus() {}
  98:../DaisySP/Source/Effects/chorus.h ****     ~Chorus() {}
 330              		.loc 24 98 5 is_stmt 1 view .LVU78
 331              		.loc 24 98 5 is_stmt 0 view .LVU79
 332              	.LBE404:
 333              	.LBB405:
 334              	.LBI405:
 335              		.file 25 "../DaisySP/Source/Dynamics/limiter.h"
   1:../DaisySP/Source/Dynamics/limiter.h **** /*
   2:../DaisySP/Source/Dynamics/limiter.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Dynamics/limiter.h **** 
   4:../DaisySP/Source/Dynamics/limiter.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Dynamics/limiter.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Dynamics/limiter.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Dynamics/limiter.h **** */
   8:../DaisySP/Source/Dynamics/limiter.h **** 
   9:../DaisySP/Source/Dynamics/limiter.h **** #pragma once
  10:../DaisySP/Source/Dynamics/limiter.h **** #ifndef LIMITER_H
  11:../DaisySP/Source/Dynamics/limiter.h **** #define LIMITER_H
  12:../DaisySP/Source/Dynamics/limiter.h **** #include <stdlib.h>
  13:../DaisySP/Source/Dynamics/limiter.h **** namespace daisysp
  14:../DaisySP/Source/Dynamics/limiter.h **** {
  15:../DaisySP/Source/Dynamics/limiter.h **** /** Simple Peak Limiter
  16:../DaisySP/Source/Dynamics/limiter.h **** 
  17:../DaisySP/Source/Dynamics/limiter.h **** This was extracted from pichenettes/stmlib.
  18:../DaisySP/Source/Dynamics/limiter.h **** 
  19:../DaisySP/Source/Dynamics/limiter.h **** Credit to pichenettes/Mutable Instruments
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 33


  20:../DaisySP/Source/Dynamics/limiter.h **** */
  21:../DaisySP/Source/Dynamics/limiter.h **** class Limiter
  22:../DaisySP/Source/Dynamics/limiter.h **** {
  23:../DaisySP/Source/Dynamics/limiter.h ****   public:
  24:../DaisySP/Source/Dynamics/limiter.h ****     Limiter() {}
  25:../DaisySP/Source/Dynamics/limiter.h ****     ~Limiter() {}
 336              		.loc 25 25 5 is_stmt 1 view .LVU80
 337              		.loc 25 25 5 is_stmt 0 view .LVU81
 338              	.LBE405:
 339              	.LBB406:
 340              	.LBI406:
 341              		.file 26 "../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Copyright (c) 2023 Electrosmith, Corp, GRAME, Centre National de Creation Musicale.
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #ifndef DSY_COMPRESSOR_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #define DSY_COMPRESSOR_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #include "Utility/dsp.h"
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** namespace daisysp
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** {
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** /** dynamics compressor
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** influenced by compressor in soundpipe (from faust).
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Modifications made to do:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - Less calculations during each process loop (coefficients recalculated on parameter change).
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - C++-ified
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - added sidechain support
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - pulled gain apart for monitoring and multichannel support
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - improved readability
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - improved makeup-gain calculations
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - changing controls now costs a lot less
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - a lot less expensive
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  31:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** by: shensley, improved upon by AvAars
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** \todo Add soft/hard knee settings
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** */
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** class Compressor
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** {
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****   public:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     Compressor() {}
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 342              		.loc 26 38 5 is_stmt 1 view .LVU82
 343              		.loc 26 38 5 is_stmt 0 view .LVU83
 344              	.LBE406:
 345              	.LBB407:
 346              	.LBI407:
 347              		.loc 17 8 7 is_stmt 1 view .LVU84
 348              	.LBB408:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 34


 349              	.LBI408:
 350              		.loc 18 34 5 view .LVU85
 351              		.loc 18 34 5 is_stmt 0 view .LVU86
 352              	.LBE408:
 353              	.LBE407:
  17:GrannyChordApp.h ****   public:
 354              		.loc 19 17 7 view .LVU87
 355 0000 7047     		bx	lr
 356              		.cfi_endproc
 357              	.LFE5505:
 359              		.weak	_ZN14GrannyChordAppD1Ev
 360              		.thumb_set _ZN14GrannyChordAppD1Ev,_ZN14GrannyChordAppD2Ev
 361              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 362              	.LC0:
 363 0000 73746172 		.ascii	"started log\000"
 363      74656420 
 363      6C6F6700 
 364              		.section	.text.startup.main,"ax",%progbits
 365              		.align	1
 366              		.global	main
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 371              	main:
 372              	.LFB4913:
 373              		.file 27 "main.cpp"
   1:main.cpp      **** #ifdef DEBUG_MODE // TODO: remove
   2:main.cpp      **** #pragma message("Debug mode is ON")
   3:main.cpp      **** #else
   4:main.cpp      **** #pragma message("Debug mode is OFF")
   5:main.cpp      **** #endif
   6:main.cpp      **** 
   7:main.cpp      **** #include <stdio.h>
   8:main.cpp      **** #include "daisysp.h"
   9:main.cpp      **** #include "daisy_pod.h"
  10:main.cpp      **** #include "AudioFileManager.h"
  11:main.cpp      **** #include "GranularSynth.h"
  12:main.cpp      **** #include "GrannyChordApp.h"
  13:main.cpp      **** #include "constants_utils.h"
  14:main.cpp      **** #include "debug_print.h"
  15:main.cpp      **** 
  16:main.cpp      **** using namespace daisy;
  17:main.cpp      **** using namespace daisysp;
  18:main.cpp      **** using namespace std;
  19:main.cpp      **** 
  20:main.cpp      **** /* SDRAM buffers for storing WAV files or recorded input audio */
  21:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t left_buf[CHNL_BUF_SIZE_SAMPS];
  22:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t right_buf[CHNL_BUF_SIZE_SAMPS];
  23:main.cpp      **** 
  24:main.cpp      **** /* SDRAM buffer for temporarily storing recorded output audio
  25:main.cpp      ****     before it's written to SD card */
  26:main.cpp      **** // DSY_SDRAM_BSS alignas(16) int16_t record_out_buf[RECORD_OUT_BUF_SIZE_SAMPS];
  27:main.cpp      **** 
  28:main.cpp      **** /* hardware interfaces */
  29:main.cpp      **** SdmmcHandler sd;
  30:main.cpp      **** FatFSInterface fsi;
  31:main.cpp      **** DaisyPod pod;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 35


  32:main.cpp      **** FIL file;
  33:main.cpp      **** 
  34:main.cpp      **** // ReverbSc reverb;
  35:main.cpp      **** DSY_SDRAM_BSS ReverbSc reverb;
  36:main.cpp      **** /* software classes to run app */
  37:main.cpp      **** AudioFileManager filemgr(sd, fsi, pod, &file);
  38:main.cpp      **** static GranularSynth synth(pod);
  39:main.cpp      **** GrannyChordApp app(pod, synth, filemgr, reverb);
  40:main.cpp      **** 
  41:main.cpp      **** /* we set rng state here so we can use RNG fns across classes */
  42:main.cpp      **** uint32_t rng_state;
  43:main.cpp      **** 
  44:main.cpp      **** 
  45:main.cpp      **** int main (void){
 374              		.loc 27 45 16 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
  46:main.cpp      ****   pod.Init();
 378              		.loc 27 46 3 view .LVU89
  45:main.cpp      ****   pod.Init();
 379              		.loc 27 45 16 is_stmt 0 view .LVU90
 380 0000 08B5     		push	{r3, lr}
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 384              		.loc 27 46 11 view .LVU91
 385 0002 0021     		movs	r1, #0
 386 0004 0948     		ldr	r0, .L7
 387 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 388              	.LVL5:
  47:main.cpp      ****   pod.seed.StartLog(true);
 389              		.loc 27 47 3 is_stmt 1 view .LVU92
 390              	.LBB409:
 391              	.LBI409:
  23:../libDaisy/src/daisy_seed.h **** 
  24:../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../libDaisy/src/daisy_seed.h ****      */
  27:../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../libDaisy/src/daisy_seed.h **** 
  29:../libDaisy/src/daisy_seed.h ****     /** 
  30:../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../libDaisy/src/daisy_seed.h **** 
  34:../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../libDaisy/src/daisy_seed.h ****     */
  38:../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../libDaisy/src/daisy_seed.h **** 
  40:../libDaisy/src/daisy_seed.h ****     /** 
  41:../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../libDaisy/src/daisy_seed.h ****     */
  43:../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../libDaisy/src/daisy_seed.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 36


  45:../libDaisy/src/daisy_seed.h ****     /** 
  46:../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../libDaisy/src/daisy_seed.h ****     */
  49:../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../libDaisy/src/daisy_seed.h **** 
  51:../libDaisy/src/daisy_seed.h ****     /** 
  52:../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../libDaisy/src/daisy_seed.h ****     */
  55:../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../libDaisy/src/daisy_seed.h **** 
  57:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../libDaisy/src/daisy_seed.h ****     */
  61:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../libDaisy/src/daisy_seed.h **** 
  63:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../libDaisy/src/daisy_seed.h ****     */
  68:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../libDaisy/src/daisy_seed.h **** 
  70:../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../libDaisy/src/daisy_seed.h ****      */
  72:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../libDaisy/src/daisy_seed.h **** 
  74:../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../libDaisy/src/daisy_seed.h ****      */
  76:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../libDaisy/src/daisy_seed.h **** 
  78:../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../libDaisy/src/daisy_seed.h **** 
  81:../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../libDaisy/src/daisy_seed.h ****      */
  84:../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../libDaisy/src/daisy_seed.h **** 
  86:../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../libDaisy/src/daisy_seed.h ****      */
  88:../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../libDaisy/src/daisy_seed.h **** 
  90:../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../libDaisy/src/daisy_seed.h ****      */
  92:../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../libDaisy/src/daisy_seed.h **** 
  94:../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../libDaisy/src/daisy_seed.h **** 
  97:../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../libDaisy/src/daisy_seed.h **** 
 100:../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 37


 102:../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../libDaisy/src/daisy_seed.h ****      */
 105:../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../libDaisy/src/daisy_seed.h **** 
 107:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../libDaisy/src/daisy_seed.h ****      */
 109:../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../libDaisy/src/daisy_seed.h **** 
 111:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../libDaisy/src/daisy_seed.h ****      */
 113:../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../libDaisy/src/daisy_seed.h **** 
 115:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../libDaisy/src/daisy_seed.h ****      */
 117:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../libDaisy/src/daisy_seed.h ****     {
 120:../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../libDaisy/src/daisy_seed.h ****     }
 122:../libDaisy/src/daisy_seed.h **** 
 123:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../libDaisy/src/daisy_seed.h ****     */
 125:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../libDaisy/src/daisy_seed.h ****     {
 128:../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 129:../libDaisy/src/daisy_seed.h ****     }
 130:../libDaisy/src/daisy_seed.h **** 
 131:../libDaisy/src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:../libDaisy/src/daisy_seed.h ****     */
 133:../libDaisy/src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 392              		.loc 12 133 17 view .LVU93
 393              	.LBB410:
 134:../libDaisy/src/daisy_seed.h ****     {
 135:../libDaisy/src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 394              		.loc 12 135 9 view .LVU94
 395              		.loc 12 135 22 is_stmt 0 view .LVU95
 396 000a 0120     		movs	r0, #1
 397 000c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 398              	.LVL6:
 399              		.loc 12 135 22 view .LVU96
 400              	.LBE410:
 401              	.LBE409:
  48:main.cpp      ****   DebugPrint(pod,"started log");
 402              		.loc 27 48 3 is_stmt 1 view .LVU97
 403              		.loc 27 48 3 view .LVU98
 404              	.LBB411:
 405              	.LBI411:
 126:../libDaisy/src/daisy_seed.h ****     {
 406              		.loc 12 126 17 view .LVU99
 407              	.LBB412:
 128:../libDaisy/src/daisy_seed.h ****     }
 408              		.loc 12 128 23 is_stmt 0 view .LVU100
 409 0010 0748     		ldr	r0, .L7+4
 410 0012 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 411              	.LVL7:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 38


 128:../libDaisy/src/daisy_seed.h ****     }
 412              		.loc 12 128 23 view .LVU101
 413              	.LBE412:
 414              	.LBE411:
  49:main.cpp      ****   app.Init(left_buf, right_buf);
 415              		.loc 27 49 3 is_stmt 1 view .LVU102
 416              		.loc 27 49 11 is_stmt 0 view .LVU103
 417 0016 074A     		ldr	r2, .L7+8
 418 0018 0749     		ldr	r1, .L7+12
 419 001a 0848     		ldr	r0, .L7+16
 420 001c FFF7FEFF 		bl	_ZN14GrannyChordApp4InitEPsS0_
 421              	.LVL8:
  50:main.cpp      ****   app.Run();
 422              		.loc 27 50 3 is_stmt 1 view .LVU104
 423              		.loc 27 50 10 is_stmt 0 view .LVU105
 424 0020 0648     		ldr	r0, .L7+16
 425 0022 FFF7FEFF 		bl	_ZN14GrannyChordApp3RunEv
 426              	.LVL9:
  51:main.cpp      **** }
 427              		.loc 27 51 1 view .LVU106
 428 0026 0020     		movs	r0, #0
 429 0028 08BD     		pop	{r3, pc}
 430              	.L8:
 431 002a 00BF     		.align	2
 432              	.L7:
 433 002c 00000000 		.word	pod
 434 0030 00000000 		.word	.LC0
 435 0034 00000000 		.word	right_buf
 436 0038 00000000 		.word	left_buf
 437 003c 00000000 		.word	app
 438              		.cfi_endproc
 439              	.LFE4913:
 441              		.section	.text.startup._GLOBAL__sub_I_left_buf,"ax",%progbits
 442              		.align	1
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 447              	_GLOBAL__sub_I_left_buf:
 448              	.LFB5507:
 449              		.loc 27 51 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LBB544:
 454              	.LBI544:
 455              		.loc 27 51 1 view .LVU108
 456              	.LVL10:
 457              	.LBB545:
 458              	.LBB546:
 459              	.LBI546:
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 460              		.loc 2 77 5 view .LVU109
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 461              		.loc 2 77 5 is_stmt 0 view .LVU110
 462              	.LBE546:
 463              	.LBE545:
 464              	.LBE544:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 39


 465              		.loc 27 51 1 view .LVU111
 466 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 467              		.cfi_def_cfa_offset 24
 468              		.cfi_offset 4, -24
 469              		.cfi_offset 5, -20
 470              		.cfi_offset 6, -16
 471              		.cfi_offset 7, -12
 472              		.cfi_offset 8, -8
 473              		.cfi_offset 14, -4
 474              	.LBB723:
 475              	.LBB720:
  29:main.cpp      **** FatFSInterface fsi;
 476              		.loc 27 29 14 view .LVU112
 477 0004 554E     		ldr	r6, .L12
 478              	.LBB547:
 479              	.LBB548:
 480              	.LBB549:
 481              	.LBB550:
 482              	.LBB551:
 483              	.LBB552:
 484              	.LBB553:
 485              		.file 28 "../libDaisy/src/per/qspi.h"
   1:../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../libDaisy/src/per/qspi.h **** 
   4:../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../libDaisy/src/per/qspi.h **** 
   6:../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../libDaisy/src/per/qspi.h **** 
   9:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../libDaisy/src/per/qspi.h **** 
  19:../libDaisy/src/per/qspi.h **** namespace daisy
  20:../libDaisy/src/per/qspi.h **** {
  21:../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../libDaisy/src/per/qspi.h **** @{
  23:../libDaisy/src/per/qspi.h **** */
  24:../libDaisy/src/per/qspi.h **** 
  25:../libDaisy/src/per/qspi.h **** /** 
  26:../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../libDaisy/src/per/qspi.h **** */
  30:../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../libDaisy/src/per/qspi.h **** {
  32:../libDaisy/src/per/qspi.h ****   public:
  33:../libDaisy/src/per/qspi.h ****     enum Result
  34:../libDaisy/src/per/qspi.h ****     {
  35:../libDaisy/src/per/qspi.h ****         OK = 0,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 40


  36:../libDaisy/src/per/qspi.h ****         ERR
  37:../libDaisy/src/per/qspi.h ****     };
  38:../libDaisy/src/per/qspi.h **** 
  39:../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../libDaisy/src/per/qspi.h ****          * 
  43:../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../libDaisy/src/per/qspi.h ****          */
  48:../libDaisy/src/per/qspi.h ****     enum Status
  49:../libDaisy/src/per/qspi.h ****     {
  50:../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../libDaisy/src/per/qspi.h ****     };
  55:../libDaisy/src/per/qspi.h **** 
  56:../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../libDaisy/src/per/qspi.h ****     struct Config
  58:../libDaisy/src/per/qspi.h ****     {
  59:../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../libDaisy/src/per/qspi.h ****         enum Device
  61:../libDaisy/src/per/qspi.h ****         {
  62:../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../libDaisy/src/per/qspi.h ****         };
  66:../libDaisy/src/per/qspi.h **** 
  67:../libDaisy/src/per/qspi.h ****         /** 
  68:../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../libDaisy/src/per/qspi.h ****         */
  74:../libDaisy/src/per/qspi.h ****         enum Mode
  75:../libDaisy/src/per/qspi.h ****         {
  76:../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../libDaisy/src/per/qspi.h ****         };
  80:../libDaisy/src/per/qspi.h **** 
  81:../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../libDaisy/src/per/qspi.h ****         struct
  83:../libDaisy/src/per/qspi.h ****         {
  84:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../libDaisy/src/per/qspi.h **** 
  92:../libDaisy/src/per/qspi.h ****         Device device;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 41


  93:../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../libDaisy/src/per/qspi.h ****     };
  95:../libDaisy/src/per/qspi.h **** 
  96:../libDaisy/src/per/qspi.h ****     /** 
  97:../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../libDaisy/src/per/qspi.h ****         */
 101:../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../libDaisy/src/per/qspi.h **** 
 103:../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../libDaisy/src/per/qspi.h **** 
 106:../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../libDaisy/src/per/qspi.h ****     /** 
 109:../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../libDaisy/src/per/qspi.h ****         */
 113:../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../libDaisy/src/per/qspi.h **** 
 115:../libDaisy/src/per/qspi.h ****     /** 
 116:../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../libDaisy/src/per/qspi.h ****         */
 123:../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../libDaisy/src/per/qspi.h **** 
 125:../libDaisy/src/per/qspi.h ****     /** 
 126:../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../libDaisy/src/per/qspi.h ****         */
 132:../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../libDaisy/src/per/qspi.h **** 
 134:../libDaisy/src/per/qspi.h ****     /** 
 135:../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../libDaisy/src/per/qspi.h ****         */
 142:../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../libDaisy/src/per/qspi.h **** 
 144:../libDaisy/src/per/qspi.h ****     /**  
 145:../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../libDaisy/src/per/qspi.h ****         */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 42


 150:../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../libDaisy/src/per/qspi.h **** 
 152:../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../libDaisy/src/per/qspi.h ****      */
 155:../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../libDaisy/src/per/qspi.h **** 
 157:../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../libDaisy/src/per/qspi.h ****      * 
 161:../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../libDaisy/src/per/qspi.h ****     */
 164:../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../libDaisy/src/per/qspi.h **** 
 166:../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 486              		.loc 28 166 34 view .LVU113
 487 0006 0024     		movs	r4, #0
 488 0008 554D     		ldr	r5, .L12+4
 489              	.LBE553:
 490              	.LBE552:
 491              	.LBE551:
 492              	.LBE550:
 493              	.LBE549:
 494              	.LBE548:
 495              	.LBE547:
  29:main.cpp      **** FatFSInterface fsi;
 496              		.loc 27 29 14 view .LVU114
 497 000a 564A     		ldr	r2, .L12+8
 498 000c 3046     		mov	r0, r6
 499 000e 5649     		ldr	r1, .L12+12
 500 0010 FFF7FEFF 		bl	__aeabi_atexit
 501              	.LVL11:
 502              	.LBB638:
 503              	.LBI638:
 504              		.file 29 "../libDaisy/src/sys/fatfs.h"
   1:../libDaisy/src/sys/fatfs.h **** #ifndef __fatfs_H
   2:../libDaisy/src/sys/fatfs.h **** #define __fatfs_H /**< & */
   3:../libDaisy/src/sys/fatfs.h **** 
   4:../libDaisy/src/sys/fatfs.h **** #include "ff.h"
   5:../libDaisy/src/sys/fatfs.h **** 
   6:../libDaisy/src/sys/fatfs.h **** namespace daisy
   7:../libDaisy/src/sys/fatfs.h **** {
   8:../libDaisy/src/sys/fatfs.h **** /** @brief Daisy FatFS Driver Interface
   9:../libDaisy/src/sys/fatfs.h ****  *  @details Specifies the desired media (SD Card, USB, etc.) to be mountable with FatFS
  10:../libDaisy/src/sys/fatfs.h ****  *           within a given application. Once initialization is called, the standard
  11:../libDaisy/src/sys/fatfs.h ****  *           FatFS API will be usable with the media mounted in the order 
  12:../libDaisy/src/sys/fatfs.h ****  *           they are listed in the Media config struct. 
  13:../libDaisy/src/sys/fatfs.h ****  *           For example, when only using an SD Card, it will mount at "0:/",
  14:../libDaisy/src/sys/fatfs.h ****  *           when only using USB, it will mount at "0:/". However, when mounting 
  15:../libDaisy/src/sys/fatfs.h ****  *           with SD card and USB, the SD card will mount at "0:/", and the USB 
  16:../libDaisy/src/sys/fatfs.h ****  *           will mount at "1:/".
  17:../libDaisy/src/sys/fatfs.h ****  *           The relevant hardware peripheral (SDMMC, or MSD) needs to be initialized
  18:../libDaisy/src/sys/fatfs.h ****  *           separately by the application before using FatFS.
  19:../libDaisy/src/sys/fatfs.h ****  *          
  20:../libDaisy/src/sys/fatfs.h ****  *           This object has some memory limitations due to the media connected to it.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 43


  21:../libDaisy/src/sys/fatfs.h ****  *           The SDMMC1 peripheral can only communicate with the AXI SRAM, and the DTCMRAM 
  22:../libDaisy/src/sys/fatfs.h ****  *           cannot communicate with the DMA. So the FatFSInterface object should always be
  23:../libDaisy/src/sys/fatfs.h ****  *           located in the AXI SRAM. This is the default location for all data/bss memory
  24:../libDaisy/src/sys/fatfs.h ****  *           using the standard build. However, applciations using the electrosmith bootloader
  25:../libDaisy/src/sys/fatfs.h ****  *           will need special consideration when using this object AND an SD Card. 
  26:../libDaisy/src/sys/fatfs.h ****  */
  27:../libDaisy/src/sys/fatfs.h **** class FatFSInterface
  28:../libDaisy/src/sys/fatfs.h **** {
  29:../libDaisy/src/sys/fatfs.h ****   public:
  30:../libDaisy/src/sys/fatfs.h ****     /** Return values specifying specific errors for linking Daisy to FatFS */
  31:../libDaisy/src/sys/fatfs.h ****     enum Result
  32:../libDaisy/src/sys/fatfs.h ****     {
  33:../libDaisy/src/sys/fatfs.h ****         OK,
  34:../libDaisy/src/sys/fatfs.h ****         ERR_TOO_MANY_VOLUMES,
  35:../libDaisy/src/sys/fatfs.h ****         ERR_NO_MEDIA_SELECTED,
  36:../libDaisy/src/sys/fatfs.h ****         ERR_GENERIC,
  37:../libDaisy/src/sys/fatfs.h ****     };
  38:../libDaisy/src/sys/fatfs.h **** 
  39:../libDaisy/src/sys/fatfs.h ****     /** Config structure for configuring Daisy to FatFS */
  40:../libDaisy/src/sys/fatfs.h ****     struct Config
  41:../libDaisy/src/sys/fatfs.h ****     {
  42:../libDaisy/src/sys/fatfs.h ****         /** Selected Media that will be linked to FatFS 
  43:../libDaisy/src/sys/fatfs.h ****          *  These values can be OR'd together when multiple
  44:../libDaisy/src/sys/fatfs.h ****          *  volumes are desired 
  45:../libDaisy/src/sys/fatfs.h ****          *  i.e. config.media = Media::SD | Media::USBH;
  46:../libDaisy/src/sys/fatfs.h ****          * 
  47:../libDaisy/src/sys/fatfs.h ****          *  When mounting multiple volumes, ffconf.h must have 
  48:../libDaisy/src/sys/fatfs.h ****          *  _VOLUMES set to an appropriate value.
  49:../libDaisy/src/sys/fatfs.h ****          * 
  50:../libDaisy/src/sys/fatfs.h ****          *  FatFS will register multiple volumes in the order of the enum,
  51:../libDaisy/src/sys/fatfs.h ****          *   the first registered class will mount at "0:/",
  52:../libDaisy/src/sys/fatfs.h ****          *   the second registered class will mount at "1:/", and so on
  53:../libDaisy/src/sys/fatfs.h ****          */
  54:../libDaisy/src/sys/fatfs.h ****         enum Media : uint8_t
  55:../libDaisy/src/sys/fatfs.h ****         {
  56:../libDaisy/src/sys/fatfs.h ****             MEDIA_SD  = 0x01,
  57:../libDaisy/src/sys/fatfs.h ****             MEDIA_USB = 0x02,
  58:../libDaisy/src/sys/fatfs.h ****             // MEDIA_QSPI = 0x04,
  59:../libDaisy/src/sys/fatfs.h ****         };
  60:../libDaisy/src/sys/fatfs.h **** 
  61:../libDaisy/src/sys/fatfs.h ****         uint8_t media;
  62:../libDaisy/src/sys/fatfs.h ****     };
  63:../libDaisy/src/sys/fatfs.h **** 
  64:../libDaisy/src/sys/fatfs.h ****     FatFSInterface() {}
 505              		.loc 29 64 5 is_stmt 1 view .LVU115
 506              		.loc 29 64 5 is_stmt 0 view .LVU116
 507              	.LBE638:
 508              	.LBB639:
 509              	.LBI547:
  35:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
 510              		.loc 3 35 5 is_stmt 1 view .LVU117
 511              	.LBB634:
 512              	.LBB572:
 513              	.LBI549:
  21:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 514              		.loc 12 21 5 view .LVU118
 515              	.LBB570:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 44


 516              	.LBB556:
 517              	.LBI551:
 518              		.loc 28 166 5 view .LVU119
 519              	.LBB555:
 520              	.LBB554:
 521              		.loc 28 166 34 is_stmt 0 view .LVU120
 522 0014 2C60     		str	r4, [r5]
 523              	.LVL12:
 524              		.loc 28 166 34 view .LVU121
 525              	.LBE554:
 526              	.LBE555:
 527              	.LBE556:
 528              	.LBB557:
 529              	.LBI557:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 530              		.loc 16 95 5 is_stmt 1 view .LVU122
 531              	.LBB558:
 532              	.LBB559:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 533              		.loc 16 95 35 is_stmt 0 view .LVU123
 534 0016 6C61     		str	r4, [r5, #20]
 535              	.LVL13:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 536              		.loc 16 95 35 view .LVU124
 537              	.LBE559:
 538              	.LBE558:
 539              	.LBE557:
 540              	.LBB560:
 541              	.LBI560:
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 542              		.loc 15 109 5 is_stmt 1 view .LVU125
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 543              		.loc 15 109 5 is_stmt 0 view .LVU126
 544              	.LBE560:
 545              	.LBB561:
 546              	.LBI561:
 547              		.file 30 "../libDaisy/src/per/dac.h"
   1:../libDaisy/src/per/dac.h **** #pragma once
   2:../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libDaisy/src/per/dac.h **** 
   5:../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/dac.h **** 
   7:../libDaisy/src/per/dac.h **** namespace daisy
   8:../libDaisy/src/per/dac.h **** {
   9:../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../libDaisy/src/per/dac.h ****  ** 
  12:../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../libDaisy/src/per/dac.h ****  **
  15:../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../libDaisy/src/per/dac.h ****  **
  17:../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../libDaisy/src/per/dac.h ****  ***/
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 45


  21:../libDaisy/src/per/dac.h **** class DacHandle
  22:../libDaisy/src/per/dac.h **** {
  23:../libDaisy/src/per/dac.h ****   public:
  24:../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../libDaisy/src/per/dac.h ****     enum class Result
  26:../libDaisy/src/per/dac.h ****     {
  27:../libDaisy/src/per/dac.h ****         OK,
  28:../libDaisy/src/per/dac.h ****         ERR,
  29:../libDaisy/src/per/dac.h ****     };
  30:../libDaisy/src/per/dac.h **** 
  31:../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../libDaisy/src/per/dac.h ****     enum class Channel
  33:../libDaisy/src/per/dac.h ****     {
  34:../libDaisy/src/per/dac.h ****         ONE,
  35:../libDaisy/src/per/dac.h ****         TWO,
  36:../libDaisy/src/per/dac.h ****         BOTH,
  37:../libDaisy/src/per/dac.h ****     };
  38:../libDaisy/src/per/dac.h **** 
  39:../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../libDaisy/src/per/dac.h ****      **
  41:../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../libDaisy/src/per/dac.h ****      **
  43:../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../libDaisy/src/per/dac.h ****      ***/
  46:../libDaisy/src/per/dac.h ****     enum class Mode
  47:../libDaisy/src/per/dac.h ****     {
  48:../libDaisy/src/per/dac.h ****         POLLING,
  49:../libDaisy/src/per/dac.h ****         DMA,
  50:../libDaisy/src/per/dac.h ****     };
  51:../libDaisy/src/per/dac.h **** 
  52:../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../libDaisy/src/per/dac.h ****      ***/
  56:../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../libDaisy/src/per/dac.h ****     {
  58:../libDaisy/src/per/dac.h ****         BITS_8,
  59:../libDaisy/src/per/dac.h ****         BITS_12
  60:../libDaisy/src/per/dac.h ****     };
  61:../libDaisy/src/per/dac.h **** 
  62:../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../libDaisy/src/per/dac.h ****     {
  65:../libDaisy/src/per/dac.h ****         ENABLED,
  66:../libDaisy/src/per/dac.h ****         DISABLED,
  67:../libDaisy/src/per/dac.h ****     };
  68:../libDaisy/src/per/dac.h **** 
  69:../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../libDaisy/src/per/dac.h ****     struct Config
  71:../libDaisy/src/per/dac.h ****     {
  72:../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../libDaisy/src/per/dac.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 46


  78:../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../libDaisy/src/per/dac.h ****     };
  83:../libDaisy/src/per/dac.h **** 
  84:../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 548              		.loc 30 84 5 is_stmt 1 view .LVU127
 549              	.LBE561:
 550              	.LBE570:
 551              	.LBE572:
 552              	.LBB573:
 553              	.LBB574:
 554              	.LBB575:
 555              	.LBB576:
 157:../libDaisy/src/hid/midi.h **** 
 158:../libDaisy/src/hid/midi.h ****     struct Config
 556              		.loc 4 158 12 is_stmt 0 view .LVU128
 557 0018 05F5C070 		add	r0, r5, #384
 558              	.LBE576:
 559              	.LBE575:
 560              	.LBE574:
 561              	.LBE573:
 562              	.LBB612:
 563              	.LBB571:
 564              	.LBB564:
 565              	.LBB562:
 566              	.LBB563:
 567              		.loc 30 84 33 view .LVU129
 568 001c 2C62     		str	r4, [r5, #32]
 569              	.LVL14:
 570              		.loc 30 84 33 view .LVU130
 571              	.LBE563:
 572              	.LBE562:
 573              	.LBE564:
 574              	.LBB565:
 575              	.LBI565:
  40:../libDaisy/src/hid/usb.h **** 
 576              		.loc 14 40 5 is_stmt 1 view .LVU131
  40:../libDaisy/src/hid/usb.h **** 
 577              		.loc 14 40 5 is_stmt 0 view .LVU132
 578              	.LBE565:
 579              	.LBB566:
 580              	.LBI566:
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 581              		.loc 13 96 5 is_stmt 1 view .LVU133
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 582              		.loc 13 96 5 is_stmt 0 view .LVU134
 583              	.LBE566:
 584              	.LBB567:
 585              	.LBI567:
 586              		.file 31 "../libDaisy/src/per/sai.h"
   1:../libDaisy/src/per/sai.h **** #pragma once
   2:../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../libDaisy/src/per/sai.h **** 
   5:../libDaisy/src/per/sai.h **** #include "daisy_core.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 47


   6:../libDaisy/src/per/sai.h **** 
   7:../libDaisy/src/per/sai.h **** namespace daisy
   8:../libDaisy/src/per/sai.h **** {
   9:../libDaisy/src/per/sai.h **** /** 
  10:../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../libDaisy/src/per/sai.h ****  * 
  14:../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../libDaisy/src/per/sai.h ****  *
  18:../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../libDaisy/src/per/sai.h ****  * 
  21:../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../libDaisy/src/per/sai.h ****  * 
  23:../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../libDaisy/src/per/sai.h ****  */
  42:../libDaisy/src/per/sai.h **** class SaiHandle
  43:../libDaisy/src/per/sai.h **** {
  44:../libDaisy/src/per/sai.h ****   public:
  45:../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../libDaisy/src/per/sai.h ****     struct Config
  47:../libDaisy/src/per/sai.h ****     {
  48:../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../libDaisy/src/per/sai.h ****         {
  51:../libDaisy/src/per/sai.h ****             SAI_1,
  52:../libDaisy/src/per/sai.h ****             SAI_2,
  53:../libDaisy/src/per/sai.h ****         };
  54:../libDaisy/src/per/sai.h **** 
  55:../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../libDaisy/src/per/sai.h ****         {
  58:../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../libDaisy/src/per/sai.h ****             SAI_96KHZ,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 48


  63:../libDaisy/src/per/sai.h ****         };
  64:../libDaisy/src/per/sai.h **** 
  65:../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../libDaisy/src/per/sai.h ****         {
  68:../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../libDaisy/src/per/sai.h ****         };
  72:../libDaisy/src/per/sai.h **** 
  73:../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../libDaisy/src/per/sai.h ****          */
  77:../libDaisy/src/per/sai.h ****         enum class Sync
  78:../libDaisy/src/per/sai.h ****         {
  79:../libDaisy/src/per/sai.h ****             MASTER,
  80:../libDaisy/src/per/sai.h ****             SLAVE,
  81:../libDaisy/src/per/sai.h ****         };
  82:../libDaisy/src/per/sai.h **** 
  83:../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../libDaisy/src/per/sai.h ****         enum class Direction
  85:../libDaisy/src/per/sai.h ****         {
  86:../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../libDaisy/src/per/sai.h ****         };
  89:../libDaisy/src/per/sai.h **** 
  90:../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../libDaisy/src/per/sai.h ****         struct
  92:../libDaisy/src/per/sai.h ****         {
  93:../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../libDaisy/src/per/sai.h ****         } pin_config;
  95:../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../libDaisy/src/per/sai.h ****     };
 100:../libDaisy/src/per/sai.h **** 
 101:../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../libDaisy/src/per/sai.h ****     enum class Result
 103:../libDaisy/src/per/sai.h ****     {
 104:../libDaisy/src/per/sai.h ****         OK,
 105:../libDaisy/src/per/sai.h ****         ERR,
 106:../libDaisy/src/per/sai.h ****     };
 107:../libDaisy/src/per/sai.h **** 
 108:../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 587              		.loc 31 108 5 is_stmt 1 view .LVU135
 588              	.LBB568:
 589              	.LBB569:
 590              		.loc 31 108 33 is_stmt 0 view .LVU136
 591 001e EC63     		str	r4, [r5, #60]
 592              	.LVL15:
 593              		.loc 31 108 33 view .LVU137
 594              	.LBE569:
 595              	.LBE568:
 596              	.LBE567:
 597              	.LBE571:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 49


 598              	.LBE612:
 599              	.LBB613:
 600              	.LBI613:
  20:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 601              		.loc 11 20 5 is_stmt 1 view .LVU138
 602              	.LBB614:
 603              	.LBB615:
 604              	.LBI615:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 605              		.loc 9 41 5 view .LVU139
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 606              		.loc 9 41 5 is_stmt 0 view .LVU140
 607              	.LBE615:
 608              	.LBE614:
 609              	.LBE613:
 610              	.LBB616:
 611              	.LBI616:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 612              		.loc 10 21 5 is_stmt 1 view .LVU141
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 613              		.loc 10 21 5 is_stmt 0 view .LVU142
 614              	.LBE616:
 615              	.LBB617:
 616              	.LBI617:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 617              		.loc 10 21 5 is_stmt 1 view .LVU143
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 618              		.loc 10 21 5 is_stmt 0 view .LVU144
 619              	.LBE617:
 620              	.LBB618:
 621              	.LBI618:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 622              		.loc 9 41 5 is_stmt 1 view .LVU145
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 623              		.loc 9 41 5 is_stmt 0 view .LVU146
 624              	.LBE618:
 625              	.LBB619:
 626              	.LBI619:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 627              		.loc 9 41 5 is_stmt 1 view .LVU147
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 628              		.loc 9 41 5 is_stmt 0 view .LVU148
 629              	.LBE619:
 630              	.LBB620:
 631              	.LBI620:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 632              		.loc 7 17 5 is_stmt 1 view .LVU149
 633              	.LBB621:
 634              	.LBB622:
 635              	.LBI622:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 636              		.loc 8 24 5 view .LVU150
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 637              		.loc 8 24 5 is_stmt 0 view .LVU151
 638              	.LBE622:
 639              	.LBB623:
 640              	.LBI623:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 50


  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 641              		.loc 8 24 5 is_stmt 1 view .LVU152
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 642              		.loc 8 24 5 is_stmt 0 view .LVU153
 643              	.LBE623:
 644              	.LBB624:
 645              	.LBI624:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 646              		.loc 8 24 5 is_stmt 1 view .LVU154
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 647              		.loc 8 24 5 is_stmt 0 view .LVU155
 648              	.LBE624:
 649              	.LBE621:
 650              	.LBE620:
 651              	.LBB625:
 652              	.LBI625:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 653              		.loc 7 17 5 is_stmt 1 view .LVU156
 654              	.LBB626:
 655              	.LBB627:
 656              	.LBI627:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 657              		.loc 8 24 5 view .LVU157
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 658              		.loc 8 24 5 is_stmt 0 view .LVU158
 659              	.LBE627:
 660              	.LBB628:
 661              	.LBI628:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 662              		.loc 8 24 5 is_stmt 1 view .LVU159
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 663              		.loc 8 24 5 is_stmt 0 view .LVU160
 664              	.LBE628:
 665              	.LBB629:
 666              	.LBI629:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 667              		.loc 8 24 5 is_stmt 1 view .LVU161
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 668              		.loc 8 24 5 is_stmt 0 view .LVU162
 669              	.LBE629:
 670              	.LBE626:
 671              	.LBE625:
 672              	.LBB630:
 673              	.LBI573:
 155:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 674              		.loc 4 155 5 is_stmt 1 view .LVU163
 675              	.LBB608:
 676              	.LBB578:
 677              	.LBI575:
 678              		.loc 4 158 12 view .LVU164
 679              	.LBB577:
 680 0020 FFF7FEFF 		bl	_ZN5daisy17MidiUartTransport6ConfigC1Ev
 681              	.LVL16:
 682              		.loc 4 158 12 is_stmt 0 view .LVU165
 683              	.LBE577:
 684              	.LBE578:
 685              	.LBB579:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 51


 686              	.LBI579:
  31:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 687              		.loc 4 31 5 is_stmt 1 view .LVU166
 688              	.LBB580:
 689              	.LBB581:
 690              	.LBI581:
 691              		.file 32 "../libDaisy/src/per/uart.h"
   1:../libDaisy/src/per/uart.h **** /* 
   2:../libDaisy/src/per/uart.h **** TODO
   3:../libDaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   4:../libDaisy/src/per/uart.h **** */
   5:../libDaisy/src/per/uart.h **** 
   6:../libDaisy/src/per/uart.h **** #pragma once
   7:../libDaisy/src/per/uart.h **** #ifndef DSY_UART_H
   8:../libDaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
   9:../libDaisy/src/per/uart.h **** #include "daisy_core.h"
  10:../libDaisy/src/per/uart.h **** 
  11:../libDaisy/src/per/uart.h **** 
  12:../libDaisy/src/per/uart.h **** namespace daisy
  13:../libDaisy/src/per/uart.h **** {
  14:../libDaisy/src/per/uart.h **** /** @addtogroup serial
  15:../libDaisy/src/per/uart.h ****     @{
  16:../libDaisy/src/per/uart.h ****     */
  17:../libDaisy/src/per/uart.h **** 
  18:../libDaisy/src/per/uart.h **** /** 
  19:../libDaisy/src/per/uart.h ****     Uart Peripheral
  20:../libDaisy/src/per/uart.h ****     @author shensley
  21:../libDaisy/src/per/uart.h ****     @date March 2020
  22:../libDaisy/src/per/uart.h ****     */
  23:../libDaisy/src/per/uart.h **** class UartHandler
  24:../libDaisy/src/per/uart.h **** {
  25:../libDaisy/src/per/uart.h ****   public:
  26:../libDaisy/src/per/uart.h ****     struct Config
  27:../libDaisy/src/per/uart.h ****     {
  28:../libDaisy/src/per/uart.h ****         enum class Peripheral
  29:../libDaisy/src/per/uart.h ****         {
  30:../libDaisy/src/per/uart.h ****             USART_1,
  31:../libDaisy/src/per/uart.h ****             USART_2,
  32:../libDaisy/src/per/uart.h ****             USART_3,
  33:../libDaisy/src/per/uart.h ****             UART_4,
  34:../libDaisy/src/per/uart.h ****             UART_5,
  35:../libDaisy/src/per/uart.h ****             USART_6,
  36:../libDaisy/src/per/uart.h ****             UART_7,
  37:../libDaisy/src/per/uart.h ****             UART_8,
  38:../libDaisy/src/per/uart.h ****             LPUART_1,
  39:../libDaisy/src/per/uart.h ****         };
  40:../libDaisy/src/per/uart.h **** 
  41:../libDaisy/src/per/uart.h ****         enum class StopBits
  42:../libDaisy/src/per/uart.h ****         {
  43:../libDaisy/src/per/uart.h ****             BITS_0_5,
  44:../libDaisy/src/per/uart.h ****             BITS_1,
  45:../libDaisy/src/per/uart.h ****             BITS_1_5,
  46:../libDaisy/src/per/uart.h ****             BITS_2,
  47:../libDaisy/src/per/uart.h ****         };
  48:../libDaisy/src/per/uart.h **** 
  49:../libDaisy/src/per/uart.h ****         enum class Parity
  50:../libDaisy/src/per/uart.h ****         {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 52


  51:../libDaisy/src/per/uart.h ****             NONE,
  52:../libDaisy/src/per/uart.h ****             EVEN,
  53:../libDaisy/src/per/uart.h ****             ODD,
  54:../libDaisy/src/per/uart.h ****         };
  55:../libDaisy/src/per/uart.h **** 
  56:../libDaisy/src/per/uart.h ****         enum class Mode
  57:../libDaisy/src/per/uart.h ****         {
  58:../libDaisy/src/per/uart.h ****             RX,
  59:../libDaisy/src/per/uart.h ****             TX,
  60:../libDaisy/src/per/uart.h ****             TX_RX,
  61:../libDaisy/src/per/uart.h ****         };
  62:../libDaisy/src/per/uart.h **** 
  63:../libDaisy/src/per/uart.h ****         enum class WordLength
  64:../libDaisy/src/per/uart.h ****         {
  65:../libDaisy/src/per/uart.h ****             BITS_7,
  66:../libDaisy/src/per/uart.h ****             BITS_8,
  67:../libDaisy/src/per/uart.h ****             BITS_9,
  68:../libDaisy/src/per/uart.h ****         };
  69:../libDaisy/src/per/uart.h **** 
  70:../libDaisy/src/per/uart.h ****         struct
  71:../libDaisy/src/per/uart.h ****         {
  72:../libDaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  73:../libDaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  74:../libDaisy/src/per/uart.h ****         } pin_config;        /**< & */
  75:../libDaisy/src/per/uart.h **** 
  76:../libDaisy/src/per/uart.h ****         Config()
  77:../libDaisy/src/per/uart.h ****         {
  78:../libDaisy/src/per/uart.h ****             // user must init periph, pin_config, and mode
  79:../libDaisy/src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  80:../libDaisy/src/per/uart.h ****             parity     = Parity::NONE;
  81:../libDaisy/src/per/uart.h ****             wordlength = WordLength::BITS_8;
  82:../libDaisy/src/per/uart.h ****             baudrate   = 31250;
  83:../libDaisy/src/per/uart.h ****         }
  84:../libDaisy/src/per/uart.h **** 
  85:../libDaisy/src/per/uart.h ****         Peripheral periph;
  86:../libDaisy/src/per/uart.h ****         StopBits   stopbits;
  87:../libDaisy/src/per/uart.h ****         Parity     parity;
  88:../libDaisy/src/per/uart.h ****         Mode       mode;
  89:../libDaisy/src/per/uart.h ****         WordLength wordlength;
  90:../libDaisy/src/per/uart.h ****         uint32_t   baudrate;
  91:../libDaisy/src/per/uart.h ****     };
  92:../libDaisy/src/per/uart.h **** 
  93:../libDaisy/src/per/uart.h **** 
  94:../libDaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 692              		.loc 32 94 5 view .LVU167
 693              		.loc 32 94 5 is_stmt 0 view .LVU168
 694              	.LBE581:
 695              	.LBE580:
 696              	.LBE579:
 697              	.LBB586:
 698              	.LBI586:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 699              		.loc 6 18 5 is_stmt 1 view .LVU169
 700              	.LBB587:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 701              		.loc 6 18 17 is_stmt 0 view .LVU170
 702 0024 514B     		ldr	r3, .L12+16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 53


 703              	.LBE587:
 704              	.LBE586:
 705              	.LBE608:
 706              	.LBE630:
 707              	.LBE634:
 708              	.LBE639:
  31:main.cpp      **** FIL file;
 709              		.loc 27 31 10 view .LVU171
 710 0026 4F4A     		ldr	r2, .L12+8
 711 0028 2846     		mov	r0, r5
 712              	.LBB640:
 713              	.LBB635:
 714              	.LBB631:
 715              	.LBB609:
 716              	.LBB590:
 717              	.LBB588:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 718              		.loc 6 18 17 view .LVU172
 719 002a C5F83832 		str	r3, [r5, #568]
 720 002e 40F20F73 		movw	r3, #1807
 721              	.LBE588:
 722              	.LBE590:
 723              	.LBE609:
 724              	.LBE631:
 725              	.LBE635:
 726              	.LBE640:
  31:main.cpp      **** FIL file;
 727              		.loc 27 31 10 view .LVU173
 728 0032 4F49     		ldr	r1, .L12+20
 729              	.LBB641:
 730              	.LBB636:
 731              	.LBB632:
 732              	.LBB610:
 733              	.LBB591:
 734              	.LBB589:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 735              		.loc 6 18 17 view .LVU174
 736 0034 A5F83C32 		strh	r3, [r5, #572]	@ movhi
 737              	.LVL17:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 738              		.loc 6 18 17 view .LVU175
 739              	.LBE589:
 740              	.LBE591:
 741              	.LBB592:
 742              	.LBI592:
 299:../libDaisy/src/util/FIFO.h **** {
 300:../libDaisy/src/util/FIFO.h ****   public:
 301:../libDaisy/src/util/FIFO.h ****     /** Creates an empty FIFO */
 302:../libDaisy/src/util/FIFO.h ****     FIFO() : FIFOBase<T>(buffer_, capacity + 1) {}
 743              		.loc 5 302 5 is_stmt 1 view .LVU176
 744              	.LBB593:
 745              	.LBB594:
 746              	.LBI594:
  14:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
 747              		.loc 5 14 5 view .LVU177
 748              	.LBB595:
 749              	.LBB596:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 54


  15:../libDaisy/src/util/FIFO.h ****     {
 750              		.loc 5 15 75 is_stmt 0 view .LVU178
 751 0038 05F51473 		add	r3, r5, #592
 752              	.LBE596:
 753              	.LBE595:
 754              	.LBE594:
 755              	.LBE593:
 756              	.LBE592:
 757              	.LBB605:
 758              	.LBB585:
 759              	.LBB584:
 760              	.LBB582:
 761              	.LBB583:
 762              		.loc 32 94 35 view .LVU179
 763 003c C5F89041 		str	r4, [r5, #400]
 764              	.LBE583:
 765              	.LBE582:
 766              	.LBE584:
 767              	.LBE585:
 768              	.LBE605:
 769              	.LBB606:
 770              	.LBB603:
 771              	.LBB601:
 772              	.LBB599:
 773              	.LBB597:
  15:../libDaisy/src/util/FIFO.h ****     {
 774              		.loc 5 15 75 view .LVU180
 775 0040 C5F84032 		str	r3, [r5, #576]
 776 0044 40F20113 		movw	r3, #257
 777 0048 C5F84C42 		str	r4, [r5, #588]
 778              	.LVL18:
  15:../libDaisy/src/util/FIFO.h ****     {
 779              		.loc 5 15 75 view .LVU181
 780              	.LBE597:
 781              	.LBE599:
 782              	.LBE601:
 783              	.LBE603:
 784              	.LBE606:
 785              	.LBE610:
 786              	.LBE632:
 787              	.LBE636:
 788              	.LBE641:
 789              	.LBB642:
 790              	.LBB643:
 791              	.LBB644:
 792              		.file 33 "AudioFileManager.h"
   1:AudioFileManager.h **** #pragma once
   2:AudioFileManager.h **** #include <stdio.h>
   3:AudioFileManager.h **** #include <stdint.h>
   4:AudioFileManager.h **** #include <vector>
   5:AudioFileManager.h **** #include "daisy_pod.h"
   6:AudioFileManager.h **** #include "constants_utils.h"
   7:AudioFileManager.h **** #include "debug_print.h"
   8:AudioFileManager.h **** 
   9:AudioFileManager.h **** using namespace daisy; 
  10:AudioFileManager.h **** 
  11:AudioFileManager.h **** class AudioFileManager {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 55


  12:AudioFileManager.h ****   public:
  13:AudioFileManager.h ****     AudioFileManager(SdmmcHandler &sd, FatFSInterface &fsi, DaisyPod &pod, FIL *file)
  14:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
  15:AudioFileManager.h ****         left_buf_(nullptr), right_buf_(nullptr) {};
 793              		.loc 33 15 47 view .LVU182
 794 004c 494F     		ldr	r7, .L12+24
 795              	.LBE644:
 796              	.LBE643:
 797              	.LBE642:
 798              	.LBB647:
 799              	.LBB637:
 800              	.LBB633:
 801              	.LBB611:
 802              	.LBB607:
 803              	.LBB604:
 804              	.LBB602:
 805              	.LBB600:
 806              	.LBB598:
  15:../libDaisy/src/util/FIFO.h ****     {
 807              		.loc 5 15 75 view .LVU183
 808 004e C5E99134 		strd	r3, r4, [r5, #580]
 809              	.LBE598:
 810              	.LBE600:
 811              	.LBE602:
 812              	.LBE604:
 813              	.LBE607:
 814              	.LBE611:
 815              	.LBE633:
 816              	.LBE637:
 817              	.LBE647:
  31:main.cpp      **** FIL file;
 818              		.loc 27 31 10 view .LVU184
 819 0052 FFF7FEFF 		bl	__aeabi_atexit
 820              	.LVL19:
 821              	.LBB648:
 822              	.LBI648:
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 823              		.loc 1 38 5 is_stmt 1 view .LVU185
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 824              		.loc 1 38 5 is_stmt 0 view .LVU186
 825              	.LBE648:
  35:main.cpp      **** /* software classes to run app */
 826              		.loc 27 35 24 view .LVU187
 827 0056 4849     		ldr	r1, .L12+28
 828 0058 424A     		ldr	r2, .L12+8
 829 005a 4848     		ldr	r0, .L12+32
 830 005c FFF7FEFF 		bl	__aeabi_atexit
 831              	.LVL20:
 832              	.LBB649:
 833              	.LBI642:
  13:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
 834              		.loc 33 13 5 is_stmt 1 view .LVU188
 835              	.LBB646:
 836              	.LBB645:
 837              		.loc 33 15 47 is_stmt 0 view .LVU189
 838 0060 474B     		ldr	r3, .L12+36
 839 0062 BC61     		str	r4, [r7, #24]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 56


 840 0064 7E60     		str	r6, [r7, #4]
 841 0066 C7E90235 		strd	r3, r5, [r7, #8]
 842 006a 464B     		ldr	r3, .L12+40
 843 006c C7E90434 		strd	r3, r4, [r7, #16]
 844 0070 07F58053 		add	r3, r7, #4096
 845 0074 DC83     		strh	r4, [r3, #30]	@ movhi
 846              	.LVL21:
 847              		.loc 33 15 47 view .LVU190
 848              	.LBE645:
 849              	.LBE646:
 850              	.LBE649:
 851              	.LBB650:
 852              	.LBI650:
   9:GranularSynth.h ****   public:
  10:GranularSynth.h ****     GranularSynth(DaisyPod& pod) 
 853              		.loc 17 10 5 is_stmt 1 view .LVU191
 854              	.LBB651:
 855              	.LBB652:
  11:GranularSynth.h ****       : pod_(pod), left_buf_(nullptr), right_buf_(nullptr), audio_len_(0),
  12:GranularSynth.h ****         grains_(){}
 856              		.loc 17 12 17 is_stmt 0 view .LVU192
 857 0076 444B     		ldr	r3, .L12+44
 858 0078 C3E90054 		strd	r5, r4, [r3]
 859 007c C3E90244 		strd	r4, r4, [r3, #8]
 860              		.loc 17 12 17 is_stmt 1 view .LVU193
 861 0080 1946     		mov	r1, r3
 862 0082 0A24     		movs	r4, #10
 863              	.L10:
 864              	.LVL22:
 865              	.LBB653:
 866              	.LBI653:
 867              		.file 34 "Grain.h"
   1:Grain.h       **** #pragma once
   2:Grain.h       **** 
   3:Grain.h       **** #include "daisy_pod.h"
   4:Grain.h       **** #include "daisysp.h"
   5:Grain.h       **** #include "sample.h"
   6:Grain.h       **** #include "GrainPhasor.h"
   7:Grain.h       **** 
   8:Grain.h       **** using namespace daisy;
   9:Grain.h       **** using namespace daisysp;
  10:Grain.h       **** 
  11:Grain.h       **** class Grain {
  12:Grain.h       ****   public:
  13:Grain.h       ****     Grain():
 868              		.loc 34 13 5 view .LVU194
 869              	.LBB654:
 870              	.LBB655:
 871              	.LBB656:
 872              		.file 35 "GrainPhasor.h"
   1:GrainPhasor.h **** #include "constants_utils.h"
   2:GrainPhasor.h **** class GrainPhasor {
   3:GrainPhasor.h ****   public:
   4:GrainPhasor.h **** 
   5:GrainPhasor.h ****     GrainPhasor(): 
   6:GrainPhasor.h ****       phase_(0), increment_(0), direction_(1.0f), grain_finished_(false) {};
 873              		.loc 35 6 72 is_stmt 0 view .LVU195
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 57


 874 0084 4FF00008 		mov	r8, #0
 875              	.LBE656:
 876              	.LBE655:
  14:Grain.h       ****       is_active_(false){}
 877              		.loc 34 14 23 view .LVU196
 878 0088 0022     		movs	r2, #0
 879              	.LBB659:
 880              	.LBB657:
 881              		.loc 35 6 72 view .LVU197
 882 008a 4FF07E50 		mov	r0, #1065353216
 883              	.LBE657:
 884              	.LBE659:
 885              	.LBE654:
 886              	.LBE653:
 887              		.loc 17 12 17 view .LVU198
 888 008e 013C     		subs	r4, r4, #1
 889              	.LBB664:
 890              	.LBB662:
 891              		.loc 34 14 23 view .LVU199
 892 0090 1A74     		strb	r2, [r3, #16]
 893              	.LVL23:
 894              	.LBB660:
 895              	.LBI655:
   5:GrainPhasor.h ****       phase_(0), increment_(0), direction_(1.0f), grain_finished_(false) {};
 896              		.loc 35 5 5 is_stmt 1 view .LVU200
 897              	.LBE660:
 898              	.LBE662:
 899              	.LBE664:
 900              		.loc 17 12 17 is_stmt 0 view .LVU201
 901 0092 03F13403 		add	r3, r3, #52
 902              	.LVL24:
 903              	.LBB665:
 904              	.LBB663:
 905              	.LBB661:
 906              	.LBB658:
 907              		.loc 35 6 72 view .LVU202
 908 0096 43F8208C 		str	r8, [r3, #-32]	@ float
 909 009a 43F81C8C 		str	r8, [r3, #-28]	@ float
 910 009e 43F8180C 		str	r0, [r3, #-24]	@ float
 911 00a2 03F8142C 		strb	r2, [r3, #-20]
 912              	.LVL25:
 913              		.loc 35 6 72 view .LVU203
 914              	.LBE658:
 915              	.LBE661:
 916              		.loc 34 14 23 view .LVU204
 917 00a6 43F8108C 		str	r8, [r3, #-16]	@ float
 918 00aa 43F80C8C 		str	r8, [r3, #-12]	@ float
 919 00ae 43F8088C 		str	r8, [r3, #-8]	@ float
 920 00b2 43F8042C 		str	r2, [r3, #-4]
 921              	.LVL26:
 922              		.loc 34 14 23 view .LVU205
 923              	.LBE663:
 924              	.LBE665:
 925              		.loc 17 12 17 is_stmt 1 view .LVU206
 926              		.loc 17 12 17 view .LVU207
 927 00b6 E5D1     		bne	.L10
 928              	.LBE652:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 58


 929              	.LBE651:
 930              	.LBE650:
 931              	.LBB669:
 932              	.LBB670:
 933              	.LBB671:
  21:GrannyChordApp.h ****             instance_ = this;
 934              		.loc 19 21 44 is_stmt 0 view .LVU208
 935 00b8 344E     		ldr	r6, .L12+48
 936              	.LBE671:
 937              	.LBE670:
 938              	.LBE669:
 939              	.LBB715:
 940              	.LBB668:
 941              	.LBB667:
 942              		.loc 17 12 17 view .LVU209
 943 00ba C1F82042 		str	r4, [r1, #544]
 944              	.LVL27:
 945              	.LBB666:
 946              	.LBI666:
  33:../DaisySP/Source/Utility/smooth_random.h ****     ~SmoothRandomGenerator() {}
 947              		.loc 18 33 5 is_stmt 1 view .LVU210
  33:../DaisySP/Source/Utility/smooth_random.h ****     ~SmoothRandomGenerator() {}
 948              		.loc 18 33 5 is_stmt 0 view .LVU211
 949              	.LBE666:
 950              	.LBE667:
 951              	.LBE668:
 952              	.LBE715:
  38:main.cpp      **** GrannyChordApp app(pod, synth, filemgr, reverb);
 953              		.loc 27 38 22 view .LVU212
 954 00be 294A     		ldr	r2, .L12+8
 955 00c0 3349     		ldr	r1, .L12+52
 956 00c2 3148     		ldr	r0, .L12+44
 957 00c4 FFF7FEFF 		bl	__aeabi_atexit
 958              	.LVL28:
 959              	.LBB716:
 960              	.LBI669:
  19:GrannyChordApp.h ****         : pod_(pod), synth_(synth), 
 961              		.loc 19 19 3 is_stmt 1 view .LVU213
 962              	.LBB711:
 963              	.LBB707:
 964              	.LBB672:
 965              	.LBI672:
 966              		.file 36 "../libDaisy/src/util/CpuLoadMeter.h"
   1:../libDaisy/src/util/CpuLoadMeter.h **** #pragma once
   2:../libDaisy/src/util/CpuLoadMeter.h **** 
   3:../libDaisy/src/util/CpuLoadMeter.h **** #include "sys/system.h"
   4:../libDaisy/src/util/CpuLoadMeter.h **** #include <cmath>
   5:../libDaisy/src/util/CpuLoadMeter.h **** 
   6:../libDaisy/src/util/CpuLoadMeter.h **** namespace daisy
   7:../libDaisy/src/util/CpuLoadMeter.h **** {
   8:../libDaisy/src/util/CpuLoadMeter.h **** /** @brief CPU load metering
   9:../libDaisy/src/util/CpuLoadMeter.h ****  *  @author jelliesen
  10:../libDaisy/src/util/CpuLoadMeter.h ****  *  @addtogroup utility
  11:../libDaisy/src/util/CpuLoadMeter.h ****  * 
  12:../libDaisy/src/util/CpuLoadMeter.h ****  *  To measure the CPU load of your audio processing, create a CpuLoadMeter
  13:../libDaisy/src/util/CpuLoadMeter.h ****  *  and initialize it with your block size and sample rate.
  14:../libDaisy/src/util/CpuLoadMeter.h ****  *  Then at the beginning of the audio callback, call `OnBlockStart()`, 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 59


  15:../libDaisy/src/util/CpuLoadMeter.h ****  *  and at the end of the audio callback, call `OnBlockEnd()`.
  16:../libDaisy/src/util/CpuLoadMeter.h ****  *  You can then read out the minimum, maximum and average CPU load.
  17:../libDaisy/src/util/CpuLoadMeter.h ****  */
  18:../libDaisy/src/util/CpuLoadMeter.h **** class CpuLoadMeter
  19:../libDaisy/src/util/CpuLoadMeter.h **** {
  20:../libDaisy/src/util/CpuLoadMeter.h ****   public:
  21:../libDaisy/src/util/CpuLoadMeter.h ****     CpuLoadMeter(){};
 967              		.loc 36 21 5 view .LVU214
 968              		.loc 36 21 5 is_stmt 0 view .LVU215
 969              	.LBE672:
  21:GrannyChordApp.h ****             instance_ = this;
 970              		.loc 19 21 44 view .LVU216
 971 00c8 F561     		str	r5, [r6, #28]
 972 00ca 4FF41B72 		mov	r2, #620
 973 00ce 2E49     		ldr	r1, .L12+44
 974 00d0 06F12000 		add	r0, r6, #32
 975              	.LBB673:
 976              	.LBB674:
 977              	.LBB675:
 978              		.file 37 "StereoRotator.h"
   1:StereoRotator.h **** #include <cmath>
   2:StereoRotator.h **** 
   3:StereoRotator.h **** class StereoRotator{
   4:StereoRotator.h ****   public:
   5:StereoRotator.h ****     StereoRotator(){}
 979              		.loc 37 5 20 view .LVU217
 980 00d4 06F58045 		add	r5, r6, #16384
 981              	.LBE675:
 982              	.LBE674:
 983              	.LBE673:
  21:GrannyChordApp.h ****             instance_ = this;
 984              		.loc 19 21 44 view .LVU218
 985 00d8 FFF7FEFF 		bl	memcpy
 986              	.LVL29:
 987 00dc 274B     		ldr	r3, .L12+32
 988              	.LBB686:
 989              	.LBB681:
 990              	.LBB676:
 991              		.loc 37 5 20 view .LVU219
 992 00de 2D4A     		ldr	r2, .L12+56
 993              	.LBE676:
 994              	.LBE681:
 995              	.LBE686:
  21:GrannyChordApp.h ****             instance_ = this;
 996              		.loc 19 21 44 view .LVU220
 997 00e0 2146     		mov	r1, r4
 998 00e2 C6F8EC32 		str	r3, [r6, #748]
 999              	.LBB687:
 1000              	.LBB682:
 1001              	.LBB677:
 1002              		.loc 37 5 20 view .LVU221
 1003 00e6 05F6A463 		addw	r3, r5, #3748
 1004              	.LBE677:
 1005              	.LBE682:
 1006              	.LBE687:
  21:GrannyChordApp.h ****             instance_ = this;
 1007              		.loc 19 21 44 view .LVU222
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 60


 1008 00ea 05F65470 		addw	r0, r5, #3924
 1009 00ee C6F88C72 		str	r7, [r6, #652]
 1010              	.LVL30:
 1011              	.LBB688:
 1012              	.LBI688:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 1013              		.loc 26 37 5 is_stmt 1 view .LVU223
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 1014              		.loc 26 37 5 is_stmt 0 view .LVU224
 1015              	.LBE688:
 1016              	.LBB689:
 1017              	.LBI689:
  24:../DaisySP/Source/Dynamics/limiter.h ****     ~Limiter() {}
 1018              		.loc 25 24 5 is_stmt 1 view .LVU225
  24:../DaisySP/Source/Dynamics/limiter.h ****     ~Limiter() {}
 1019              		.loc 25 24 5 is_stmt 0 view .LVU226
 1020              	.LBE689:
 1021              	.LBB690:
 1022              	.LBI690:
  97:../DaisySP/Source/Effects/chorus.h ****     ~Chorus() {}
 1023              		.loc 24 97 5 is_stmt 1 view .LVU227
 1024              	.LBE690:
 1025              	.LBE707:
 1026              	.LBE711:
 1027              	.LBE716:
 1028              	.LBE720:
 1029              	.LBE723:
  97:../DaisySP/Source/Effects/chorus.h ****     ~Chorus() {}
 1030              		.loc 24 97 14 view .LVU228
 1031              	.LBB724:
 1032              	.LBB721:
 1033              	.LBB717:
 1034              	.LBB712:
 1035              	.LBB708:
 1036              	.LBB691:
 1037              	.LBI691:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 1038              		.loc 23 22 5 view .LVU229
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 1039              		.loc 23 22 5 is_stmt 0 view .LVU230
 1040              	.LBE691:
 1041              	.LBB692:
 1042              	.LBI692:
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 1043              		.loc 22 29 5 is_stmt 1 view .LVU231
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 1044              		.loc 22 29 5 is_stmt 0 view .LVU232
 1045              	.LBE692:
 1046              	.LBB693:
 1047              	.LBI673:
 1048              		.loc 37 5 5 is_stmt 1 view .LVU233
 1049              	.LBB683:
 1050              	.LBB678:
 1051              		.loc 37 5 20 is_stmt 0 view .LVU234
 1052 00f2 C3F80080 		str	r8, [r3]	@ float
 1053 00f6 05F6A863 		addw	r3, r5, #3752
 1054              	.LBE678:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 61


 1055              	.LBE683:
 1056              	.LBE693:
  21:GrannyChordApp.h ****             instance_ = this;
 1057              		.loc 19 21 44 view .LVU235
 1058 00fa C5F8C84E 		str	r4, [r5, #3784]
 1059              	.LBB694:
 1060              	.LBB684:
 1061              	.LBB679:
 1062              		.loc 37 5 20 view .LVU236
 1063 00fe 1A60     		str	r2, [r3]	@ float
 1064 0100 05F6AC63 		addw	r3, r5, #3756
 1065              	.LBE679:
 1066              	.LBE684:
 1067              	.LBE694:
  21:GrannyChordApp.h ****             instance_ = this;
 1068              		.loc 19 21 44 view .LVU237
 1069 0104 2022     		movs	r2, #32
 1070 0106 C5F8CC4E 		str	r4, [r5, #3788]
 1071              	.LBB695:
 1072              	.LBB685:
 1073              	.LBB680:
 1074              		.loc 37 5 20 view .LVU238
 1075 010a C3F80080 		str	r8, [r3]	@ float
 1076              	.LVL31:
 1077              		.loc 37 5 20 view .LVU239
 1078              	.LBE680:
 1079              	.LBE685:
 1080              	.LBE695:
 1081              	.LBB696:
 1082              	.LBI696:
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 1083              		.loc 22 29 5 is_stmt 1 view .LVU240
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 1084              		.loc 22 29 5 is_stmt 0 view .LVU241
 1085              	.LBE696:
  21:GrannyChordApp.h ****             instance_ = this;
 1086              		.loc 19 21 44 view .LVU242
 1087 010e C5F8D04E 		str	r4, [r5, #3792]
 1088 0112 FFF7FEFF 		bl	memset
 1089              	.LVL32:
 1090 0116 2146     		mov	r1, r4
 1091 0118 2022     		movs	r2, #32
 1092 011a 05F67470 		addw	r0, r5, #3956
 1093 011e FFF7FEFF 		bl	memset
 1094              	.LVL33:
 1095              	.LBB697:
 1096              	.LBI697:
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 1097              		.loc 21 36 5 is_stmt 1 view .LVU243
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 1098              		.loc 21 36 5 is_stmt 0 view .LVU244
 1099              	.LBE697:
  21:GrannyChordApp.h ****             instance_ = this;
 1100              		.loc 19 21 44 view .LVU245
 1101 0122 06F55043 		add	r3, r6, #53248
 1102              	.LBE708:
 1103              	.LBE712:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 62


 1104              	.LBE717:
  39:main.cpp      **** 
 1105              		.loc 27 39 16 view .LVU246
 1106 0126 3046     		mov	r0, r6
 1107 0128 0E4A     		ldr	r2, .L12+8
 1108              	.LBB718:
 1109              	.LBB713:
 1110              	.LBB709:
  21:GrannyChordApp.h ****             instance_ = this;
 1111              		.loc 19 21 44 view .LVU247
 1112 012a 83F80842 		strb	r4, [r3, #520]
 1113 012e C3F80C42 		str	r4, [r3, #524]
 1114 0132 83F81042 		strb	r4, [r3, #528]
 1115 0136 C3F82442 		str	r4, [r3, #548]
 1116 013a A3F82842 		strh	r4, [r3, #552]	@ movhi
 1117 013e 83F82A42 		strb	r4, [r3, #554]
 1118              	.LVL34:
 1119              	.LBB698:
 1120              	.LBI698:
 1121              		.loc 19 96 12 is_stmt 1 view .LVU248
 1122              	.LBB699:
 1123              	.LBI699:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1124              		.loc 20 26 5 view .LVU249
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1125              		.loc 20 26 5 is_stmt 0 view .LVU250
 1126              	.LBE699:
 1127              	.LBB700:
 1128              	.LBI700:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1129              		.loc 20 26 5 is_stmt 1 view .LVU251
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1130              		.loc 20 26 5 is_stmt 0 view .LVU252
 1131              	.LBE700:
 1132              	.LBB701:
 1133              	.LBI701:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1134              		.loc 20 26 5 is_stmt 1 view .LVU253
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1135              		.loc 20 26 5 is_stmt 0 view .LVU254
 1136              	.LBE701:
 1137              	.LBB702:
 1138              	.LBI702:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1139              		.loc 20 26 5 is_stmt 1 view .LVU255
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1140              		.loc 20 26 5 is_stmt 0 view .LVU256
 1141              	.LBE702:
 1142              	.LBB703:
 1143              	.LBI703:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1144              		.loc 20 26 5 is_stmt 1 view .LVU257
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1145              		.loc 20 26 5 is_stmt 0 view .LVU258
 1146              	.LBE703:
 1147              	.LBB704:
 1148              	.LBI704:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 63


  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1149              		.loc 20 26 5 is_stmt 1 view .LVU259
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1150              		.loc 20 26 5 is_stmt 0 view .LVU260
 1151              	.LBE704:
 1152              	.LBB705:
 1153              	.LBI705:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1154              		.loc 20 26 5 is_stmt 1 view .LVU261
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1155              		.loc 20 26 5 is_stmt 0 view .LVU262
 1156              	.LBE705:
 1157              	.LBB706:
 1158              	.LBI706:
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1159              		.loc 20 26 5 is_stmt 1 view .LVU263
  26:../libDaisy/src/util/color.h ****     ~Color() {}
 1160              		.loc 20 26 5 is_stmt 0 view .LVU264
 1161              	.LBE706:
 1162              	.LBE698:
  21:GrannyChordApp.h ****             instance_ = this;
 1163              		.loc 19 21 44 view .LVU265
 1164 0142 83F88C42 		strb	r4, [r3, #652]
 1165 0146 C3F89042 		str	r4, [r3, #656]
  22:GrannyChordApp.h ****           };
 1166              		.loc 19 22 13 is_stmt 1 view .LVU266
 1167              	.LBE709:
 1168              	.LBE713:
 1169              	.LBE718:
  39:main.cpp      **** 
 1170              		.loc 27 39 16 is_stmt 0 view .LVU267
 1171 014a 1349     		ldr	r1, .L12+60
 1172              	.LBB719:
 1173              	.LBB714:
 1174              	.LBB710:
  21:GrannyChordApp.h ****             instance_ = this;
 1175              		.loc 19 21 44 view .LVU268
 1176 014c C3E98544 		strd	r4, r4, [r3, #532]
  22:GrannyChordApp.h ****           };
 1177              		.loc 19 22 23 view .LVU269
 1178 0150 124B     		ldr	r3, .L12+64
 1179 0152 1E60     		str	r6, [r3]
 1180              	.LVL35:
  22:GrannyChordApp.h ****           };
 1181              		.loc 19 22 23 view .LVU270
 1182              	.LBE710:
 1183              	.LBE714:
 1184              	.LBE719:
 1185              	.LBE721:
 1186              	.LBE724:
 1187              		.loc 27 51 1 view .LVU271
 1188 0154 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1189              		.cfi_restore 14
 1190              		.cfi_restore 8
 1191              		.cfi_restore 7
 1192              		.cfi_restore 6
 1193              		.cfi_restore 5
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 64


 1194              		.cfi_restore 4
 1195              		.cfi_def_cfa_offset 0
 1196              	.LBB725:
 1197              	.LBB722:
  39:main.cpp      **** 
 1198              		.loc 27 39 16 view .LVU272
 1199 0158 FFF7FEBF 		b	__aeabi_atexit
 1200              	.LVL36:
 1201              	.L13:
 1202              		.align	2
 1203              	.L12:
 1204 015c 00000000 		.word	.LANCHOR0
 1205 0160 00000000 		.word	pod
 1206 0164 00000000 		.word	__dso_handle
 1207 0168 00000000 		.word	_ZN5daisy12SdmmcHandlerD1Ev
 1208 016c 0080707F 		.word	2138079232
 1209 0170 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 1210 0174 00000000 		.word	filemgr
 1211 0178 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
 1212 017c 00000000 		.word	reverb
 1213 0180 00000000 		.word	.LANCHOR1
 1214 0184 00000000 		.word	.LANCHOR2
 1215 0188 00000000 		.word	.LANCHOR3
 1216 018c 00000000 		.word	app
 1217 0190 00000000 		.word	_ZN13GranularSynthD1Ev
 1218 0194 CDCCCC3D 		.word	1036831949
 1219 0198 00000000 		.word	_ZN14GrannyChordAppD1Ev
 1220 019c 00000000 		.word	_ZN14GrannyChordApp9instance_E
 1221              	.LBE722:
 1222              	.LBE725:
 1223              		.cfi_endproc
 1224              	.LFE5507:
 1226              		.section	.init_array,"aw",%init_array
 1227              		.align	2
 1228 0000 00000000 		.word	_GLOBAL__sub_I_left_buf(target1)
 1229              		.global	rng_state
 1230              		.global	app
 1231              		.global	filemgr
 1232              		.global	reverb
 1233              		.global	file
 1234              		.global	pod
 1235              		.global	fsi
 1236              		.global	sd
 1237              		.global	right_buf
 1238              		.global	left_buf
 1239              		.section	.bss._ZL5synth,"aw",%nobits
 1240              		.align	2
 1241              		.set	.LANCHOR3,. + 0
 1244              	_ZL5synth:
 1245 0000 00000000 		.space	620
 1245      00000000 
 1245      00000000 
 1245      00000000 
 1245      00000000 
 1246              		.section	.bss.app,"aw",%nobits
 1247              		.align	2
 1250              	app:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 65


 1251 0000 00000000 		.space	53908
 1251      00000000 
 1251      00000000 
 1251      00000000 
 1251      00000000 
 1252              		.section	.bss.file,"aw",%nobits
 1253              		.align	2
 1254              		.set	.LANCHOR2,. + 0
 1257              	file:
 1258 0000 00000000 		.space	556
 1258      00000000 
 1258      00000000 
 1258      00000000 
 1258      00000000 
 1259              		.section	.bss.filemgr,"aw",%nobits
 1260              		.align	2
 1263              	filemgr:
 1264 0000 00000000 		.space	4148
 1264      00000000 
 1264      00000000 
 1264      00000000 
 1264      00000000 
 1265              		.section	.bss.fsi,"aw",%nobits
 1266              		.align	2
 1267              		.set	.LANCHOR1,. + 0
 1270              	fsi:
 1271 0000 00000000 		.space	1152
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1272              		.section	.bss.pod,"aw",%nobits
 1273              		.align	2
 1276              	pod:
 1277 0000 00000000 		.space	37600
 1277      00000000 
 1277      00000000 
 1277      00000000 
 1277      00000000 
 1278              		.section	.bss.rng_state,"aw",%nobits
 1279              		.align	2
 1282              	rng_state:
 1283 0000 00000000 		.space	4
 1284              		.section	.bss.sd,"aw",%nobits
 1285              		.set	.LANCHOR0,. + 0
 1288              	sd:
 1289 0000 00       		.space	1
 1290              		.section	.sdram_bss,"aw"
 1291              		.align	4
 1294              	reverb:
 1295 0000 00000000 		.space	396104
 1295      00000000 
 1295      00000000 
 1295      00000000 
 1295      00000000 
 1296 60b48 00000000 		.space	8
 1296      00000000 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 66


 1299              	right_buf:
 1300 60b50 00000000 		.space	16777216
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1303              	left_buf:
 1304 1060b50 00000000 		.space	16777216
 1304      00000000 
 1304      00000000 
 1304      00000000 
 1304      00000000 
 1305              		.text
 1306              	.Letext0:
 1307              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1308              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1309              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1310              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1311              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1312              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1313              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1314              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1315              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1316              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1317              		.file 48 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1318              		.file 49 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 1319              		.file 50 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1320              		.file 51 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1321              		.file 52 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 1322              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1323              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 1324              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 1325              		.file 56 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1326              		.file 57 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1327              		.file 58 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 1328              		.file 59 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1329              		.file 60 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1330              		.file 61 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1331              		.file 62 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1332              		.file 63 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1333              		.file 64 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1334              		.file 65 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1335              		.file 66 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1336              		.file 67 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1337              		.file 68 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1338              		.file 69 "../DaisySP/Source/Control/adenv.h"
 1339              		.file 70 "../DaisySP/Source/Utility/dsp.h"
 1340              		.file 71 "../DaisySP/Source/Utility/delayline.h"
 1341              		.file 72 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 1342              		.file 73 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/time.h"
 1343              		.file 74 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 1344              		.file 75 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1345              		.file 76 "../DaisySP/Source/Effects/../../../src/sample.h"
 1346              		.file 77 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1347              		.file 78 "../libDaisy/src/daisy_core.h"
 1348              		.file 79 "../libDaisy/src/per/tim.h"
 1349              		.file 80 "../libDaisy/src/hid/MidiEvent.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 67


 1350              		.file 81 "../libDaisy/src/hid/logger_impl.h"
 1351              		.file 82 "../libDaisy/src/util/wav_format.h"
 1352              		.file 83 "../libDaisy/src/dev/max11300.h"
 1353              		.file 84 "../libDaisy/src/hid/logger.h"
 1354              		.file 85 "../libDaisy/src/per/gpio.h"
 1355              		.file 86 "../libDaisy/src/dev/sdram.h"
 1356              		.file 87 "../libDaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 1357              		.file 88 "../libDaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 1358              		.file 89 "constants_utils.h"
 1359              		.file 90 "../libDaisy/src/dev/sr_595.h"
 1360              		.file 91 "AppState.h"
 1361              		.file 92 "<built-in>"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:19     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:25     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:25     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:42     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:48     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:48     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:65     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:71     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:71     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:215    .text._ZN13GranularSynthD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:244    .text._ZN14GrannyChordAppD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:250    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:250    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:365    .text.startup.main:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:371    .text.startup.main:0000000000000000 main
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:433    .text.startup.main:000000000000002c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1276   .bss.pod:0000000000000000 pod
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1299   .sdram_bss:0000000000060b50 right_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1303   .sdram_bss:0000000001060b50 left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1250   .bss.app:0000000000000000 app
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:442    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:447    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 _GLOBAL__sub_I_left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1204   .text.startup._GLOBAL__sub_I_left_buf:000000000000015c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1263   .bss.filemgr:0000000000000000 filemgr
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1294   .sdram_bss:0000000000000000 reverb
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1227   .init_array:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1282   .bss.rng_state:0000000000000000 rng_state
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1257   .bss.file:0000000000000000 file
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1270   .bss.fsi:0000000000000000 fsi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1288   .bss.sd:0000000000000000 sd
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1240   .bss._ZL5synth:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1244   .bss._ZL5synth:0000000000000000 _ZL5synth
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1247   .bss.app:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1253   .bss.file:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1260   .bss.filemgr:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1266   .bss.fsi:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1273   .bss.pod:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1279   .bss.rng_state:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1289   .bss.sd:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s:1291   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN7daisysp8ReverbScD5Ev
                           .group:0000000000000000 _ZN5daisy12SdmmcHandlerD5Ev
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev
                           .group:0000000000000000 _ZN13GranularSynthD5Ev
                           .group:0000000000000000 _ZN14GrannyChordAppD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN14GrannyChordApp4InitEPsS0_
_ZN14GrannyChordApp3RunEv
__aeabi_atexit
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccTXr0Rw.s 			page 69


_ZN5daisy17MidiUartTransport6ConfigC1Ev
memcpy
memset
__dso_handle
_ZN14GrannyChordApp9instance_E

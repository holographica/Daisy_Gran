ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy12SdmmcHandlerD2Ev,"axG",%progbits,_ZN5daisy12SdmmcHandlerD5Ev,comdat
  19              		.align	1
  20              		.weak	_ZN5daisy12SdmmcHandlerD2Ev
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZN5daisy12SdmmcHandlerD2Ev:
  26              	.LVL0:
  27              	.LFB3849:
  28              		.file 1 "../libDaisy/src/per/sdmmc.h"
   1:../libDaisy/src/per/sdmmc.h **** /*
   2:../libDaisy/src/per/sdmmc.h **** TODO: 
   3:../libDaisy/src/per/sdmmc.h **** - Implement configuration (currently all settings are fixed).
   4:../libDaisy/src/per/sdmmc.h **** */
   5:../libDaisy/src/per/sdmmc.h **** #pragma once
   6:../libDaisy/src/per/sdmmc.h **** #ifndef DSY_SDMMC_H
   7:../libDaisy/src/per/sdmmc.h **** #define DSY_SDMMC_H /**< macro */
   8:../libDaisy/src/per/sdmmc.h **** 
   9:../libDaisy/src/per/sdmmc.h **** #include <stdint.h>
  10:../libDaisy/src/per/sdmmc.h **** 
  11:../libDaisy/src/per/sdmmc.h **** 
  12:../libDaisy/src/per/sdmmc.h **** namespace daisy
  13:../libDaisy/src/per/sdmmc.h **** {
  14:../libDaisy/src/per/sdmmc.h **** /** @ingroup peripheral
  15:../libDaisy/src/per/sdmmc.h ****     @{
  16:../libDaisy/src/per/sdmmc.h ****     */
  17:../libDaisy/src/per/sdmmc.h **** 
  18:../libDaisy/src/per/sdmmc.h **** /** Configuration for interfacing with SD cards.
  19:../libDaisy/src/per/sdmmc.h ****  *  Currently only supports operation using FatFS filesystem
  20:../libDaisy/src/per/sdmmc.h ****  * 
  21:../libDaisy/src/per/sdmmc.h ****  *  Only SDMMC1 is supported at this time.
  22:../libDaisy/src/per/sdmmc.h ****  *
  23:../libDaisy/src/per/sdmmc.h ****  *  Pins are fixed to the following:
  24:../libDaisy/src/per/sdmmc.h ****  *  PC12 - SDMMC1 CK
  25:../libDaisy/src/per/sdmmc.h ****  *  PD2  - SDMMC1 CMD
  26:../libDaisy/src/per/sdmmc.h ****  *  PC8  - SDMMC1 D0
  27:../libDaisy/src/per/sdmmc.h ****  *  PC9  - SDMMC1 D1 (optional)
  28:../libDaisy/src/per/sdmmc.h ****  *  PC10 - SDMMC1 D2 (optional)
  29:../libDaisy/src/per/sdmmc.h ****  *  PC11 - SDMMC1 D3 (optional)
  30:../libDaisy/src/per/sdmmc.h **** */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 2


  31:../libDaisy/src/per/sdmmc.h **** class SdmmcHandler
  32:../libDaisy/src/per/sdmmc.h **** {
  33:../libDaisy/src/per/sdmmc.h ****   public:
  34:../libDaisy/src/per/sdmmc.h ****     /** Return values for the SdmmcHandler class */
  35:../libDaisy/src/per/sdmmc.h ****     enum class Result
  36:../libDaisy/src/per/sdmmc.h ****     {
  37:../libDaisy/src/per/sdmmc.h ****         OK,
  38:../libDaisy/src/per/sdmmc.h ****         ERROR,
  39:../libDaisy/src/per/sdmmc.h ****     };
  40:../libDaisy/src/per/sdmmc.h **** 
  41:../libDaisy/src/per/sdmmc.h ****     /** Sets whether 4-bit mode or 1-bit mode is used for the SDMMC */
  42:../libDaisy/src/per/sdmmc.h ****     enum class BusWidth
  43:../libDaisy/src/per/sdmmc.h ****     {
  44:../libDaisy/src/per/sdmmc.h ****         BITS_1, /**< Only 1 bit of data per clock is transferred */
  45:../libDaisy/src/per/sdmmc.h ****         BITS_4, /**< 4-bits of parallel data for each clock pulse */
  46:../libDaisy/src/per/sdmmc.h ****     };
  47:../libDaisy/src/per/sdmmc.h **** 
  48:../libDaisy/src/per/sdmmc.h ****     /** 
  49:../libDaisy/src/per/sdmmc.h ****     Sets the desired clock speed of the SD card bus. \n 
  50:../libDaisy/src/per/sdmmc.h ****     Initialization is always done at or below 400kHz, and then the user speed is set.
  51:../libDaisy/src/per/sdmmc.h ****     */
  52:../libDaisy/src/per/sdmmc.h ****     enum class Speed
  53:../libDaisy/src/per/sdmmc.h ****     {
  54:../libDaisy/src/per/sdmmc.h ****         SLOW, /**< 400kHz, initialization  performed at this rate, before moving to user value */
  55:../libDaisy/src/per/sdmmc.h ****         MEDIUM_SLOW, /**< 12.5MHz - half of standard rate */
  56:../libDaisy/src/per/sdmmc.h ****         STANDARD,    /**< 25MHz - DS (Default Speed for SDMMC) */
  57:../libDaisy/src/per/sdmmc.h ****         FAST,        /**< 50MHz - HS (High Speed signaling) */
  58:../libDaisy/src/per/sdmmc.h ****         VERY_FAST, /**< 100MHz - SDR50 Overclocked rate for maximum transfer rates */
  59:../libDaisy/src/per/sdmmc.h ****     };
  60:../libDaisy/src/per/sdmmc.h **** 
  61:../libDaisy/src/per/sdmmc.h ****     struct Config
  62:../libDaisy/src/per/sdmmc.h ****     {
  63:../libDaisy/src/per/sdmmc.h ****         Speed    speed;
  64:../libDaisy/src/per/sdmmc.h ****         BusWidth width;
  65:../libDaisy/src/per/sdmmc.h ****         bool
  66:../libDaisy/src/per/sdmmc.h ****             clock_powersave; /**< When true, the clock will stop between transfers to save power. *
  67:../libDaisy/src/per/sdmmc.h **** 
  68:../libDaisy/src/per/sdmmc.h ****         /** Configures settings to their default settings */
  69:../libDaisy/src/per/sdmmc.h ****         void Defaults()
  70:../libDaisy/src/per/sdmmc.h ****         {
  71:../libDaisy/src/per/sdmmc.h ****             speed           = Speed::FAST;
  72:../libDaisy/src/per/sdmmc.h ****             width           = BusWidth::BITS_4;
  73:../libDaisy/src/per/sdmmc.h ****             clock_powersave = false;
  74:../libDaisy/src/per/sdmmc.h ****         }
  75:../libDaisy/src/per/sdmmc.h ****     };
  76:../libDaisy/src/per/sdmmc.h **** 
  77:../libDaisy/src/per/sdmmc.h ****     SdmmcHandler() {}
  78:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
  29              		.loc 1 78 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 78 22 is_stmt 0 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE3849:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 3


  39              		.weak	_ZN5daisy12SdmmcHandlerD1Ev
  40              		.thumb_set _ZN5daisy12SdmmcHandlerD1Ev,_ZN5daisy12SdmmcHandlerD2Ev
  41              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  42              		.align	1
  43              		.weak	_ZN5daisy8DaisyPodD2Ev
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	_ZN5daisy8DaisyPodD2Ev:
  49              	.LVL1:
  50              	.LFB4686:
  51              		.file 2 "../libDaisy/src/daisy_pod.h"
   1:../libDaisy/src/daisy_pod.h **** #pragma once
   2:../libDaisy/src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../libDaisy/src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../libDaisy/src/daisy_pod.h **** 
   5:../libDaisy/src/daisy_pod.h **** #include "daisy_seed.h"
   6:../libDaisy/src/daisy_pod.h **** 
   7:../libDaisy/src/daisy_pod.h **** namespace daisy
   8:../libDaisy/src/daisy_pod.h **** {
   9:../libDaisy/src/daisy_pod.h **** /**
  10:../libDaisy/src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../libDaisy/src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../libDaisy/src/daisy_pod.h ****     @author Stephen Hensley
  13:../libDaisy/src/daisy_pod.h ****     @date November 2019
  14:../libDaisy/src/daisy_pod.h ****     @ingroup boards
  15:../libDaisy/src/daisy_pod.h **** */
  16:../libDaisy/src/daisy_pod.h **** class DaisyPod
  17:../libDaisy/src/daisy_pod.h **** {
  18:../libDaisy/src/daisy_pod.h ****   public:
  19:../libDaisy/src/daisy_pod.h ****     /** Switches */
  20:../libDaisy/src/daisy_pod.h ****     enum Sw
  21:../libDaisy/src/daisy_pod.h ****     {
  22:../libDaisy/src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../libDaisy/src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../libDaisy/src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../libDaisy/src/daisy_pod.h ****     };
  26:../libDaisy/src/daisy_pod.h **** 
  27:../libDaisy/src/daisy_pod.h ****     /** Knobs */
  28:../libDaisy/src/daisy_pod.h ****     enum Knob
  29:../libDaisy/src/daisy_pod.h ****     {
  30:../libDaisy/src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../libDaisy/src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../libDaisy/src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../libDaisy/src/daisy_pod.h ****     };
  34:../libDaisy/src/daisy_pod.h **** 
  35:../libDaisy/src/daisy_pod.h ****     DaisyPod() {}
  36:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
  52              		.loc 2 36 5 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LBB263:
  58              	.LBI263:
  59              		.file 3 "../libDaisy/src/hid/midi.h"
   1:../libDaisy/src/hid/midi.h **** #pragma once
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 4


   2:../libDaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../libDaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../libDaisy/src/hid/midi.h **** 
   5:../libDaisy/src/hid/midi.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi.h **** #include <algorithm>
   8:../libDaisy/src/hid/midi.h **** #include "per/uart.h"
   9:../libDaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  10:../libDaisy/src/hid/midi.h **** #include "util/FIFO.h"
  11:../libDaisy/src/hid/midi.h **** #include "hid/midi_parser.h"
  12:../libDaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  13:../libDaisy/src/hid/midi.h **** #include "sys/dma.h"
  14:../libDaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../libDaisy/src/hid/midi.h **** 
  16:../libDaisy/src/hid/midi.h **** namespace daisy
  17:../libDaisy/src/hid/midi.h **** {
  18:../libDaisy/src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART
  19:../libDaisy/src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../libDaisy/src/hid/midi.h ****  *           There is an additional 2kB of RAM data used within this class
  21:../libDaisy/src/hid/midi.h ****  *           for processing bulk data from the UART peripheral
  22:../libDaisy/src/hid/midi.h ****  *  @ingroup midi
  23:../libDaisy/src/hid/midi.h **** */
  24:../libDaisy/src/hid/midi.h **** class MidiUartTransport
  25:../libDaisy/src/hid/midi.h **** {
  26:../libDaisy/src/hid/midi.h ****   public:
  27:../libDaisy/src/hid/midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  28:../libDaisy/src/hid/midi.h ****                                         size_t   size,
  29:../libDaisy/src/hid/midi.h ****                                         void*    context);
  30:../libDaisy/src/hid/midi.h **** 
  31:../libDaisy/src/hid/midi.h ****     MidiUartTransport() {}
  32:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  33:../libDaisy/src/hid/midi.h **** 
  34:../libDaisy/src/hid/midi.h ****     /** @brief Configuration structure for UART MIDI */
  35:../libDaisy/src/hid/midi.h ****     struct Config
  36:../libDaisy/src/hid/midi.h ****     {
  37:../libDaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  38:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  39:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  40:../libDaisy/src/hid/midi.h **** 
  41:../libDaisy/src/hid/midi.h ****         /** Pointer to buffer for DMA UART rx byte transfer in background.
  42:../libDaisy/src/hid/midi.h ****          *
  43:../libDaisy/src/hid/midi.h ****          *  @details By default this uses a shared buffer in DMA_BUFFER_MEM_SECTION,
  44:../libDaisy/src/hid/midi.h ****          *           which can only be utilized for a single UART peripheral. To
  45:../libDaisy/src/hid/midi.h ****          *           use MIDI with multiple UART peripherals, you must provide your own
  46:../libDaisy/src/hid/midi.h ****          *           buffer, allocated to a DMA-capable memory section.
  47:../libDaisy/src/hid/midi.h ****          */
  48:../libDaisy/src/hid/midi.h ****         uint8_t* rx_buffer;
  49:../libDaisy/src/hid/midi.h **** 
  50:../libDaisy/src/hid/midi.h ****         /** Size in bytes of rx_buffer.
  51:../libDaisy/src/hid/midi.h ****          *
  52:../libDaisy/src/hid/midi.h ****          *  @details This size determines the maximum Rx bytes readable by the UART in the backgrou
  53:../libDaisy/src/hid/midi.h ****          *           By default it's set to the size of the default shared rx_buffer (256 bytes).
  54:../libDaisy/src/hid/midi.h ****          *           While much smaller sizes can be used, data can get missed if the buffer is too
  55:../libDaisy/src/hid/midi.h ****          */
  56:../libDaisy/src/hid/midi.h ****         size_t rx_buffer_size;
  57:../libDaisy/src/hid/midi.h **** 
  58:../libDaisy/src/hid/midi.h ****         Config();
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 5


  59:../libDaisy/src/hid/midi.h ****     };
  60:../libDaisy/src/hid/midi.h **** 
  61:../libDaisy/src/hid/midi.h ****     /** @brief Initialization of UART using config struct */
  62:../libDaisy/src/hid/midi.h ****     inline void Init(Config config)
  63:../libDaisy/src/hid/midi.h ****     {
  64:../libDaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  65:../libDaisy/src/hid/midi.h **** 
  66:../libDaisy/src/hid/midi.h ****         //defaults
  67:../libDaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  68:../libDaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  69:../libDaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  70:../libDaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  71:../libDaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  72:../libDaisy/src/hid/midi.h **** 
  73:../libDaisy/src/hid/midi.h ****         //user settings
  74:../libDaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  75:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  76:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  77:../libDaisy/src/hid/midi.h **** 
  78:../libDaisy/src/hid/midi.h ****         rx_buffer      = config.rx_buffer;
  79:../libDaisy/src/hid/midi.h ****         rx_buffer_size = config.rx_buffer_size;
  80:../libDaisy/src/hid/midi.h **** 
  81:../libDaisy/src/hid/midi.h ****         /** zero the buffer to ensure emptiness regardless of source memory */
  82:../libDaisy/src/hid/midi.h ****         std::fill(rx_buffer, rx_buffer + rx_buffer_size, 0);
  83:../libDaisy/src/hid/midi.h **** 
  84:../libDaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  85:../libDaisy/src/hid/midi.h ****     }
  86:../libDaisy/src/hid/midi.h **** 
  87:../libDaisy/src/hid/midi.h ****     /** @brief Start the UART peripheral in listening mode.
  88:../libDaisy/src/hid/midi.h ****      *  This will fill an internal data structure in the background */
  89:../libDaisy/src/hid/midi.h ****     inline void StartRx(MidiRxParseCallback parse_callback, void* context)
  90:../libDaisy/src/hid/midi.h ****     {
  91:../libDaisy/src/hid/midi.h ****         parse_context_  = context;
  92:../libDaisy/src/hid/midi.h ****         parse_callback_ = parse_callback;
  93:../libDaisy/src/hid/midi.h ****         dsy_dma_clear_cache_for_buffer((uint8_t*)this,
  94:../libDaisy/src/hid/midi.h ****                                        sizeof(MidiUartTransport));
  95:../libDaisy/src/hid/midi.h ****         uart_.DmaListenStart(
  96:../libDaisy/src/hid/midi.h ****             rx_buffer, rx_buffer_size, MidiUartTransport::rxCallback, this);
  97:../libDaisy/src/hid/midi.h ****     }
  98:../libDaisy/src/hid/midi.h **** 
  99:../libDaisy/src/hid/midi.h ****     /** @brief returns whether the UART peripheral is actively listening in the background or not *
 100:../libDaisy/src/hid/midi.h ****     inline bool RxActive() { return uart_.IsListening(); }
 101:../libDaisy/src/hid/midi.h **** 
 102:../libDaisy/src/hid/midi.h ****     /** @brief This is a no-op for UART transport - Rx is via DMA callback with circular buffer */
 103:../libDaisy/src/hid/midi.h ****     inline void FlushRx() {}
 104:../libDaisy/src/hid/midi.h **** 
 105:../libDaisy/src/hid/midi.h ****     /** @brief sends the buffer of bytes out of the UART peripheral */
 106:../libDaisy/src/hid/midi.h ****     inline void Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
 107:../libDaisy/src/hid/midi.h **** 
 108:../libDaisy/src/hid/midi.h ****   private:
 109:../libDaisy/src/hid/midi.h ****     UartHandler         uart_;
 110:../libDaisy/src/hid/midi.h ****     uint8_t*            rx_buffer;
 111:../libDaisy/src/hid/midi.h ****     size_t              rx_buffer_size;
 112:../libDaisy/src/hid/midi.h ****     void*               parse_context_;
 113:../libDaisy/src/hid/midi.h ****     MidiRxParseCallback parse_callback_;
 114:../libDaisy/src/hid/midi.h **** 
 115:../libDaisy/src/hid/midi.h ****     /** Static callback for Uart MIDI that occurs when
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 6


 116:../libDaisy/src/hid/midi.h ****          *  new data is available from the peripheral.
 117:../libDaisy/src/hid/midi.h ****          *  The new data is transferred from the peripheral to the
 118:../libDaisy/src/hid/midi.h ****          *  MIDI instance's byte FIFO that feeds the MIDI parser.
 119:../libDaisy/src/hid/midi.h ****          *
 120:../libDaisy/src/hid/midi.h ****          *  TODO: Handle UartHandler errors better/at all.
 121:../libDaisy/src/hid/midi.h ****          *  (If there is a UART error, there's not really any recovery
 122:../libDaisy/src/hid/midi.h ****          *  option at the moment)
 123:../libDaisy/src/hid/midi.h ****          */
 124:../libDaisy/src/hid/midi.h ****     static void rxCallback(uint8_t*            data,
 125:../libDaisy/src/hid/midi.h ****                            size_t              size,
 126:../libDaisy/src/hid/midi.h ****                            void*               context,
 127:../libDaisy/src/hid/midi.h ****                            UartHandler::Result res)
 128:../libDaisy/src/hid/midi.h ****     {
 129:../libDaisy/src/hid/midi.h ****         /** Read context as transport type */
 130:../libDaisy/src/hid/midi.h ****         MidiUartTransport* transport
 131:../libDaisy/src/hid/midi.h ****             = reinterpret_cast<MidiUartTransport*>(context);
 132:../libDaisy/src/hid/midi.h ****         if(res == UartHandler::Result::OK)
 133:../libDaisy/src/hid/midi.h ****         {
 134:../libDaisy/src/hid/midi.h ****             if(transport->parse_callback_)
 135:../libDaisy/src/hid/midi.h ****             {
 136:../libDaisy/src/hid/midi.h ****                 transport->parse_callback_(
 137:../libDaisy/src/hid/midi.h ****                     data, size, transport->parse_context_);
 138:../libDaisy/src/hid/midi.h ****             }
 139:../libDaisy/src/hid/midi.h ****         }
 140:../libDaisy/src/hid/midi.h ****     }
 141:../libDaisy/src/hid/midi.h **** };
 142:../libDaisy/src/hid/midi.h **** 
 143:../libDaisy/src/hid/midi.h **** /**
 144:../libDaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n
 145:../libDaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n
 146:../libDaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
 147:../libDaisy/src/hid/midi.h ****     @author shensley
 148:../libDaisy/src/hid/midi.h ****     @date March 2020
 149:../libDaisy/src/hid/midi.h ****     @ingroup midi
 150:../libDaisy/src/hid/midi.h **** */
 151:../libDaisy/src/hid/midi.h **** template <typename Transport>
 152:../libDaisy/src/hid/midi.h **** class MidiHandler
 153:../libDaisy/src/hid/midi.h **** {
 154:../libDaisy/src/hid/midi.h ****   public:
 155:../libDaisy/src/hid/midi.h ****     MidiHandler() {}
 156:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
  60              		.loc 3 156 5 view .LVU3
  61              	.LBB264:
  62              	.LBI264:
  63              		.file 4 "../libDaisy/src/util/FIFO.h"
   1:../libDaisy/src/util/FIFO.h **** #pragma once
   2:../libDaisy/src/util/FIFO.h **** 
   3:../libDaisy/src/util/FIFO.h **** #include <stdint.h>
   4:../libDaisy/src/util/FIFO.h **** #include <stddef.h>
   5:../libDaisy/src/util/FIFO.h **** #include <initializer_list>
   6:../libDaisy/src/util/FIFO.h **** 
   7:../libDaisy/src/util/FIFO.h **** namespace daisy
   8:../libDaisy/src/util/FIFO.h **** {
   9:../libDaisy/src/util/FIFO.h **** /** Capacity-independent base class for FIFO. Use FIFO instead. */
  10:../libDaisy/src/util/FIFO.h **** template <typename T>
  11:../libDaisy/src/util/FIFO.h **** class FIFOBase
  12:../libDaisy/src/util/FIFO.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 7


  13:../libDaisy/src/util/FIFO.h ****   protected:
  14:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize)
  15:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  16:../libDaisy/src/util/FIFO.h ****     {
  17:../libDaisy/src/util/FIFO.h ****     }
  18:../libDaisy/src/util/FIFO.h **** 
  19:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize, std::initializer_list<T> valuesToAdd)
  20:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  21:../libDaisy/src/util/FIFO.h ****     {
  22:../libDaisy/src/util/FIFO.h ****         PushBack(valuesToAdd);
  23:../libDaisy/src/util/FIFO.h ****     }
  24:../libDaisy/src/util/FIFO.h **** 
  25:../libDaisy/src/util/FIFO.h ****   public:
  26:../libDaisy/src/util/FIFO.h ****     /** Copies all elements from another FIFO */
  27:../libDaisy/src/util/FIFO.h ****     FIFOBase<T>& operator=(const FIFOBase<T>& other)
  28:../libDaisy/src/util/FIFO.h ****     {
  29:../libDaisy/src/util/FIFO.h ****         bufferIn_ = bufferOut_ = 0;
  30:../libDaisy/src/util/FIFO.h ****         if(!other.IsEmpty())
  31:../libDaisy/src/util/FIFO.h ****         {
  32:../libDaisy/src/util/FIFO.h ****             int readPtr = other.bufferOut_;
  33:../libDaisy/src/util/FIFO.h ****             while((readPtr != other.bufferIn_) && (bufferIn_ < bufferSize_))
  34:../libDaisy/src/util/FIFO.h ****             {
  35:../libDaisy/src/util/FIFO.h ****                 buffer_[bufferIn_++] = other.buffer_[readPtr++];
  36:../libDaisy/src/util/FIFO.h ****                 if(readPtr >= other.bufferSize_)
  37:../libDaisy/src/util/FIFO.h ****                     readPtr -= other.bufferSize_;
  38:../libDaisy/src/util/FIFO.h ****             }
  39:../libDaisy/src/util/FIFO.h ****         }
  40:../libDaisy/src/util/FIFO.h ****         return *this;
  41:../libDaisy/src/util/FIFO.h ****     }
  42:../libDaisy/src/util/FIFO.h ****     ~FIFOBase() {}
  43:../libDaisy/src/util/FIFO.h **** 
  44:../libDaisy/src/util/FIFO.h ****     /** Removes all elements from the FIFO */
  45:../libDaisy/src/util/FIFO.h ****     void Clear() { bufferIn_ = bufferOut_ = 0; }
  46:../libDaisy/src/util/FIFO.h **** 
  47:../libDaisy/src/util/FIFO.h ****     /** Adds an element to the back of the buffer, returning true on
  48:../libDaisy/src/util/FIFO.h ****         success */
  49:../libDaisy/src/util/FIFO.h ****     bool PushBack(const T& elementToAdd)
  50:../libDaisy/src/util/FIFO.h ****     {
  51:../libDaisy/src/util/FIFO.h ****         if(!IsFull())
  52:../libDaisy/src/util/FIFO.h ****         {
  53:../libDaisy/src/util/FIFO.h ****             buffer_[bufferIn_++] = elementToAdd;
  54:../libDaisy/src/util/FIFO.h ****             if(bufferIn_ >= bufferSize_)
  55:../libDaisy/src/util/FIFO.h ****                 bufferIn_ -= bufferSize_;
  56:../libDaisy/src/util/FIFO.h ****             return true;
  57:../libDaisy/src/util/FIFO.h ****         }
  58:../libDaisy/src/util/FIFO.h ****         return false;
  59:../libDaisy/src/util/FIFO.h ****     }
  60:../libDaisy/src/util/FIFO.h **** 
  61:../libDaisy/src/util/FIFO.h ****     /** Adds multiple elements and returns the number of elements that were added */
  62:../libDaisy/src/util/FIFO.h ****     int PushBack(std::initializer_list<T> valuesToAdd)
  63:../libDaisy/src/util/FIFO.h ****     {
  64:../libDaisy/src/util/FIFO.h ****         int numAdded = 0;
  65:../libDaisy/src/util/FIFO.h ****         for(const auto& v : valuesToAdd)
  66:../libDaisy/src/util/FIFO.h ****         {
  67:../libDaisy/src/util/FIFO.h ****             if(IsFull())
  68:../libDaisy/src/util/FIFO.h ****                 return numAdded;
  69:../libDaisy/src/util/FIFO.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 8


  70:../libDaisy/src/util/FIFO.h ****             PushBack(v);
  71:../libDaisy/src/util/FIFO.h ****             numAdded++;
  72:../libDaisy/src/util/FIFO.h ****         }
  73:../libDaisy/src/util/FIFO.h ****         return numAdded;
  74:../libDaisy/src/util/FIFO.h ****     }
  75:../libDaisy/src/util/FIFO.h **** 
  76:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  77:../libDaisy/src/util/FIFO.h ****     T& Back()
  78:../libDaisy/src/util/FIFO.h ****     {
  79:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  80:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  81:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  82:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  83:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  84:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  85:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  86:../libDaisy/src/util/FIFO.h ****     }
  87:../libDaisy/src/util/FIFO.h **** 
  88:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  89:../libDaisy/src/util/FIFO.h ****     const T& Back() const
  90:../libDaisy/src/util/FIFO.h ****     {
  91:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  92:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  93:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  94:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  95:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  96:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  97:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  98:../libDaisy/src/util/FIFO.h ****     }
  99:../libDaisy/src/util/FIFO.h **** 
 100:../libDaisy/src/util/FIFO.h ****     /** removes and returns an element from the front of the buffer */
 101:../libDaisy/src/util/FIFO.h ****     T PopFront()
 102:../libDaisy/src/util/FIFO.h ****     {
 103:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 104:../libDaisy/src/util/FIFO.h ****             return T();
 105:../libDaisy/src/util/FIFO.h ****         else
 106:../libDaisy/src/util/FIFO.h ****         {
 107:../libDaisy/src/util/FIFO.h ****             const auto result = buffer_[bufferOut_];
 108:../libDaisy/src/util/FIFO.h ****             bufferOut_++;
 109:../libDaisy/src/util/FIFO.h ****             if(bufferOut_ >= bufferSize_)
 110:../libDaisy/src/util/FIFO.h ****                 bufferOut_ -= bufferSize_;
 111:../libDaisy/src/util/FIFO.h ****             return result;
 112:../libDaisy/src/util/FIFO.h ****         }
 113:../libDaisy/src/util/FIFO.h ****     }
 114:../libDaisy/src/util/FIFO.h **** 
 115:../libDaisy/src/util/FIFO.h ****     /** returns a copy of the first element */
 116:../libDaisy/src/util/FIFO.h ****     T& Front()
 117:../libDaisy/src/util/FIFO.h ****     {
 118:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 119:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 120:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 121:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 122:../libDaisy/src/util/FIFO.h ****     }
 123:../libDaisy/src/util/FIFO.h **** 
 124:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the first element */
 125:../libDaisy/src/util/FIFO.h ****     const T& Front() const
 126:../libDaisy/src/util/FIFO.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 9


 127:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 128:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 129:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 130:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 131:../libDaisy/src/util/FIFO.h ****     }
 132:../libDaisy/src/util/FIFO.h **** 
 133:../libDaisy/src/util/FIFO.h ****     /** Returns true if the buffer contains an element equal to the provided value */
 134:../libDaisy/src/util/FIFO.h ****     bool Contains(const T& element)
 135:../libDaisy/src/util/FIFO.h ****     {
 136:../libDaisy/src/util/FIFO.h ****         auto idx = bufferOut_;
 137:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 138:../libDaisy/src/util/FIFO.h ****         {
 139:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 140:../libDaisy/src/util/FIFO.h ****                 return true;
 141:../libDaisy/src/util/FIFO.h ****             idx++;
 142:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 143:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 144:../libDaisy/src/util/FIFO.h ****         }
 145:../libDaisy/src/util/FIFO.h ****         return false;
 146:../libDaisy/src/util/FIFO.h ****     }
 147:../libDaisy/src/util/FIFO.h **** 
 148:../libDaisy/src/util/FIFO.h ****     /** Returns the number of elements in the buffer that are equal to the provided value */
 149:../libDaisy/src/util/FIFO.h ****     size_t CountEqualTo(const T& element)
 150:../libDaisy/src/util/FIFO.h ****     {
 151:../libDaisy/src/util/FIFO.h ****         size_t result = 0;
 152:../libDaisy/src/util/FIFO.h ****         size_t idx    = bufferOut_;
 153:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 154:../libDaisy/src/util/FIFO.h ****         {
 155:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 156:../libDaisy/src/util/FIFO.h ****                 result++;
 157:../libDaisy/src/util/FIFO.h ****             idx++;
 158:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 159:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 160:../libDaisy/src/util/FIFO.h ****         }
 161:../libDaisy/src/util/FIFO.h ****         return result;
 162:../libDaisy/src/util/FIFO.h ****     }
 163:../libDaisy/src/util/FIFO.h **** 
 164:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is empty */
 165:../libDaisy/src/util/FIFO.h ****     bool IsEmpty() const { return bufferIn_ == bufferOut_; }
 166:../libDaisy/src/util/FIFO.h **** 
 167:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is Full */
 168:../libDaisy/src/util/FIFO.h ****     bool IsFull() const { return GetNumElements() == bufferSize_ - 1; }
 169:../libDaisy/src/util/FIFO.h **** 
 170:../libDaisy/src/util/FIFO.h ****     /** returns the number of elements in the buffer */
 171:../libDaisy/src/util/FIFO.h ****     size_t GetNumElements() const
 172:../libDaisy/src/util/FIFO.h ****     {
 173:../libDaisy/src/util/FIFO.h ****         int32_t numElements = bufferIn_ - bufferOut_;
 174:../libDaisy/src/util/FIFO.h ****         if(numElements < 0)
 175:../libDaisy/src/util/FIFO.h ****             numElements += bufferSize_;
 176:../libDaisy/src/util/FIFO.h ****         return size_t(numElements);
 177:../libDaisy/src/util/FIFO.h ****     }
 178:../libDaisy/src/util/FIFO.h **** 
 179:../libDaisy/src/util/FIFO.h ****     /** inserts an element "idx" positions behind the first element and returns true if successful 
 180:../libDaisy/src/util/FIFO.h ****     bool Insert(size_t idx, const T& element)
 181:../libDaisy/src/util/FIFO.h ****     {
 182:../libDaisy/src/util/FIFO.h ****         if(idx > GetNumElements())
 183:../libDaisy/src/util/FIFO.h ****             return false;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 10


 184:../libDaisy/src/util/FIFO.h ****         if(IsFull())
 185:../libDaisy/src/util/FIFO.h ****             return false;
 186:../libDaisy/src/util/FIFO.h ****         if(idx == GetNumElements())
 187:../libDaisy/src/util/FIFO.h ****         {
 188:../libDaisy/src/util/FIFO.h ****             PushBack(element);
 189:../libDaisy/src/util/FIFO.h ****             return true;
 190:../libDaisy/src/util/FIFO.h ****         }
 191:../libDaisy/src/util/FIFO.h ****         // copy last element
 192:../libDaisy/src/util/FIFO.h ****         PushBack(Back());
 193:../libDaisy/src/util/FIFO.h ****         // move remaining elements: n => n+1
 194:../libDaisy/src/util/FIFO.h ****         for(int i = GetNumElements() - 2; i > int(idx); i--)
 195:../libDaisy/src/util/FIFO.h ****             (*this)[i] = (*this)[i - 1];
 196:../libDaisy/src/util/FIFO.h ****         // insert element
 197:../libDaisy/src/util/FIFO.h ****         (*this)[idx] = element;
 198:../libDaisy/src/util/FIFO.h ****         return true;
 199:../libDaisy/src/util/FIFO.h ****     }
 200:../libDaisy/src/util/FIFO.h **** 
 201:../libDaisy/src/util/FIFO.h ****     /** removes the element "idx" positions behind the first element 
 202:../libDaisy/src/util/FIFO.h ****      *  and returns true if successful */
 203:../libDaisy/src/util/FIFO.h ****     bool Remove(size_t idx)
 204:../libDaisy/src/util/FIFO.h ****     {
 205:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 206:../libDaisy/src/util/FIFO.h ****             return false;
 207:../libDaisy/src/util/FIFO.h **** 
 208:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 209:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 210:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 211:../libDaisy/src/util/FIFO.h ****         size_t nextIndex = index + 1;
 212:../libDaisy/src/util/FIFO.h ****         if(nextIndex >= bufferSize_)
 213:../libDaisy/src/util/FIFO.h ****             nextIndex -= bufferSize_;
 214:../libDaisy/src/util/FIFO.h **** 
 215:../libDaisy/src/util/FIFO.h ****         while(nextIndex != bufferIn_)
 216:../libDaisy/src/util/FIFO.h ****         {
 217:../libDaisy/src/util/FIFO.h ****             buffer_[index] = buffer_[nextIndex];
 218:../libDaisy/src/util/FIFO.h ****             index++;
 219:../libDaisy/src/util/FIFO.h ****             nextIndex++;
 220:../libDaisy/src/util/FIFO.h ****             if(index >= bufferSize_)
 221:../libDaisy/src/util/FIFO.h ****                 index -= bufferSize_;
 222:../libDaisy/src/util/FIFO.h ****             if(nextIndex >= bufferSize_)
 223:../libDaisy/src/util/FIFO.h ****                 nextIndex -= bufferSize_;
 224:../libDaisy/src/util/FIFO.h ****         }
 225:../libDaisy/src/util/FIFO.h **** 
 226:../libDaisy/src/util/FIFO.h ****         int32_t nextBufferIn = int32_t(bufferIn_) - 1;
 227:../libDaisy/src/util/FIFO.h ****         if(nextBufferIn < 0)
 228:../libDaisy/src/util/FIFO.h ****             nextBufferIn += bufferSize_;
 229:../libDaisy/src/util/FIFO.h ****         bufferIn_ = size_t(nextBufferIn);
 230:../libDaisy/src/util/FIFO.h **** 
 231:../libDaisy/src/util/FIFO.h ****         return true;
 232:../libDaisy/src/util/FIFO.h ****     }
 233:../libDaisy/src/util/FIFO.h **** 
 234:../libDaisy/src/util/FIFO.h ****     /** removes all elements from the buffer for which
 235:../libDaisy/src/util/FIFO.h ****         (buffer(index) == element) returns true and returns the number of
 236:../libDaisy/src/util/FIFO.h ****         elements that were removed. */
 237:../libDaisy/src/util/FIFO.h ****     size_t RemoveAllEqualTo(const T& element)
 238:../libDaisy/src/util/FIFO.h ****     {
 239:../libDaisy/src/util/FIFO.h ****         size_t numRemoved = 0;
 240:../libDaisy/src/util/FIFO.h ****         int    idx        = GetNumElements() - 1;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 11


 241:../libDaisy/src/util/FIFO.h ****         while(idx >= 0)
 242:../libDaisy/src/util/FIFO.h ****         {
 243:../libDaisy/src/util/FIFO.h ****             if((*this)[idx] == element)
 244:../libDaisy/src/util/FIFO.h ****             {
 245:../libDaisy/src/util/FIFO.h ****                 numRemoved++;
 246:../libDaisy/src/util/FIFO.h ****                 Remove(idx);
 247:../libDaisy/src/util/FIFO.h ****                 // was that the last element?
 248:../libDaisy/src/util/FIFO.h ****                 if(idx == int(GetNumElements()) - 1)
 249:../libDaisy/src/util/FIFO.h ****                     idx--;
 250:../libDaisy/src/util/FIFO.h ****             }
 251:../libDaisy/src/util/FIFO.h ****             else
 252:../libDaisy/src/util/FIFO.h ****                 idx--;
 253:../libDaisy/src/util/FIFO.h ****         }
 254:../libDaisy/src/util/FIFO.h ****         return numRemoved;
 255:../libDaisy/src/util/FIFO.h ****     }
 256:../libDaisy/src/util/FIFO.h **** 
 257:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 258:../libDaisy/src/util/FIFO.h ****     T& operator[](size_t idx)
 259:../libDaisy/src/util/FIFO.h ****     {
 260:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 261:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 262:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 263:../libDaisy/src/util/FIFO.h **** 
 264:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 265:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 266:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 267:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 268:../libDaisy/src/util/FIFO.h ****     }
 269:../libDaisy/src/util/FIFO.h **** 
 270:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 271:../libDaisy/src/util/FIFO.h ****     const T& operator[](size_t idx) const
 272:../libDaisy/src/util/FIFO.h ****     {
 273:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 274:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 275:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 276:../libDaisy/src/util/FIFO.h **** 
 277:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 278:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 279:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 280:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 281:../libDaisy/src/util/FIFO.h ****     }
 282:../libDaisy/src/util/FIFO.h **** 
 283:../libDaisy/src/util/FIFO.h ****     /** returns the total capacity */
 284:../libDaisy/src/util/FIFO.h ****     size_t GetCapacity() const { return bufferSize_ - 1; }
 285:../libDaisy/src/util/FIFO.h **** 
 286:../libDaisy/src/util/FIFO.h ****   private:
 287:../libDaisy/src/util/FIFO.h ****     FIFOBase(const FIFOBase<T>&) {} // non copyable
 288:../libDaisy/src/util/FIFO.h **** 
 289:../libDaisy/src/util/FIFO.h ****   private:
 290:../libDaisy/src/util/FIFO.h ****     T*           buffer_;
 291:../libDaisy/src/util/FIFO.h ****     const size_t bufferSize_;
 292:../libDaisy/src/util/FIFO.h ****     size_t       bufferIn_;
 293:../libDaisy/src/util/FIFO.h ****     size_t       bufferOut_;
 294:../libDaisy/src/util/FIFO.h **** };
 295:../libDaisy/src/util/FIFO.h **** 
 296:../libDaisy/src/util/FIFO.h **** /** A simple FIFO ring buffer with a fixed size. */
 297:../libDaisy/src/util/FIFO.h **** template <typename T, size_t capacity>
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 12


 298:../libDaisy/src/util/FIFO.h **** class FIFO : public FIFOBase<T>
  64              		.loc 4 298 7 view .LVU4
  65              	.LBB265:
  66              	.LBI265:
  42:../libDaisy/src/util/FIFO.h **** 
  67              		.loc 4 42 5 view .LVU5
  42:../libDaisy/src/util/FIFO.h **** 
  68              		.loc 4 42 5 is_stmt 0 view .LVU6
  69              	.LBE265:
  70              	.LBE264:
  71              	.LBB266:
  72              	.LBI266:
  73              		.file 5 "../libDaisy/src/hid/midi_parser.h"
   1:../libDaisy/src/hid/midi_parser.h **** #pragma once
   2:../libDaisy/src/hid/midi_parser.h **** #ifndef DSY_MIDI_PARSER_H
   3:../libDaisy/src/hid/midi_parser.h **** #define DSY_MIDI_PARSER_H
   4:../libDaisy/src/hid/midi_parser.h **** 
   5:../libDaisy/src/hid/midi_parser.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi_parser.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi_parser.h **** #include "hid/MidiEvent.h"
   8:../libDaisy/src/hid/midi_parser.h **** 
   9:../libDaisy/src/hid/midi_parser.h **** namespace daisy
  10:../libDaisy/src/hid/midi_parser.h **** {
  11:../libDaisy/src/hid/midi_parser.h **** /** @brief   Utility class for parsing raw byte streams into MIDI messages
  12:../libDaisy/src/hid/midi_parser.h ****  *  @details Implemented as a state machine designed to parse one byte at a time
  13:../libDaisy/src/hid/midi_parser.h ****  *  @ingroup midi
  14:../libDaisy/src/hid/midi_parser.h ****  */
  15:../libDaisy/src/hid/midi_parser.h **** class MidiParser
  16:../libDaisy/src/hid/midi_parser.h **** {
  17:../libDaisy/src/hid/midi_parser.h ****   public:
  18:../libDaisy/src/hid/midi_parser.h ****     MidiParser(){};
  19:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
  74              		.loc 5 19 5 is_stmt 1 view .LVU7
  75              		.loc 5 19 5 is_stmt 0 view .LVU8
  76              	.LBE266:
  77              	.LBB267:
  78              	.LBI267:
  32:../libDaisy/src/hid/midi.h **** 
  79              		.loc 3 32 5 is_stmt 1 view .LVU9
  32:../libDaisy/src/hid/midi.h **** 
  80              		.loc 3 32 5 is_stmt 0 view .LVU10
  81              	.LBE267:
  82              	.LBE263:
  83              	.LBB268:
  84              	.LBI268:
  85              		.file 6 "../libDaisy/src/hid/rgb_led.h"
   1:../libDaisy/src/hid/rgb_led.h **** #pragma once
   2:../libDaisy/src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../libDaisy/src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../libDaisy/src/hid/rgb_led.h **** #include "hid/led.h"
   5:../libDaisy/src/hid/rgb_led.h **** #include "util/color.h"
   6:../libDaisy/src/hid/rgb_led.h **** 
   7:../libDaisy/src/hid/rgb_led.h **** namespace daisy
   8:../libDaisy/src/hid/rgb_led.h **** {
   9:../libDaisy/src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../libDaisy/src/hid/rgb_led.h ****     @{
  11:../libDaisy/src/hid/rgb_led.h **** */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 13


  12:../libDaisy/src/hid/rgb_led.h **** 
  13:../libDaisy/src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../libDaisy/src/hid/rgb_led.h **** class RgbLed
  15:../libDaisy/src/hid/rgb_led.h **** {
  16:../libDaisy/src/hid/rgb_led.h ****   public:
  17:../libDaisy/src/hid/rgb_led.h ****     RgbLed() {}
  18:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
  86              		.loc 6 18 5 is_stmt 1 view .LVU11
  87              	.LBB269:
  88              	.LBI269:
  89              		.file 7 "../libDaisy/src/hid/led.h"
   1:../libDaisy/src/hid/led.h **** 
   2:../libDaisy/src/hid/led.h **** #pragma once
   3:../libDaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libDaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libDaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libDaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libDaisy/src/hid/led.h **** 
   8:../libDaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libDaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libDaisy/src/hid/led.h **** */
  11:../libDaisy/src/hid/led.h **** 
  12:../libDaisy/src/hid/led.h **** namespace daisy
  13:../libDaisy/src/hid/led.h **** {
  14:../libDaisy/src/hid/led.h **** /**
  15:../libDaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libDaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libDaisy/src/hid/led.h ****     @author shensley
  18:../libDaisy/src/hid/led.h ****     @date March 2020
  19:../libDaisy/src/hid/led.h ****     @ingroup feedback
  20:../libDaisy/src/hid/led.h **** */
  21:../libDaisy/src/hid/led.h **** class Led
  22:../libDaisy/src/hid/led.h **** {
  23:../libDaisy/src/hid/led.h ****   public:
  24:../libDaisy/src/hid/led.h ****     Led() {}
  25:../libDaisy/src/hid/led.h ****     ~Led() {}
  90              		.loc 7 25 5 view .LVU12
  91              		.loc 7 25 5 is_stmt 0 view .LVU13
  92              	.LBE269:
  93              	.LBB270:
  94              	.LBI270:
  95              		.loc 7 25 5 is_stmt 1 view .LVU14
  96              		.loc 7 25 5 is_stmt 0 view .LVU15
  97              	.LBE270:
  98              	.LBB271:
  99              	.LBI271:
 100              		.loc 7 25 5 is_stmt 1 view .LVU16
 101              		.loc 7 25 5 is_stmt 0 view .LVU17
 102              	.LBE271:
 103              	.LBE268:
 104              	.LBB272:
 105              	.LBI272:
 106              		.loc 6 18 5 is_stmt 1 view .LVU18
 107              	.LBB273:
 108              	.LBI273:
 109              		.loc 7 25 5 view .LVU19
 110              		.loc 7 25 5 is_stmt 0 view .LVU20
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 14


 111              	.LBE273:
 112              	.LBB274:
 113              	.LBI274:
 114              		.loc 7 25 5 is_stmt 1 view .LVU21
 115              		.loc 7 25 5 is_stmt 0 view .LVU22
 116              	.LBE274:
 117              	.LBB275:
 118              	.LBI275:
 119              		.loc 7 25 5 is_stmt 1 view .LVU23
 120              		.loc 7 25 5 is_stmt 0 view .LVU24
 121              	.LBE275:
 122              	.LBE272:
 123              	.LBB276:
 124              	.LBI276:
 125              		.file 8 "../libDaisy/src/hid/switch.h"
   1:../libDaisy/src/hid/switch.h **** #pragma once
   2:../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libDaisy/src/hid/switch.h **** 
   8:../libDaisy/src/hid/switch.h **** namespace daisy
   9:../libDaisy/src/hid/switch.h **** {
  10:../libDaisy/src/hid/switch.h **** /** 
  11:../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../libDaisy/src/hid/switch.h **** */
  17:../libDaisy/src/hid/switch.h **** class Switch
  18:../libDaisy/src/hid/switch.h **** {
  19:../libDaisy/src/hid/switch.h ****   public:
  20:../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libDaisy/src/hid/switch.h ****     enum Type
  22:../libDaisy/src/hid/switch.h ****     {
  23:../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libDaisy/src/hid/switch.h ****     };
  26:../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libDaisy/src/hid/switch.h ****     enum Polarity
  28:../libDaisy/src/hid/switch.h ****     {
  29:../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libDaisy/src/hid/switch.h ****     };
  32:../libDaisy/src/hid/switch.h **** 
  33:../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libDaisy/src/hid/switch.h ****     enum Pull
  35:../libDaisy/src/hid/switch.h ****     {
  36:../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libDaisy/src/hid/switch.h ****     };
  40:../libDaisy/src/hid/switch.h **** 
  41:../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../libDaisy/src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 15


 126              		.loc 8 42 5 is_stmt 1 view .LVU25
 127              		.loc 8 42 5 is_stmt 0 view .LVU26
 128              	.LBE276:
 129              	.LBB277:
 130              	.LBI277:
 131              		.loc 8 42 5 is_stmt 1 view .LVU27
 132              		.loc 8 42 5 is_stmt 0 view .LVU28
 133              	.LBE277:
 134              	.LBB278:
 135              	.LBI278:
 136              		.file 9 "../libDaisy/src/hid/ctrl.h"
   1:../libDaisy/src/hid/ctrl.h **** #pragma once
   2:../libDaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../libDaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../libDaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../libDaisy/src/hid/ctrl.h **** 
   6:../libDaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../libDaisy/src/hid/ctrl.h **** namespace daisy
   8:../libDaisy/src/hid/ctrl.h **** {
   9:../libDaisy/src/hid/ctrl.h **** /**
  10:../libDaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../libDaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../libDaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../libDaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/ctrl.h ****     @date November 2019
  15:../libDaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../libDaisy/src/hid/ctrl.h **** */
  17:../libDaisy/src/hid/ctrl.h **** class AnalogControl
  18:../libDaisy/src/hid/ctrl.h **** {
  19:../libDaisy/src/hid/ctrl.h ****   public:
  20:../libDaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../libDaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../libDaisy/src/hid/ctrl.h ****     /** destructor */
  23:../libDaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
 137              		.loc 9 23 5 is_stmt 1 view .LVU29
 138              		.loc 9 23 5 is_stmt 0 view .LVU30
 139              	.LBE278:
 140              	.LBB279:
 141              	.LBI279:
 142              		.loc 9 23 5 is_stmt 1 view .LVU31
 143              		.loc 9 23 5 is_stmt 0 view .LVU32
 144              	.LBE279:
 145              	.LBB280:
 146              	.LBI280:
 147              		.file 10 "../libDaisy/src/hid/encoder.h"
   1:../libDaisy/src/hid/encoder.h **** #pragma once
   2:../libDaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../libDaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../libDaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../libDaisy/src/hid/encoder.h **** 
   8:../libDaisy/src/hid/encoder.h **** namespace daisy
   9:../libDaisy/src/hid/encoder.h **** {
  10:../libDaisy/src/hid/encoder.h **** /** 
  11:../libDaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../libDaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 16


  13:../libDaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/encoder.h ****     @date December 2019
  15:../libDaisy/src/hid/encoder.h ****     @ingroup controls
  16:../libDaisy/src/hid/encoder.h **** */
  17:../libDaisy/src/hid/encoder.h **** class Encoder
  18:../libDaisy/src/hid/encoder.h **** {
  19:../libDaisy/src/hid/encoder.h ****   public:
  20:../libDaisy/src/hid/encoder.h ****     Encoder() {}
  21:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 148              		.loc 10 21 5 is_stmt 1 view .LVU33
 149              	.LBB281:
 150              	.LBI281:
 151              		.loc 8 42 5 view .LVU34
 152              		.loc 8 42 5 is_stmt 0 view .LVU35
 153              	.LBE281:
 154              	.LBE280:
 155              	.LBB282:
 156              	.LBI282:
 157              		.file 11 "../libDaisy/src/daisy_seed.h"
   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 158              		.loc 11 22 5 is_stmt 1 view .LVU36
 159              	.LBB283:
 160              	.LBI283:
 161              		.file 12 "../libDaisy/src/sys/system.h"
   1:../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libDaisy/src/sys/system.h **** 
   4:../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../libDaisy/src/sys/system.h **** 
   6:../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../libDaisy/src/sys/system.h **** 
   9:../libDaisy/src/sys/system.h **** namespace daisy
  10:../libDaisy/src/sys/system.h **** {
  11:../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 17


  13:../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../libDaisy/src/sys/system.h ****  **
  15:../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../libDaisy/src/sys/system.h ****  */
  18:../libDaisy/src/sys/system.h **** class System
  19:../libDaisy/src/sys/system.h **** {
  20:../libDaisy/src/sys/system.h ****   public:
  21:../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../libDaisy/src/sys/system.h ****     struct Config
  23:../libDaisy/src/sys/system.h ****     {
  24:../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../libDaisy/src/sys/system.h ****         {
  27:../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../libDaisy/src/sys/system.h ****         };
  30:../libDaisy/src/sys/system.h **** 
  31:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../libDaisy/src/sys/system.h ****          ** */
  35:../libDaisy/src/sys/system.h ****         void Defaults()
  36:../libDaisy/src/sys/system.h ****         {
  37:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../libDaisy/src/sys/system.h ****         }
  42:../libDaisy/src/sys/system.h **** 
  43:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../libDaisy/src/sys/system.h ****          ** */
  47:../libDaisy/src/sys/system.h ****         void Boost()
  48:../libDaisy/src/sys/system.h ****         {
  49:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../libDaisy/src/sys/system.h ****         }
  54:../libDaisy/src/sys/system.h **** 
  55:../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../libDaisy/src/sys/system.h ****     };
  60:../libDaisy/src/sys/system.h **** 
  61:../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../libDaisy/src/sys/system.h ****     {
  64:../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../libDaisy/src/sys/system.h ****         SRAM_D3,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 18


  70:../libDaisy/src/sys/system.h ****         SDRAM,
  71:../libDaisy/src/sys/system.h ****         QSPI,
  72:../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../libDaisy/src/sys/system.h ****     };
  74:../libDaisy/src/sys/system.h **** 
  75:../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../libDaisy/src/sys/system.h ****     {
  78:../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../libDaisy/src/sys/system.h ****         {
  80:../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../libDaisy/src/sys/system.h ****         } status;
  85:../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../libDaisy/src/sys/system.h ****         {
  88:../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../libDaisy/src/sys/system.h ****             LAST
  93:../libDaisy/src/sys/system.h ****         } version;
  94:../libDaisy/src/sys/system.h ****     };
  95:../libDaisy/src/sys/system.h **** 
  96:../libDaisy/src/sys/system.h ****     System() {}
  97:../libDaisy/src/sys/system.h ****     ~System() {}
 162              		.loc 12 97 5 view .LVU37
 163              		.loc 12 97 5 is_stmt 0 view .LVU38
 164              	.LBE283:
 165              	.LBB284:
 166              	.LBI284:
 167              		.file 13 "../libDaisy/src/hid/usb.h"
   1:../libDaisy/src/hid/usb.h **** #pragma once
   2:../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libDaisy/src/hid/usb.h **** 
   7:../libDaisy/src/hid/usb.h **** namespace daisy
   8:../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../libDaisy/src/hid/usb.h ****     @{
  10:../libDaisy/src/hid/usb.h **** */
  11:../libDaisy/src/hid/usb.h **** 
  12:../libDaisy/src/hid/usb.h **** {
  13:../libDaisy/src/hid/usb.h **** /** 
  14:../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../libDaisy/src/hid/usb.h **** */
  18:../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../libDaisy/src/hid/usb.h **** {
  20:../libDaisy/src/hid/usb.h ****   public:
  21:../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libDaisy/src/hid/usb.h ****     enum class Result
  23:../libDaisy/src/hid/usb.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 19


  24:../libDaisy/src/hid/usb.h ****         OK,
  25:../libDaisy/src/hid/usb.h ****         ERR,
  26:../libDaisy/src/hid/usb.h ****     };
  27:../libDaisy/src/hid/usb.h **** 
  28:../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libDaisy/src/hid/usb.h ****     {
  31:../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libDaisy/src/hid/usb.h ****     };
  35:../libDaisy/src/hid/usb.h **** 
  36:../libDaisy/src/hid/usb.h **** 
  37:../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libDaisy/src/hid/usb.h **** 
  40:../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libDaisy/src/hid/usb.h **** 
  42:../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
 168              		.loc 13 42 5 is_stmt 1 view .LVU39
 169              		.loc 13 42 5 is_stmt 0 view .LVU40
 170              	.LBE284:
 171              	.LBB285:
 172              	.LBI285:
 173              		.file 14 "../libDaisy/src/per/adc.h"
   1:../libDaisy/src/per/adc.h **** #pragma once
   2:../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libDaisy/src/per/adc.h **** 
   9:../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../libDaisy/src/per/adc.h **** 
  11:../libDaisy/src/per/adc.h **** namespace daisy
  12:../libDaisy/src/per/adc.h **** {
  13:../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../libDaisy/src/per/adc.h ****     @{
  15:../libDaisy/src/per/adc.h **** */
  16:../libDaisy/src/per/adc.h **** 
  17:../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libDaisy/src/per/adc.h **** */
  21:../libDaisy/src/per/adc.h **** 
  22:../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../libDaisy/src/per/adc.h ****  *           one channel.
  26:../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../libDaisy/src/per/adc.h **** */
  31:../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../libDaisy/src/per/adc.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 20


  33:../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../libDaisy/src/per/adc.h ****     {
  36:../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../libDaisy/src/per/adc.h ****     };
  41:../libDaisy/src/per/adc.h **** 
  42:../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../libDaisy/src/per/adc.h ****     {
  45:../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../libDaisy/src/per/adc.h ****     };
  54:../libDaisy/src/per/adc.h **** 
  55:../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../libDaisy/src/per/adc.h ****      */
  59:../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../libDaisy/src/per/adc.h **** 
  61:../libDaisy/src/per/adc.h ****     /** 
  62:../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../libDaisy/src/per/adc.h ****     */
  74:../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../libDaisy/src/per/adc.h **** 
  81:../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../libDaisy/src/per/adc.h **** };
  86:../libDaisy/src/per/adc.h **** 
  87:../libDaisy/src/per/adc.h **** /**
  88:../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../libDaisy/src/per/adc.h **** */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 21


  90:../libDaisy/src/per/adc.h **** class AdcHandle
  91:../libDaisy/src/per/adc.h **** {
  92:../libDaisy/src/per/adc.h ****   public:
  93:../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../libDaisy/src/per/adc.h ****     {
  96:../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../libDaisy/src/per/adc.h ****     };
 108:../libDaisy/src/per/adc.h **** 
 109:../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 174              		.loc 14 110 5 is_stmt 1 view .LVU41
 175              		.loc 14 110 5 is_stmt 0 view .LVU42
 176              	.LBE285:
 177              	.LBB286:
 178              	.LBI286:
 179              		.file 15 "../libDaisy/src/hid/audio.h"
   1:../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libDaisy/src/hid/audio.h **** 
   4:../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libDaisy/src/hid/audio.h **** 
   6:../libDaisy/src/hid/audio.h **** namespace daisy
   7:../libDaisy/src/hid/audio.h **** {
   8:../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../libDaisy/src/hid/audio.h ****  */
  22:../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../libDaisy/src/hid/audio.h **** {
  24:../libDaisy/src/hid/audio.h ****   public:
  25:../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../libDaisy/src/hid/audio.h ****     struct Config
  28:../libDaisy/src/hid/audio.h ****     {
  29:../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../libDaisy/src/hid/audio.h ****         size_t blocksize;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 22


  31:../libDaisy/src/hid/audio.h **** 
  32:../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../libDaisy/src/hid/audio.h **** 
  35:../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../libDaisy/src/hid/audio.h ****         float postgain;
  37:../libDaisy/src/hid/audio.h **** 
  38:../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../libDaisy/src/hid/audio.h ****          */
  41:../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../libDaisy/src/hid/audio.h **** 
  43:../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../libDaisy/src/hid/audio.h ****         Config()
  45:../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../libDaisy/src/hid/audio.h ****         {
  50:../libDaisy/src/hid/audio.h ****         }
  51:../libDaisy/src/hid/audio.h ****     };
  52:../libDaisy/src/hid/audio.h **** 
  53:../libDaisy/src/hid/audio.h ****     enum class Result
  54:../libDaisy/src/hid/audio.h ****     {
  55:../libDaisy/src/hid/audio.h ****         OK,
  56:../libDaisy/src/hid/audio.h ****         ERR,
  57:../libDaisy/src/hid/audio.h ****     };
  58:../libDaisy/src/hid/audio.h **** 
  59:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../libDaisy/src/hid/audio.h ****      */
  63:../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../libDaisy/src/hid/audio.h **** 
  65:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../libDaisy/src/hid/audio.h ****      */
  68:../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../libDaisy/src/hid/audio.h **** 
  70:../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../libDaisy/src/hid/audio.h ****      */
  73:../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../libDaisy/src/hid/audio.h **** 
  77:../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../libDaisy/src/hid/audio.h ****     */
  81:../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../libDaisy/src/hid/audio.h **** 
  83:../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../libDaisy/src/hid/audio.h ****     */
  86:../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../libDaisy/src/hid/audio.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 23


  88:../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../libDaisy/src/hid/audio.h ****      */
  91:../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../libDaisy/src/hid/audio.h **** 
  95:../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 180              		.loc 15 96 5 is_stmt 1 view .LVU43
 181              		.loc 15 96 5 is_stmt 0 view .LVU44
 182              	.LBE286:
 183              	.LBE282:
 184              		.loc 2 36 18 view .LVU45
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE4686:
 189              		.weak	_ZN5daisy8DaisyPodD1Ev
 190              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 191              		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
 192              		.align	1
 193              		.weak	_ZN7daisysp8ReverbScD2Ev
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	_ZN7daisysp8ReverbScD2Ev:
 199              	.LVL2:
 200              	.LFB4766:
 201              		.file 16 "DaisySP-LGPL-FX/reverbsc.h"
   1:DaisySP-LGPL-FX/reverbsc.h **** /*
   2:DaisySP-LGPL-FX/reverbsc.h **** Copyright (c) 2023 Electrosmith, Corp, Sean Costello, Istvan Varga, Paul Batchelor
   3:DaisySP-LGPL-FX/reverbsc.h **** 
   4:DaisySP-LGPL-FX/reverbsc.h **** Use of this source code is governed by the LGPL V2.1
   5:DaisySP-LGPL-FX/reverbsc.h **** license that can be found in the LICENSE file or at
   6:DaisySP-LGPL-FX/reverbsc.h **** https://opensource.org/license/lgpl-2-1/
   7:DaisySP-LGPL-FX/reverbsc.h **** */
   8:DaisySP-LGPL-FX/reverbsc.h **** 
   9:DaisySP-LGPL-FX/reverbsc.h **** #pragma once
  10:DaisySP-LGPL-FX/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
  11:DaisySP-LGPL-FX/reverbsc.h **** #define DSYSP_REVERBSC_H
  12:DaisySP-LGPL-FX/reverbsc.h **** 
  13:DaisySP-LGPL-FX/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
  14:DaisySP-LGPL-FX/reverbsc.h **** 
  15:DaisySP-LGPL-FX/reverbsc.h **** namespace daisysp
  16:DaisySP-LGPL-FX/reverbsc.h **** {
  17:DaisySP-LGPL-FX/reverbsc.h **** /**Delay line for internal reverb use
  18:DaisySP-LGPL-FX/reverbsc.h **** */
  19:DaisySP-LGPL-FX/reverbsc.h **** typedef struct
  20:DaisySP-LGPL-FX/reverbsc.h **** {
  21:DaisySP-LGPL-FX/reverbsc.h ****     int    write_pos;         /**< write position */
  22:DaisySP-LGPL-FX/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  23:DaisySP-LGPL-FX/reverbsc.h ****     int    read_pos;          /**< read position */
  24:DaisySP-LGPL-FX/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  25:DaisySP-LGPL-FX/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  26:DaisySP-LGPL-FX/reverbsc.h ****     int    dummy;             /**<  dummy var */
  27:DaisySP-LGPL-FX/reverbsc.h ****     int    seed_val;          /**< randseed */
  28:DaisySP-LGPL-FX/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 24


  29:DaisySP-LGPL-FX/reverbsc.h ****     float  filter_state;      /**< state of filter */
  30:DaisySP-LGPL-FX/reverbsc.h ****     float *buf;               /**< buffer ptr */
  31:DaisySP-LGPL-FX/reverbsc.h **** } ReverbScDl;
  32:DaisySP-LGPL-FX/reverbsc.h **** 
  33:DaisySP-LGPL-FX/reverbsc.h **** /** Stereo Reverb */
  34:DaisySP-LGPL-FX/reverbsc.h **** class ReverbSc
  35:DaisySP-LGPL-FX/reverbsc.h **** {
  36:DaisySP-LGPL-FX/reverbsc.h ****   public:
  37:DaisySP-LGPL-FX/reverbsc.h ****     ReverbSc() {}
  38:DaisySP-LGPL-FX/reverbsc.h ****     ~ReverbSc() {}
 202              		.loc 16 38 5 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              		.loc 16 38 18 is_stmt 0 view .LVU47
 208 0000 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE4766:
 212              		.weak	_ZN7daisysp8ReverbScD1Ev
 213              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
 214              		.section	.text._ZN13GranularSynthD2Ev,"axG",%progbits,_ZN13GranularSynthD5Ev,comdat
 215              		.align	1
 216              		.weak	_ZN13GranularSynthD2Ev
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	_ZN13GranularSynthD2Ev:
 222              	.LVL3:
 223              	.LFB4780:
 224              		.file 17 "GranularSynth.h"
   1:GranularSynth.h **** #pragma once
   2:GranularSynth.h **** 
   3:GranularSynth.h **** #include "Grain.h"
   4:GranularSynth.h **** #include "daisy_pod.h"
   5:GranularSynth.h **** #include "debug_print.h"
   6:GranularSynth.h **** 
   7:GranularSynth.h **** class GranularSynth{
 225              		.loc 17 7 7 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              		.loc 17 7 7 is_stmt 0 view .LVU49
 231 0000 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE4780:
 235              		.weak	_ZN13GranularSynthD1Ev
 236              		.thumb_set _ZN13GranularSynthD1Ev,_ZN13GranularSynthD2Ev
 237              		.section	.text._ZN14GrannyChordAppD2Ev,"axG",%progbits,_ZN14GrannyChordAppD5Ev,comdat
 238              		.align	1
 239              		.weak	_ZN14GrannyChordAppD2Ev
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	_ZN14GrannyChordAppD2Ev:
 245              	.LVL4:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 25


 246              	.LFB5379:
 247              		.file 18 "GrannyChordApp.h"
   1:GrannyChordApp.h **** #pragma once 
   2:GrannyChordApp.h **** #include "daisy_pod.h"
   3:GrannyChordApp.h **** #include "daisysp.h"
   4:GrannyChordApp.h **** // #include "constants_utils.h"
   5:GrannyChordApp.h **** #include "UIManager.h"
   6:GrannyChordApp.h **** #include "GranularSynth.h"
   7:GrannyChordApp.h **** #include "AudioFileManager.h"
   8:GrannyChordApp.h **** #include "debug_print.h"
   9:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/compressor.h"
  10:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/reverbsc.h"
  11:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/moogladder.h"
  12:GrannyChordApp.h **** 
  13:GrannyChordApp.h **** using namespace daisy;
  14:GrannyChordApp.h **** using namespace daisysp;
  15:GrannyChordApp.h **** 
  16:GrannyChordApp.h **** class GrannyChordApp {
 248              		.loc 18 16 7 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LBB287:
 254              	.LBI287:
 255              		.file 19 "../libDaisy/src/util/WavWriter.h"
   1:../libDaisy/src/util/WavWriter.h **** #pragma once
   2:../libDaisy/src/util/WavWriter.h **** #pragma once
   3:../libDaisy/src/util/WavWriter.h **** #include "fatfs.h"
   4:../libDaisy/src/util/WavWriter.h **** 
   5:../libDaisy/src/util/WavWriter.h **** namespace daisy
   6:../libDaisy/src/util/WavWriter.h **** {
   7:../libDaisy/src/util/WavWriter.h **** /** Audio Recording Module
   8:../libDaisy/src/util/WavWriter.h ****  ** 
   9:../libDaisy/src/util/WavWriter.h ****  ** Record audio into a working buffer that is gradually written to a WAV file on an SD Card. 
  10:../libDaisy/src/util/WavWriter.h ****  **
  11:../libDaisy/src/util/WavWriter.h ****  ** Recordings are made with floating point input, and will be converted to the 
  12:../libDaisy/src/util/WavWriter.h ****  ** specified bits per sample internally 
  13:../libDaisy/src/util/WavWriter.h ****  **
  14:../libDaisy/src/util/WavWriter.h ****  ** For now only 16-bit and 32-bit (signed int) formats are supported
  15:../libDaisy/src/util/WavWriter.h ****  ** f32 and s24 formats will be added next
  16:../libDaisy/src/util/WavWriter.h ****  **
  17:../libDaisy/src/util/WavWriter.h ****  ** The transfer size determines the amount of internal memory used, and can have an
  18:../libDaisy/src/util/WavWriter.h ****  ** effect on the performance of the streaming behavior of the WavWriter.
  19:../libDaisy/src/util/WavWriter.h ****  ** Memory use can be calculated as: (2 * transfer_size) bytes
  20:../libDaisy/src/util/WavWriter.h ****  ** Performance optimal with sizes: 16384, 32768
  21:../libDaisy/src/util/WavWriter.h ****  ** 
  22:../libDaisy/src/util/WavWriter.h ****  ** To use:
  23:../libDaisy/src/util/WavWriter.h ****  ** 1. Create a WavWriter<size> object (e.g. WavWriter<32768> writer)
  24:../libDaisy/src/util/WavWriter.h ****  ** 2. Configure the settings as desired by creating a WavWriter<32768>::Config struct and setting 
  25:../libDaisy/src/util/WavWriter.h ****  ** 3. Initialize the object with the configuration struct.
  26:../libDaisy/src/util/WavWriter.h ****  ** 4. Open a new file for writing with: writer.OpenFile("FileName.wav")
  27:../libDaisy/src/util/WavWriter.h ****  ** 5. Write to it within your audio callback using: writer.Sample(value)
  28:../libDaisy/src/util/WavWriter.h ****  ** 6. Fill the Wav File on the SD Card with data from your main loop by running: writer.Write()
  29:../libDaisy/src/util/WavWriter.h ****  ** 7. When finished with the recording finalize, and close the file with: writer.SaveFile();
  30:../libDaisy/src/util/WavWriter.h ****  ** 
  31:../libDaisy/src/util/WavWriter.h ****  ** */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 26


  32:../libDaisy/src/util/WavWriter.h **** template <size_t transfer_size>
  33:../libDaisy/src/util/WavWriter.h **** class WavWriter
  34:../libDaisy/src/util/WavWriter.h **** {
  35:../libDaisy/src/util/WavWriter.h ****   public:
  36:../libDaisy/src/util/WavWriter.h ****     WavWriter() {}
  37:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 256              		.loc 19 37 5 view .LVU51
 257              		.loc 19 37 5 is_stmt 0 view .LVU52
 258              	.LBE287:
 259              	.LBB288:
 260              	.LBI288:
 261              		.file 20 "../DaisySP/Source/Filters/onepole.h"
   1:../DaisySP/Source/Filters/onepole.h **** /*
   2:../DaisySP/Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Filters/onepole.h **** 
   4:../DaisySP/Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Filters/onepole.h **** */
   8:../DaisySP/Source/Filters/onepole.h **** 
   9:../DaisySP/Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../DaisySP/Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../DaisySP/Source/Filters/onepole.h **** 
  12:../DaisySP/Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../DaisySP/Source/Filters/onepole.h **** #include <cmath>
  14:../DaisySP/Source/Filters/onepole.h **** #include <algorithm>
  15:../DaisySP/Source/Filters/onepole.h **** 
  16:../DaisySP/Source/Filters/onepole.h **** namespace daisysp
  17:../DaisySP/Source/Filters/onepole.h **** {
  18:../DaisySP/Source/Filters/onepole.h **** /**         
  19:../DaisySP/Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../DaisySP/Source/Filters/onepole.h ****     @author beserge
  21:../DaisySP/Source/Filters/onepole.h ****     @date Dec 2023 
  22:../DaisySP/Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../DaisySP/Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../DaisySP/Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../DaisySP/Source/Filters/onepole.h **** */
  26:../DaisySP/Source/Filters/onepole.h **** class OnePole
  27:../DaisySP/Source/Filters/onepole.h **** {
  28:../DaisySP/Source/Filters/onepole.h ****   public:
  29:../DaisySP/Source/Filters/onepole.h ****     OnePole() {}
  30:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 262              		.loc 20 30 5 is_stmt 1 view .LVU53
 263              		.loc 20 30 5 is_stmt 0 view .LVU54
 264              	.LBE288:
 265              	.LBB289:
 266              	.LBI289:
 267              		.file 21 "DaisySP-LGPL-FX/moogladder.h"
   1:DaisySP-LGPL-FX/moogladder.h **** /*
   2:DaisySP-LGPL-FX/moogladder.h **** Copyright (c) 2023 Electrosmith, Corp, Victor Lazzarini, John ffitch (fast tanh), Bob Moog
   3:DaisySP-LGPL-FX/moogladder.h **** 
   4:DaisySP-LGPL-FX/moogladder.h **** Use of this source code is governed by the LGPL V2.1
   5:DaisySP-LGPL-FX/moogladder.h **** license that can be found in the LICENSE file or at
   6:DaisySP-LGPL-FX/moogladder.h **** https://opensource.org/license/lgpl-2-1/
   7:DaisySP-LGPL-FX/moogladder.h **** */
   8:DaisySP-LGPL-FX/moogladder.h **** 
   9:DaisySP-LGPL-FX/moogladder.h **** #pragma once
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 27


  10:DaisySP-LGPL-FX/moogladder.h **** #ifndef DSY_MOOGLADDER_H
  11:DaisySP-LGPL-FX/moogladder.h **** #define DSY_MOOGLADDER_H
  12:DaisySP-LGPL-FX/moogladder.h **** 
  13:DaisySP-LGPL-FX/moogladder.h **** #include <stdint.h>
  14:DaisySP-LGPL-FX/moogladder.h **** #ifdef __cplusplus
  15:DaisySP-LGPL-FX/moogladder.h **** 
  16:DaisySP-LGPL-FX/moogladder.h **** namespace daisysp
  17:DaisySP-LGPL-FX/moogladder.h **** {
  18:DaisySP-LGPL-FX/moogladder.h **** /** Moog ladder filter module*/
  19:DaisySP-LGPL-FX/moogladder.h **** class MoogLadder
  20:DaisySP-LGPL-FX/moogladder.h **** {
  21:DaisySP-LGPL-FX/moogladder.h ****   public:
  22:DaisySP-LGPL-FX/moogladder.h ****     MoogLadder() {}
  23:DaisySP-LGPL-FX/moogladder.h ****     ~MoogLadder() {}
 268              		.loc 21 23 5 is_stmt 1 view .LVU55
 269              		.loc 21 23 5 is_stmt 0 view .LVU56
 270              	.LBE289:
 271              	.LBB290:
 272              	.LBI290:
 273              		.file 22 "DaisySP-LGPL-FX/compressor.h"
   1:DaisySP-LGPL-FX/compressor.h **** /*
   2:DaisySP-LGPL-FX/compressor.h **** Copyright (c) 2023 Electrosmith, Corp, GRAME, Centre National de Creation Musicale.
   3:DaisySP-LGPL-FX/compressor.h **** 
   4:DaisySP-LGPL-FX/compressor.h **** Use of this source code is governed by the LGPL V2.1
   5:DaisySP-LGPL-FX/compressor.h **** license that can be found in the LICENSE file or at
   6:DaisySP-LGPL-FX/compressor.h **** https://opensource.org/license/lgpl-2-1/
   7:DaisySP-LGPL-FX/compressor.h **** */
   8:DaisySP-LGPL-FX/compressor.h **** 
   9:DaisySP-LGPL-FX/compressor.h **** #pragma once
  10:DaisySP-LGPL-FX/compressor.h **** #ifndef DSY_COMPRESSOR_H
  11:DaisySP-LGPL-FX/compressor.h **** #define DSY_COMPRESSOR_H
  12:DaisySP-LGPL-FX/compressor.h **** 
  13:DaisySP-LGPL-FX/compressor.h **** #include "Utility/dsp.h"
  14:DaisySP-LGPL-FX/compressor.h **** 
  15:DaisySP-LGPL-FX/compressor.h **** namespace daisysp
  16:DaisySP-LGPL-FX/compressor.h **** {
  17:DaisySP-LGPL-FX/compressor.h **** /** dynamics compressor
  18:DaisySP-LGPL-FX/compressor.h **** 
  19:DaisySP-LGPL-FX/compressor.h **** influenced by compressor in soundpipe (from faust).
  20:DaisySP-LGPL-FX/compressor.h **** 
  21:DaisySP-LGPL-FX/compressor.h **** Modifications made to do:
  22:DaisySP-LGPL-FX/compressor.h **** - Less calculations during each process loop (coefficients recalculated on parameter change).
  23:DaisySP-LGPL-FX/compressor.h **** - C++-ified
  24:DaisySP-LGPL-FX/compressor.h **** - added sidechain support
  25:DaisySP-LGPL-FX/compressor.h **** - pulled gain apart for monitoring and multichannel support
  26:DaisySP-LGPL-FX/compressor.h **** - improved readability
  27:DaisySP-LGPL-FX/compressor.h **** - improved makeup-gain calculations
  28:DaisySP-LGPL-FX/compressor.h **** - changing controls now costs a lot less
  29:DaisySP-LGPL-FX/compressor.h **** - a lot less expensive
  30:DaisySP-LGPL-FX/compressor.h **** 
  31:DaisySP-LGPL-FX/compressor.h **** by: shensley, improved upon by AvAars
  32:DaisySP-LGPL-FX/compressor.h **** \todo Add soft/hard knee settings
  33:DaisySP-LGPL-FX/compressor.h **** */
  34:DaisySP-LGPL-FX/compressor.h **** class Compressor
  35:DaisySP-LGPL-FX/compressor.h **** {
  36:DaisySP-LGPL-FX/compressor.h ****   public:
  37:DaisySP-LGPL-FX/compressor.h ****     Compressor() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 28


  38:DaisySP-LGPL-FX/compressor.h ****     ~Compressor() {}
 274              		.loc 22 38 5 is_stmt 1 view .LVU57
 275              		.loc 22 38 5 is_stmt 0 view .LVU58
 276              	.LBE290:
 277              	.LBB291:
 278              	.LBI291:
 279              		.file 23 "UIManager.h"
   1:UIManager.h   **** #pragma once
   2:UIManager.h   **** #include "daisy_pod.h"
   3:UIManager.h   **** #include "AppState.h"
   4:UIManager.h   **** #include "constants_utils.h"
   5:UIManager.h   **** #include "debug_print.h"
   6:UIManager.h   **** 
   7:UIManager.h   **** using namespace daisy;
   8:UIManager.h   **** 
   9:UIManager.h   **** class UIManager {
 280              		.loc 23 9 7 is_stmt 1 view .LVU59
 281              	.LBB292:
 282              	.LBI292:
 283              		.file 24 "../libDaisy/src/per/tim.h"
   1:../libDaisy/src/per/tim.h **** #pragma once
   2:../libDaisy/src/per/tim.h **** #ifndef DSY_TIM_H
   3:../libDaisy/src/per/tim.h **** #define DSY_TIM_H
   4:../libDaisy/src/per/tim.h **** 
   5:../libDaisy/src/per/tim.h **** #include <cstdint>
   6:../libDaisy/src/per/tim.h **** 
   7:../libDaisy/src/per/tim.h **** namespace daisy
   8:../libDaisy/src/per/tim.h **** {
   9:../libDaisy/src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../libDaisy/src/per/tim.h ****  ** 
  11:../libDaisy/src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../libDaisy/src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../libDaisy/src/per/tim.h ****  **
  14:../libDaisy/src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../libDaisy/src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../libDaisy/src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../libDaisy/src/per/tim.h ****  **
  18:../libDaisy/src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../libDaisy/src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../libDaisy/src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../libDaisy/src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../libDaisy/src/per/tim.h ****  **
  23:../libDaisy/src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../libDaisy/src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../libDaisy/src/per/tim.h ****  ** to turn on and function.
  26:../libDaisy/src/per/tim.h ****  **
  27:../libDaisy/src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
  28:../libDaisy/src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../libDaisy/src/per/tim.h ****  ** @todo Other General purpose timers
  30:../libDaisy/src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../libDaisy/src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../libDaisy/src/per/tim.h ****  **     - PWM, etc.
  33:../libDaisy/src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  34:../libDaisy/src/per/tim.h ****  ** @todo HRTIM
  35:../libDaisy/src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../libDaisy/src/per/tim.h ****  ** */
  37:../libDaisy/src/per/tim.h **** class TimerHandle
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 29


  38:../libDaisy/src/per/tim.h **** {
  39:../libDaisy/src/per/tim.h ****   public:
  40:../libDaisy/src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../libDaisy/src/per/tim.h ****      *  @note These settings are used during initialization
  42:../libDaisy/src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../libDaisy/src/per/tim.h ****      */
  44:../libDaisy/src/per/tim.h ****     struct Config
  45:../libDaisy/src/per/tim.h ****     {
  46:../libDaisy/src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../libDaisy/src/per/tim.h ****         enum class Peripheral
  48:../libDaisy/src/per/tim.h ****         {
  49:../libDaisy/src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../libDaisy/src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../libDaisy/src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../libDaisy/src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../libDaisy/src/per/tim.h ****         };
  54:../libDaisy/src/per/tim.h **** 
  55:../libDaisy/src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../libDaisy/src/per/tim.h ****          ** @todo Add support for the various  
  57:../libDaisy/src/per/tim.h ****          ** versions of Up/Down counters.
  58:../libDaisy/src/per/tim.h ****          ** */
  59:../libDaisy/src/per/tim.h ****         enum class CounterDir
  60:../libDaisy/src/per/tim.h ****         {
  61:../libDaisy/src/per/tim.h ****             UP = 0,
  62:../libDaisy/src/per/tim.h ****             DOWN,
  63:../libDaisy/src/per/tim.h ****         };
  64:../libDaisy/src/per/tim.h **** 
  65:../libDaisy/src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../libDaisy/src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../libDaisy/src/per/tim.h **** 
  68:../libDaisy/src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../libDaisy/src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../libDaisy/src/per/tim.h ****         */
  71:../libDaisy/src/per/tim.h ****         uint32_t period;
  72:../libDaisy/src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../libDaisy/src/per/tim.h **** 
  74:../libDaisy/src/per/tim.h ****         /* @brief Constructor for default states */
  75:../libDaisy/src/per/tim.h ****         Config()
  76:../libDaisy/src/per/tim.h ****         : periph(Peripheral::TIM_2),
  77:../libDaisy/src/per/tim.h ****           dir(CounterDir::UP),
  78:../libDaisy/src/per/tim.h ****           period(0xffffffff),
  79:../libDaisy/src/per/tim.h ****           enable_irq(false)
  80:../libDaisy/src/per/tim.h ****         {
  81:../libDaisy/src/per/tim.h ****         }
  82:../libDaisy/src/per/tim.h ****     };
  83:../libDaisy/src/per/tim.h **** 
  84:../libDaisy/src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
  85:../libDaisy/src/per/tim.h ****     enum class Result
  86:../libDaisy/src/per/tim.h ****     {
  87:../libDaisy/src/per/tim.h ****         OK,
  88:../libDaisy/src/per/tim.h ****         ERR,
  89:../libDaisy/src/per/tim.h ****     };
  90:../libDaisy/src/per/tim.h **** 
  91:../libDaisy/src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../libDaisy/src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../libDaisy/src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../libDaisy/src/per/tim.h ****     */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 30


  95:../libDaisy/src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
  96:../libDaisy/src/per/tim.h **** 
  97:../libDaisy/src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  98:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../libDaisy/src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../libDaisy/src/per/tim.h ****     ~TimerHandle() {}
 284              		.loc 24 100 5 view .LVU60
 285              		.loc 24 100 5 is_stmt 0 view .LVU61
 286              	.LBE292:
 287              	.LBE291:
 288              	.LBB293:
 289              	.LBI293:
 290              		.loc 17 7 7 is_stmt 1 view .LVU62
 291              		.loc 17 7 7 is_stmt 0 view .LVU63
 292              	.LBE293:
 293              		.loc 18 16 7 view .LVU64
 294 0000 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE5379:
 298              		.weak	_ZN14GrannyChordAppD1Ev
 299              		.thumb_set _ZN14GrannyChordAppD1Ev,_ZN14GrannyChordAppD2Ev
 300              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 301              	.LC0:
 302 0000 73746172 		.ascii	"started log\000"
 302      74656420 
 302      6C6F6700 
 303              		.section	.text.startup.main,"ax",%progbits
 304              		.align	1
 305              		.global	main
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 310              	main:
 311              	.LFB4787:
 312              		.file 25 "main.cpp"
   1:main.cpp      **** #ifdef DEBUG_MODE // TODO: remove
   2:main.cpp      **** #pragma message("Debug mode is ON")
   3:main.cpp      **** #else
   4:main.cpp      **** #pragma message("Debug mode is OFF")
   5:main.cpp      **** #endif
   6:main.cpp      **** 
   7:main.cpp      **** #include <stdio.h>
   8:main.cpp      **** #include "daisysp.h"
   9:main.cpp      **** #include "daisy_pod.h"
  10:main.cpp      **** #include "AudioFileManager.h"
  11:main.cpp      **** #include "GranularSynth.h"
  12:main.cpp      **** #include "GrannyChordApp.h"
  13:main.cpp      **** #include "constants_utils.h"
  14:main.cpp      **** #include "debug_print.h"
  15:main.cpp      **** 
  16:main.cpp      **** using namespace daisy;
  17:main.cpp      **** using namespace daisysp;
  18:main.cpp      **** using namespace std;
  19:main.cpp      **** 
  20:main.cpp      **** /* SDRAM buffers for storing WAV files or recorded input audio */
  21:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t left_buf[CHNL_BUF_SIZE_SAMPS];
  22:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t right_buf[CHNL_BUF_SIZE_SAMPS];
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 31


  23:main.cpp      **** 
  24:main.cpp      **** DSY_SDRAM_BSS ReverbSc reverb; 
  25:main.cpp      **** 
  26:main.cpp      **** /* SDRAM buffer for temporarily storing recorded output audio
  27:main.cpp      ****     before it's written to SD card */
  28:main.cpp      **** // DSY_SDRAM_BSS alignas(16) int16_t record_out_buf[RECORD_OUT_BUF_SIZE_SAMPS];
  29:main.cpp      **** 
  30:main.cpp      **** /* hardware interfaces */
  31:main.cpp      **** DSY_SDRAM_BSS SdmmcHandler sd;
  32:main.cpp      **** // __attribute__((section(".axi_sram")))SdmmcHandler sd;
  33:main.cpp      **** // SdmmcHandler sd;
  34:main.cpp      **** DSY_SDRAM_BSS FatFSInterface fsi;
  35:main.cpp      **** // __attribute__((section(".axi_sram")))FatFSInterface fsi;
  36:main.cpp      **** DaisyPod pod;
  37:main.cpp      **** DSY_SDRAM_BSS FIL file;
  38:main.cpp      **** 
  39:main.cpp      **** /* software classes to run app */
  40:main.cpp      **** //NOTE: can't put this on SDRAM
  41:main.cpp      **** // CAN put it on axi_sdram
  42:main.cpp      **** __attribute__((section(".axi_sdram")))AudioFileManager filemgr(sd, fsi, pod, &file);
  43:main.cpp      **** // AudioFileManager filemgr(sd, fsi, pod, &file);
  44:main.cpp      **** // DSY_SDRAM_BSS AudioFileManager filemgr(sd, fsi, pod, &file);
  45:main.cpp      **** __attribute__((section(".axi_sram")))static GranularSynth synth(pod);
  46:main.cpp      **** 
  47:main.cpp      **** // DSY_SDRAM_BSS static GranularSynth synth(pod);
  48:main.cpp      **** // __attribute__((section(".axi_sram")))GrannyChordApp app(pod, synth, filemgr);
  49:main.cpp      **** // __attribute((section(".sram")))GrannyChordApp app(pod, synth, filemgr);
  50:main.cpp      **** // DSY_SDRAM_BSS GrannyChordApp app(pod, synth, filemgr);
  51:main.cpp      **** GrannyChordApp app(pod, synth, filemgr);
  52:main.cpp      **** 
  53:main.cpp      **** /* we set rng state here so we can use RNG fns across classes */
  54:main.cpp      **** uint32_t rng_state;
  55:main.cpp      **** 
  56:main.cpp      **** int main (void){
 313              		.loc 25 56 16 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
  57:main.cpp      ****   pod.Init();
 317              		.loc 25 57 3 view .LVU66
  56:main.cpp      ****   pod.Init();
 318              		.loc 25 56 16 is_stmt 0 view .LVU67
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 323              		.loc 25 57 11 view .LVU68
 324 0002 0E4C     		ldr	r4, .L7
 325 0004 0021     		movs	r1, #0
 326 0006 2046     		mov	r0, r4
 327 0008 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 328              	.LVL5:
  58:main.cpp      ****   pod.seed.StartLog(true);
 329              		.loc 25 58 3 is_stmt 1 view .LVU69
 330              	.LBB294:
 331              	.LBI294:
  23:../libDaisy/src/daisy_seed.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 32


  24:../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../libDaisy/src/daisy_seed.h ****      */
  27:../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../libDaisy/src/daisy_seed.h **** 
  29:../libDaisy/src/daisy_seed.h ****     /** 
  30:../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../libDaisy/src/daisy_seed.h **** 
  34:../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../libDaisy/src/daisy_seed.h ****     */
  38:../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../libDaisy/src/daisy_seed.h **** 
  40:../libDaisy/src/daisy_seed.h ****     /** 
  41:../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../libDaisy/src/daisy_seed.h ****     */
  43:../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../libDaisy/src/daisy_seed.h **** 
  45:../libDaisy/src/daisy_seed.h ****     /** 
  46:../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../libDaisy/src/daisy_seed.h ****     */
  49:../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../libDaisy/src/daisy_seed.h **** 
  51:../libDaisy/src/daisy_seed.h ****     /** 
  52:../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../libDaisy/src/daisy_seed.h ****     */
  55:../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../libDaisy/src/daisy_seed.h **** 
  57:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../libDaisy/src/daisy_seed.h ****     */
  61:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../libDaisy/src/daisy_seed.h **** 
  63:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../libDaisy/src/daisy_seed.h ****     */
  68:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../libDaisy/src/daisy_seed.h **** 
  70:../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../libDaisy/src/daisy_seed.h ****      */
  72:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../libDaisy/src/daisy_seed.h **** 
  74:../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../libDaisy/src/daisy_seed.h ****      */
  76:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../libDaisy/src/daisy_seed.h **** 
  78:../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../libDaisy/src/daisy_seed.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 33


  81:../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../libDaisy/src/daisy_seed.h ****      */
  84:../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../libDaisy/src/daisy_seed.h **** 
  86:../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../libDaisy/src/daisy_seed.h ****      */
  88:../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../libDaisy/src/daisy_seed.h **** 
  90:../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../libDaisy/src/daisy_seed.h ****      */
  92:../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../libDaisy/src/daisy_seed.h **** 
  94:../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../libDaisy/src/daisy_seed.h **** 
  97:../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../libDaisy/src/daisy_seed.h **** 
 100:../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../libDaisy/src/daisy_seed.h ****      */
 105:../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../libDaisy/src/daisy_seed.h **** 
 107:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../libDaisy/src/daisy_seed.h ****      */
 109:../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../libDaisy/src/daisy_seed.h **** 
 111:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../libDaisy/src/daisy_seed.h ****      */
 113:../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../libDaisy/src/daisy_seed.h **** 
 115:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../libDaisy/src/daisy_seed.h ****      */
 117:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../libDaisy/src/daisy_seed.h ****     {
 120:../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../libDaisy/src/daisy_seed.h ****     }
 122:../libDaisy/src/daisy_seed.h **** 
 123:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../libDaisy/src/daisy_seed.h ****     */
 125:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../libDaisy/src/daisy_seed.h ****     {
 128:../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 129:../libDaisy/src/daisy_seed.h ****     }
 130:../libDaisy/src/daisy_seed.h **** 
 131:../libDaisy/src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:../libDaisy/src/daisy_seed.h ****     */
 133:../libDaisy/src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 332              		.loc 11 133 17 view .LVU70
 333              	.LBB295:
 134:../libDaisy/src/daisy_seed.h ****     {
 135:../libDaisy/src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 34


 334              		.loc 11 135 9 view .LVU71
 335              		.loc 11 135 22 is_stmt 0 view .LVU72
 336 000c 0120     		movs	r0, #1
 337 000e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 338              	.LVL6:
 339              		.loc 11 135 22 view .LVU73
 340              	.LBE295:
 341              	.LBE294:
  59:main.cpp      ****   DebugPrint(pod,"started log");
 342              		.loc 25 59 3 is_stmt 1 view .LVU74
 343              		.loc 25 59 3 view .LVU75
 344              	.LBB296:
 345              	.LBI296:
 126:../libDaisy/src/daisy_seed.h ****     {
 346              		.loc 11 126 17 view .LVU76
 347              	.LBB297:
 128:../libDaisy/src/daisy_seed.h ****     }
 348              		.loc 11 128 23 is_stmt 0 view .LVU77
 349 0012 0B48     		ldr	r0, .L7+4
 350 0014 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 351              	.LVL7:
 128:../libDaisy/src/daisy_seed.h ****     }
 352              		.loc 11 128 23 view .LVU78
 353              	.LBE297:
 354              	.LBE296:
  60:main.cpp      ****   pod.led1.SetBlue(1);
 355              		.loc 25 60 3 is_stmt 1 view .LVU79
 356              		.loc 25 60 19 is_stmt 0 view .LVU80
 357 0018 B7EE000A 		vmov.f32	s0, #1.0e+0
 358 001c 04F1D800 		add	r0, r4, #216
 359 0020 FFF7FEFF 		bl	_ZN5daisy6RgbLed7SetBlueEf
 360              	.LVL8:
  61:main.cpp      ****   pod.UpdateLeds();
 361              		.loc 25 61 3 is_stmt 1 view .LVU81
 362              		.loc 25 61 17 is_stmt 0 view .LVU82
 363 0024 2046     		mov	r0, r4
 364 0026 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 365              	.LVL9:
  62:main.cpp      ****   SdmmcHandler::Config cfg;
 366              		.loc 25 62 3 is_stmt 1 view .LVU83
  63:main.cpp      ****   cfg.Defaults();
 367              		.loc 25 63 3 view .LVU84
  71:../libDaisy/src/per/sdmmc.h ****             width           = BusWidth::BITS_4;
 368              		.loc 1 71 13 view .LVU85
  72:../libDaisy/src/per/sdmmc.h ****             clock_powersave = false;
 369              		.loc 1 72 13 view .LVU86
  73:../libDaisy/src/per/sdmmc.h ****         }
 370              		.loc 1 73 13 view .LVU87
  64:main.cpp      ****   // if (sd.Init(cfg)!=SdmmcHandler::Result::OK){
  65:main.cpp      ****   //   pod.seed.PrintLine("sd init failed");
  66:main.cpp      ****   // } else {
  67:main.cpp      ****   //   pod.seed.PrintLine("sd init ok");
  68:main.cpp      ****   // }
  69:main.cpp      ****   // fsi.Init(FatFSInterface::Config::MEDIA_SD);
  70:main.cpp      ****   // if (f_mount(&fsi.GetSDFileSystem(),"/",1)!=FR_OK){
  71:main.cpp      ****   //   pod.seed.PrintLine("fsi init failed");
  72:main.cpp      ****   // }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 35


  73:main.cpp      ****   // else {
  74:main.cpp      ****   //   pod.seed.PrintLine("fsi init ok");
  75:main.cpp      ****   // }
  76:main.cpp      **** 
  77:main.cpp      **** 
  78:main.cpp      ****   app.Init(left_buf, right_buf,&reverb);
 371              		.loc 25 78 3 view .LVU88
 372              		.loc 25 78 11 is_stmt 0 view .LVU89
 373 002a 064B     		ldr	r3, .L7+8
 374 002c 064A     		ldr	r2, .L7+12
 375 002e 0749     		ldr	r1, .L7+16
 376 0030 0748     		ldr	r0, .L7+20
 377 0032 FFF7FEFF 		bl	_ZN14GrannyChordApp4InitEPsS0_PN7daisysp8ReverbScE
 378              	.LVL10:
  79:main.cpp      ****   // app.Run();
  80:main.cpp      ****   // while(true){
  81:main.cpp      **** 
  82:main.cpp      ****   // }
  83:main.cpp      **** 
  84:main.cpp      **** }
 379              		.loc 25 84 1 view .LVU90
 380 0036 0020     		movs	r0, #0
 381 0038 10BD     		pop	{r4, pc}
 382              	.L8:
 383 003a 00BF     		.align	2
 384              	.L7:
 385 003c 00000000 		.word	pod
 386 0040 00000000 		.word	.LC0
 387 0044 00000000 		.word	reverb
 388 0048 00000000 		.word	right_buf
 389 004c 00000000 		.word	left_buf
 390 0050 00000000 		.word	app
 391              		.cfi_endproc
 392              	.LFE4787:
 394              		.section	.text.startup._GLOBAL__sub_I_left_buf,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	_GLOBAL__sub_I_left_buf:
 401              	.LFB5381:
 402              		.loc 25 84 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LBB404:
 407              	.LBI404:
 408              		.loc 25 84 1 view .LVU92
 409              	.LVL11:
 410              	.LBB405:
 411              	.LBB406:
 412              	.LBI406:
  37:DaisySP-LGPL-FX/reverbsc.h ****     ~ReverbSc() {}
 413              		.loc 16 37 5 view .LVU93
  37:DaisySP-LGPL-FX/reverbsc.h ****     ~ReverbSc() {}
 414              		.loc 16 37 5 is_stmt 0 view .LVU94
 415              	.LBE406:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 36


 416              	.LBE405:
 417              	.LBE404:
 418              		.loc 25 84 1 view .LVU95
 419 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 420              		.cfi_def_cfa_offset 24
 421              		.cfi_offset 4, -24
 422              		.cfi_offset 5, -20
 423              		.cfi_offset 6, -16
 424              		.cfi_offset 7, -12
 425              		.cfi_offset 8, -8
 426              		.cfi_offset 14, -4
 427              	.LBB567:
 428              	.LBB565:
  31:main.cpp      **** // __attribute__((section(".axi_sram")))SdmmcHandler sd;
 429              		.loc 25 31 28 view .LVU96
 430 0004 584D     		ldr	r5, .L12
 431              	.LBB407:
 432              	.LBB408:
 433              	.LBB409:
 434              	.LBB410:
 435              	.LBB411:
 436              	.LBB412:
 437              	.LBB413:
 438              		.file 26 "../libDaisy/src/per/qspi.h"
   1:../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../libDaisy/src/per/qspi.h **** 
   4:../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../libDaisy/src/per/qspi.h **** 
   6:../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../libDaisy/src/per/qspi.h **** 
   9:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../libDaisy/src/per/qspi.h **** 
  19:../libDaisy/src/per/qspi.h **** namespace daisy
  20:../libDaisy/src/per/qspi.h **** {
  21:../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../libDaisy/src/per/qspi.h **** @{
  23:../libDaisy/src/per/qspi.h **** */
  24:../libDaisy/src/per/qspi.h **** 
  25:../libDaisy/src/per/qspi.h **** /** 
  26:../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../libDaisy/src/per/qspi.h **** */
  30:../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../libDaisy/src/per/qspi.h **** {
  32:../libDaisy/src/per/qspi.h ****   public:
  33:../libDaisy/src/per/qspi.h ****     enum Result
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 37


  34:../libDaisy/src/per/qspi.h ****     {
  35:../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../libDaisy/src/per/qspi.h ****         ERR
  37:../libDaisy/src/per/qspi.h ****     };
  38:../libDaisy/src/per/qspi.h **** 
  39:../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../libDaisy/src/per/qspi.h ****          * 
  43:../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../libDaisy/src/per/qspi.h ****          */
  48:../libDaisy/src/per/qspi.h ****     enum Status
  49:../libDaisy/src/per/qspi.h ****     {
  50:../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../libDaisy/src/per/qspi.h ****     };
  55:../libDaisy/src/per/qspi.h **** 
  56:../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../libDaisy/src/per/qspi.h ****     struct Config
  58:../libDaisy/src/per/qspi.h ****     {
  59:../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../libDaisy/src/per/qspi.h ****         enum Device
  61:../libDaisy/src/per/qspi.h ****         {
  62:../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../libDaisy/src/per/qspi.h ****         };
  66:../libDaisy/src/per/qspi.h **** 
  67:../libDaisy/src/per/qspi.h ****         /** 
  68:../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../libDaisy/src/per/qspi.h ****         */
  74:../libDaisy/src/per/qspi.h ****         enum Mode
  75:../libDaisy/src/per/qspi.h ****         {
  76:../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../libDaisy/src/per/qspi.h ****         };
  80:../libDaisy/src/per/qspi.h **** 
  81:../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../libDaisy/src/per/qspi.h ****         struct
  83:../libDaisy/src/per/qspi.h ****         {
  84:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../libDaisy/src/per/qspi.h ****         } pin_config;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 38


  91:../libDaisy/src/per/qspi.h **** 
  92:../libDaisy/src/per/qspi.h ****         Device device;
  93:../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../libDaisy/src/per/qspi.h ****     };
  95:../libDaisy/src/per/qspi.h **** 
  96:../libDaisy/src/per/qspi.h ****     /** 
  97:../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../libDaisy/src/per/qspi.h ****         */
 101:../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../libDaisy/src/per/qspi.h **** 
 103:../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../libDaisy/src/per/qspi.h **** 
 106:../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../libDaisy/src/per/qspi.h ****     /** 
 109:../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../libDaisy/src/per/qspi.h ****         */
 113:../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../libDaisy/src/per/qspi.h **** 
 115:../libDaisy/src/per/qspi.h ****     /** 
 116:../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../libDaisy/src/per/qspi.h ****         */
 123:../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../libDaisy/src/per/qspi.h **** 
 125:../libDaisy/src/per/qspi.h ****     /** 
 126:../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../libDaisy/src/per/qspi.h ****         */
 132:../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../libDaisy/src/per/qspi.h **** 
 134:../libDaisy/src/per/qspi.h ****     /** 
 135:../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../libDaisy/src/per/qspi.h ****         */
 142:../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../libDaisy/src/per/qspi.h **** 
 144:../libDaisy/src/per/qspi.h ****     /**  
 145:../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 39


 148:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../libDaisy/src/per/qspi.h ****         */
 150:../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../libDaisy/src/per/qspi.h **** 
 152:../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../libDaisy/src/per/qspi.h ****      */
 155:../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../libDaisy/src/per/qspi.h **** 
 157:../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../libDaisy/src/per/qspi.h ****      * 
 161:../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../libDaisy/src/per/qspi.h ****     */
 164:../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../libDaisy/src/per/qspi.h **** 
 166:../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 439              		.loc 26 166 34 view .LVU97
 440 0006 0024     		movs	r4, #0
 441 0008 584E     		ldr	r6, .L12+4
 442              	.LBE413:
 443              	.LBE412:
 444              	.LBE411:
 445              	.LBE410:
 446              	.LBE409:
 447              	.LBE408:
 448              	.LBE407:
  24:main.cpp      **** 
 449              		.loc 25 24 24 view .LVU98
 450 000a 594A     		ldr	r2, .L12+8
 451 000c 5949     		ldr	r1, .L12+12
 452 000e 5A48     		ldr	r0, .L12+16
 453 0010 FFF7FEFF 		bl	__aeabi_atexit
 454              	.LVL12:
 455              	.LBB498:
 456              	.LBI498:
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 457              		.loc 1 77 5 is_stmt 1 view .LVU99
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 458              		.loc 1 77 5 is_stmt 0 view .LVU100
 459              	.LBE498:
  31:main.cpp      **** // __attribute__((section(".axi_sram")))SdmmcHandler sd;
 460              		.loc 25 31 28 view .LVU101
 461 0014 564A     		ldr	r2, .L12+8
 462 0016 5949     		ldr	r1, .L12+20
 463 0018 2846     		mov	r0, r5
 464 001a FFF7FEFF 		bl	__aeabi_atexit
 465              	.LVL13:
 466              	.LBB499:
 467              	.LBI499:
 468              		.file 27 "../libDaisy/src/sys/fatfs.h"
   1:../libDaisy/src/sys/fatfs.h **** #ifndef __fatfs_H
   2:../libDaisy/src/sys/fatfs.h **** #define __fatfs_H /**< & */
   3:../libDaisy/src/sys/fatfs.h **** 
   4:../libDaisy/src/sys/fatfs.h **** #include "ff.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 40


   5:../libDaisy/src/sys/fatfs.h **** 
   6:../libDaisy/src/sys/fatfs.h **** namespace daisy
   7:../libDaisy/src/sys/fatfs.h **** {
   8:../libDaisy/src/sys/fatfs.h **** /** @brief Daisy FatFS Driver Interface
   9:../libDaisy/src/sys/fatfs.h ****  *  @details Specifies the desired media (SD Card, USB, etc.) to be mountable with FatFS
  10:../libDaisy/src/sys/fatfs.h ****  *           within a given application. Once initialization is called, the standard
  11:../libDaisy/src/sys/fatfs.h ****  *           FatFS API will be usable with the media mounted in the order 
  12:../libDaisy/src/sys/fatfs.h ****  *           they are listed in the Media config struct. 
  13:../libDaisy/src/sys/fatfs.h ****  *           For example, when only using an SD Card, it will mount at "0:/",
  14:../libDaisy/src/sys/fatfs.h ****  *           when only using USB, it will mount at "0:/". However, when mounting 
  15:../libDaisy/src/sys/fatfs.h ****  *           with SD card and USB, the SD card will mount at "0:/", and the USB 
  16:../libDaisy/src/sys/fatfs.h ****  *           will mount at "1:/".
  17:../libDaisy/src/sys/fatfs.h ****  *           The relevant hardware peripheral (SDMMC, or MSD) needs to be initialized
  18:../libDaisy/src/sys/fatfs.h ****  *           separately by the application before using FatFS.
  19:../libDaisy/src/sys/fatfs.h ****  *          
  20:../libDaisy/src/sys/fatfs.h ****  *           This object has some memory limitations due to the media connected to it.
  21:../libDaisy/src/sys/fatfs.h ****  *           The SDMMC1 peripheral can only communicate with the AXI SRAM, and the DTCMRAM 
  22:../libDaisy/src/sys/fatfs.h ****  *           cannot communicate with the DMA. So the FatFSInterface object should always be
  23:../libDaisy/src/sys/fatfs.h ****  *           located in the AXI SRAM. This is the default location for all data/bss memory
  24:../libDaisy/src/sys/fatfs.h ****  *           using the standard build. However, applciations using the electrosmith bootloader
  25:../libDaisy/src/sys/fatfs.h ****  *           will need special consideration when using this object AND an SD Card. 
  26:../libDaisy/src/sys/fatfs.h ****  */
  27:../libDaisy/src/sys/fatfs.h **** class FatFSInterface
  28:../libDaisy/src/sys/fatfs.h **** {
  29:../libDaisy/src/sys/fatfs.h ****   public:
  30:../libDaisy/src/sys/fatfs.h ****     /** Return values specifying specific errors for linking Daisy to FatFS */
  31:../libDaisy/src/sys/fatfs.h ****     enum Result
  32:../libDaisy/src/sys/fatfs.h ****     {
  33:../libDaisy/src/sys/fatfs.h ****         OK,
  34:../libDaisy/src/sys/fatfs.h ****         ERR_TOO_MANY_VOLUMES,
  35:../libDaisy/src/sys/fatfs.h ****         ERR_NO_MEDIA_SELECTED,
  36:../libDaisy/src/sys/fatfs.h ****         ERR_GENERIC,
  37:../libDaisy/src/sys/fatfs.h ****     };
  38:../libDaisy/src/sys/fatfs.h **** 
  39:../libDaisy/src/sys/fatfs.h ****     /** Config structure for configuring Daisy to FatFS */
  40:../libDaisy/src/sys/fatfs.h ****     struct Config
  41:../libDaisy/src/sys/fatfs.h ****     {
  42:../libDaisy/src/sys/fatfs.h ****         /** Selected Media that will be linked to FatFS 
  43:../libDaisy/src/sys/fatfs.h ****          *  These values can be OR'd together when multiple
  44:../libDaisy/src/sys/fatfs.h ****          *  volumes are desired 
  45:../libDaisy/src/sys/fatfs.h ****          *  i.e. config.media = Media::SD | Media::USBH;
  46:../libDaisy/src/sys/fatfs.h ****          * 
  47:../libDaisy/src/sys/fatfs.h ****          *  When mounting multiple volumes, ffconf.h must have 
  48:../libDaisy/src/sys/fatfs.h ****          *  _VOLUMES set to an appropriate value.
  49:../libDaisy/src/sys/fatfs.h ****          * 
  50:../libDaisy/src/sys/fatfs.h ****          *  FatFS will register multiple volumes in the order of the enum,
  51:../libDaisy/src/sys/fatfs.h ****          *   the first registered class will mount at "0:/",
  52:../libDaisy/src/sys/fatfs.h ****          *   the second registered class will mount at "1:/", and so on
  53:../libDaisy/src/sys/fatfs.h ****          */
  54:../libDaisy/src/sys/fatfs.h ****         enum Media : uint8_t
  55:../libDaisy/src/sys/fatfs.h ****         {
  56:../libDaisy/src/sys/fatfs.h ****             MEDIA_SD  = 0x01,
  57:../libDaisy/src/sys/fatfs.h ****             MEDIA_USB = 0x02,
  58:../libDaisy/src/sys/fatfs.h ****             // MEDIA_QSPI = 0x04,
  59:../libDaisy/src/sys/fatfs.h ****         };
  60:../libDaisy/src/sys/fatfs.h **** 
  61:../libDaisy/src/sys/fatfs.h ****         uint8_t media;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 41


  62:../libDaisy/src/sys/fatfs.h ****     };
  63:../libDaisy/src/sys/fatfs.h **** 
  64:../libDaisy/src/sys/fatfs.h ****     FatFSInterface() {}
 469              		.loc 27 64 5 is_stmt 1 view .LVU102
 470              		.loc 27 64 5 is_stmt 0 view .LVU103
 471              	.LBE499:
 472              	.LBB500:
 473              	.LBI407:
  35:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
 474              		.loc 2 35 5 is_stmt 1 view .LVU104
 475              	.LBB494:
 476              	.LBB432:
 477              	.LBI409:
  21:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 478              		.loc 11 21 5 view .LVU105
 479              	.LBB430:
 480              	.LBB416:
 481              	.LBI411:
 482              		.loc 26 166 5 view .LVU106
 483              	.LBE416:
 484              	.LBE430:
 485              	.LBE432:
 486              	.LBB433:
 487              	.LBB434:
 488              	.LBB435:
 489              	.LBB436:
 157:../libDaisy/src/hid/midi.h **** 
 158:../libDaisy/src/hid/midi.h ****     struct Config
 490              		.loc 3 158 12 is_stmt 0 view .LVU107
 491 001e 06F5C070 		add	r0, r6, #384
 492              	.LBE436:
 493              	.LBE435:
 494              	.LBE434:
 495              	.LBE433:
 496              	.LBB472:
 497              	.LBB431:
 498              	.LBB417:
 499              	.LBB415:
 500              	.LBB414:
 501              		.loc 26 166 34 view .LVU108
 502 0022 3460     		str	r4, [r6]
 503              	.LVL14:
 504              		.loc 26 166 34 view .LVU109
 505              	.LBE414:
 506              	.LBE415:
 507              	.LBE417:
 508              	.LBB418:
 509              	.LBI418:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 510              		.loc 15 95 5 is_stmt 1 view .LVU110
 511              	.LBB419:
 512              	.LBB420:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 513              		.loc 15 95 35 is_stmt 0 view .LVU111
 514 0024 7461     		str	r4, [r6, #20]
 515              	.LVL15:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 42


 516              		.loc 15 95 35 view .LVU112
 517              	.LBE420:
 518              	.LBE419:
 519              	.LBE418:
 520              	.LBB421:
 521              	.LBI421:
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 522              		.loc 14 109 5 is_stmt 1 view .LVU113
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 523              		.loc 14 109 5 is_stmt 0 view .LVU114
 524              	.LBE421:
 525              	.LBB422:
 526              	.LBI422:
 527              		.file 28 "../libDaisy/src/per/dac.h"
   1:../libDaisy/src/per/dac.h **** #pragma once
   2:../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libDaisy/src/per/dac.h **** 
   5:../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/dac.h **** 
   7:../libDaisy/src/per/dac.h **** namespace daisy
   8:../libDaisy/src/per/dac.h **** {
   9:../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../libDaisy/src/per/dac.h ****  ** 
  12:../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../libDaisy/src/per/dac.h ****  **
  15:../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../libDaisy/src/per/dac.h ****  **
  17:../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../libDaisy/src/per/dac.h ****  ***/
  21:../libDaisy/src/per/dac.h **** class DacHandle
  22:../libDaisy/src/per/dac.h **** {
  23:../libDaisy/src/per/dac.h ****   public:
  24:../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../libDaisy/src/per/dac.h ****     enum class Result
  26:../libDaisy/src/per/dac.h ****     {
  27:../libDaisy/src/per/dac.h ****         OK,
  28:../libDaisy/src/per/dac.h ****         ERR,
  29:../libDaisy/src/per/dac.h ****     };
  30:../libDaisy/src/per/dac.h **** 
  31:../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../libDaisy/src/per/dac.h ****     enum class Channel
  33:../libDaisy/src/per/dac.h ****     {
  34:../libDaisy/src/per/dac.h ****         ONE,
  35:../libDaisy/src/per/dac.h ****         TWO,
  36:../libDaisy/src/per/dac.h ****         BOTH,
  37:../libDaisy/src/per/dac.h ****     };
  38:../libDaisy/src/per/dac.h **** 
  39:../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../libDaisy/src/per/dac.h ****      **
  41:../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../libDaisy/src/per/dac.h ****      **
  43:../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 43


  44:../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../libDaisy/src/per/dac.h ****      ***/
  46:../libDaisy/src/per/dac.h ****     enum class Mode
  47:../libDaisy/src/per/dac.h ****     {
  48:../libDaisy/src/per/dac.h ****         POLLING,
  49:../libDaisy/src/per/dac.h ****         DMA,
  50:../libDaisy/src/per/dac.h ****     };
  51:../libDaisy/src/per/dac.h **** 
  52:../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../libDaisy/src/per/dac.h ****      ***/
  56:../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../libDaisy/src/per/dac.h ****     {
  58:../libDaisy/src/per/dac.h ****         BITS_8,
  59:../libDaisy/src/per/dac.h ****         BITS_12
  60:../libDaisy/src/per/dac.h ****     };
  61:../libDaisy/src/per/dac.h **** 
  62:../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../libDaisy/src/per/dac.h ****     {
  65:../libDaisy/src/per/dac.h ****         ENABLED,
  66:../libDaisy/src/per/dac.h ****         DISABLED,
  67:../libDaisy/src/per/dac.h ****     };
  68:../libDaisy/src/per/dac.h **** 
  69:../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../libDaisy/src/per/dac.h ****     struct Config
  71:../libDaisy/src/per/dac.h ****     {
  72:../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../libDaisy/src/per/dac.h **** 
  78:../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../libDaisy/src/per/dac.h ****     };
  83:../libDaisy/src/per/dac.h **** 
  84:../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 528              		.loc 28 84 5 is_stmt 1 view .LVU115
 529              	.LBB423:
 530              	.LBB424:
 531              		.loc 28 84 33 is_stmt 0 view .LVU116
 532 0026 3462     		str	r4, [r6, #32]
 533              	.LVL16:
 534              		.loc 28 84 33 view .LVU117
 535              	.LBE424:
 536              	.LBE423:
 537              	.LBE422:
 538              	.LBB425:
 539              	.LBI425:
  40:../libDaisy/src/hid/usb.h **** 
 540              		.loc 13 40 5 is_stmt 1 view .LVU118
  40:../libDaisy/src/hid/usb.h **** 
 541              		.loc 13 40 5 is_stmt 0 view .LVU119
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 44


 542              	.LBE425:
 543              	.LBB426:
 544              	.LBI426:
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 545              		.loc 12 96 5 is_stmt 1 view .LVU120
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 546              		.loc 12 96 5 is_stmt 0 view .LVU121
 547              	.LBE426:
 548              	.LBB427:
 549              	.LBI427:
 550              		.file 29 "../libDaisy/src/per/sai.h"
   1:../libDaisy/src/per/sai.h **** #pragma once
   2:../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../libDaisy/src/per/sai.h **** 
   5:../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/sai.h **** 
   7:../libDaisy/src/per/sai.h **** namespace daisy
   8:../libDaisy/src/per/sai.h **** {
   9:../libDaisy/src/per/sai.h **** /** 
  10:../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../libDaisy/src/per/sai.h ****  * 
  14:../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../libDaisy/src/per/sai.h ****  *
  18:../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../libDaisy/src/per/sai.h ****  * 
  21:../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../libDaisy/src/per/sai.h ****  * 
  23:../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../libDaisy/src/per/sai.h ****  */
  42:../libDaisy/src/per/sai.h **** class SaiHandle
  43:../libDaisy/src/per/sai.h **** {
  44:../libDaisy/src/per/sai.h ****   public:
  45:../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../libDaisy/src/per/sai.h ****     struct Config
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 45


  47:../libDaisy/src/per/sai.h ****     {
  48:../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../libDaisy/src/per/sai.h ****         {
  51:../libDaisy/src/per/sai.h ****             SAI_1,
  52:../libDaisy/src/per/sai.h ****             SAI_2,
  53:../libDaisy/src/per/sai.h ****         };
  54:../libDaisy/src/per/sai.h **** 
  55:../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../libDaisy/src/per/sai.h ****         {
  58:../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../libDaisy/src/per/sai.h ****         };
  64:../libDaisy/src/per/sai.h **** 
  65:../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../libDaisy/src/per/sai.h ****         {
  68:../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../libDaisy/src/per/sai.h ****         };
  72:../libDaisy/src/per/sai.h **** 
  73:../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../libDaisy/src/per/sai.h ****          */
  77:../libDaisy/src/per/sai.h ****         enum class Sync
  78:../libDaisy/src/per/sai.h ****         {
  79:../libDaisy/src/per/sai.h ****             MASTER,
  80:../libDaisy/src/per/sai.h ****             SLAVE,
  81:../libDaisy/src/per/sai.h ****         };
  82:../libDaisy/src/per/sai.h **** 
  83:../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../libDaisy/src/per/sai.h ****         enum class Direction
  85:../libDaisy/src/per/sai.h ****         {
  86:../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../libDaisy/src/per/sai.h ****         };
  89:../libDaisy/src/per/sai.h **** 
  90:../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../libDaisy/src/per/sai.h ****         struct
  92:../libDaisy/src/per/sai.h ****         {
  93:../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../libDaisy/src/per/sai.h ****         } pin_config;
  95:../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../libDaisy/src/per/sai.h ****     };
 100:../libDaisy/src/per/sai.h **** 
 101:../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../libDaisy/src/per/sai.h ****     enum class Result
 103:../libDaisy/src/per/sai.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 46


 104:../libDaisy/src/per/sai.h ****         OK,
 105:../libDaisy/src/per/sai.h ****         ERR,
 106:../libDaisy/src/per/sai.h ****     };
 107:../libDaisy/src/per/sai.h **** 
 108:../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 551              		.loc 29 108 5 is_stmt 1 view .LVU122
 552              	.LBB428:
 553              	.LBB429:
 554              		.loc 29 108 33 is_stmt 0 view .LVU123
 555 0028 F463     		str	r4, [r6, #60]
 556              	.LVL17:
 557              		.loc 29 108 33 view .LVU124
 558              	.LBE429:
 559              	.LBE428:
 560              	.LBE427:
 561              	.LBE431:
 562              	.LBE472:
 563              	.LBB473:
 564              	.LBI473:
  20:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 565              		.loc 10 20 5 is_stmt 1 view .LVU125
 566              	.LBB474:
 567              	.LBB475:
 568              	.LBI475:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 569              		.loc 8 41 5 view .LVU126
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 570              		.loc 8 41 5 is_stmt 0 view .LVU127
 571              	.LBE475:
 572              	.LBE474:
 573              	.LBE473:
 574              	.LBB476:
 575              	.LBI476:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 576              		.loc 9 21 5 is_stmt 1 view .LVU128
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 577              		.loc 9 21 5 is_stmt 0 view .LVU129
 578              	.LBE476:
 579              	.LBB477:
 580              	.LBI477:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 581              		.loc 9 21 5 is_stmt 1 view .LVU130
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 582              		.loc 9 21 5 is_stmt 0 view .LVU131
 583              	.LBE477:
 584              	.LBB478:
 585              	.LBI478:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 586              		.loc 8 41 5 is_stmt 1 view .LVU132
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 587              		.loc 8 41 5 is_stmt 0 view .LVU133
 588              	.LBE478:
 589              	.LBB479:
 590              	.LBI479:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 591              		.loc 8 41 5 is_stmt 1 view .LVU134
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 47


 592              		.loc 8 41 5 is_stmt 0 view .LVU135
 593              	.LBE479:
 594              	.LBB480:
 595              	.LBI480:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 596              		.loc 6 17 5 is_stmt 1 view .LVU136
 597              	.LBB481:
 598              	.LBB482:
 599              	.LBI482:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 600              		.loc 7 24 5 view .LVU137
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 601              		.loc 7 24 5 is_stmt 0 view .LVU138
 602              	.LBE482:
 603              	.LBB483:
 604              	.LBI483:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 605              		.loc 7 24 5 is_stmt 1 view .LVU139
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 606              		.loc 7 24 5 is_stmt 0 view .LVU140
 607              	.LBE483:
 608              	.LBB484:
 609              	.LBI484:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 610              		.loc 7 24 5 is_stmt 1 view .LVU141
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 611              		.loc 7 24 5 is_stmt 0 view .LVU142
 612              	.LBE484:
 613              	.LBE481:
 614              	.LBE480:
 615              	.LBB485:
 616              	.LBI485:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 617              		.loc 6 17 5 is_stmt 1 view .LVU143
 618              	.LBB486:
 619              	.LBB487:
 620              	.LBI487:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 621              		.loc 7 24 5 view .LVU144
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 622              		.loc 7 24 5 is_stmt 0 view .LVU145
 623              	.LBE487:
 624              	.LBB488:
 625              	.LBI488:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 626              		.loc 7 24 5 is_stmt 1 view .LVU146
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 627              		.loc 7 24 5 is_stmt 0 view .LVU147
 628              	.LBE488:
 629              	.LBB489:
 630              	.LBI489:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 631              		.loc 7 24 5 is_stmt 1 view .LVU148
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 632              		.loc 7 24 5 is_stmt 0 view .LVU149
 633              	.LBE489:
 634              	.LBE486:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 48


 635              	.LBE485:
 636              	.LBB490:
 637              	.LBI433:
 155:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 638              		.loc 3 155 5 is_stmt 1 view .LVU150
 639              	.LBB468:
 640              	.LBB438:
 641              	.LBI435:
 642              		.loc 3 158 12 view .LVU151
 643              	.LBB437:
 644 002a FFF7FEFF 		bl	_ZN5daisy17MidiUartTransport6ConfigC1Ev
 645              	.LVL18:
 646              		.loc 3 158 12 is_stmt 0 view .LVU152
 647              	.LBE437:
 648              	.LBE438:
 649              	.LBB439:
 650              	.LBI439:
  31:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 651              		.loc 3 31 5 is_stmt 1 view .LVU153
 652              	.LBB440:
 653              	.LBB441:
 654              	.LBI441:
 655              		.file 30 "../libDaisy/src/per/uart.h"
   1:../libDaisy/src/per/uart.h **** /* 
   2:../libDaisy/src/per/uart.h **** TODO
   3:../libDaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   4:../libDaisy/src/per/uart.h **** */
   5:../libDaisy/src/per/uart.h **** 
   6:../libDaisy/src/per/uart.h **** #pragma once
   7:../libDaisy/src/per/uart.h **** #ifndef DSY_UART_H
   8:../libDaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
   9:../libDaisy/src/per/uart.h **** #include "daisy_core.h"
  10:../libDaisy/src/per/uart.h **** 
  11:../libDaisy/src/per/uart.h **** 
  12:../libDaisy/src/per/uart.h **** namespace daisy
  13:../libDaisy/src/per/uart.h **** {
  14:../libDaisy/src/per/uart.h **** /** @addtogroup serial
  15:../libDaisy/src/per/uart.h ****     @{
  16:../libDaisy/src/per/uart.h ****     */
  17:../libDaisy/src/per/uart.h **** 
  18:../libDaisy/src/per/uart.h **** /** 
  19:../libDaisy/src/per/uart.h ****     Uart Peripheral
  20:../libDaisy/src/per/uart.h ****     @author shensley
  21:../libDaisy/src/per/uart.h ****     @date March 2020
  22:../libDaisy/src/per/uart.h ****     */
  23:../libDaisy/src/per/uart.h **** class UartHandler
  24:../libDaisy/src/per/uart.h **** {
  25:../libDaisy/src/per/uart.h ****   public:
  26:../libDaisy/src/per/uart.h ****     struct Config
  27:../libDaisy/src/per/uart.h ****     {
  28:../libDaisy/src/per/uart.h ****         enum class Peripheral
  29:../libDaisy/src/per/uart.h ****         {
  30:../libDaisy/src/per/uart.h ****             USART_1,
  31:../libDaisy/src/per/uart.h ****             USART_2,
  32:../libDaisy/src/per/uart.h ****             USART_3,
  33:../libDaisy/src/per/uart.h ****             UART_4,
  34:../libDaisy/src/per/uart.h ****             UART_5,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 49


  35:../libDaisy/src/per/uart.h ****             USART_6,
  36:../libDaisy/src/per/uart.h ****             UART_7,
  37:../libDaisy/src/per/uart.h ****             UART_8,
  38:../libDaisy/src/per/uart.h ****             LPUART_1,
  39:../libDaisy/src/per/uart.h ****         };
  40:../libDaisy/src/per/uart.h **** 
  41:../libDaisy/src/per/uart.h ****         enum class StopBits
  42:../libDaisy/src/per/uart.h ****         {
  43:../libDaisy/src/per/uart.h ****             BITS_0_5,
  44:../libDaisy/src/per/uart.h ****             BITS_1,
  45:../libDaisy/src/per/uart.h ****             BITS_1_5,
  46:../libDaisy/src/per/uart.h ****             BITS_2,
  47:../libDaisy/src/per/uart.h ****         };
  48:../libDaisy/src/per/uart.h **** 
  49:../libDaisy/src/per/uart.h ****         enum class Parity
  50:../libDaisy/src/per/uart.h ****         {
  51:../libDaisy/src/per/uart.h ****             NONE,
  52:../libDaisy/src/per/uart.h ****             EVEN,
  53:../libDaisy/src/per/uart.h ****             ODD,
  54:../libDaisy/src/per/uart.h ****         };
  55:../libDaisy/src/per/uart.h **** 
  56:../libDaisy/src/per/uart.h ****         enum class Mode
  57:../libDaisy/src/per/uart.h ****         {
  58:../libDaisy/src/per/uart.h ****             RX,
  59:../libDaisy/src/per/uart.h ****             TX,
  60:../libDaisy/src/per/uart.h ****             TX_RX,
  61:../libDaisy/src/per/uart.h ****         };
  62:../libDaisy/src/per/uart.h **** 
  63:../libDaisy/src/per/uart.h ****         enum class WordLength
  64:../libDaisy/src/per/uart.h ****         {
  65:../libDaisy/src/per/uart.h ****             BITS_7,
  66:../libDaisy/src/per/uart.h ****             BITS_8,
  67:../libDaisy/src/per/uart.h ****             BITS_9,
  68:../libDaisy/src/per/uart.h ****         };
  69:../libDaisy/src/per/uart.h **** 
  70:../libDaisy/src/per/uart.h ****         struct
  71:../libDaisy/src/per/uart.h ****         {
  72:../libDaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  73:../libDaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  74:../libDaisy/src/per/uart.h ****         } pin_config;        /**< & */
  75:../libDaisy/src/per/uart.h **** 
  76:../libDaisy/src/per/uart.h ****         Config()
  77:../libDaisy/src/per/uart.h ****         {
  78:../libDaisy/src/per/uart.h ****             // user must init periph, pin_config, and mode
  79:../libDaisy/src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  80:../libDaisy/src/per/uart.h ****             parity     = Parity::NONE;
  81:../libDaisy/src/per/uart.h ****             wordlength = WordLength::BITS_8;
  82:../libDaisy/src/per/uart.h ****             baudrate   = 31250;
  83:../libDaisy/src/per/uart.h ****         }
  84:../libDaisy/src/per/uart.h **** 
  85:../libDaisy/src/per/uart.h ****         Peripheral periph;
  86:../libDaisy/src/per/uart.h ****         StopBits   stopbits;
  87:../libDaisy/src/per/uart.h ****         Parity     parity;
  88:../libDaisy/src/per/uart.h ****         Mode       mode;
  89:../libDaisy/src/per/uart.h ****         WordLength wordlength;
  90:../libDaisy/src/per/uart.h ****         uint32_t   baudrate;
  91:../libDaisy/src/per/uart.h ****     };
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 50


  92:../libDaisy/src/per/uart.h **** 
  93:../libDaisy/src/per/uart.h **** 
  94:../libDaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 656              		.loc 30 94 5 view .LVU154
 657              		.loc 30 94 5 is_stmt 0 view .LVU155
 658              	.LBE441:
 659              	.LBE440:
 660              	.LBE439:
 661              	.LBB446:
 662              	.LBI446:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 663              		.loc 5 18 5 is_stmt 1 view .LVU156
 664              	.LBB447:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 665              		.loc 5 18 17 is_stmt 0 view .LVU157
 666 002e 544B     		ldr	r3, .L12+24
 667              	.LBE447:
 668              	.LBE446:
 669              	.LBE468:
 670              	.LBE490:
 671              	.LBE494:
 672              	.LBE500:
 673              	.LBB501:
 674              	.LBB502:
 675              	.LBB503:
 676              		.file 31 "AudioFileManager.h"
   1:AudioFileManager.h **** #pragma once
   2:AudioFileManager.h **** #include <stdio.h>
   3:AudioFileManager.h **** #include <stdint.h>
   4:AudioFileManager.h **** // #include <vector>
   5:AudioFileManager.h **** #include "daisy_pod.h"
   6:AudioFileManager.h **** #include "constants_utils.h"
   7:AudioFileManager.h **** #include "debug_print.h"
   8:AudioFileManager.h **** 
   9:AudioFileManager.h **** using namespace daisy; 
  10:AudioFileManager.h **** 
  11:AudioFileManager.h **** class AudioFileManager {
  12:AudioFileManager.h ****   public:
  13:AudioFileManager.h ****     AudioFileManager(SdmmcHandler &sd, FatFSInterface &fsi, DaisyPod &pod, FIL *file)
  14:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
  15:AudioFileManager.h ****         left_buf_(nullptr), right_buf_(nullptr) {};
 677              		.loc 31 15 47 view .LVU158
 678 0030 DFF87481 		ldr	r8, .L12+64
 679              	.LBE503:
 680              	.LBE502:
 681              	.LBE501:
  36:main.cpp      **** DSY_SDRAM_BSS FIL file;
 682              		.loc 25 36 10 view .LVU159
 683 0034 3046     		mov	r0, r6
 684              	.LBB508:
 685              	.LBB495:
 686              	.LBB491:
 687              	.LBB469:
 688              	.LBB450:
 689              	.LBB448:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 690              		.loc 5 18 17 view .LVU160
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 51


 691 0036 C6F83832 		str	r3, [r6, #568]
 692 003a 40F20F73 		movw	r3, #1807
 693              	.LBE448:
 694              	.LBE450:
 695              	.LBE469:
 696              	.LBE491:
 697              	.LBE495:
 698              	.LBE508:
  36:main.cpp      **** DSY_SDRAM_BSS FIL file;
 699              		.loc 25 36 10 view .LVU161
 700 003e 4C4A     		ldr	r2, .L12+8
 701              	.LBB509:
 702              	.LBB496:
 703              	.LBB492:
 704              	.LBB470:
 705              	.LBB451:
 706              	.LBB449:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 707              		.loc 5 18 17 view .LVU162
 708 0040 A6F83C32 		strh	r3, [r6, #572]	@ movhi
 709              	.LVL19:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 710              		.loc 5 18 17 view .LVU163
 711              	.LBE449:
 712              	.LBE451:
 713              	.LBB452:
 714              	.LBI452:
 299:../libDaisy/src/util/FIFO.h **** {
 300:../libDaisy/src/util/FIFO.h ****   public:
 301:../libDaisy/src/util/FIFO.h ****     /** Creates an empty FIFO */
 302:../libDaisy/src/util/FIFO.h ****     FIFO() : FIFOBase<T>(buffer_, capacity + 1) {}
 715              		.loc 4 302 5 is_stmt 1 view .LVU164
 716              	.LBB453:
 717              	.LBB454:
 718              	.LBI454:
  14:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
 719              		.loc 4 14 5 view .LVU165
 720              	.LBB455:
 721              	.LBB456:
  15:../libDaisy/src/util/FIFO.h ****     {
 722              		.loc 4 15 75 is_stmt 0 view .LVU166
 723 0044 06F51473 		add	r3, r6, #592
 724              	.LBE456:
 725              	.LBE455:
 726              	.LBE454:
 727              	.LBE453:
 728              	.LBE452:
 729              	.LBE470:
 730              	.LBE492:
 731              	.LBE496:
 732              	.LBE509:
  36:main.cpp      **** DSY_SDRAM_BSS FIL file;
 733              		.loc 25 36 10 view .LVU167
 734 0048 4E49     		ldr	r1, .L12+28
 735              	.LBB510:
 736              	.LBB497:
 737              	.LBB493:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 52


 738              	.LBB471:
 739              	.LBB465:
 740              	.LBB463:
 741              	.LBB461:
 742              	.LBB459:
 743              	.LBB457:
  15:../libDaisy/src/util/FIFO.h ****     {
 744              		.loc 4 15 75 view .LVU168
 745 004a C6F84032 		str	r3, [r6, #576]
 746 004e 40F20113 		movw	r3, #257
 747              	.LBE457:
 748              	.LBE459:
 749              	.LBE461:
 750              	.LBE463:
 751              	.LBE465:
 752              	.LBB466:
 753              	.LBB445:
 754              	.LBB444:
 755              	.LBB442:
 756              	.LBB443:
 757              		.loc 30 94 35 view .LVU169
 758 0052 C6F89041 		str	r4, [r6, #400]
 759              	.LBE443:
 760              	.LBE442:
 761              	.LBE444:
 762              	.LBE445:
 763              	.LBE466:
 764              	.LBB467:
 765              	.LBB464:
 766              	.LBB462:
 767              	.LBB460:
 768              	.LBB458:
  15:../libDaisy/src/util/FIFO.h ****     {
 769              		.loc 4 15 75 view .LVU170
 770 0056 C6F84C42 		str	r4, [r6, #588]
 771              	.LVL20:
  15:../libDaisy/src/util/FIFO.h ****     {
 772              		.loc 4 15 75 view .LVU171
 773 005a C6E99134 		strd	r3, r4, [r6, #580]
 774              	.LBE458:
 775              	.LBE460:
 776              	.LBE462:
 777              	.LBE464:
 778              	.LBE467:
 779              	.LBE471:
 780              	.LBE493:
 781              	.LBE497:
 782              	.LBE510:
  36:main.cpp      **** DSY_SDRAM_BSS FIL file;
 783              		.loc 25 36 10 view .LVU172
 784 005e FFF7FEFF 		bl	__aeabi_atexit
 785              	.LVL21:
 786              	.LBB511:
 787              	.LBI501:
  13:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
 788              		.loc 31 13 5 is_stmt 1 view .LVU173
 789              	.LBB506:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 53


 790              	.LBB504:
 791              		.loc 31 15 47 is_stmt 0 view .LVU174
 792 0062 2B1D     		adds	r3, r5, #4
 793 0064 C8F80050 		str	r5, [r8]
 794 0068 05F28445 		addw	r5, r5, #1156
 795 006c C8F81440 		str	r4, [r8, #20]
 796              	.LVL22:
 797              		.loc 31 15 47 view .LVU175
 798              	.LBE504:
 799              	.LBE506:
 800              	.LBE511:
 801              	.LBB512:
 802              	.LBI512:
   8:GranularSynth.h ****   public:
   9:GranularSynth.h ****     GranularSynth(DaisyPod& pod) 
 803              		.loc 17 9 5 is_stmt 1 view .LVU176
 804              	.LBE512:
 805              	.LBB536:
 806              	.LBB507:
 807              	.LBB505:
 808              		.loc 31 15 47 is_stmt 0 view .LVU177
 809 0070 C8E90136 		strd	r3, r6, [r8, #4]
 810 0074 C8E90354 		strd	r5, r4, [r8, #12]
 811              	.LBE505:
 812              	.LBE507:
 813              	.LBE536:
 814              	.LBB537:
 815              	.LBB513:
 816              	.LBB514:
  10:GranularSynth.h ****       : pod_(pod), left_buf_(nullptr), right_buf_(nullptr), audio_len_(0),
  11:GranularSynth.h ****         grains_(){}
 817              		.loc 17 11 17 view .LVU178
 818 0078 434B     		ldr	r3, .L12+32
 819 007a 1425     		movs	r5, #20
 820 007c C3E90064 		strd	r6, r4, [r3]
 821 0080 C3E90244 		strd	r4, r4, [r3, #8]
 822              		.loc 17 11 17 is_stmt 1 view .LVU179
 823              	.L10:
 824              	.LVL23:
 825              	.LBB515:
 826              	.LBI515:
 827              		.file 32 "Grain.h"
   1:Grain.h       **** #pragma once
   2:Grain.h       **** 
   3:Grain.h       **** #include "daisy_pod.h"
   4:Grain.h       **** #include "daisysp.h"
   5:Grain.h       **** #include "GrainPhasor.h"
   6:Grain.h       **** 
   7:Grain.h       **** using namespace daisy;
   8:Grain.h       **** using namespace daisysp;
   9:Grain.h       **** 
  10:Grain.h       **** class Grain {
  11:Grain.h       ****   public:
  12:Grain.h       ****     /// @brief Enum class to store references to differen types of amplitude envelope
  13:Grain.h       ****     enum class EnvelopeType {
  14:Grain.h       ****       /* basic linear fade out from start ie |\ */
  15:Grain.h       ****       LinearDecay,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 54


  16:Grain.h       ****       /* No fade in or out */
  17:Grain.h       ****       Rectangular,
  18:Grain.h       ****       /* Simple fade out starting at phase=0.8f ie: |‾\  */
  19:Grain.h       ****       Decay,
  20:Grain.h       ****       /* Smooth symmetric increase/decrease
  21:Grain.h       ****         ie linear fade in and out: /\  */
  22:Grain.h       ****       Triangular,
  23:Grain.h       ****       /* smooth curve on/off, crosses 0 at both sides */
  24:Grain.h       ****       Hann,
  25:Grain.h       ****       // could add option for ADSR where user sets params? 
  26:Grain.h       ****     };
  27:Grain.h       **** 
  28:Grain.h       ****     Grain():
 828              		.loc 32 28 5 view .LVU180
 829              	.LBB516:
  29:Grain.h       ****       // left_buf_(nullptr), right_buf_(nullptr),
  30:Grain.h       ****       is_active_(false), envelope_type_(EnvelopeType::Decay){}
 830              		.loc 32 30 60 is_stmt 0 view .LVU181
 831 0084 0021     		movs	r1, #0
 832              	.LBB517:
 833              	.LBB518:
 834              		.file 33 "GrainPhasor.h"
   1:GrainPhasor.h **** #include "constants_utils.h"
   2:GrainPhasor.h **** class GrainPhasor {
   3:GrainPhasor.h ****   public:
   4:GrainPhasor.h ****     enum class Mode {
   5:GrainPhasor.h ****       OneShot,
   6:GrainPhasor.h ****       OneShotReverse,
   7:GrainPhasor.h ****       Cycle,
   8:GrainPhasor.h ****       PingPong,
   9:GrainPhasor.h ****     };
  10:GrainPhasor.h **** 
  11:GrainPhasor.h ****     GrainPhasor(): 
  12:GrainPhasor.h ****       phase_(0), increment_(0), mode_(Mode::OneShot), 
  13:GrainPhasor.h ****       direction_(1), grain_finished_(false) {};
 835              		.loc 33 13 43 view .LVU182
 836 0086 0022     		movs	r2, #0
 837 0088 0120     		movs	r0, #1
 838              	.LBE518:
 839              	.LBE517:
 840              	.LBE516:
 841              	.LBE515:
 842              		.loc 17 11 17 view .LVU183
 843 008a 013D     		subs	r5, r5, #1
 844              	.LBB530:
 845              	.LBB528:
 846              		.loc 32 30 60 view .LVU184
 847 008c 1974     		strb	r1, [r3, #16]
 848              	.LVL24:
 849              	.LBB523:
 850              	.LBI517:
  11:GrainPhasor.h ****       phase_(0), increment_(0), mode_(Mode::OneShot), 
 851              		.loc 33 11 5 is_stmt 1 view .LVU185
 852              	.LBE523:
 853              	.LBE528:
 854              	.LBE530:
 855              		.loc 17 11 17 is_stmt 0 view .LVU186
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 55


 856 008e 03F13803 		add	r3, r3, #56
 857              	.LVL25:
 858              	.LBB531:
 859              	.LBB529:
 860              	.LBB524:
 861              	.LBB519:
 862              		.loc 33 13 43 view .LVU187
 863 0092 43F81C1C 		str	r1, [r3, #-28]
 864 0096 03F8141C 		strb	r1, [r3, #-20]
 865              	.LVL26:
 866              		.loc 33 13 43 view .LVU188
 867              	.LBE519:
 868              	.LBE524:
 869              		.loc 32 30 60 view .LVU189
 870 009a 4FF00201 		mov	r1, #2
 871              	.LBB525:
 872              	.LBB520:
 873              		.loc 33 13 43 view .LVU190
 874 009e 43F8242C 		str	r2, [r3, #-36]	@ float
 875              	.LBE520:
 876              	.LBE525:
 877              		.loc 32 30 60 view .LVU191
 878 00a2 5960     		str	r1, [r3, #4]
 879 00a4 3949     		ldr	r1, .L12+36
 880              	.LBB526:
 881              	.LBB521:
 882              		.loc 33 13 43 view .LVU192
 883 00a6 43F8202C 		str	r2, [r3, #-32]	@ float
 884              	.LBE521:
 885              	.LBE526:
 886              		.loc 32 30 60 view .LVU193
 887 00aa 9960     		str	r1, [r3, #8]	@ float
 888 00ac 3849     		ldr	r1, .L12+40
 889              	.LBB527:
 890              	.LBB522:
 891              		.loc 33 13 43 view .LVU194
 892 00ae 43F8180C 		str	r0, [r3, #-24]
 893              	.LBE522:
 894              	.LBE527:
 895              		.loc 32 30 60 view .LVU195
 896 00b2 D960     		str	r1, [r3, #12]	@ float
 897              	.LVL27:
 898              		.loc 32 30 60 view .LVU196
 899              	.LBE529:
 900              	.LBE531:
 901              		.loc 17 11 17 is_stmt 1 view .LVU197
 902              		.loc 17 11 17 view .LVU198
 903 00b4 E6D1     		bne	.L10
 904 00b6 374F     		ldr	r7, .L12+44
 905              	.LBE514:
 906              	.LBE513:
 907              	.LBE537:
 908              	.LBB538:
 909              	.LBB539:
 910              	.LBB540:
  17:GrannyChordApp.h ****   public:
  18:GrannyChordApp.h ****   GrannyChordApp(DaisyPod& pod, GranularSynth& synth, AudioFileManager& filemgr)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 56


  19:GrannyChordApp.h ****         : pod_(pod), synth_(synth), 
  20:GrannyChordApp.h ****           filemgr_(filemgr), ui_(pod), left_buf_(nullptr), right_buf_(nullptr) {
 911              		.loc 18 20 78 is_stmt 0 view .LVU199
 912 00b8 374C     		ldr	r4, .L12+48
 913              	.LBE540:
 914              	.LBE539:
 915              	.LBE538:
 916              	.LBB561:
 917              	.LBB534:
 918              	.LBB532:
 919              		.loc 17 11 17 view .LVU200
 920 00ba 3B46     		mov	r3, r7
 921 00bc BA60     		str	r2, [r7, #8]	@ float
 922 00be FA60     		str	r2, [r7, #12]	@ float
 923              	.LBE532:
 924              	.LBE534:
 925              	.LBE561:
  45:main.cpp      **** 
 926              		.loc 25 45 59 view .LVU201
 927 00c0 A7F28C40 		subw	r0, r7, #1164
 928              	.LBB562:
 929              	.LBB535:
 930              	.LBB533:
 931              		.loc 17 11 17 view .LVU202
 932 00c4 43F8042B 		str	r2, [r3], #4	@ float
 933 00c8 3A61     		str	r2, [r7, #16]	@ float
 934 00ca 1A60     		str	r2, [r3]	@ float
 935 00cc 7A61     		str	r2, [r7, #20]	@ float
 936 00ce BA61     		str	r2, [r7, #24]	@ float
 937              	.LVL28:
 938              		.loc 17 11 17 view .LVU203
 939              	.LBE533:
 940              	.LBE535:
 941              	.LBE562:
  45:main.cpp      **** 
 942              		.loc 25 45 59 view .LVU204
 943 00d0 3249     		ldr	r1, .L12+52
 944 00d2 274A     		ldr	r2, .L12+8
 945 00d4 FFF7FEFF 		bl	__aeabi_atexit
 946              	.LVL29:
 947              	.LBB563:
 948              	.LBI538:
  18:GrannyChordApp.h ****         : pod_(pod), synth_(synth), 
 949              		.loc 18 18 3 is_stmt 1 view .LVU205
 950              	.LBB559:
 951              	.LBB557:
 952              		.loc 18 20 78 is_stmt 0 view .LVU206
 953 00d8 2046     		mov	r0, r4
 954 00da A7F28C41 		subw	r1, r7, #1164
 955 00de 4FF49562 		mov	r2, #1192
 956 00e2 40F8046B 		str	r6, [r0], #4
 957 00e6 FFF7FEFF 		bl	memcpy
 958              	.LVL30:
 959              	.LBB541:
 960              	.LBB542:
 961              	.LBB543:
  10:UIManager.h   ****   public:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 57


  11:UIManager.h   ****     UIManager(DaisyPod& pod): pod_(pod) {}
 962              		.loc 23 11 39 view .LVU207
 963 00ea 2946     		mov	r1, r5
 964 00ec C4F8B464 		str	r6, [r4, #1204]
 965 00f0 1822     		movs	r2, #24
 966 00f2 C4F82D55 		str	r5, [r4, #1325]	@ unaligned
 967 00f6 04F5A860 		add	r0, r4, #1344
 968 00fa C4F83455 		str	r5, [r4, #1332]
 969 00fe 4FF07C56 		mov	r6, #1056964608
 970              	.LBE543:
 971              	.LBE542:
 972              	.LBE541:
 973              		.loc 18 20 78 view .LVU208
 974 0102 C4F8AC84 		str	r8, [r4, #1196]
 975              	.LVL31:
 976              	.LBB551:
 977              	.LBI541:
 978              		.loc 23 11 5 is_stmt 1 view .LVU209
 979              	.LBB549:
 980              	.LBB547:
 981              		.loc 23 11 39 is_stmt 0 view .LVU210
 982 0106 C4F8BC54 		str	r5, [r4, #1212]
 983              	.LVL32:
 984              	.LBB544:
 985              	.LBI544:
  97:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 986              		.loc 24 97 5 is_stmt 1 view .LVU211
 987              	.LBB545:
 988              	.LBB546:
  97:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 989              		.loc 24 97 35 is_stmt 0 view .LVU212
 990 010a C4F8C054 		str	r5, [r4, #1216]
 991              	.LVL33:
  97:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 992              		.loc 24 97 35 view .LVU213
 993              	.LBE546:
 994              	.LBE545:
 995              	.LBE544:
 996              		.loc 23 11 39 view .LVU214
 997 010e 84F8C954 		strb	r5, [r4, #1225]
 998              		.loc 23 11 39 is_stmt 1 view .LVU215
 999 0112 84F82C55 		strb	r5, [r4, #1324]
 1000 0116 C4F83055 		str	r5, [r4, #1328]	@ unaligned
 1001 011a C4F83755 		str	r5, [r4, #1335]	@ unaligned
 1002 011e FFF7FEFF 		bl	memset
 1003              	.LVL34:
 1004 0122 04F23C53 		addw	r3, r4, #1340
 1005 0126 2946     		mov	r1, r5
 1006 0128 1822     		movs	r2, #24
 1007 012a 1E60     		str	r6, [r3]	@ float
 1008 012c 04F25C50 		addw	r0, r4, #1372
 1009 0130 FFF7FEFF 		bl	memset
 1010              	.LVL35:
 1011 0134 04F5AB63 		add	r3, r4, #1368
 1012              	.LBE547:
 1013              	.LBE549:
 1014              	.LBE551:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 58


 1015              	.LBE557:
 1016              	.LBE559:
 1017              	.LBE563:
  51:main.cpp      **** 
 1018              		.loc 25 51 16 is_stmt 0 view .LVU216
 1019 0138 2046     		mov	r0, r4
 1020              	.LBB564:
 1021              	.LBB560:
 1022              	.LBB558:
 1023              		.loc 18 20 78 view .LVU217
 1024 013a 84F88455 		strb	r5, [r4, #1412]
 1025              	.LBB552:
 1026              	.LBB550:
 1027              	.LBB548:
 1028              		.loc 23 11 39 view .LVU218
 1029 013e 1E60     		str	r6, [r3]	@ float
 1030              	.LVL36:
 1031              		.loc 23 11 39 view .LVU219
 1032              	.LBE548:
 1033              	.LBE550:
 1034              	.LBE552:
 1035              	.LBB553:
 1036              	.LBI553:
  37:DaisySP-LGPL-FX/compressor.h ****     ~Compressor() {}
 1037              		.loc 22 37 5 is_stmt 1 view .LVU220
  37:DaisySP-LGPL-FX/compressor.h ****     ~Compressor() {}
 1038              		.loc 22 37 5 is_stmt 0 view .LVU221
 1039              	.LBE553:
 1040              	.LBB554:
 1041              	.LBI554:
  22:DaisySP-LGPL-FX/moogladder.h ****     ~MoogLadder() {}
 1042              		.loc 21 22 5 is_stmt 1 view .LVU222
  22:DaisySP-LGPL-FX/moogladder.h ****     ~MoogLadder() {}
 1043              		.loc 21 22 5 is_stmt 0 view .LVU223
 1044              	.LBE554:
 1045              	.LBB555:
 1046              	.LBI555:
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 1047              		.loc 20 29 5 is_stmt 1 view .LVU224
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 1048              		.loc 20 29 5 is_stmt 0 view .LVU225
 1049              	.LBE555:
  21:GrannyChordApp.h ****             instance_ = this;
 1050              		.loc 18 21 23 view .LVU226
 1051 0140 174B     		ldr	r3, .L12+56
  20:GrannyChordApp.h ****             instance_ = this;
 1052              		.loc 18 20 78 view .LVU227
 1053 0142 C4F82056 		str	r5, [r4, #1568]
 1054 0146 C4F82456 		str	r5, [r4, #1572]
 1055 014a C4F82856 		str	r5, [r4, #1576]
 1056 014e C4F82C56 		str	r5, [r4, #1580]
 1057 0152 C4F83056 		str	r5, [r4, #1584]
 1058 0156 84F86C56 		strb	r5, [r4, #1644]
 1059              	.LVL37:
 1060              	.LBB556:
 1061              	.LBI556:
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 59


 1062              		.loc 19 36 5 is_stmt 1 view .LVU228
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 1063              		.loc 19 36 5 is_stmt 0 view .LVU229
 1064              	.LBE556:
 1065              		.loc 18 21 13 is_stmt 1 view .LVU230
 1066              		.loc 18 21 23 is_stmt 0 view .LVU231
 1067 015a 1C60     		str	r4, [r3]
 1068              	.LVL38:
 1069              		.loc 18 21 23 view .LVU232
 1070              	.LBE558:
 1071              	.LBE560:
 1072              	.LBE564:
  51:main.cpp      **** 
 1073              		.loc 25 51 16 view .LVU233
 1074 015c 044A     		ldr	r2, .L12+8
 1075 015e 1149     		ldr	r1, .L12+60
 1076              	.LBE565:
 1077              	.LBE567:
 1078              		.loc 25 84 1 view .LVU234
 1079 0160 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1080              		.cfi_restore 14
 1081              		.cfi_restore 8
 1082              		.cfi_restore 7
 1083              		.cfi_restore 6
 1084              		.cfi_restore 5
 1085              		.cfi_restore 4
 1086              		.cfi_def_cfa_offset 0
 1087              	.LBB568:
 1088              	.LBB566:
  51:main.cpp      **** 
 1089              		.loc 25 51 16 view .LVU235
 1090 0164 FFF7FEBF 		b	__aeabi_atexit
 1091              	.LVL39:
 1092              	.L13:
 1093              		.align	2
 1094              	.L12:
 1095 0168 00000000 		.word	.LANCHOR0
 1096 016c 00000000 		.word	pod
 1097 0170 00000000 		.word	__dso_handle
 1098 0174 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
 1099 0178 00000000 		.word	reverb
 1100 017c 00000000 		.word	_ZN5daisy12SdmmcHandlerD1Ev
 1101 0180 0080707F 		.word	2138079232
 1102 0184 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 1103 0188 00000000 		.word	.LANCHOR2
 1104 018c CDCC4C3F 		.word	1061997773
 1105 0190 0000A040 		.word	1084227584
 1106 0194 8C040000 		.word	.LANCHOR2+1164
 1107 0198 00000000 		.word	app
 1108 019c 00000000 		.word	_ZN13GranularSynthD1Ev
 1109 01a0 00000000 		.word	_ZN14GrannyChordApp9instance_E
 1110 01a4 00000000 		.word	_ZN14GrannyChordAppD1Ev
 1111 01a8 00000000 		.word	.LANCHOR1
 1112              	.LBE566:
 1113              	.LBE568:
 1114              		.cfi_endproc
 1115              	.LFE5381:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 60


 1117              		.section	.init_array,"aw",%init_array
 1118              		.align	2
 1119 0000 00000000 		.word	_GLOBAL__sub_I_left_buf(target1)
 1120              		.global	rng_state
 1121              		.global	app
 1122              		.global	filemgr
 1123              		.global	file
 1124              		.global	pod
 1125              		.global	fsi
 1126              		.global	sd
 1127              		.global	reverb
 1128              		.global	right_buf
 1129              		.global	left_buf
 1130              		.section	.axi_sdram,"aw"
 1131              		.align	2
 1132              		.set	.LANCHOR1,. + 0
 1135              	filemgr:
 1136 0000 00000000 		.space	2160
 1136      00000000 
 1136      00000000 
 1136      00000000 
 1136      00000000 
 1137              		.section	.axi_sram,"aw"
 1138              		.align	2
 1139              		.set	.LANCHOR2,. + 0
 1142              	_ZL5synth:
 1143 0000 00000000 		.space	1192
 1143      00000000 
 1143      00000000 
 1143      00000000 
 1143      00000000 
 1144              		.section	.bss.app,"aw",%nobits
 1145              		.align	2
 1148              	app:
 1149 0000 00000000 		.space	35048
 1149      00000000 
 1149      00000000 
 1149      00000000 
 1149      00000000 
 1150              		.section	.bss.pod,"aw",%nobits
 1151              		.align	2
 1154              	pod:
 1155 0000 00000000 		.space	37600
 1155      00000000 
 1155      00000000 
 1155      00000000 
 1155      00000000 
 1156              		.section	.bss.rng_state,"aw",%nobits
 1157              		.align	2
 1160              	rng_state:
 1161 0000 00000000 		.space	4
 1162              		.section	.sdram_bss,"aw"
 1163              		.align	4
 1164              		.set	.LANCHOR0,. + 0
 1167              	sd:
 1168 0000 00       		.space	1
 1169 0001 000000   		.space	3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 61


 1172              	fsi:
 1173 0004 00000000 		.space	1152
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1176              	file:
 1177 0484 00000000 		.space	556
 1177      00000000 
 1177      00000000 
 1177      00000000 
 1177      00000000 
 1180              	reverb:
 1181 06b0 00000000 		.space	396100
 1181      00000000 
 1181      00000000 
 1181      00000000 
 1181      00000000 
 1182 611f4 00000000 		.space	12
 1182      00000000 
 1182      00000000 
 1185              	right_buf:
 1186 61200 00000000 		.space	16777216
 1186      00000000 
 1186      00000000 
 1186      00000000 
 1186      00000000 
 1189              	left_buf:
 1190 1061200 00000000 		.space	16777216
 1190      00000000 
 1190      00000000 
 1190      00000000 
 1190      00000000 
 1191              		.text
 1192              	.Letext0:
 1193              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1194              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1195              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1196              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1197              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1198              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1199              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1200              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1201              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1202              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1203              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1204              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 1205              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1206              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1207              		.file 48 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 1208              		.file 49 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1209              		.file 50 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 1210              		.file 51 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 1211              		.file 52 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1212              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1213              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 1214              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 62


 1215              		.file 56 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1216              		.file 57 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1217              		.file 58 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1218              		.file 59 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1219              		.file 60 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1220              		.file 61 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1221              		.file 62 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1222              		.file 63 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1223              		.file 64 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1224              		.file 65 "../DaisySP/Source/Control/adenv.h"
 1225              		.file 66 "../DaisySP/Source/Utility/dsp.h"
 1226              		.file 67 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 1227              		.file 68 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/time.h"
 1228              		.file 69 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 1229              		.file 70 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1230              		.file 71 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1231              		.file 72 "../libDaisy/src/daisy_core.h"
 1232              		.file 73 "../libDaisy/src/hid/MidiEvent.h"
 1233              		.file 74 "../libDaisy/src/hid/logger_impl.h"
 1234              		.file 75 "../libDaisy/src/util/wav_format.h"
 1235              		.file 76 "../libDaisy/src/util/color.h"
 1236              		.file 77 "../libDaisy/src/dev/max11300.h"
 1237              		.file 78 "../libDaisy/src/hid/logger.h"
 1238              		.file 79 "../libDaisy/src/per/gpio.h"
 1239              		.file 80 "../libDaisy/src/dev/sdram.h"
 1240              		.file 81 "../libDaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 1241              		.file 82 "../libDaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 1242              		.file 83 "constants_utils.h"
 1243              		.file 84 "AppState.h"
 1244              		.file 85 "../libDaisy/src/dev/sr_595.h"
 1245              		.file 86 "<built-in>"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:19     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:25     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:25     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:42     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:48     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:48     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:192    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:198    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:198    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:215    .text._ZN13GranularSynthD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:238    .text._ZN14GrannyChordAppD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:244    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:244    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:304    .text.startup.main:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:310    .text.startup.main:0000000000000000 main
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:385    .text.startup.main:000000000000003c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1154   .bss.pod:0000000000000000 pod
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1180   .sdram_bss:00000000000006b0 reverb
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1185   .sdram_bss:0000000000061200 right_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1189   .sdram_bss:0000000001061200 left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1148   .bss.app:0000000000000000 app
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:395    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:400    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 _GLOBAL__sub_I_left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1095   .text.startup._GLOBAL__sub_I_left_buf:0000000000000168 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1118   .init_array:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1160   .bss.rng_state:0000000000000000 rng_state
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1135   .axi_sdram:0000000000000000 filemgr
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1176   .sdram_bss:0000000000000484 file
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1172   .sdram_bss:0000000000000004 fsi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1167   .sdram_bss:0000000000000000 sd
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1131   .axi_sdram:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1138   .axi_sram:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1142   .axi_sram:0000000000000000 _ZL5synth
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1145   .bss.app:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1151   .bss.pod:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1157   .bss.rng_state:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s:1163   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy12SdmmcHandlerD5Ev
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev
                           .group:0000000000000000 _ZN7daisysp8ReverbScD5Ev
                           .group:0000000000000000 _ZN13GranularSynthD5Ev
                           .group:0000000000000000 _ZN14GrannyChordAppD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy6RgbLed7SetBlueEf
_ZN5daisy8DaisyPod10UpdateLedsEv
_ZN14GrannyChordApp4InitEPsS0_PN7daisysp8ReverbScE
__aeabi_atexit
_ZN5daisy17MidiUartTransport6ConfigC1Ev
memcpy
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cczoTChE.s 			page 64


memset
__dso_handle
_ZN14GrannyChordApp9instance_E

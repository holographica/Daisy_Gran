ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
  19              		.align	1
  20              		.weak	_ZN7daisysp8ReverbScD2Ev
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZN7daisysp8ReverbScD2Ev:
  26              	.LVL0:
  27              	.LFB3567:
  28              		.file 1 "../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Copyright (c) 2023 Electrosmith, Corp, Sean Costello, Istvan Varga, Paul Batchelor
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** // #define DSY_REVERBSC_MAX_SIZE 49468
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** typedef struct
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 2


  31:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** } ReverbScDl;
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /** Stereo Reverb */
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** class ReverbSc
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****   public:
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ReverbSc() {}
  39:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
  29              		.loc 1 39 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 39 18 is_stmt 0 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE3567:
  39              		.weak	_ZN7daisysp8ReverbScD1Ev
  40              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
  41              		.section	.text._ZN5daisy12SdmmcHandlerD2Ev,"axG",%progbits,_ZN5daisy12SdmmcHandlerD5Ev,comdat
  42              		.align	1
  43              		.weak	_ZN5daisy12SdmmcHandlerD2Ev
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	_ZN5daisy12SdmmcHandlerD2Ev:
  49              	.LVL1:
  50              	.LFB4012:
  51              		.file 2 "../libDaisy/src/per/sdmmc.h"
   1:../libDaisy/src/per/sdmmc.h **** /*
   2:../libDaisy/src/per/sdmmc.h **** TODO: 
   3:../libDaisy/src/per/sdmmc.h **** - Implement configuration (currently all settings are fixed).
   4:../libDaisy/src/per/sdmmc.h **** */
   5:../libDaisy/src/per/sdmmc.h **** #pragma once
   6:../libDaisy/src/per/sdmmc.h **** #ifndef DSY_SDMMC_H
   7:../libDaisy/src/per/sdmmc.h **** #define DSY_SDMMC_H /**< macro */
   8:../libDaisy/src/per/sdmmc.h **** 
   9:../libDaisy/src/per/sdmmc.h **** #include <stdint.h>
  10:../libDaisy/src/per/sdmmc.h **** 
  11:../libDaisy/src/per/sdmmc.h **** 
  12:../libDaisy/src/per/sdmmc.h **** namespace daisy
  13:../libDaisy/src/per/sdmmc.h **** {
  14:../libDaisy/src/per/sdmmc.h **** /** @ingroup peripheral
  15:../libDaisy/src/per/sdmmc.h ****     @{
  16:../libDaisy/src/per/sdmmc.h ****     */
  17:../libDaisy/src/per/sdmmc.h **** 
  18:../libDaisy/src/per/sdmmc.h **** /** Configuration for interfacing with SD cards.
  19:../libDaisy/src/per/sdmmc.h ****  *  Currently only supports operation using FatFS filesystem
  20:../libDaisy/src/per/sdmmc.h ****  * 
  21:../libDaisy/src/per/sdmmc.h ****  *  Only SDMMC1 is supported at this time.
  22:../libDaisy/src/per/sdmmc.h ****  *
  23:../libDaisy/src/per/sdmmc.h ****  *  Pins are fixed to the following:
  24:../libDaisy/src/per/sdmmc.h ****  *  PC12 - SDMMC1 CK
  25:../libDaisy/src/per/sdmmc.h ****  *  PD2  - SDMMC1 CMD
  26:../libDaisy/src/per/sdmmc.h ****  *  PC8  - SDMMC1 D0
  27:../libDaisy/src/per/sdmmc.h ****  *  PC9  - SDMMC1 D1 (optional)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 3


  28:../libDaisy/src/per/sdmmc.h ****  *  PC10 - SDMMC1 D2 (optional)
  29:../libDaisy/src/per/sdmmc.h ****  *  PC11 - SDMMC1 D3 (optional)
  30:../libDaisy/src/per/sdmmc.h **** */
  31:../libDaisy/src/per/sdmmc.h **** class SdmmcHandler
  32:../libDaisy/src/per/sdmmc.h **** {
  33:../libDaisy/src/per/sdmmc.h ****   public:
  34:../libDaisy/src/per/sdmmc.h ****     /** Return values for the SdmmcHandler class */
  35:../libDaisy/src/per/sdmmc.h ****     enum class Result
  36:../libDaisy/src/per/sdmmc.h ****     {
  37:../libDaisy/src/per/sdmmc.h ****         OK,
  38:../libDaisy/src/per/sdmmc.h ****         ERROR,
  39:../libDaisy/src/per/sdmmc.h ****     };
  40:../libDaisy/src/per/sdmmc.h **** 
  41:../libDaisy/src/per/sdmmc.h ****     /** Sets whether 4-bit mode or 1-bit mode is used for the SDMMC */
  42:../libDaisy/src/per/sdmmc.h ****     enum class BusWidth
  43:../libDaisy/src/per/sdmmc.h ****     {
  44:../libDaisy/src/per/sdmmc.h ****         BITS_1, /**< Only 1 bit of data per clock is transferred */
  45:../libDaisy/src/per/sdmmc.h ****         BITS_4, /**< 4-bits of parallel data for each clock pulse */
  46:../libDaisy/src/per/sdmmc.h ****     };
  47:../libDaisy/src/per/sdmmc.h **** 
  48:../libDaisy/src/per/sdmmc.h ****     /** 
  49:../libDaisy/src/per/sdmmc.h ****     Sets the desired clock speed of the SD card bus. \n 
  50:../libDaisy/src/per/sdmmc.h ****     Initialization is always done at or below 400kHz, and then the user speed is set.
  51:../libDaisy/src/per/sdmmc.h ****     */
  52:../libDaisy/src/per/sdmmc.h ****     enum class Speed
  53:../libDaisy/src/per/sdmmc.h ****     {
  54:../libDaisy/src/per/sdmmc.h ****         SLOW, /**< 400kHz, initialization  performed at this rate, before moving to user value */
  55:../libDaisy/src/per/sdmmc.h ****         MEDIUM_SLOW, /**< 12.5MHz - half of standard rate */
  56:../libDaisy/src/per/sdmmc.h ****         STANDARD,    /**< 25MHz - DS (Default Speed for SDMMC) */
  57:../libDaisy/src/per/sdmmc.h ****         FAST,        /**< 50MHz - HS (High Speed signaling) */
  58:../libDaisy/src/per/sdmmc.h ****         VERY_FAST, /**< 100MHz - SDR50 Overclocked rate for maximum transfer rates */
  59:../libDaisy/src/per/sdmmc.h ****     };
  60:../libDaisy/src/per/sdmmc.h **** 
  61:../libDaisy/src/per/sdmmc.h ****     struct Config
  62:../libDaisy/src/per/sdmmc.h ****     {
  63:../libDaisy/src/per/sdmmc.h ****         Speed    speed;
  64:../libDaisy/src/per/sdmmc.h ****         BusWidth width;
  65:../libDaisy/src/per/sdmmc.h ****         bool
  66:../libDaisy/src/per/sdmmc.h ****             clock_powersave; /**< When true, the clock will stop between transfers to save power. *
  67:../libDaisy/src/per/sdmmc.h **** 
  68:../libDaisy/src/per/sdmmc.h ****         /** Configures settings to their default settings */
  69:../libDaisy/src/per/sdmmc.h ****         void Defaults()
  70:../libDaisy/src/per/sdmmc.h ****         {
  71:../libDaisy/src/per/sdmmc.h ****             speed           = Speed::FAST;
  72:../libDaisy/src/per/sdmmc.h ****             width           = BusWidth::BITS_4;
  73:../libDaisy/src/per/sdmmc.h ****             clock_powersave = false;
  74:../libDaisy/src/per/sdmmc.h ****         }
  75:../libDaisy/src/per/sdmmc.h ****     };
  76:../libDaisy/src/per/sdmmc.h **** 
  77:../libDaisy/src/per/sdmmc.h ****     SdmmcHandler() {}
  78:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
  52              		.loc 2 78 5 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              		.loc 2 78 22 is_stmt 0 view .LVU3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 4


  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE4012:
  62              		.weak	_ZN5daisy12SdmmcHandlerD1Ev
  63              		.thumb_set _ZN5daisy12SdmmcHandlerD1Ev,_ZN5daisy12SdmmcHandlerD2Ev
  64              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  65              		.align	1
  66              		.weak	_ZN5daisy8DaisyPodD2Ev
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	_ZN5daisy8DaisyPodD2Ev:
  72              	.LVL2:
  73              	.LFB4849:
  74              		.file 3 "../libDaisy/src/daisy_pod.h"
   1:../libDaisy/src/daisy_pod.h **** #pragma once
   2:../libDaisy/src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../libDaisy/src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../libDaisy/src/daisy_pod.h **** 
   5:../libDaisy/src/daisy_pod.h **** #include "daisy_seed.h"
   6:../libDaisy/src/daisy_pod.h **** 
   7:../libDaisy/src/daisy_pod.h **** namespace daisy
   8:../libDaisy/src/daisy_pod.h **** {
   9:../libDaisy/src/daisy_pod.h **** /**
  10:../libDaisy/src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../libDaisy/src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../libDaisy/src/daisy_pod.h ****     @author Stephen Hensley
  13:../libDaisy/src/daisy_pod.h ****     @date November 2019
  14:../libDaisy/src/daisy_pod.h ****     @ingroup boards
  15:../libDaisy/src/daisy_pod.h **** */
  16:../libDaisy/src/daisy_pod.h **** class DaisyPod
  17:../libDaisy/src/daisy_pod.h **** {
  18:../libDaisy/src/daisy_pod.h ****   public:
  19:../libDaisy/src/daisy_pod.h ****     /** Switches */
  20:../libDaisy/src/daisy_pod.h ****     enum Sw
  21:../libDaisy/src/daisy_pod.h ****     {
  22:../libDaisy/src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../libDaisy/src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../libDaisy/src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../libDaisy/src/daisy_pod.h ****     };
  26:../libDaisy/src/daisy_pod.h **** 
  27:../libDaisy/src/daisy_pod.h ****     /** Knobs */
  28:../libDaisy/src/daisy_pod.h ****     enum Knob
  29:../libDaisy/src/daisy_pod.h ****     {
  30:../libDaisy/src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../libDaisy/src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../libDaisy/src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../libDaisy/src/daisy_pod.h ****     };
  34:../libDaisy/src/daisy_pod.h **** 
  35:../libDaisy/src/daisy_pod.h ****     DaisyPod() {}
  36:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
  75              		.loc 3 36 5 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LBB251:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 5


  81              	.LBI251:
  82              		.file 4 "../libDaisy/src/hid/midi.h"
   1:../libDaisy/src/hid/midi.h **** #pragma once
   2:../libDaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../libDaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../libDaisy/src/hid/midi.h **** 
   5:../libDaisy/src/hid/midi.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi.h **** #include <algorithm>
   8:../libDaisy/src/hid/midi.h **** #include "per/uart.h"
   9:../libDaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  10:../libDaisy/src/hid/midi.h **** #include "util/FIFO.h"
  11:../libDaisy/src/hid/midi.h **** #include "hid/midi_parser.h"
  12:../libDaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  13:../libDaisy/src/hid/midi.h **** #include "sys/dma.h"
  14:../libDaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../libDaisy/src/hid/midi.h **** 
  16:../libDaisy/src/hid/midi.h **** namespace daisy
  17:../libDaisy/src/hid/midi.h **** {
  18:../libDaisy/src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART
  19:../libDaisy/src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../libDaisy/src/hid/midi.h ****  *           There is an additional 2kB of RAM data used within this class
  21:../libDaisy/src/hid/midi.h ****  *           for processing bulk data from the UART peripheral
  22:../libDaisy/src/hid/midi.h ****  *  @ingroup midi
  23:../libDaisy/src/hid/midi.h **** */
  24:../libDaisy/src/hid/midi.h **** class MidiUartTransport
  25:../libDaisy/src/hid/midi.h **** {
  26:../libDaisy/src/hid/midi.h ****   public:
  27:../libDaisy/src/hid/midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  28:../libDaisy/src/hid/midi.h ****                                         size_t   size,
  29:../libDaisy/src/hid/midi.h ****                                         void*    context);
  30:../libDaisy/src/hid/midi.h **** 
  31:../libDaisy/src/hid/midi.h ****     MidiUartTransport() {}
  32:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  33:../libDaisy/src/hid/midi.h **** 
  34:../libDaisy/src/hid/midi.h ****     /** @brief Configuration structure for UART MIDI */
  35:../libDaisy/src/hid/midi.h ****     struct Config
  36:../libDaisy/src/hid/midi.h ****     {
  37:../libDaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  38:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  39:../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  40:../libDaisy/src/hid/midi.h **** 
  41:../libDaisy/src/hid/midi.h ****         /** Pointer to buffer for DMA UART rx byte transfer in background.
  42:../libDaisy/src/hid/midi.h ****          *
  43:../libDaisy/src/hid/midi.h ****          *  @details By default this uses a shared buffer in DMA_BUFFER_MEM_SECTION,
  44:../libDaisy/src/hid/midi.h ****          *           which can only be utilized for a single UART peripheral. To
  45:../libDaisy/src/hid/midi.h ****          *           use MIDI with multiple UART peripherals, you must provide your own
  46:../libDaisy/src/hid/midi.h ****          *           buffer, allocated to a DMA-capable memory section.
  47:../libDaisy/src/hid/midi.h ****          */
  48:../libDaisy/src/hid/midi.h ****         uint8_t* rx_buffer;
  49:../libDaisy/src/hid/midi.h **** 
  50:../libDaisy/src/hid/midi.h ****         /** Size in bytes of rx_buffer.
  51:../libDaisy/src/hid/midi.h ****          *
  52:../libDaisy/src/hid/midi.h ****          *  @details This size determines the maximum Rx bytes readable by the UART in the backgrou
  53:../libDaisy/src/hid/midi.h ****          *           By default it's set to the size of the default shared rx_buffer (256 bytes).
  54:../libDaisy/src/hid/midi.h ****          *           While much smaller sizes can be used, data can get missed if the buffer is too
  55:../libDaisy/src/hid/midi.h ****          */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 6


  56:../libDaisy/src/hid/midi.h ****         size_t rx_buffer_size;
  57:../libDaisy/src/hid/midi.h **** 
  58:../libDaisy/src/hid/midi.h ****         Config();
  59:../libDaisy/src/hid/midi.h ****     };
  60:../libDaisy/src/hid/midi.h **** 
  61:../libDaisy/src/hid/midi.h ****     /** @brief Initialization of UART using config struct */
  62:../libDaisy/src/hid/midi.h ****     inline void Init(Config config)
  63:../libDaisy/src/hid/midi.h ****     {
  64:../libDaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  65:../libDaisy/src/hid/midi.h **** 
  66:../libDaisy/src/hid/midi.h ****         //defaults
  67:../libDaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  68:../libDaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  69:../libDaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  70:../libDaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  71:../libDaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  72:../libDaisy/src/hid/midi.h **** 
  73:../libDaisy/src/hid/midi.h ****         //user settings
  74:../libDaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  75:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  76:../libDaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  77:../libDaisy/src/hid/midi.h **** 
  78:../libDaisy/src/hid/midi.h ****         rx_buffer      = config.rx_buffer;
  79:../libDaisy/src/hid/midi.h ****         rx_buffer_size = config.rx_buffer_size;
  80:../libDaisy/src/hid/midi.h **** 
  81:../libDaisy/src/hid/midi.h ****         /** zero the buffer to ensure emptiness regardless of source memory */
  82:../libDaisy/src/hid/midi.h ****         std::fill(rx_buffer, rx_buffer + rx_buffer_size, 0);
  83:../libDaisy/src/hid/midi.h **** 
  84:../libDaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  85:../libDaisy/src/hid/midi.h ****     }
  86:../libDaisy/src/hid/midi.h **** 
  87:../libDaisy/src/hid/midi.h ****     /** @brief Start the UART peripheral in listening mode.
  88:../libDaisy/src/hid/midi.h ****      *  This will fill an internal data structure in the background */
  89:../libDaisy/src/hid/midi.h ****     inline void StartRx(MidiRxParseCallback parse_callback, void* context)
  90:../libDaisy/src/hid/midi.h ****     {
  91:../libDaisy/src/hid/midi.h ****         parse_context_  = context;
  92:../libDaisy/src/hid/midi.h ****         parse_callback_ = parse_callback;
  93:../libDaisy/src/hid/midi.h ****         dsy_dma_clear_cache_for_buffer((uint8_t*)this,
  94:../libDaisy/src/hid/midi.h ****                                        sizeof(MidiUartTransport));
  95:../libDaisy/src/hid/midi.h ****         uart_.DmaListenStart(
  96:../libDaisy/src/hid/midi.h ****             rx_buffer, rx_buffer_size, MidiUartTransport::rxCallback, this);
  97:../libDaisy/src/hid/midi.h ****     }
  98:../libDaisy/src/hid/midi.h **** 
  99:../libDaisy/src/hid/midi.h ****     /** @brief returns whether the UART peripheral is actively listening in the background or not *
 100:../libDaisy/src/hid/midi.h ****     inline bool RxActive() { return uart_.IsListening(); }
 101:../libDaisy/src/hid/midi.h **** 
 102:../libDaisy/src/hid/midi.h ****     /** @brief This is a no-op for UART transport - Rx is via DMA callback with circular buffer */
 103:../libDaisy/src/hid/midi.h ****     inline void FlushRx() {}
 104:../libDaisy/src/hid/midi.h **** 
 105:../libDaisy/src/hid/midi.h ****     /** @brief sends the buffer of bytes out of the UART peripheral */
 106:../libDaisy/src/hid/midi.h ****     inline void Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
 107:../libDaisy/src/hid/midi.h **** 
 108:../libDaisy/src/hid/midi.h ****   private:
 109:../libDaisy/src/hid/midi.h ****     UartHandler         uart_;
 110:../libDaisy/src/hid/midi.h ****     uint8_t*            rx_buffer;
 111:../libDaisy/src/hid/midi.h ****     size_t              rx_buffer_size;
 112:../libDaisy/src/hid/midi.h ****     void*               parse_context_;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 7


 113:../libDaisy/src/hid/midi.h ****     MidiRxParseCallback parse_callback_;
 114:../libDaisy/src/hid/midi.h **** 
 115:../libDaisy/src/hid/midi.h ****     /** Static callback for Uart MIDI that occurs when
 116:../libDaisy/src/hid/midi.h ****          *  new data is available from the peripheral.
 117:../libDaisy/src/hid/midi.h ****          *  The new data is transferred from the peripheral to the
 118:../libDaisy/src/hid/midi.h ****          *  MIDI instance's byte FIFO that feeds the MIDI parser.
 119:../libDaisy/src/hid/midi.h ****          *
 120:../libDaisy/src/hid/midi.h ****          *  TODO: Handle UartHandler errors better/at all.
 121:../libDaisy/src/hid/midi.h ****          *  (If there is a UART error, there's not really any recovery
 122:../libDaisy/src/hid/midi.h ****          *  option at the moment)
 123:../libDaisy/src/hid/midi.h ****          */
 124:../libDaisy/src/hid/midi.h ****     static void rxCallback(uint8_t*            data,
 125:../libDaisy/src/hid/midi.h ****                            size_t              size,
 126:../libDaisy/src/hid/midi.h ****                            void*               context,
 127:../libDaisy/src/hid/midi.h ****                            UartHandler::Result res)
 128:../libDaisy/src/hid/midi.h ****     {
 129:../libDaisy/src/hid/midi.h ****         /** Read context as transport type */
 130:../libDaisy/src/hid/midi.h ****         MidiUartTransport* transport
 131:../libDaisy/src/hid/midi.h ****             = reinterpret_cast<MidiUartTransport*>(context);
 132:../libDaisy/src/hid/midi.h ****         if(res == UartHandler::Result::OK)
 133:../libDaisy/src/hid/midi.h ****         {
 134:../libDaisy/src/hid/midi.h ****             if(transport->parse_callback_)
 135:../libDaisy/src/hid/midi.h ****             {
 136:../libDaisy/src/hid/midi.h ****                 transport->parse_callback_(
 137:../libDaisy/src/hid/midi.h ****                     data, size, transport->parse_context_);
 138:../libDaisy/src/hid/midi.h ****             }
 139:../libDaisy/src/hid/midi.h ****         }
 140:../libDaisy/src/hid/midi.h ****     }
 141:../libDaisy/src/hid/midi.h **** };
 142:../libDaisy/src/hid/midi.h **** 
 143:../libDaisy/src/hid/midi.h **** /**
 144:../libDaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n
 145:../libDaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n
 146:../libDaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
 147:../libDaisy/src/hid/midi.h ****     @author shensley
 148:../libDaisy/src/hid/midi.h ****     @date March 2020
 149:../libDaisy/src/hid/midi.h ****     @ingroup midi
 150:../libDaisy/src/hid/midi.h **** */
 151:../libDaisy/src/hid/midi.h **** template <typename Transport>
 152:../libDaisy/src/hid/midi.h **** class MidiHandler
 153:../libDaisy/src/hid/midi.h **** {
 154:../libDaisy/src/hid/midi.h ****   public:
 155:../libDaisy/src/hid/midi.h ****     MidiHandler() {}
 156:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
  83              		.loc 4 156 5 view .LVU5
  84              	.LBB252:
  85              	.LBI252:
  86              		.file 5 "../libDaisy/src/util/FIFO.h"
   1:../libDaisy/src/util/FIFO.h **** #pragma once
   2:../libDaisy/src/util/FIFO.h **** 
   3:../libDaisy/src/util/FIFO.h **** #include <stdint.h>
   4:../libDaisy/src/util/FIFO.h **** #include <stddef.h>
   5:../libDaisy/src/util/FIFO.h **** #include <initializer_list>
   6:../libDaisy/src/util/FIFO.h **** 
   7:../libDaisy/src/util/FIFO.h **** namespace daisy
   8:../libDaisy/src/util/FIFO.h **** {
   9:../libDaisy/src/util/FIFO.h **** /** Capacity-independent base class for FIFO. Use FIFO instead. */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 8


  10:../libDaisy/src/util/FIFO.h **** template <typename T>
  11:../libDaisy/src/util/FIFO.h **** class FIFOBase
  12:../libDaisy/src/util/FIFO.h **** {
  13:../libDaisy/src/util/FIFO.h ****   protected:
  14:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize)
  15:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  16:../libDaisy/src/util/FIFO.h ****     {
  17:../libDaisy/src/util/FIFO.h ****     }
  18:../libDaisy/src/util/FIFO.h **** 
  19:../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize, std::initializer_list<T> valuesToAdd)
  20:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  21:../libDaisy/src/util/FIFO.h ****     {
  22:../libDaisy/src/util/FIFO.h ****         PushBack(valuesToAdd);
  23:../libDaisy/src/util/FIFO.h ****     }
  24:../libDaisy/src/util/FIFO.h **** 
  25:../libDaisy/src/util/FIFO.h ****   public:
  26:../libDaisy/src/util/FIFO.h ****     /** Copies all elements from another FIFO */
  27:../libDaisy/src/util/FIFO.h ****     FIFOBase<T>& operator=(const FIFOBase<T>& other)
  28:../libDaisy/src/util/FIFO.h ****     {
  29:../libDaisy/src/util/FIFO.h ****         bufferIn_ = bufferOut_ = 0;
  30:../libDaisy/src/util/FIFO.h ****         if(!other.IsEmpty())
  31:../libDaisy/src/util/FIFO.h ****         {
  32:../libDaisy/src/util/FIFO.h ****             int readPtr = other.bufferOut_;
  33:../libDaisy/src/util/FIFO.h ****             while((readPtr != other.bufferIn_) && (bufferIn_ < bufferSize_))
  34:../libDaisy/src/util/FIFO.h ****             {
  35:../libDaisy/src/util/FIFO.h ****                 buffer_[bufferIn_++] = other.buffer_[readPtr++];
  36:../libDaisy/src/util/FIFO.h ****                 if(readPtr >= other.bufferSize_)
  37:../libDaisy/src/util/FIFO.h ****                     readPtr -= other.bufferSize_;
  38:../libDaisy/src/util/FIFO.h ****             }
  39:../libDaisy/src/util/FIFO.h ****         }
  40:../libDaisy/src/util/FIFO.h ****         return *this;
  41:../libDaisy/src/util/FIFO.h ****     }
  42:../libDaisy/src/util/FIFO.h ****     ~FIFOBase() {}
  43:../libDaisy/src/util/FIFO.h **** 
  44:../libDaisy/src/util/FIFO.h ****     /** Removes all elements from the FIFO */
  45:../libDaisy/src/util/FIFO.h ****     void Clear() { bufferIn_ = bufferOut_ = 0; }
  46:../libDaisy/src/util/FIFO.h **** 
  47:../libDaisy/src/util/FIFO.h ****     /** Adds an element to the back of the buffer, returning true on
  48:../libDaisy/src/util/FIFO.h ****         success */
  49:../libDaisy/src/util/FIFO.h ****     bool PushBack(const T& elementToAdd)
  50:../libDaisy/src/util/FIFO.h ****     {
  51:../libDaisy/src/util/FIFO.h ****         if(!IsFull())
  52:../libDaisy/src/util/FIFO.h ****         {
  53:../libDaisy/src/util/FIFO.h ****             buffer_[bufferIn_++] = elementToAdd;
  54:../libDaisy/src/util/FIFO.h ****             if(bufferIn_ >= bufferSize_)
  55:../libDaisy/src/util/FIFO.h ****                 bufferIn_ -= bufferSize_;
  56:../libDaisy/src/util/FIFO.h ****             return true;
  57:../libDaisy/src/util/FIFO.h ****         }
  58:../libDaisy/src/util/FIFO.h ****         return false;
  59:../libDaisy/src/util/FIFO.h ****     }
  60:../libDaisy/src/util/FIFO.h **** 
  61:../libDaisy/src/util/FIFO.h ****     /** Adds multiple elements and returns the number of elements that were added */
  62:../libDaisy/src/util/FIFO.h ****     int PushBack(std::initializer_list<T> valuesToAdd)
  63:../libDaisy/src/util/FIFO.h ****     {
  64:../libDaisy/src/util/FIFO.h ****         int numAdded = 0;
  65:../libDaisy/src/util/FIFO.h ****         for(const auto& v : valuesToAdd)
  66:../libDaisy/src/util/FIFO.h ****         {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 9


  67:../libDaisy/src/util/FIFO.h ****             if(IsFull())
  68:../libDaisy/src/util/FIFO.h ****                 return numAdded;
  69:../libDaisy/src/util/FIFO.h **** 
  70:../libDaisy/src/util/FIFO.h ****             PushBack(v);
  71:../libDaisy/src/util/FIFO.h ****             numAdded++;
  72:../libDaisy/src/util/FIFO.h ****         }
  73:../libDaisy/src/util/FIFO.h ****         return numAdded;
  74:../libDaisy/src/util/FIFO.h ****     }
  75:../libDaisy/src/util/FIFO.h **** 
  76:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  77:../libDaisy/src/util/FIFO.h ****     T& Back()
  78:../libDaisy/src/util/FIFO.h ****     {
  79:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  80:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  81:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  82:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  83:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  84:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  85:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  86:../libDaisy/src/util/FIFO.h ****     }
  87:../libDaisy/src/util/FIFO.h **** 
  88:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  89:../libDaisy/src/util/FIFO.h ****     const T& Back() const
  90:../libDaisy/src/util/FIFO.h ****     {
  91:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  92:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  93:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  94:../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  95:../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  96:../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  97:../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  98:../libDaisy/src/util/FIFO.h ****     }
  99:../libDaisy/src/util/FIFO.h **** 
 100:../libDaisy/src/util/FIFO.h ****     /** removes and returns an element from the front of the buffer */
 101:../libDaisy/src/util/FIFO.h ****     T PopFront()
 102:../libDaisy/src/util/FIFO.h ****     {
 103:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 104:../libDaisy/src/util/FIFO.h ****             return T();
 105:../libDaisy/src/util/FIFO.h ****         else
 106:../libDaisy/src/util/FIFO.h ****         {
 107:../libDaisy/src/util/FIFO.h ****             const auto result = buffer_[bufferOut_];
 108:../libDaisy/src/util/FIFO.h ****             bufferOut_++;
 109:../libDaisy/src/util/FIFO.h ****             if(bufferOut_ >= bufferSize_)
 110:../libDaisy/src/util/FIFO.h ****                 bufferOut_ -= bufferSize_;
 111:../libDaisy/src/util/FIFO.h ****             return result;
 112:../libDaisy/src/util/FIFO.h ****         }
 113:../libDaisy/src/util/FIFO.h ****     }
 114:../libDaisy/src/util/FIFO.h **** 
 115:../libDaisy/src/util/FIFO.h ****     /** returns a copy of the first element */
 116:../libDaisy/src/util/FIFO.h ****     T& Front()
 117:../libDaisy/src/util/FIFO.h ****     {
 118:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 119:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 120:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 121:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 122:../libDaisy/src/util/FIFO.h ****     }
 123:../libDaisy/src/util/FIFO.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 10


 124:../libDaisy/src/util/FIFO.h ****     /** returns a reference to the first element */
 125:../libDaisy/src/util/FIFO.h ****     const T& Front() const
 126:../libDaisy/src/util/FIFO.h ****     {
 127:../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 128:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 129:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 130:../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 131:../libDaisy/src/util/FIFO.h ****     }
 132:../libDaisy/src/util/FIFO.h **** 
 133:../libDaisy/src/util/FIFO.h ****     /** Returns true if the buffer contains an element equal to the provided value */
 134:../libDaisy/src/util/FIFO.h ****     bool Contains(const T& element)
 135:../libDaisy/src/util/FIFO.h ****     {
 136:../libDaisy/src/util/FIFO.h ****         auto idx = bufferOut_;
 137:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 138:../libDaisy/src/util/FIFO.h ****         {
 139:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 140:../libDaisy/src/util/FIFO.h ****                 return true;
 141:../libDaisy/src/util/FIFO.h ****             idx++;
 142:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 143:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 144:../libDaisy/src/util/FIFO.h ****         }
 145:../libDaisy/src/util/FIFO.h ****         return false;
 146:../libDaisy/src/util/FIFO.h ****     }
 147:../libDaisy/src/util/FIFO.h **** 
 148:../libDaisy/src/util/FIFO.h ****     /** Returns the number of elements in the buffer that are equal to the provided value */
 149:../libDaisy/src/util/FIFO.h ****     size_t CountEqualTo(const T& element)
 150:../libDaisy/src/util/FIFO.h ****     {
 151:../libDaisy/src/util/FIFO.h ****         size_t result = 0;
 152:../libDaisy/src/util/FIFO.h ****         size_t idx    = bufferOut_;
 153:../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 154:../libDaisy/src/util/FIFO.h ****         {
 155:../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 156:../libDaisy/src/util/FIFO.h ****                 result++;
 157:../libDaisy/src/util/FIFO.h ****             idx++;
 158:../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 159:../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 160:../libDaisy/src/util/FIFO.h ****         }
 161:../libDaisy/src/util/FIFO.h ****         return result;
 162:../libDaisy/src/util/FIFO.h ****     }
 163:../libDaisy/src/util/FIFO.h **** 
 164:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is empty */
 165:../libDaisy/src/util/FIFO.h ****     bool IsEmpty() const { return bufferIn_ == bufferOut_; }
 166:../libDaisy/src/util/FIFO.h **** 
 167:../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is Full */
 168:../libDaisy/src/util/FIFO.h ****     bool IsFull() const { return GetNumElements() == bufferSize_ - 1; }
 169:../libDaisy/src/util/FIFO.h **** 
 170:../libDaisy/src/util/FIFO.h ****     /** returns the number of elements in the buffer */
 171:../libDaisy/src/util/FIFO.h ****     size_t GetNumElements() const
 172:../libDaisy/src/util/FIFO.h ****     {
 173:../libDaisy/src/util/FIFO.h ****         int32_t numElements = bufferIn_ - bufferOut_;
 174:../libDaisy/src/util/FIFO.h ****         if(numElements < 0)
 175:../libDaisy/src/util/FIFO.h ****             numElements += bufferSize_;
 176:../libDaisy/src/util/FIFO.h ****         return size_t(numElements);
 177:../libDaisy/src/util/FIFO.h ****     }
 178:../libDaisy/src/util/FIFO.h **** 
 179:../libDaisy/src/util/FIFO.h ****     /** inserts an element "idx" positions behind the first element and returns true if successful 
 180:../libDaisy/src/util/FIFO.h ****     bool Insert(size_t idx, const T& element)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 11


 181:../libDaisy/src/util/FIFO.h ****     {
 182:../libDaisy/src/util/FIFO.h ****         if(idx > GetNumElements())
 183:../libDaisy/src/util/FIFO.h ****             return false;
 184:../libDaisy/src/util/FIFO.h ****         if(IsFull())
 185:../libDaisy/src/util/FIFO.h ****             return false;
 186:../libDaisy/src/util/FIFO.h ****         if(idx == GetNumElements())
 187:../libDaisy/src/util/FIFO.h ****         {
 188:../libDaisy/src/util/FIFO.h ****             PushBack(element);
 189:../libDaisy/src/util/FIFO.h ****             return true;
 190:../libDaisy/src/util/FIFO.h ****         }
 191:../libDaisy/src/util/FIFO.h ****         // copy last element
 192:../libDaisy/src/util/FIFO.h ****         PushBack(Back());
 193:../libDaisy/src/util/FIFO.h ****         // move remaining elements: n => n+1
 194:../libDaisy/src/util/FIFO.h ****         for(int i = GetNumElements() - 2; i > int(idx); i--)
 195:../libDaisy/src/util/FIFO.h ****             (*this)[i] = (*this)[i - 1];
 196:../libDaisy/src/util/FIFO.h ****         // insert element
 197:../libDaisy/src/util/FIFO.h ****         (*this)[idx] = element;
 198:../libDaisy/src/util/FIFO.h ****         return true;
 199:../libDaisy/src/util/FIFO.h ****     }
 200:../libDaisy/src/util/FIFO.h **** 
 201:../libDaisy/src/util/FIFO.h ****     /** removes the element "idx" positions behind the first element 
 202:../libDaisy/src/util/FIFO.h ****      *  and returns true if successful */
 203:../libDaisy/src/util/FIFO.h ****     bool Remove(size_t idx)
 204:../libDaisy/src/util/FIFO.h ****     {
 205:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 206:../libDaisy/src/util/FIFO.h ****             return false;
 207:../libDaisy/src/util/FIFO.h **** 
 208:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 209:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 210:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 211:../libDaisy/src/util/FIFO.h ****         size_t nextIndex = index + 1;
 212:../libDaisy/src/util/FIFO.h ****         if(nextIndex >= bufferSize_)
 213:../libDaisy/src/util/FIFO.h ****             nextIndex -= bufferSize_;
 214:../libDaisy/src/util/FIFO.h **** 
 215:../libDaisy/src/util/FIFO.h ****         while(nextIndex != bufferIn_)
 216:../libDaisy/src/util/FIFO.h ****         {
 217:../libDaisy/src/util/FIFO.h ****             buffer_[index] = buffer_[nextIndex];
 218:../libDaisy/src/util/FIFO.h ****             index++;
 219:../libDaisy/src/util/FIFO.h ****             nextIndex++;
 220:../libDaisy/src/util/FIFO.h ****             if(index >= bufferSize_)
 221:../libDaisy/src/util/FIFO.h ****                 index -= bufferSize_;
 222:../libDaisy/src/util/FIFO.h ****             if(nextIndex >= bufferSize_)
 223:../libDaisy/src/util/FIFO.h ****                 nextIndex -= bufferSize_;
 224:../libDaisy/src/util/FIFO.h ****         }
 225:../libDaisy/src/util/FIFO.h **** 
 226:../libDaisy/src/util/FIFO.h ****         int32_t nextBufferIn = int32_t(bufferIn_) - 1;
 227:../libDaisy/src/util/FIFO.h ****         if(nextBufferIn < 0)
 228:../libDaisy/src/util/FIFO.h ****             nextBufferIn += bufferSize_;
 229:../libDaisy/src/util/FIFO.h ****         bufferIn_ = size_t(nextBufferIn);
 230:../libDaisy/src/util/FIFO.h **** 
 231:../libDaisy/src/util/FIFO.h ****         return true;
 232:../libDaisy/src/util/FIFO.h ****     }
 233:../libDaisy/src/util/FIFO.h **** 
 234:../libDaisy/src/util/FIFO.h ****     /** removes all elements from the buffer for which
 235:../libDaisy/src/util/FIFO.h ****         (buffer(index) == element) returns true and returns the number of
 236:../libDaisy/src/util/FIFO.h ****         elements that were removed. */
 237:../libDaisy/src/util/FIFO.h ****     size_t RemoveAllEqualTo(const T& element)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 12


 238:../libDaisy/src/util/FIFO.h ****     {
 239:../libDaisy/src/util/FIFO.h ****         size_t numRemoved = 0;
 240:../libDaisy/src/util/FIFO.h ****         int    idx        = GetNumElements() - 1;
 241:../libDaisy/src/util/FIFO.h ****         while(idx >= 0)
 242:../libDaisy/src/util/FIFO.h ****         {
 243:../libDaisy/src/util/FIFO.h ****             if((*this)[idx] == element)
 244:../libDaisy/src/util/FIFO.h ****             {
 245:../libDaisy/src/util/FIFO.h ****                 numRemoved++;
 246:../libDaisy/src/util/FIFO.h ****                 Remove(idx);
 247:../libDaisy/src/util/FIFO.h ****                 // was that the last element?
 248:../libDaisy/src/util/FIFO.h ****                 if(idx == int(GetNumElements()) - 1)
 249:../libDaisy/src/util/FIFO.h ****                     idx--;
 250:../libDaisy/src/util/FIFO.h ****             }
 251:../libDaisy/src/util/FIFO.h ****             else
 252:../libDaisy/src/util/FIFO.h ****                 idx--;
 253:../libDaisy/src/util/FIFO.h ****         }
 254:../libDaisy/src/util/FIFO.h ****         return numRemoved;
 255:../libDaisy/src/util/FIFO.h ****     }
 256:../libDaisy/src/util/FIFO.h **** 
 257:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 258:../libDaisy/src/util/FIFO.h ****     T& operator[](size_t idx)
 259:../libDaisy/src/util/FIFO.h ****     {
 260:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 261:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 262:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 263:../libDaisy/src/util/FIFO.h **** 
 264:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 265:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 266:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 267:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 268:../libDaisy/src/util/FIFO.h ****     }
 269:../libDaisy/src/util/FIFO.h **** 
 270:../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 271:../libDaisy/src/util/FIFO.h ****     const T& operator[](size_t idx) const
 272:../libDaisy/src/util/FIFO.h ****     {
 273:../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 274:../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 275:../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 276:../libDaisy/src/util/FIFO.h **** 
 277:../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 278:../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 279:../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 280:../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 281:../libDaisy/src/util/FIFO.h ****     }
 282:../libDaisy/src/util/FIFO.h **** 
 283:../libDaisy/src/util/FIFO.h ****     /** returns the total capacity */
 284:../libDaisy/src/util/FIFO.h ****     size_t GetCapacity() const { return bufferSize_ - 1; }
 285:../libDaisy/src/util/FIFO.h **** 
 286:../libDaisy/src/util/FIFO.h ****   private:
 287:../libDaisy/src/util/FIFO.h ****     FIFOBase(const FIFOBase<T>&) {} // non copyable
 288:../libDaisy/src/util/FIFO.h **** 
 289:../libDaisy/src/util/FIFO.h ****   private:
 290:../libDaisy/src/util/FIFO.h ****     T*           buffer_;
 291:../libDaisy/src/util/FIFO.h ****     const size_t bufferSize_;
 292:../libDaisy/src/util/FIFO.h ****     size_t       bufferIn_;
 293:../libDaisy/src/util/FIFO.h ****     size_t       bufferOut_;
 294:../libDaisy/src/util/FIFO.h **** };
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 13


 295:../libDaisy/src/util/FIFO.h **** 
 296:../libDaisy/src/util/FIFO.h **** /** A simple FIFO ring buffer with a fixed size. */
 297:../libDaisy/src/util/FIFO.h **** template <typename T, size_t capacity>
 298:../libDaisy/src/util/FIFO.h **** class FIFO : public FIFOBase<T>
  87              		.loc 5 298 7 view .LVU6
  88              	.LBB253:
  89              	.LBI253:
  42:../libDaisy/src/util/FIFO.h **** 
  90              		.loc 5 42 5 view .LVU7
  42:../libDaisy/src/util/FIFO.h **** 
  91              		.loc 5 42 5 is_stmt 0 view .LVU8
  92              	.LBE253:
  93              	.LBE252:
  94              	.LBB254:
  95              	.LBI254:
  96              		.file 6 "../libDaisy/src/hid/midi_parser.h"
   1:../libDaisy/src/hid/midi_parser.h **** #pragma once
   2:../libDaisy/src/hid/midi_parser.h **** #ifndef DSY_MIDI_PARSER_H
   3:../libDaisy/src/hid/midi_parser.h **** #define DSY_MIDI_PARSER_H
   4:../libDaisy/src/hid/midi_parser.h **** 
   5:../libDaisy/src/hid/midi_parser.h **** #include <stdint.h>
   6:../libDaisy/src/hid/midi_parser.h **** #include <stdlib.h>
   7:../libDaisy/src/hid/midi_parser.h **** #include "hid/MidiEvent.h"
   8:../libDaisy/src/hid/midi_parser.h **** 
   9:../libDaisy/src/hid/midi_parser.h **** namespace daisy
  10:../libDaisy/src/hid/midi_parser.h **** {
  11:../libDaisy/src/hid/midi_parser.h **** /** @brief   Utility class for parsing raw byte streams into MIDI messages
  12:../libDaisy/src/hid/midi_parser.h ****  *  @details Implemented as a state machine designed to parse one byte at a time
  13:../libDaisy/src/hid/midi_parser.h ****  *  @ingroup midi
  14:../libDaisy/src/hid/midi_parser.h ****  */
  15:../libDaisy/src/hid/midi_parser.h **** class MidiParser
  16:../libDaisy/src/hid/midi_parser.h **** {
  17:../libDaisy/src/hid/midi_parser.h ****   public:
  18:../libDaisy/src/hid/midi_parser.h ****     MidiParser(){};
  19:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
  97              		.loc 6 19 5 is_stmt 1 view .LVU9
  98              		.loc 6 19 5 is_stmt 0 view .LVU10
  99              	.LBE254:
 100              	.LBB255:
 101              	.LBI255:
  32:../libDaisy/src/hid/midi.h **** 
 102              		.loc 4 32 5 is_stmt 1 view .LVU11
  32:../libDaisy/src/hid/midi.h **** 
 103              		.loc 4 32 5 is_stmt 0 view .LVU12
 104              	.LBE255:
 105              	.LBE251:
 106              	.LBB256:
 107              	.LBI256:
 108              		.file 7 "../libDaisy/src/hid/rgb_led.h"
   1:../libDaisy/src/hid/rgb_led.h **** #pragma once
   2:../libDaisy/src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../libDaisy/src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../libDaisy/src/hid/rgb_led.h **** #include "hid/led.h"
   5:../libDaisy/src/hid/rgb_led.h **** #include "util/color.h"
   6:../libDaisy/src/hid/rgb_led.h **** 
   7:../libDaisy/src/hid/rgb_led.h **** namespace daisy
   8:../libDaisy/src/hid/rgb_led.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 14


   9:../libDaisy/src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../libDaisy/src/hid/rgb_led.h ****     @{
  11:../libDaisy/src/hid/rgb_led.h **** */
  12:../libDaisy/src/hid/rgb_led.h **** 
  13:../libDaisy/src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../libDaisy/src/hid/rgb_led.h **** class RgbLed
  15:../libDaisy/src/hid/rgb_led.h **** {
  16:../libDaisy/src/hid/rgb_led.h ****   public:
  17:../libDaisy/src/hid/rgb_led.h ****     RgbLed() {}
  18:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 109              		.loc 7 18 5 is_stmt 1 view .LVU13
 110              	.LBB257:
 111              	.LBI257:
 112              		.file 8 "../libDaisy/src/hid/led.h"
   1:../libDaisy/src/hid/led.h **** 
   2:../libDaisy/src/hid/led.h **** #pragma once
   3:../libDaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libDaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libDaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libDaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libDaisy/src/hid/led.h **** 
   8:../libDaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libDaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libDaisy/src/hid/led.h **** */
  11:../libDaisy/src/hid/led.h **** 
  12:../libDaisy/src/hid/led.h **** namespace daisy
  13:../libDaisy/src/hid/led.h **** {
  14:../libDaisy/src/hid/led.h **** /**
  15:../libDaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libDaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libDaisy/src/hid/led.h ****     @author shensley
  18:../libDaisy/src/hid/led.h ****     @date March 2020
  19:../libDaisy/src/hid/led.h ****     @ingroup feedback
  20:../libDaisy/src/hid/led.h **** */
  21:../libDaisy/src/hid/led.h **** class Led
  22:../libDaisy/src/hid/led.h **** {
  23:../libDaisy/src/hid/led.h ****   public:
  24:../libDaisy/src/hid/led.h ****     Led() {}
  25:../libDaisy/src/hid/led.h ****     ~Led() {}
 113              		.loc 8 25 5 view .LVU14
 114              		.loc 8 25 5 is_stmt 0 view .LVU15
 115              	.LBE257:
 116              	.LBB258:
 117              	.LBI258:
 118              		.loc 8 25 5 is_stmt 1 view .LVU16
 119              		.loc 8 25 5 is_stmt 0 view .LVU17
 120              	.LBE258:
 121              	.LBB259:
 122              	.LBI259:
 123              		.loc 8 25 5 is_stmt 1 view .LVU18
 124              		.loc 8 25 5 is_stmt 0 view .LVU19
 125              	.LBE259:
 126              	.LBE256:
 127              	.LBB260:
 128              	.LBI260:
 129              		.loc 7 18 5 is_stmt 1 view .LVU20
 130              	.LBB261:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 15


 131              	.LBI261:
 132              		.loc 8 25 5 view .LVU21
 133              		.loc 8 25 5 is_stmt 0 view .LVU22
 134              	.LBE261:
 135              	.LBB262:
 136              	.LBI262:
 137              		.loc 8 25 5 is_stmt 1 view .LVU23
 138              		.loc 8 25 5 is_stmt 0 view .LVU24
 139              	.LBE262:
 140              	.LBB263:
 141              	.LBI263:
 142              		.loc 8 25 5 is_stmt 1 view .LVU25
 143              		.loc 8 25 5 is_stmt 0 view .LVU26
 144              	.LBE263:
 145              	.LBE260:
 146              	.LBB264:
 147              	.LBI264:
 148              		.file 9 "../libDaisy/src/hid/switch.h"
   1:../libDaisy/src/hid/switch.h **** #pragma once
   2:../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libDaisy/src/hid/switch.h **** 
   8:../libDaisy/src/hid/switch.h **** namespace daisy
   9:../libDaisy/src/hid/switch.h **** {
  10:../libDaisy/src/hid/switch.h **** /** 
  11:../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../libDaisy/src/hid/switch.h **** */
  17:../libDaisy/src/hid/switch.h **** class Switch
  18:../libDaisy/src/hid/switch.h **** {
  19:../libDaisy/src/hid/switch.h ****   public:
  20:../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libDaisy/src/hid/switch.h ****     enum Type
  22:../libDaisy/src/hid/switch.h ****     {
  23:../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libDaisy/src/hid/switch.h ****     };
  26:../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libDaisy/src/hid/switch.h ****     enum Polarity
  28:../libDaisy/src/hid/switch.h ****     {
  29:../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libDaisy/src/hid/switch.h ****     };
  32:../libDaisy/src/hid/switch.h **** 
  33:../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libDaisy/src/hid/switch.h ****     enum Pull
  35:../libDaisy/src/hid/switch.h ****     {
  36:../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libDaisy/src/hid/switch.h ****     };
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 16


  40:../libDaisy/src/hid/switch.h **** 
  41:../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 149              		.loc 9 42 5 is_stmt 1 view .LVU27
 150              		.loc 9 42 5 is_stmt 0 view .LVU28
 151              	.LBE264:
 152              	.LBB265:
 153              	.LBI265:
 154              		.loc 9 42 5 is_stmt 1 view .LVU29
 155              		.loc 9 42 5 is_stmt 0 view .LVU30
 156              	.LBE265:
 157              	.LBB266:
 158              	.LBI266:
 159              		.file 10 "../libDaisy/src/hid/ctrl.h"
   1:../libDaisy/src/hid/ctrl.h **** #pragma once
   2:../libDaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../libDaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../libDaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../libDaisy/src/hid/ctrl.h **** 
   6:../libDaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../libDaisy/src/hid/ctrl.h **** namespace daisy
   8:../libDaisy/src/hid/ctrl.h **** {
   9:../libDaisy/src/hid/ctrl.h **** /**
  10:../libDaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../libDaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../libDaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../libDaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/ctrl.h ****     @date November 2019
  15:../libDaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../libDaisy/src/hid/ctrl.h **** */
  17:../libDaisy/src/hid/ctrl.h **** class AnalogControl
  18:../libDaisy/src/hid/ctrl.h **** {
  19:../libDaisy/src/hid/ctrl.h ****   public:
  20:../libDaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../libDaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../libDaisy/src/hid/ctrl.h ****     /** destructor */
  23:../libDaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
 160              		.loc 10 23 5 is_stmt 1 view .LVU31
 161              		.loc 10 23 5 is_stmt 0 view .LVU32
 162              	.LBE266:
 163              	.LBB267:
 164              	.LBI267:
 165              		.loc 10 23 5 is_stmt 1 view .LVU33
 166              		.loc 10 23 5 is_stmt 0 view .LVU34
 167              	.LBE267:
 168              	.LBB268:
 169              	.LBI268:
 170              		.file 11 "../libDaisy/src/hid/encoder.h"
   1:../libDaisy/src/hid/encoder.h **** #pragma once
   2:../libDaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../libDaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../libDaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../libDaisy/src/hid/encoder.h **** 
   8:../libDaisy/src/hid/encoder.h **** namespace daisy
   9:../libDaisy/src/hid/encoder.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 17


  10:../libDaisy/src/hid/encoder.h **** /** 
  11:../libDaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../libDaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../libDaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/encoder.h ****     @date December 2019
  15:../libDaisy/src/hid/encoder.h ****     @ingroup controls
  16:../libDaisy/src/hid/encoder.h **** */
  17:../libDaisy/src/hid/encoder.h **** class Encoder
  18:../libDaisy/src/hid/encoder.h **** {
  19:../libDaisy/src/hid/encoder.h ****   public:
  20:../libDaisy/src/hid/encoder.h ****     Encoder() {}
  21:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 171              		.loc 11 21 5 is_stmt 1 view .LVU35
 172              	.LBB269:
 173              	.LBI269:
 174              		.loc 9 42 5 view .LVU36
 175              		.loc 9 42 5 is_stmt 0 view .LVU37
 176              	.LBE269:
 177              	.LBE268:
 178              	.LBB270:
 179              	.LBI270:
 180              		.file 12 "../libDaisy/src/daisy_seed.h"
   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 181              		.loc 12 22 5 is_stmt 1 view .LVU38
 182              	.LBB271:
 183              	.LBI271:
 184              		.file 13 "../libDaisy/src/sys/system.h"
   1:../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libDaisy/src/sys/system.h **** 
   4:../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../libDaisy/src/sys/system.h **** 
   6:../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../libDaisy/src/sys/system.h **** 
   9:../libDaisy/src/sys/system.h **** namespace daisy
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 18


  10:../libDaisy/src/sys/system.h **** {
  11:../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../libDaisy/src/sys/system.h ****  **
  15:../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../libDaisy/src/sys/system.h ****  */
  18:../libDaisy/src/sys/system.h **** class System
  19:../libDaisy/src/sys/system.h **** {
  20:../libDaisy/src/sys/system.h ****   public:
  21:../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../libDaisy/src/sys/system.h ****     struct Config
  23:../libDaisy/src/sys/system.h ****     {
  24:../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../libDaisy/src/sys/system.h ****         {
  27:../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../libDaisy/src/sys/system.h ****         };
  30:../libDaisy/src/sys/system.h **** 
  31:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../libDaisy/src/sys/system.h ****          ** */
  35:../libDaisy/src/sys/system.h ****         void Defaults()
  36:../libDaisy/src/sys/system.h ****         {
  37:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../libDaisy/src/sys/system.h ****         }
  42:../libDaisy/src/sys/system.h **** 
  43:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../libDaisy/src/sys/system.h ****          ** */
  47:../libDaisy/src/sys/system.h ****         void Boost()
  48:../libDaisy/src/sys/system.h ****         {
  49:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../libDaisy/src/sys/system.h ****         }
  54:../libDaisy/src/sys/system.h **** 
  55:../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../libDaisy/src/sys/system.h ****     };
  60:../libDaisy/src/sys/system.h **** 
  61:../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../libDaisy/src/sys/system.h ****     {
  64:../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../libDaisy/src/sys/system.h ****         DTCMRAM,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 19


  67:../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../libDaisy/src/sys/system.h ****         SDRAM,
  71:../libDaisy/src/sys/system.h ****         QSPI,
  72:../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../libDaisy/src/sys/system.h ****     };
  74:../libDaisy/src/sys/system.h **** 
  75:../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../libDaisy/src/sys/system.h ****     {
  78:../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../libDaisy/src/sys/system.h ****         {
  80:../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../libDaisy/src/sys/system.h ****         } status;
  85:../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../libDaisy/src/sys/system.h ****         {
  88:../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../libDaisy/src/sys/system.h ****             LAST
  93:../libDaisy/src/sys/system.h ****         } version;
  94:../libDaisy/src/sys/system.h ****     };
  95:../libDaisy/src/sys/system.h **** 
  96:../libDaisy/src/sys/system.h ****     System() {}
  97:../libDaisy/src/sys/system.h ****     ~System() {}
 185              		.loc 13 97 5 view .LVU39
 186              		.loc 13 97 5 is_stmt 0 view .LVU40
 187              	.LBE271:
 188              	.LBB272:
 189              	.LBI272:
 190              		.file 14 "../libDaisy/src/hid/usb.h"
   1:../libDaisy/src/hid/usb.h **** #pragma once
   2:../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libDaisy/src/hid/usb.h **** 
   7:../libDaisy/src/hid/usb.h **** namespace daisy
   8:../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../libDaisy/src/hid/usb.h ****     @{
  10:../libDaisy/src/hid/usb.h **** */
  11:../libDaisy/src/hid/usb.h **** 
  12:../libDaisy/src/hid/usb.h **** {
  13:../libDaisy/src/hid/usb.h **** /** 
  14:../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../libDaisy/src/hid/usb.h **** */
  18:../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../libDaisy/src/hid/usb.h **** {
  20:../libDaisy/src/hid/usb.h ****   public:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 20


  21:../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libDaisy/src/hid/usb.h ****     enum class Result
  23:../libDaisy/src/hid/usb.h ****     {
  24:../libDaisy/src/hid/usb.h ****         OK,
  25:../libDaisy/src/hid/usb.h ****         ERR,
  26:../libDaisy/src/hid/usb.h ****     };
  27:../libDaisy/src/hid/usb.h **** 
  28:../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libDaisy/src/hid/usb.h ****     {
  31:../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libDaisy/src/hid/usb.h ****     };
  35:../libDaisy/src/hid/usb.h **** 
  36:../libDaisy/src/hid/usb.h **** 
  37:../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libDaisy/src/hid/usb.h **** 
  40:../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libDaisy/src/hid/usb.h **** 
  42:../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
 191              		.loc 14 42 5 is_stmt 1 view .LVU41
 192              		.loc 14 42 5 is_stmt 0 view .LVU42
 193              	.LBE272:
 194              	.LBB273:
 195              	.LBI273:
 196              		.file 15 "../libDaisy/src/per/adc.h"
   1:../libDaisy/src/per/adc.h **** #pragma once
   2:../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libDaisy/src/per/adc.h **** 
   9:../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../libDaisy/src/per/adc.h **** 
  11:../libDaisy/src/per/adc.h **** namespace daisy
  12:../libDaisy/src/per/adc.h **** {
  13:../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../libDaisy/src/per/adc.h ****     @{
  15:../libDaisy/src/per/adc.h **** */
  16:../libDaisy/src/per/adc.h **** 
  17:../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libDaisy/src/per/adc.h **** */
  21:../libDaisy/src/per/adc.h **** 
  22:../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../libDaisy/src/per/adc.h ****  *           one channel.
  26:../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../libDaisy/src/per/adc.h ****  *           inputs connected.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 21


  30:../libDaisy/src/per/adc.h **** */
  31:../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../libDaisy/src/per/adc.h **** {
  33:../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../libDaisy/src/per/adc.h ****     {
  36:../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../libDaisy/src/per/adc.h ****     };
  41:../libDaisy/src/per/adc.h **** 
  42:../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../libDaisy/src/per/adc.h ****     {
  45:../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../libDaisy/src/per/adc.h ****     };
  54:../libDaisy/src/per/adc.h **** 
  55:../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../libDaisy/src/per/adc.h ****      */
  59:../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../libDaisy/src/per/adc.h **** 
  61:../libDaisy/src/per/adc.h ****     /** 
  62:../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../libDaisy/src/per/adc.h ****     */
  74:../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../libDaisy/src/per/adc.h **** 
  81:../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../libDaisy/src/per/adc.h **** };
  86:../libDaisy/src/per/adc.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 22


  87:../libDaisy/src/per/adc.h **** /**
  88:../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../libDaisy/src/per/adc.h **** */
  90:../libDaisy/src/per/adc.h **** class AdcHandle
  91:../libDaisy/src/per/adc.h **** {
  92:../libDaisy/src/per/adc.h ****   public:
  93:../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../libDaisy/src/per/adc.h ****     {
  96:../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../libDaisy/src/per/adc.h ****     };
 108:../libDaisy/src/per/adc.h **** 
 109:../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 197              		.loc 15 110 5 is_stmt 1 view .LVU43
 198              		.loc 15 110 5 is_stmt 0 view .LVU44
 199              	.LBE273:
 200              	.LBB274:
 201              	.LBI274:
 202              		.file 16 "../libDaisy/src/hid/audio.h"
   1:../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libDaisy/src/hid/audio.h **** 
   4:../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libDaisy/src/hid/audio.h **** 
   6:../libDaisy/src/hid/audio.h **** namespace daisy
   7:../libDaisy/src/hid/audio.h **** {
   8:../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../libDaisy/src/hid/audio.h ****  */
  22:../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../libDaisy/src/hid/audio.h **** {
  24:../libDaisy/src/hid/audio.h ****   public:
  25:../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../libDaisy/src/hid/audio.h ****     struct Config
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 23


  28:../libDaisy/src/hid/audio.h ****     {
  29:../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../libDaisy/src/hid/audio.h **** 
  32:../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../libDaisy/src/hid/audio.h **** 
  35:../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../libDaisy/src/hid/audio.h ****         float postgain;
  37:../libDaisy/src/hid/audio.h **** 
  38:../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../libDaisy/src/hid/audio.h ****          */
  41:../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../libDaisy/src/hid/audio.h **** 
  43:../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../libDaisy/src/hid/audio.h ****         Config()
  45:../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../libDaisy/src/hid/audio.h ****         {
  50:../libDaisy/src/hid/audio.h ****         }
  51:../libDaisy/src/hid/audio.h ****     };
  52:../libDaisy/src/hid/audio.h **** 
  53:../libDaisy/src/hid/audio.h ****     enum class Result
  54:../libDaisy/src/hid/audio.h ****     {
  55:../libDaisy/src/hid/audio.h ****         OK,
  56:../libDaisy/src/hid/audio.h ****         ERR,
  57:../libDaisy/src/hid/audio.h ****     };
  58:../libDaisy/src/hid/audio.h **** 
  59:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../libDaisy/src/hid/audio.h ****      */
  63:../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../libDaisy/src/hid/audio.h **** 
  65:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../libDaisy/src/hid/audio.h ****      */
  68:../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../libDaisy/src/hid/audio.h **** 
  70:../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../libDaisy/src/hid/audio.h ****      */
  73:../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../libDaisy/src/hid/audio.h **** 
  77:../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../libDaisy/src/hid/audio.h ****     */
  81:../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../libDaisy/src/hid/audio.h **** 
  83:../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 24


  85:../libDaisy/src/hid/audio.h ****     */
  86:../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../libDaisy/src/hid/audio.h **** 
  88:../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../libDaisy/src/hid/audio.h ****      */
  91:../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../libDaisy/src/hid/audio.h **** 
  95:../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 203              		.loc 16 96 5 is_stmt 1 view .LVU45
 204              		.loc 16 96 5 is_stmt 0 view .LVU46
 205              	.LBE274:
 206              	.LBE270:
 207              		.loc 3 36 18 view .LVU47
 208 0000 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE4849:
 212              		.weak	_ZN5daisy8DaisyPodD1Ev
 213              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 214              		.section	.text._ZN13GranularSynthD2Ev,"axG",%progbits,_ZN13GranularSynthD5Ev,comdat
 215              		.align	1
 216              		.weak	_ZN13GranularSynthD2Ev
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	_ZN13GranularSynthD2Ev:
 222              	.LVL3:
 223              	.LFB4898:
 224              		.file 17 "GranularSynth.h"
   1:GranularSynth.h **** #pragma once
   2:GranularSynth.h **** 
   3:GranularSynth.h **** #include "Grain.h"
   4:GranularSynth.h **** #include "daisy_pod.h"
   5:GranularSynth.h **** #include "debug_print.h"
   6:GranularSynth.h **** 
   7:GranularSynth.h **** // #include "sample.h"
   8:GranularSynth.h **** #include <vector>
   9:GranularSynth.h **** 
  10:GranularSynth.h **** class GranularSynth{
 225              		.loc 17 10 7 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              		.loc 17 10 7 is_stmt 0 view .LVU49
 231 0000 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE4898:
 235              		.weak	_ZN13GranularSynthD1Ev
 236              		.thumb_set _ZN13GranularSynthD1Ev,_ZN13GranularSynthD2Ev
 237              		.section	.text._ZN14GrannyChordAppD2Ev,"axG",%progbits,_ZN14GrannyChordAppD5Ev,comdat
 238              		.align	1
 239              		.weak	_ZN14GrannyChordAppD2Ev
 240              		.syntax unified
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 25


 241              		.thumb
 242              		.thumb_func
 244              	_ZN14GrannyChordAppD2Ev:
 245              	.LVL4:
 246              	.LFB5495:
 247              		.file 18 "GrannyChordApp.h"
   1:GrannyChordApp.h **** #pragma once 
   2:GrannyChordApp.h **** #include "daisy_pod.h"
   3:GrannyChordApp.h **** #include "daisysp.h"
   4:GrannyChordApp.h **** #include "GranularSynth.h"
   5:GrannyChordApp.h **** #include "AudioFileManager.h"
   6:GrannyChordApp.h **** #include "constants_utils.h"
   7:GrannyChordApp.h **** #include "debug_print.h"
   8:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/reverb.h"
   9:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/compressor.h"
  10:GrannyChordApp.h **** #include "DaisySP-LGPL-FX/moogladder.h"
  11:GrannyChordApp.h **** #include "AppState.h"
  12:GrannyChordApp.h **** 
  13:GrannyChordApp.h **** using namespace daisy;
  14:GrannyChordApp.h **** using namespace daisysp;
  15:GrannyChordApp.h **** 
  16:GrannyChordApp.h **** class GrannyChordApp {
 248              		.loc 18 16 7 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LBB275:
 254              	.LBI275:
 255              		.file 19 "../libDaisy/src/per/tim.h"
   1:../libDaisy/src/per/tim.h **** #pragma once
   2:../libDaisy/src/per/tim.h **** #ifndef DSY_TIM_H
   3:../libDaisy/src/per/tim.h **** #define DSY_TIM_H
   4:../libDaisy/src/per/tim.h **** 
   5:../libDaisy/src/per/tim.h **** #include <cstdint>
   6:../libDaisy/src/per/tim.h **** 
   7:../libDaisy/src/per/tim.h **** namespace daisy
   8:../libDaisy/src/per/tim.h **** {
   9:../libDaisy/src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../libDaisy/src/per/tim.h ****  ** 
  11:../libDaisy/src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../libDaisy/src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../libDaisy/src/per/tim.h ****  **
  14:../libDaisy/src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../libDaisy/src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../libDaisy/src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../libDaisy/src/per/tim.h ****  **
  18:../libDaisy/src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../libDaisy/src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../libDaisy/src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../libDaisy/src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../libDaisy/src/per/tim.h ****  **
  23:../libDaisy/src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../libDaisy/src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../libDaisy/src/per/tim.h ****  ** to turn on and function.
  26:../libDaisy/src/per/tim.h ****  **
  27:../libDaisy/src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 26


  28:../libDaisy/src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../libDaisy/src/per/tim.h ****  ** @todo Other General purpose timers
  30:../libDaisy/src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../libDaisy/src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../libDaisy/src/per/tim.h ****  **     - PWM, etc.
  33:../libDaisy/src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  34:../libDaisy/src/per/tim.h ****  ** @todo HRTIM
  35:../libDaisy/src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../libDaisy/src/per/tim.h ****  ** */
  37:../libDaisy/src/per/tim.h **** class TimerHandle
  38:../libDaisy/src/per/tim.h **** {
  39:../libDaisy/src/per/tim.h ****   public:
  40:../libDaisy/src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../libDaisy/src/per/tim.h ****      *  @note These settings are used during initialization
  42:../libDaisy/src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../libDaisy/src/per/tim.h ****      */
  44:../libDaisy/src/per/tim.h ****     struct Config
  45:../libDaisy/src/per/tim.h ****     {
  46:../libDaisy/src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../libDaisy/src/per/tim.h ****         enum class Peripheral
  48:../libDaisy/src/per/tim.h ****         {
  49:../libDaisy/src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../libDaisy/src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../libDaisy/src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../libDaisy/src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../libDaisy/src/per/tim.h ****         };
  54:../libDaisy/src/per/tim.h **** 
  55:../libDaisy/src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../libDaisy/src/per/tim.h ****          ** @todo Add support for the various  
  57:../libDaisy/src/per/tim.h ****          ** versions of Up/Down counters.
  58:../libDaisy/src/per/tim.h ****          ** */
  59:../libDaisy/src/per/tim.h ****         enum class CounterDir
  60:../libDaisy/src/per/tim.h ****         {
  61:../libDaisy/src/per/tim.h ****             UP = 0,
  62:../libDaisy/src/per/tim.h ****             DOWN,
  63:../libDaisy/src/per/tim.h ****         };
  64:../libDaisy/src/per/tim.h **** 
  65:../libDaisy/src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../libDaisy/src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../libDaisy/src/per/tim.h **** 
  68:../libDaisy/src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../libDaisy/src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../libDaisy/src/per/tim.h ****         */
  71:../libDaisy/src/per/tim.h ****         uint32_t period;
  72:../libDaisy/src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../libDaisy/src/per/tim.h **** 
  74:../libDaisy/src/per/tim.h ****         /* @brief Constructor for default states */
  75:../libDaisy/src/per/tim.h ****         Config()
  76:../libDaisy/src/per/tim.h ****         : periph(Peripheral::TIM_2),
  77:../libDaisy/src/per/tim.h ****           dir(CounterDir::UP),
  78:../libDaisy/src/per/tim.h ****           period(0xffffffff),
  79:../libDaisy/src/per/tim.h ****           enable_irq(false)
  80:../libDaisy/src/per/tim.h ****         {
  81:../libDaisy/src/per/tim.h ****         }
  82:../libDaisy/src/per/tim.h ****     };
  83:../libDaisy/src/per/tim.h **** 
  84:../libDaisy/src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 27


  85:../libDaisy/src/per/tim.h ****     enum class Result
  86:../libDaisy/src/per/tim.h ****     {
  87:../libDaisy/src/per/tim.h ****         OK,
  88:../libDaisy/src/per/tim.h ****         ERR,
  89:../libDaisy/src/per/tim.h ****     };
  90:../libDaisy/src/per/tim.h **** 
  91:../libDaisy/src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../libDaisy/src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../libDaisy/src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../libDaisy/src/per/tim.h ****     */
  95:../libDaisy/src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
  96:../libDaisy/src/per/tim.h **** 
  97:../libDaisy/src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  98:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../libDaisy/src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../libDaisy/src/per/tim.h ****     ~TimerHandle() {}
 256              		.loc 19 100 5 view .LVU51
 257              		.loc 19 100 5 is_stmt 0 view .LVU52
 258              	.LBE275:
 259              	.LBB276:
 260              	.LBI276:
 261              		.file 20 "../libDaisy/src/util/WavWriter.h"
   1:../libDaisy/src/util/WavWriter.h **** #pragma once
   2:../libDaisy/src/util/WavWriter.h **** #pragma once
   3:../libDaisy/src/util/WavWriter.h **** #include "fatfs.h"
   4:../libDaisy/src/util/WavWriter.h **** 
   5:../libDaisy/src/util/WavWriter.h **** namespace daisy
   6:../libDaisy/src/util/WavWriter.h **** {
   7:../libDaisy/src/util/WavWriter.h **** /** Audio Recording Module
   8:../libDaisy/src/util/WavWriter.h ****  ** 
   9:../libDaisy/src/util/WavWriter.h ****  ** Record audio into a working buffer that is gradually written to a WAV file on an SD Card. 
  10:../libDaisy/src/util/WavWriter.h ****  **
  11:../libDaisy/src/util/WavWriter.h ****  ** Recordings are made with floating point input, and will be converted to the 
  12:../libDaisy/src/util/WavWriter.h ****  ** specified bits per sample internally 
  13:../libDaisy/src/util/WavWriter.h ****  **
  14:../libDaisy/src/util/WavWriter.h ****  ** For now only 16-bit and 32-bit (signed int) formats are supported
  15:../libDaisy/src/util/WavWriter.h ****  ** f32 and s24 formats will be added next
  16:../libDaisy/src/util/WavWriter.h ****  **
  17:../libDaisy/src/util/WavWriter.h ****  ** The transfer size determines the amount of internal memory used, and can have an
  18:../libDaisy/src/util/WavWriter.h ****  ** effect on the performance of the streaming behavior of the WavWriter.
  19:../libDaisy/src/util/WavWriter.h ****  ** Memory use can be calculated as: (2 * transfer_size) bytes
  20:../libDaisy/src/util/WavWriter.h ****  ** Performance optimal with sizes: 16384, 32768
  21:../libDaisy/src/util/WavWriter.h ****  ** 
  22:../libDaisy/src/util/WavWriter.h ****  ** To use:
  23:../libDaisy/src/util/WavWriter.h ****  ** 1. Create a WavWriter<size> object (e.g. WavWriter<32768> writer)
  24:../libDaisy/src/util/WavWriter.h ****  ** 2. Configure the settings as desired by creating a WavWriter<32768>::Config struct and setting 
  25:../libDaisy/src/util/WavWriter.h ****  ** 3. Initialize the object with the configuration struct.
  26:../libDaisy/src/util/WavWriter.h ****  ** 4. Open a new file for writing with: writer.OpenFile("FileName.wav")
  27:../libDaisy/src/util/WavWriter.h ****  ** 5. Write to it within your audio callback using: writer.Sample(value)
  28:../libDaisy/src/util/WavWriter.h ****  ** 6. Fill the Wav File on the SD Card with data from your main loop by running: writer.Write()
  29:../libDaisy/src/util/WavWriter.h ****  ** 7. When finished with the recording finalize, and close the file with: writer.SaveFile();
  30:../libDaisy/src/util/WavWriter.h ****  ** 
  31:../libDaisy/src/util/WavWriter.h ****  ** */
  32:../libDaisy/src/util/WavWriter.h **** template <size_t transfer_size>
  33:../libDaisy/src/util/WavWriter.h **** class WavWriter
  34:../libDaisy/src/util/WavWriter.h **** {
  35:../libDaisy/src/util/WavWriter.h ****   public:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 28


  36:../libDaisy/src/util/WavWriter.h ****     WavWriter() {}
  37:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 262              		.loc 20 37 5 is_stmt 1 view .LVU53
 263              		.loc 20 37 5 is_stmt 0 view .LVU54
 264              	.LBE276:
 265              	.LBB277:
 266              	.LBI277:
 267              		.file 21 "../DaisySP/Source/Filters/onepole.h"
   1:../DaisySP/Source/Filters/onepole.h **** /*
   2:../DaisySP/Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Filters/onepole.h **** 
   4:../DaisySP/Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Filters/onepole.h **** */
   8:../DaisySP/Source/Filters/onepole.h **** 
   9:../DaisySP/Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../DaisySP/Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../DaisySP/Source/Filters/onepole.h **** 
  12:../DaisySP/Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../DaisySP/Source/Filters/onepole.h **** #include <cmath>
  14:../DaisySP/Source/Filters/onepole.h **** #include <algorithm>
  15:../DaisySP/Source/Filters/onepole.h **** 
  16:../DaisySP/Source/Filters/onepole.h **** namespace daisysp
  17:../DaisySP/Source/Filters/onepole.h **** {
  18:../DaisySP/Source/Filters/onepole.h **** /**         
  19:../DaisySP/Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../DaisySP/Source/Filters/onepole.h ****     @author beserge
  21:../DaisySP/Source/Filters/onepole.h ****     @date Dec 2023 
  22:../DaisySP/Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../DaisySP/Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../DaisySP/Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../DaisySP/Source/Filters/onepole.h **** */
  26:../DaisySP/Source/Filters/onepole.h **** class OnePole
  27:../DaisySP/Source/Filters/onepole.h **** {
  28:../DaisySP/Source/Filters/onepole.h ****   public:
  29:../DaisySP/Source/Filters/onepole.h ****     OnePole() {}
  30:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 268              		.loc 21 30 5 is_stmt 1 view .LVU55
 269              		.loc 21 30 5 is_stmt 0 view .LVU56
 270              	.LBE277:
 271              	.LBB278:
 272              	.LBI278:
 273              		.file 22 "../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Copyright (c) 2023 Electrosmith, Corp, Victor Lazzarini, John ffitch (fast tanh), Bob Moog
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifndef DSY_MOOGLADDER_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #define DSY_MOOGLADDER_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #include <stdint.h>
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 29


  14:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifdef __cplusplus
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /** Moog ladder filter module*/
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** class MoogLadder
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****   public:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     MoogLadder() {}
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 274              		.loc 22 23 5 is_stmt 1 view .LVU57
 275              		.loc 22 23 5 is_stmt 0 view .LVU58
 276              	.LBE278:
 277              	.LBB279:
 278              	.LBI279:
 279              		.file 23 "../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Copyright (c) 2023 Electrosmith, Corp, GRAME, Centre National de Creation Musicale.
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #ifndef DSY_COMPRESSOR_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #define DSY_COMPRESSOR_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** #include "Utility/dsp.h"
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** namespace daisysp
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** {
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** /** dynamics compressor
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** influenced by compressor in soundpipe (from faust).
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** Modifications made to do:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - Less calculations during each process loop (coefficients recalculated on parameter change).
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - C++-ified
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - added sidechain support
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - pulled gain apart for monitoring and multichannel support
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - improved readability
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - improved makeup-gain calculations
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - changing controls now costs a lot less
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** - a lot less expensive
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** 
  31:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** by: shensley, improved upon by AvAars
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** \todo Add soft/hard knee settings
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** */
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** class Compressor
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h **** {
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****   public:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     Compressor() {}
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 280              		.loc 23 38 5 is_stmt 1 view .LVU59
 281              		.loc 23 38 5 is_stmt 0 view .LVU60
 282              	.LBE279:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 30


 283              	.LBB280:
 284              	.LBI280:
 285              		.loc 17 10 7 is_stmt 1 view .LVU61
 286              		.loc 17 10 7 is_stmt 0 view .LVU62
 287              	.LBE280:
 288              		.loc 18 16 7 view .LVU63
 289 0000 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE5495:
 293              		.weak	_ZN14GrannyChordAppD1Ev
 294              		.thumb_set _ZN14GrannyChordAppD1Ev,_ZN14GrannyChordAppD2Ev
 295              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 296              	.LC0:
 297 0000 73746172 		.ascii	"started log\000"
 297      74656420 
 297      6C6F6700 
 298              		.section	.text.startup.main,"ax",%progbits
 299              		.align	1
 300              		.global	main
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	main:
 306              	.LFB4903:
 307              		.file 24 "main.cpp"
   1:main.cpp      **** #ifdef DEBUG_MODE // TODO: remove
   2:main.cpp      **** #pragma message("Debug mode is ON")
   3:main.cpp      **** #else
   4:main.cpp      **** #pragma message("Debug mode is OFF")
   5:main.cpp      **** #endif
   6:main.cpp      **** 
   7:main.cpp      **** #include <stdio.h>
   8:main.cpp      **** #include "daisysp.h"
   9:main.cpp      **** #include "daisy_pod.h"
  10:main.cpp      **** #include "AudioFileManager.h"
  11:main.cpp      **** #include "GranularSynth.h"
  12:main.cpp      **** #include "GrannyChordApp.h"
  13:main.cpp      **** #include "constants_utils.h"
  14:main.cpp      **** #include "debug_print.h"
  15:main.cpp      **** 
  16:main.cpp      **** using namespace daisy;
  17:main.cpp      **** using namespace daisysp;
  18:main.cpp      **** using namespace std;
  19:main.cpp      **** 
  20:main.cpp      **** /* SDRAM buffers for storing WAV files or recorded input audio */
  21:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t left_buf[CHNL_BUF_SIZE_SAMPS];
  22:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t right_buf[CHNL_BUF_SIZE_SAMPS];
  23:main.cpp      **** DSY_SDRAM_BSS alignas(16) int16_t temp_buf[BUF_CHUNK_SZ];
  24:main.cpp      **** 
  25:main.cpp      **** /* SDRAM buffer for temporarily storing recorded output audio
  26:main.cpp      ****     before it's written to SD card */
  27:main.cpp      **** // DSY_SDRAM_BSS alignas(16) int16_t record_out_buf[RECORD_OUT_BUF_SIZE_SAMPS];
  28:main.cpp      **** 
  29:main.cpp      **** /* hardware interfaces */
  30:main.cpp      **** SdmmcHandler sd;
  31:main.cpp      **** FatFSInterface fsi;
  32:main.cpp      **** DaisyPod pod;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 31


  33:main.cpp      **** FIL file;
  34:main.cpp      **** 
  35:main.cpp      **** DSY_SDRAM_BSS ReverbSc reverb;
  36:main.cpp      **** /* software classes to run app */
  37:main.cpp      **** AudioFileManager filemgr(sd, fsi, pod, &file);
  38:main.cpp      **** static GranularSynth synth(pod);
  39:main.cpp      **** GrannyChordApp app(pod, synth, filemgr, reverb);
  40:main.cpp      **** 
  41:main.cpp      **** /* we set rng state here so we can use RNG fns across classes */
  42:main.cpp      **** uint32_t rng_state;
  43:main.cpp      **** 
  44:main.cpp      **** 
  45:main.cpp      **** int main (void){
 308              		.loc 24 45 16 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
  46:main.cpp      ****   pod.Init();
 312              		.loc 24 46 3 view .LVU65
  45:main.cpp      ****   pod.Init();
 313              		.loc 24 45 16 is_stmt 0 view .LVU66
 314 0000 08B5     		push	{r3, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
 318              		.loc 24 46 11 view .LVU67
 319 0002 0021     		movs	r1, #0
 320 0004 0948     		ldr	r0, .L7
 321 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 322              	.LVL5:
  47:main.cpp      ****   pod.seed.StartLog(true);
 323              		.loc 24 47 3 is_stmt 1 view .LVU68
 324              	.LBB281:
 325              	.LBI281:
  23:../libDaisy/src/daisy_seed.h **** 
  24:../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../libDaisy/src/daisy_seed.h ****      */
  27:../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../libDaisy/src/daisy_seed.h **** 
  29:../libDaisy/src/daisy_seed.h ****     /** 
  30:../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../libDaisy/src/daisy_seed.h **** 
  34:../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../libDaisy/src/daisy_seed.h ****     */
  38:../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../libDaisy/src/daisy_seed.h **** 
  40:../libDaisy/src/daisy_seed.h ****     /** 
  41:../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../libDaisy/src/daisy_seed.h ****     */
  43:../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../libDaisy/src/daisy_seed.h **** 
  45:../libDaisy/src/daisy_seed.h ****     /** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 32


  46:../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../libDaisy/src/daisy_seed.h ****     */
  49:../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../libDaisy/src/daisy_seed.h **** 
  51:../libDaisy/src/daisy_seed.h ****     /** 
  52:../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../libDaisy/src/daisy_seed.h ****     */
  55:../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../libDaisy/src/daisy_seed.h **** 
  57:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../libDaisy/src/daisy_seed.h ****     */
  61:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../libDaisy/src/daisy_seed.h **** 
  63:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../libDaisy/src/daisy_seed.h ****     */
  68:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../libDaisy/src/daisy_seed.h **** 
  70:../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../libDaisy/src/daisy_seed.h ****      */
  72:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../libDaisy/src/daisy_seed.h **** 
  74:../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../libDaisy/src/daisy_seed.h ****      */
  76:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../libDaisy/src/daisy_seed.h **** 
  78:../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../libDaisy/src/daisy_seed.h **** 
  81:../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../libDaisy/src/daisy_seed.h ****      */
  84:../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../libDaisy/src/daisy_seed.h **** 
  86:../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../libDaisy/src/daisy_seed.h ****      */
  88:../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../libDaisy/src/daisy_seed.h **** 
  90:../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../libDaisy/src/daisy_seed.h ****      */
  92:../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../libDaisy/src/daisy_seed.h **** 
  94:../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../libDaisy/src/daisy_seed.h **** 
  97:../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../libDaisy/src/daisy_seed.h **** 
 100:../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 33


 103:../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../libDaisy/src/daisy_seed.h ****      */
 105:../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../libDaisy/src/daisy_seed.h **** 
 107:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../libDaisy/src/daisy_seed.h ****      */
 109:../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../libDaisy/src/daisy_seed.h **** 
 111:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../libDaisy/src/daisy_seed.h ****      */
 113:../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../libDaisy/src/daisy_seed.h **** 
 115:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../libDaisy/src/daisy_seed.h ****      */
 117:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../libDaisy/src/daisy_seed.h ****     {
 120:../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../libDaisy/src/daisy_seed.h ****     }
 122:../libDaisy/src/daisy_seed.h **** 
 123:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../libDaisy/src/daisy_seed.h ****     */
 125:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../libDaisy/src/daisy_seed.h ****     {
 128:../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 129:../libDaisy/src/daisy_seed.h ****     }
 130:../libDaisy/src/daisy_seed.h **** 
 131:../libDaisy/src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:../libDaisy/src/daisy_seed.h ****     */
 133:../libDaisy/src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 326              		.loc 12 133 17 view .LVU69
 327              	.LBB282:
 134:../libDaisy/src/daisy_seed.h ****     {
 135:../libDaisy/src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 328              		.loc 12 135 9 view .LVU70
 329              		.loc 12 135 22 is_stmt 0 view .LVU71
 330 000a 0120     		movs	r0, #1
 331 000c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 332              	.LVL6:
 333              		.loc 12 135 22 view .LVU72
 334              	.LBE282:
 335              	.LBE281:
  48:main.cpp      ****   DebugPrint(pod,"started log");
 336              		.loc 24 48 3 is_stmt 1 view .LVU73
 337              		.loc 24 48 3 view .LVU74
 338              	.LBB283:
 339              	.LBI283:
 126:../libDaisy/src/daisy_seed.h ****     {
 340              		.loc 12 126 17 view .LVU75
 341              	.LBB284:
 128:../libDaisy/src/daisy_seed.h ****     }
 342              		.loc 12 128 23 is_stmt 0 view .LVU76
 343 0010 0748     		ldr	r0, .L7+4
 344 0012 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 345              	.LVL7:
 128:../libDaisy/src/daisy_seed.h ****     }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 34


 346              		.loc 12 128 23 view .LVU77
 347              	.LBE284:
 348              	.LBE283:
  49:main.cpp      ****   app.Init(left_buf, right_buf, temp_buf);
 349              		.loc 24 49 3 is_stmt 1 view .LVU78
 350              		.loc 24 49 11 is_stmt 0 view .LVU79
 351 0016 074B     		ldr	r3, .L7+8
 352 0018 074A     		ldr	r2, .L7+12
 353 001a 0849     		ldr	r1, .L7+16
 354 001c 0848     		ldr	r0, .L7+20
 355 001e FFF7FEFF 		bl	_ZN14GrannyChordApp4InitEPsS0_S0_
 356              	.LVL8:
  50:main.cpp      ****   app.Run();
 357              		.loc 24 50 3 is_stmt 1 view .LVU80
 358              		.loc 24 50 10 is_stmt 0 view .LVU81
 359 0022 0748     		ldr	r0, .L7+20
 360 0024 FFF7FEFF 		bl	_ZN14GrannyChordApp3RunEv
 361              	.LVL9:
  51:main.cpp      **** }
 362              		.loc 24 51 1 view .LVU82
 363 0028 0020     		movs	r0, #0
 364 002a 08BD     		pop	{r3, pc}
 365              	.L8:
 366              		.align	2
 367              	.L7:
 368 002c 00000000 		.word	pod
 369 0030 00000000 		.word	.LC0
 370 0034 00000000 		.word	temp_buf
 371 0038 00000000 		.word	right_buf
 372 003c 00000000 		.word	left_buf
 373 0040 00000000 		.word	app
 374              		.cfi_endproc
 375              	.LFE4903:
 377              		.section	.text.startup._GLOBAL__sub_I_left_buf,"ax",%progbits
 378              		.align	1
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	_GLOBAL__sub_I_left_buf:
 384              	.LFB5497:
 385              		.loc 24 51 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              	.LBB389:
 390              	.LBI389:
 391              		.loc 24 51 1 view .LVU84
 392              	.LVL10:
 393              	.LBB390:
 394              	.LBB391:
 395              	.LBI391:
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 396              		.loc 2 77 5 view .LVU85
  77:../libDaisy/src/per/sdmmc.h ****     ~SdmmcHandler() {}
 397              		.loc 2 77 5 is_stmt 0 view .LVU86
 398              	.LBE391:
 399              	.LBE390:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 35


 400              	.LBE389:
 401              		.loc 24 51 1 view .LVU87
 402 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 403              		.cfi_def_cfa_offset 24
 404              		.cfi_offset 3, -24
 405              		.cfi_offset 4, -20
 406              		.cfi_offset 5, -16
 407              		.cfi_offset 6, -12
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410              	.LBB532:
 411              	.LBB530:
  30:main.cpp      **** FatFSInterface fsi;
 412              		.loc 24 30 14 view .LVU88
 413 0002 484E     		ldr	r6, .L12
 414              	.LBB392:
 415              	.LBB393:
 416              	.LBB394:
 417              	.LBB395:
 418              	.LBB396:
 419              	.LBB397:
 420              	.LBB398:
 421              		.file 25 "../libDaisy/src/per/qspi.h"
   1:../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../libDaisy/src/per/qspi.h **** 
   4:../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../libDaisy/src/per/qspi.h **** 
   6:../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../libDaisy/src/per/qspi.h **** 
   9:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../libDaisy/src/per/qspi.h **** 
  19:../libDaisy/src/per/qspi.h **** namespace daisy
  20:../libDaisy/src/per/qspi.h **** {
  21:../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../libDaisy/src/per/qspi.h **** @{
  23:../libDaisy/src/per/qspi.h **** */
  24:../libDaisy/src/per/qspi.h **** 
  25:../libDaisy/src/per/qspi.h **** /** 
  26:../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../libDaisy/src/per/qspi.h **** */
  30:../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../libDaisy/src/per/qspi.h **** {
  32:../libDaisy/src/per/qspi.h ****   public:
  33:../libDaisy/src/per/qspi.h ****     enum Result
  34:../libDaisy/src/per/qspi.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 36


  35:../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../libDaisy/src/per/qspi.h ****         ERR
  37:../libDaisy/src/per/qspi.h ****     };
  38:../libDaisy/src/per/qspi.h **** 
  39:../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../libDaisy/src/per/qspi.h ****          * 
  43:../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../libDaisy/src/per/qspi.h ****          */
  48:../libDaisy/src/per/qspi.h ****     enum Status
  49:../libDaisy/src/per/qspi.h ****     {
  50:../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../libDaisy/src/per/qspi.h ****     };
  55:../libDaisy/src/per/qspi.h **** 
  56:../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../libDaisy/src/per/qspi.h ****     struct Config
  58:../libDaisy/src/per/qspi.h ****     {
  59:../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../libDaisy/src/per/qspi.h ****         enum Device
  61:../libDaisy/src/per/qspi.h ****         {
  62:../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../libDaisy/src/per/qspi.h ****         };
  66:../libDaisy/src/per/qspi.h **** 
  67:../libDaisy/src/per/qspi.h ****         /** 
  68:../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../libDaisy/src/per/qspi.h ****         */
  74:../libDaisy/src/per/qspi.h ****         enum Mode
  75:../libDaisy/src/per/qspi.h ****         {
  76:../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../libDaisy/src/per/qspi.h ****         };
  80:../libDaisy/src/per/qspi.h **** 
  81:../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../libDaisy/src/per/qspi.h ****         struct
  83:../libDaisy/src/per/qspi.h ****         {
  84:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../libDaisy/src/per/qspi.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 37


  92:../libDaisy/src/per/qspi.h ****         Device device;
  93:../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../libDaisy/src/per/qspi.h ****     };
  95:../libDaisy/src/per/qspi.h **** 
  96:../libDaisy/src/per/qspi.h ****     /** 
  97:../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../libDaisy/src/per/qspi.h ****         */
 101:../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../libDaisy/src/per/qspi.h **** 
 103:../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../libDaisy/src/per/qspi.h **** 
 106:../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../libDaisy/src/per/qspi.h ****     /** 
 109:../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../libDaisy/src/per/qspi.h ****         */
 113:../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../libDaisy/src/per/qspi.h **** 
 115:../libDaisy/src/per/qspi.h ****     /** 
 116:../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../libDaisy/src/per/qspi.h ****         */
 123:../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../libDaisy/src/per/qspi.h **** 
 125:../libDaisy/src/per/qspi.h ****     /** 
 126:../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../libDaisy/src/per/qspi.h ****         */
 132:../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../libDaisy/src/per/qspi.h **** 
 134:../libDaisy/src/per/qspi.h ****     /** 
 135:../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../libDaisy/src/per/qspi.h ****         */
 142:../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../libDaisy/src/per/qspi.h **** 
 144:../libDaisy/src/per/qspi.h ****     /**  
 145:../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 38


 149:../libDaisy/src/per/qspi.h ****         */
 150:../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../libDaisy/src/per/qspi.h **** 
 152:../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../libDaisy/src/per/qspi.h ****      */
 155:../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../libDaisy/src/per/qspi.h **** 
 157:../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../libDaisy/src/per/qspi.h ****      * 
 161:../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../libDaisy/src/per/qspi.h ****     */
 164:../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../libDaisy/src/per/qspi.h **** 
 166:../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 422              		.loc 25 166 34 view .LVU89
 423 0004 0024     		movs	r4, #0
 424 0006 484D     		ldr	r5, .L12+4
 425              	.LBE398:
 426              	.LBE397:
 427              	.LBE396:
 428              	.LBE395:
 429              	.LBE394:
 430              	.LBE393:
 431              	.LBE392:
  30:main.cpp      **** FatFSInterface fsi;
 432              		.loc 24 30 14 view .LVU90
 433 0008 484A     		ldr	r2, .L12+8
 434 000a 3046     		mov	r0, r6
 435 000c 4849     		ldr	r1, .L12+12
 436 000e FFF7FEFF 		bl	__aeabi_atexit
 437              	.LVL11:
 438              	.LBB483:
 439              	.LBI483:
 440              		.file 26 "../libDaisy/src/sys/fatfs.h"
   1:../libDaisy/src/sys/fatfs.h **** #ifndef __fatfs_H
   2:../libDaisy/src/sys/fatfs.h **** #define __fatfs_H /**< & */
   3:../libDaisy/src/sys/fatfs.h **** 
   4:../libDaisy/src/sys/fatfs.h **** #include "ff.h"
   5:../libDaisy/src/sys/fatfs.h **** 
   6:../libDaisy/src/sys/fatfs.h **** namespace daisy
   7:../libDaisy/src/sys/fatfs.h **** {
   8:../libDaisy/src/sys/fatfs.h **** /** @brief Daisy FatFS Driver Interface
   9:../libDaisy/src/sys/fatfs.h ****  *  @details Specifies the desired media (SD Card, USB, etc.) to be mountable with FatFS
  10:../libDaisy/src/sys/fatfs.h ****  *           within a given application. Once initialization is called, the standard
  11:../libDaisy/src/sys/fatfs.h ****  *           FatFS API will be usable with the media mounted in the order 
  12:../libDaisy/src/sys/fatfs.h ****  *           they are listed in the Media config struct. 
  13:../libDaisy/src/sys/fatfs.h ****  *           For example, when only using an SD Card, it will mount at "0:/",
  14:../libDaisy/src/sys/fatfs.h ****  *           when only using USB, it will mount at "0:/". However, when mounting 
  15:../libDaisy/src/sys/fatfs.h ****  *           with SD card and USB, the SD card will mount at "0:/", and the USB 
  16:../libDaisy/src/sys/fatfs.h ****  *           will mount at "1:/".
  17:../libDaisy/src/sys/fatfs.h ****  *           The relevant hardware peripheral (SDMMC, or MSD) needs to be initialized
  18:../libDaisy/src/sys/fatfs.h ****  *           separately by the application before using FatFS.
  19:../libDaisy/src/sys/fatfs.h ****  *          
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 39


  20:../libDaisy/src/sys/fatfs.h ****  *           This object has some memory limitations due to the media connected to it.
  21:../libDaisy/src/sys/fatfs.h ****  *           The SDMMC1 peripheral can only communicate with the AXI SRAM, and the DTCMRAM 
  22:../libDaisy/src/sys/fatfs.h ****  *           cannot communicate with the DMA. So the FatFSInterface object should always be
  23:../libDaisy/src/sys/fatfs.h ****  *           located in the AXI SRAM. This is the default location for all data/bss memory
  24:../libDaisy/src/sys/fatfs.h ****  *           using the standard build. However, applciations using the electrosmith bootloader
  25:../libDaisy/src/sys/fatfs.h ****  *           will need special consideration when using this object AND an SD Card. 
  26:../libDaisy/src/sys/fatfs.h ****  */
  27:../libDaisy/src/sys/fatfs.h **** class FatFSInterface
  28:../libDaisy/src/sys/fatfs.h **** {
  29:../libDaisy/src/sys/fatfs.h ****   public:
  30:../libDaisy/src/sys/fatfs.h ****     /** Return values specifying specific errors for linking Daisy to FatFS */
  31:../libDaisy/src/sys/fatfs.h ****     enum Result
  32:../libDaisy/src/sys/fatfs.h ****     {
  33:../libDaisy/src/sys/fatfs.h ****         OK,
  34:../libDaisy/src/sys/fatfs.h ****         ERR_TOO_MANY_VOLUMES,
  35:../libDaisy/src/sys/fatfs.h ****         ERR_NO_MEDIA_SELECTED,
  36:../libDaisy/src/sys/fatfs.h ****         ERR_GENERIC,
  37:../libDaisy/src/sys/fatfs.h ****     };
  38:../libDaisy/src/sys/fatfs.h **** 
  39:../libDaisy/src/sys/fatfs.h ****     /** Config structure for configuring Daisy to FatFS */
  40:../libDaisy/src/sys/fatfs.h ****     struct Config
  41:../libDaisy/src/sys/fatfs.h ****     {
  42:../libDaisy/src/sys/fatfs.h ****         /** Selected Media that will be linked to FatFS 
  43:../libDaisy/src/sys/fatfs.h ****          *  These values can be OR'd together when multiple
  44:../libDaisy/src/sys/fatfs.h ****          *  volumes are desired 
  45:../libDaisy/src/sys/fatfs.h ****          *  i.e. config.media = Media::SD | Media::USBH;
  46:../libDaisy/src/sys/fatfs.h ****          * 
  47:../libDaisy/src/sys/fatfs.h ****          *  When mounting multiple volumes, ffconf.h must have 
  48:../libDaisy/src/sys/fatfs.h ****          *  _VOLUMES set to an appropriate value.
  49:../libDaisy/src/sys/fatfs.h ****          * 
  50:../libDaisy/src/sys/fatfs.h ****          *  FatFS will register multiple volumes in the order of the enum,
  51:../libDaisy/src/sys/fatfs.h ****          *   the first registered class will mount at "0:/",
  52:../libDaisy/src/sys/fatfs.h ****          *   the second registered class will mount at "1:/", and so on
  53:../libDaisy/src/sys/fatfs.h ****          */
  54:../libDaisy/src/sys/fatfs.h ****         enum Media : uint8_t
  55:../libDaisy/src/sys/fatfs.h ****         {
  56:../libDaisy/src/sys/fatfs.h ****             MEDIA_SD  = 0x01,
  57:../libDaisy/src/sys/fatfs.h ****             MEDIA_USB = 0x02,
  58:../libDaisy/src/sys/fatfs.h ****             // MEDIA_QSPI = 0x04,
  59:../libDaisy/src/sys/fatfs.h ****         };
  60:../libDaisy/src/sys/fatfs.h **** 
  61:../libDaisy/src/sys/fatfs.h ****         uint8_t media;
  62:../libDaisy/src/sys/fatfs.h ****     };
  63:../libDaisy/src/sys/fatfs.h **** 
  64:../libDaisy/src/sys/fatfs.h ****     FatFSInterface() {}
 441              		.loc 26 64 5 is_stmt 1 view .LVU91
 442              		.loc 26 64 5 is_stmt 0 view .LVU92
 443              	.LBE483:
 444              	.LBB484:
 445              	.LBI392:
  35:../libDaisy/src/daisy_pod.h ****     ~DaisyPod() {}
 446              		.loc 3 35 5 is_stmt 1 view .LVU93
 447              	.LBB479:
 448              	.LBB417:
 449              	.LBI394:
  21:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 450              		.loc 12 21 5 view .LVU94
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 40


 451              	.LBB415:
 452              	.LBB401:
 453              	.LBI396:
 454              		.loc 25 166 5 view .LVU95
 455              	.LBE401:
 456              	.LBE415:
 457              	.LBE417:
 458              	.LBB418:
 459              	.LBB419:
 460              	.LBB420:
 461              	.LBB421:
 157:../libDaisy/src/hid/midi.h **** 
 158:../libDaisy/src/hid/midi.h ****     struct Config
 462              		.loc 4 158 12 is_stmt 0 view .LVU96
 463 0012 05F5C070 		add	r0, r5, #384
 464              	.LBE421:
 465              	.LBE420:
 466              	.LBE419:
 467              	.LBE418:
 468              	.LBB457:
 469              	.LBB416:
 470              	.LBB402:
 471              	.LBB400:
 472              	.LBB399:
 473              		.loc 25 166 34 view .LVU97
 474 0016 2C60     		str	r4, [r5]
 475              	.LVL12:
 476              		.loc 25 166 34 view .LVU98
 477              	.LBE399:
 478              	.LBE400:
 479              	.LBE402:
 480              	.LBB403:
 481              	.LBI403:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 482              		.loc 16 95 5 is_stmt 1 view .LVU99
 483              	.LBB404:
 484              	.LBB405:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 485              		.loc 16 95 35 is_stmt 0 view .LVU100
 486 0018 6C61     		str	r4, [r5, #20]
 487              	.LVL13:
  95:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 488              		.loc 16 95 35 view .LVU101
 489              	.LBE405:
 490              	.LBE404:
 491              	.LBE403:
 492              	.LBB406:
 493              	.LBI406:
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 494              		.loc 15 109 5 is_stmt 1 view .LVU102
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 495              		.loc 15 109 5 is_stmt 0 view .LVU103
 496              	.LBE406:
 497              	.LBB407:
 498              	.LBI407:
 499              		.file 27 "../libDaisy/src/per/dac.h"
   1:../libDaisy/src/per/dac.h **** #pragma once
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 41


   2:../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libDaisy/src/per/dac.h **** 
   5:../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/dac.h **** 
   7:../libDaisy/src/per/dac.h **** namespace daisy
   8:../libDaisy/src/per/dac.h **** {
   9:../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../libDaisy/src/per/dac.h ****  ** 
  12:../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../libDaisy/src/per/dac.h ****  **
  15:../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../libDaisy/src/per/dac.h ****  **
  17:../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../libDaisy/src/per/dac.h ****  ***/
  21:../libDaisy/src/per/dac.h **** class DacHandle
  22:../libDaisy/src/per/dac.h **** {
  23:../libDaisy/src/per/dac.h ****   public:
  24:../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../libDaisy/src/per/dac.h ****     enum class Result
  26:../libDaisy/src/per/dac.h ****     {
  27:../libDaisy/src/per/dac.h ****         OK,
  28:../libDaisy/src/per/dac.h ****         ERR,
  29:../libDaisy/src/per/dac.h ****     };
  30:../libDaisy/src/per/dac.h **** 
  31:../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../libDaisy/src/per/dac.h ****     enum class Channel
  33:../libDaisy/src/per/dac.h ****     {
  34:../libDaisy/src/per/dac.h ****         ONE,
  35:../libDaisy/src/per/dac.h ****         TWO,
  36:../libDaisy/src/per/dac.h ****         BOTH,
  37:../libDaisy/src/per/dac.h ****     };
  38:../libDaisy/src/per/dac.h **** 
  39:../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../libDaisy/src/per/dac.h ****      **
  41:../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../libDaisy/src/per/dac.h ****      **
  43:../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../libDaisy/src/per/dac.h ****      ***/
  46:../libDaisy/src/per/dac.h ****     enum class Mode
  47:../libDaisy/src/per/dac.h ****     {
  48:../libDaisy/src/per/dac.h ****         POLLING,
  49:../libDaisy/src/per/dac.h ****         DMA,
  50:../libDaisy/src/per/dac.h ****     };
  51:../libDaisy/src/per/dac.h **** 
  52:../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../libDaisy/src/per/dac.h ****      ***/
  56:../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../libDaisy/src/per/dac.h ****     {
  58:../libDaisy/src/per/dac.h ****         BITS_8,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 42


  59:../libDaisy/src/per/dac.h ****         BITS_12
  60:../libDaisy/src/per/dac.h ****     };
  61:../libDaisy/src/per/dac.h **** 
  62:../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../libDaisy/src/per/dac.h ****     {
  65:../libDaisy/src/per/dac.h ****         ENABLED,
  66:../libDaisy/src/per/dac.h ****         DISABLED,
  67:../libDaisy/src/per/dac.h ****     };
  68:../libDaisy/src/per/dac.h **** 
  69:../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../libDaisy/src/per/dac.h ****     struct Config
  71:../libDaisy/src/per/dac.h ****     {
  72:../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../libDaisy/src/per/dac.h **** 
  78:../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../libDaisy/src/per/dac.h ****     };
  83:../libDaisy/src/per/dac.h **** 
  84:../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 500              		.loc 27 84 5 is_stmt 1 view .LVU104
 501              	.LBB408:
 502              	.LBB409:
 503              		.loc 27 84 33 is_stmt 0 view .LVU105
 504 001a 2C62     		str	r4, [r5, #32]
 505              	.LVL14:
 506              		.loc 27 84 33 view .LVU106
 507              	.LBE409:
 508              	.LBE408:
 509              	.LBE407:
 510              	.LBB410:
 511              	.LBI410:
  40:../libDaisy/src/hid/usb.h **** 
 512              		.loc 14 40 5 is_stmt 1 view .LVU107
  40:../libDaisy/src/hid/usb.h **** 
 513              		.loc 14 40 5 is_stmt 0 view .LVU108
 514              	.LBE410:
 515              	.LBB411:
 516              	.LBI411:
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 517              		.loc 13 96 5 is_stmt 1 view .LVU109
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 518              		.loc 13 96 5 is_stmt 0 view .LVU110
 519              	.LBE411:
 520              	.LBB412:
 521              	.LBI412:
 522              		.file 28 "../libDaisy/src/per/sai.h"
   1:../libDaisy/src/per/sai.h **** #pragma once
   2:../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../libDaisy/src/per/sai.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 43


   5:../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/sai.h **** 
   7:../libDaisy/src/per/sai.h **** namespace daisy
   8:../libDaisy/src/per/sai.h **** {
   9:../libDaisy/src/per/sai.h **** /** 
  10:../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../libDaisy/src/per/sai.h ****  * 
  14:../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../libDaisy/src/per/sai.h ****  *
  18:../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../libDaisy/src/per/sai.h ****  * 
  21:../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../libDaisy/src/per/sai.h ****  * 
  23:../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../libDaisy/src/per/sai.h ****  */
  42:../libDaisy/src/per/sai.h **** class SaiHandle
  43:../libDaisy/src/per/sai.h **** {
  44:../libDaisy/src/per/sai.h ****   public:
  45:../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../libDaisy/src/per/sai.h ****     struct Config
  47:../libDaisy/src/per/sai.h ****     {
  48:../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../libDaisy/src/per/sai.h ****         {
  51:../libDaisy/src/per/sai.h ****             SAI_1,
  52:../libDaisy/src/per/sai.h ****             SAI_2,
  53:../libDaisy/src/per/sai.h ****         };
  54:../libDaisy/src/per/sai.h **** 
  55:../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../libDaisy/src/per/sai.h ****         {
  58:../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../libDaisy/src/per/sai.h ****             SAI_48KHZ,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 44


  62:../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../libDaisy/src/per/sai.h ****         };
  64:../libDaisy/src/per/sai.h **** 
  65:../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../libDaisy/src/per/sai.h ****         {
  68:../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../libDaisy/src/per/sai.h ****         };
  72:../libDaisy/src/per/sai.h **** 
  73:../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../libDaisy/src/per/sai.h ****          */
  77:../libDaisy/src/per/sai.h ****         enum class Sync
  78:../libDaisy/src/per/sai.h ****         {
  79:../libDaisy/src/per/sai.h ****             MASTER,
  80:../libDaisy/src/per/sai.h ****             SLAVE,
  81:../libDaisy/src/per/sai.h ****         };
  82:../libDaisy/src/per/sai.h **** 
  83:../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../libDaisy/src/per/sai.h ****         enum class Direction
  85:../libDaisy/src/per/sai.h ****         {
  86:../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../libDaisy/src/per/sai.h ****         };
  89:../libDaisy/src/per/sai.h **** 
  90:../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../libDaisy/src/per/sai.h ****         struct
  92:../libDaisy/src/per/sai.h ****         {
  93:../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../libDaisy/src/per/sai.h ****         } pin_config;
  95:../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../libDaisy/src/per/sai.h ****     };
 100:../libDaisy/src/per/sai.h **** 
 101:../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../libDaisy/src/per/sai.h ****     enum class Result
 103:../libDaisy/src/per/sai.h ****     {
 104:../libDaisy/src/per/sai.h ****         OK,
 105:../libDaisy/src/per/sai.h ****         ERR,
 106:../libDaisy/src/per/sai.h ****     };
 107:../libDaisy/src/per/sai.h **** 
 108:../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 523              		.loc 28 108 5 is_stmt 1 view .LVU111
 524              	.LBB413:
 525              	.LBB414:
 526              		.loc 28 108 33 is_stmt 0 view .LVU112
 527 001c EC63     		str	r4, [r5, #60]
 528              	.LVL15:
 529              		.loc 28 108 33 view .LVU113
 530              	.LBE414:
 531              	.LBE413:
 532              	.LBE412:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 45


 533              	.LBE416:
 534              	.LBE457:
 535              	.LBB458:
 536              	.LBI458:
  20:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 537              		.loc 11 20 5 is_stmt 1 view .LVU114
 538              	.LBB459:
 539              	.LBB460:
 540              	.LBI460:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 541              		.loc 9 41 5 view .LVU115
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 542              		.loc 9 41 5 is_stmt 0 view .LVU116
 543              	.LBE460:
 544              	.LBE459:
 545              	.LBE458:
 546              	.LBB461:
 547              	.LBI461:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 548              		.loc 10 21 5 is_stmt 1 view .LVU117
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 549              		.loc 10 21 5 is_stmt 0 view .LVU118
 550              	.LBE461:
 551              	.LBB462:
 552              	.LBI462:
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 553              		.loc 10 21 5 is_stmt 1 view .LVU119
  21:../libDaisy/src/hid/ctrl.h ****     /** destructor */
 554              		.loc 10 21 5 is_stmt 0 view .LVU120
 555              	.LBE462:
 556              	.LBB463:
 557              	.LBI463:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 558              		.loc 9 41 5 is_stmt 1 view .LVU121
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 559              		.loc 9 41 5 is_stmt 0 view .LVU122
 560              	.LBE463:
 561              	.LBB464:
 562              	.LBI464:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 563              		.loc 9 41 5 is_stmt 1 view .LVU123
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 564              		.loc 9 41 5 is_stmt 0 view .LVU124
 565              	.LBE464:
 566              	.LBB465:
 567              	.LBI465:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 568              		.loc 7 17 5 is_stmt 1 view .LVU125
 569              	.LBB466:
 570              	.LBB467:
 571              	.LBI467:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 572              		.loc 8 24 5 view .LVU126
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 573              		.loc 8 24 5 is_stmt 0 view .LVU127
 574              	.LBE467:
 575              	.LBB468:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 46


 576              	.LBI468:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 577              		.loc 8 24 5 is_stmt 1 view .LVU128
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 578              		.loc 8 24 5 is_stmt 0 view .LVU129
 579              	.LBE468:
 580              	.LBB469:
 581              	.LBI469:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 582              		.loc 8 24 5 is_stmt 1 view .LVU130
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 583              		.loc 8 24 5 is_stmt 0 view .LVU131
 584              	.LBE469:
 585              	.LBE466:
 586              	.LBE465:
 587              	.LBB470:
 588              	.LBI470:
  17:../libDaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 589              		.loc 7 17 5 is_stmt 1 view .LVU132
 590              	.LBB471:
 591              	.LBB472:
 592              	.LBI472:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 593              		.loc 8 24 5 view .LVU133
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 594              		.loc 8 24 5 is_stmt 0 view .LVU134
 595              	.LBE472:
 596              	.LBB473:
 597              	.LBI473:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 598              		.loc 8 24 5 is_stmt 1 view .LVU135
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 599              		.loc 8 24 5 is_stmt 0 view .LVU136
 600              	.LBE473:
 601              	.LBB474:
 602              	.LBI474:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 603              		.loc 8 24 5 is_stmt 1 view .LVU137
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 604              		.loc 8 24 5 is_stmt 0 view .LVU138
 605              	.LBE474:
 606              	.LBE471:
 607              	.LBE470:
 608              	.LBB475:
 609              	.LBI418:
 155:../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 610              		.loc 4 155 5 is_stmt 1 view .LVU139
 611              	.LBB453:
 612              	.LBB423:
 613              	.LBI420:
 614              		.loc 4 158 12 view .LVU140
 615              	.LBB422:
 616 001e FFF7FEFF 		bl	_ZN5daisy17MidiUartTransport6ConfigC1Ev
 617              	.LVL16:
 618              		.loc 4 158 12 is_stmt 0 view .LVU141
 619              	.LBE422:
 620              	.LBE423:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 47


 621              	.LBB424:
 622              	.LBI424:
  31:../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 623              		.loc 4 31 5 is_stmt 1 view .LVU142
 624              	.LBB425:
 625              	.LBB426:
 626              	.LBI426:
 627              		.file 29 "../libDaisy/src/per/uart.h"
   1:../libDaisy/src/per/uart.h **** /* 
   2:../libDaisy/src/per/uart.h **** TODO
   3:../libDaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   4:../libDaisy/src/per/uart.h **** */
   5:../libDaisy/src/per/uart.h **** 
   6:../libDaisy/src/per/uart.h **** #pragma once
   7:../libDaisy/src/per/uart.h **** #ifndef DSY_UART_H
   8:../libDaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
   9:../libDaisy/src/per/uart.h **** #include "daisy_core.h"
  10:../libDaisy/src/per/uart.h **** 
  11:../libDaisy/src/per/uart.h **** 
  12:../libDaisy/src/per/uart.h **** namespace daisy
  13:../libDaisy/src/per/uart.h **** {
  14:../libDaisy/src/per/uart.h **** /** @addtogroup serial
  15:../libDaisy/src/per/uart.h ****     @{
  16:../libDaisy/src/per/uart.h ****     */
  17:../libDaisy/src/per/uart.h **** 
  18:../libDaisy/src/per/uart.h **** /** 
  19:../libDaisy/src/per/uart.h ****     Uart Peripheral
  20:../libDaisy/src/per/uart.h ****     @author shensley
  21:../libDaisy/src/per/uart.h ****     @date March 2020
  22:../libDaisy/src/per/uart.h ****     */
  23:../libDaisy/src/per/uart.h **** class UartHandler
  24:../libDaisy/src/per/uart.h **** {
  25:../libDaisy/src/per/uart.h ****   public:
  26:../libDaisy/src/per/uart.h ****     struct Config
  27:../libDaisy/src/per/uart.h ****     {
  28:../libDaisy/src/per/uart.h ****         enum class Peripheral
  29:../libDaisy/src/per/uart.h ****         {
  30:../libDaisy/src/per/uart.h ****             USART_1,
  31:../libDaisy/src/per/uart.h ****             USART_2,
  32:../libDaisy/src/per/uart.h ****             USART_3,
  33:../libDaisy/src/per/uart.h ****             UART_4,
  34:../libDaisy/src/per/uart.h ****             UART_5,
  35:../libDaisy/src/per/uart.h ****             USART_6,
  36:../libDaisy/src/per/uart.h ****             UART_7,
  37:../libDaisy/src/per/uart.h ****             UART_8,
  38:../libDaisy/src/per/uart.h ****             LPUART_1,
  39:../libDaisy/src/per/uart.h ****         };
  40:../libDaisy/src/per/uart.h **** 
  41:../libDaisy/src/per/uart.h ****         enum class StopBits
  42:../libDaisy/src/per/uart.h ****         {
  43:../libDaisy/src/per/uart.h ****             BITS_0_5,
  44:../libDaisy/src/per/uart.h ****             BITS_1,
  45:../libDaisy/src/per/uart.h ****             BITS_1_5,
  46:../libDaisy/src/per/uart.h ****             BITS_2,
  47:../libDaisy/src/per/uart.h ****         };
  48:../libDaisy/src/per/uart.h **** 
  49:../libDaisy/src/per/uart.h ****         enum class Parity
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 48


  50:../libDaisy/src/per/uart.h ****         {
  51:../libDaisy/src/per/uart.h ****             NONE,
  52:../libDaisy/src/per/uart.h ****             EVEN,
  53:../libDaisy/src/per/uart.h ****             ODD,
  54:../libDaisy/src/per/uart.h ****         };
  55:../libDaisy/src/per/uart.h **** 
  56:../libDaisy/src/per/uart.h ****         enum class Mode
  57:../libDaisy/src/per/uart.h ****         {
  58:../libDaisy/src/per/uart.h ****             RX,
  59:../libDaisy/src/per/uart.h ****             TX,
  60:../libDaisy/src/per/uart.h ****             TX_RX,
  61:../libDaisy/src/per/uart.h ****         };
  62:../libDaisy/src/per/uart.h **** 
  63:../libDaisy/src/per/uart.h ****         enum class WordLength
  64:../libDaisy/src/per/uart.h ****         {
  65:../libDaisy/src/per/uart.h ****             BITS_7,
  66:../libDaisy/src/per/uart.h ****             BITS_8,
  67:../libDaisy/src/per/uart.h ****             BITS_9,
  68:../libDaisy/src/per/uart.h ****         };
  69:../libDaisy/src/per/uart.h **** 
  70:../libDaisy/src/per/uart.h ****         struct
  71:../libDaisy/src/per/uart.h ****         {
  72:../libDaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  73:../libDaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  74:../libDaisy/src/per/uart.h ****         } pin_config;        /**< & */
  75:../libDaisy/src/per/uart.h **** 
  76:../libDaisy/src/per/uart.h ****         Config()
  77:../libDaisy/src/per/uart.h ****         {
  78:../libDaisy/src/per/uart.h ****             // user must init periph, pin_config, and mode
  79:../libDaisy/src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  80:../libDaisy/src/per/uart.h ****             parity     = Parity::NONE;
  81:../libDaisy/src/per/uart.h ****             wordlength = WordLength::BITS_8;
  82:../libDaisy/src/per/uart.h ****             baudrate   = 31250;
  83:../libDaisy/src/per/uart.h ****         }
  84:../libDaisy/src/per/uart.h **** 
  85:../libDaisy/src/per/uart.h ****         Peripheral periph;
  86:../libDaisy/src/per/uart.h ****         StopBits   stopbits;
  87:../libDaisy/src/per/uart.h ****         Parity     parity;
  88:../libDaisy/src/per/uart.h ****         Mode       mode;
  89:../libDaisy/src/per/uart.h ****         WordLength wordlength;
  90:../libDaisy/src/per/uart.h ****         uint32_t   baudrate;
  91:../libDaisy/src/per/uart.h ****     };
  92:../libDaisy/src/per/uart.h **** 
  93:../libDaisy/src/per/uart.h **** 
  94:../libDaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 628              		.loc 29 94 5 view .LVU143
 629              		.loc 29 94 5 is_stmt 0 view .LVU144
 630              	.LBE426:
 631              	.LBE425:
 632              	.LBE424:
 633              	.LBB431:
 634              	.LBI431:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 635              		.loc 6 18 5 is_stmt 1 view .LVU145
 636              	.LBB432:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 637              		.loc 6 18 17 is_stmt 0 view .LVU146
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 49


 638 0022 444B     		ldr	r3, .L12+16
 639              	.LBE432:
 640              	.LBE431:
 641              	.LBE453:
 642              	.LBE475:
 643              	.LBE479:
 644              	.LBE484:
  32:main.cpp      **** FIL file;
 645              		.loc 24 32 10 view .LVU147
 646 0024 2846     		mov	r0, r5
 647 0026 414A     		ldr	r2, .L12+8
 648              	.LBB485:
 649              	.LBB480:
 650              	.LBB476:
 651              	.LBB454:
 652              	.LBB435:
 653              	.LBB433:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 654              		.loc 6 18 17 view .LVU148
 655 0028 C5F83832 		str	r3, [r5, #568]
 656 002c 40F20F73 		movw	r3, #1807
 657              	.LBE433:
 658              	.LBE435:
 659              	.LBE454:
 660              	.LBE476:
 661              	.LBE480:
 662              	.LBE485:
  32:main.cpp      **** FIL file;
 663              		.loc 24 32 10 view .LVU149
 664 0030 4149     		ldr	r1, .L12+20
 665              	.LBB486:
 666              	.LBB481:
 667              	.LBB477:
 668              	.LBB455:
 669              	.LBB436:
 670              	.LBB434:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 671              		.loc 6 18 17 view .LVU150
 672 0032 A5F83C32 		strh	r3, [r5, #572]	@ movhi
 673              	.LVL17:
  18:../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 674              		.loc 6 18 17 view .LVU151
 675              	.LBE434:
 676              	.LBE436:
 677              	.LBB437:
 678              	.LBI437:
 299:../libDaisy/src/util/FIFO.h **** {
 300:../libDaisy/src/util/FIFO.h ****   public:
 301:../libDaisy/src/util/FIFO.h ****     /** Creates an empty FIFO */
 302:../libDaisy/src/util/FIFO.h ****     FIFO() : FIFOBase<T>(buffer_, capacity + 1) {}
 679              		.loc 5 302 5 is_stmt 1 view .LVU152
 680              	.LBB438:
 681              	.LBB439:
 682              	.LBI439:
  14:../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
 683              		.loc 5 14 5 view .LVU153
 684              	.LBB440:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 50


 685              	.LBB441:
  15:../libDaisy/src/util/FIFO.h ****     {
 686              		.loc 5 15 75 is_stmt 0 view .LVU154
 687 0036 05F51473 		add	r3, r5, #592
 688              	.LBE441:
 689              	.LBE440:
 690              	.LBE439:
 691              	.LBE438:
 692              	.LBE437:
 693              	.LBB450:
 694              	.LBB430:
 695              	.LBB429:
 696              	.LBB427:
 697              	.LBB428:
 698              		.loc 29 94 35 view .LVU155
 699 003a C5F89041 		str	r4, [r5, #400]
 700              	.LBE428:
 701              	.LBE427:
 702              	.LBE429:
 703              	.LBE430:
 704              	.LBE450:
 705              	.LBB451:
 706              	.LBB448:
 707              	.LBB446:
 708              	.LBB444:
 709              	.LBB442:
  15:../libDaisy/src/util/FIFO.h ****     {
 710              		.loc 5 15 75 view .LVU156
 711 003e C5F84032 		str	r3, [r5, #576]
 712 0042 40F20113 		movw	r3, #257
 713 0046 C5F84C42 		str	r4, [r5, #588]
 714              	.LVL18:
  15:../libDaisy/src/util/FIFO.h ****     {
 715              		.loc 5 15 75 view .LVU157
 716              	.LBE442:
 717              	.LBE444:
 718              	.LBE446:
 719              	.LBE448:
 720              	.LBE451:
 721              	.LBE455:
 722              	.LBE477:
 723              	.LBE481:
 724              	.LBE486:
 725              	.LBB487:
 726              	.LBB488:
 727              	.LBB489:
 728              		.file 30 "AudioFileManager.h"
   1:AudioFileManager.h **** #pragma once
   2:AudioFileManager.h **** #include <stdio.h>
   3:AudioFileManager.h **** #include <stdint.h>
   4:AudioFileManager.h **** #include <vector>
   5:AudioFileManager.h **** #include "daisy_pod.h"
   6:AudioFileManager.h **** #include "constants_utils.h"
   7:AudioFileManager.h **** #include "debug_print.h"
   8:AudioFileManager.h **** 
   9:AudioFileManager.h **** using namespace daisy; 
  10:AudioFileManager.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 51


  11:AudioFileManager.h **** class AudioFileManager {
  12:AudioFileManager.h ****   public:
  13:AudioFileManager.h ****     AudioFileManager(SdmmcHandler &sd, FatFSInterface &fsi, DaisyPod &pod, FIL *file)
  14:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
  15:AudioFileManager.h ****         left_buf_(nullptr), right_buf_(nullptr) {};
 729              		.loc 30 15 47 view .LVU158
 730 004a 3C4F     		ldr	r7, .L12+24
 731              	.LBE489:
 732              	.LBE488:
 733              	.LBE487:
 734              	.LBB494:
 735              	.LBB482:
 736              	.LBB478:
 737              	.LBB456:
 738              	.LBB452:
 739              	.LBB449:
 740              	.LBB447:
 741              	.LBB445:
 742              	.LBB443:
  15:../libDaisy/src/util/FIFO.h ****     {
 743              		.loc 5 15 75 view .LVU159
 744 004c C5E99134 		strd	r3, r4, [r5, #580]
 745              	.LBE443:
 746              	.LBE445:
 747              	.LBE447:
 748              	.LBE449:
 749              	.LBE452:
 750              	.LBE456:
 751              	.LBE478:
 752              	.LBE482:
 753              	.LBE494:
  32:main.cpp      **** FIL file;
 754              		.loc 24 32 10 view .LVU160
 755 0050 FFF7FEFF 		bl	__aeabi_atexit
 756              	.LVL19:
 757              	.LBB495:
 758              	.LBI495:
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 759              		.loc 1 38 5 is_stmt 1 view .LVU161
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 760              		.loc 1 38 5 is_stmt 0 view .LVU162
 761              	.LBE495:
  35:main.cpp      **** /* software classes to run app */
 762              		.loc 24 35 24 view .LVU163
 763 0054 354A     		ldr	r2, .L12+8
 764 0056 3A49     		ldr	r1, .L12+28
 765 0058 3A48     		ldr	r0, .L12+32
 766 005a FFF7FEFF 		bl	__aeabi_atexit
 767              	.LVL20:
 768              	.LBB496:
 769              	.LBI487:
  13:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
 770              		.loc 30 13 5 is_stmt 1 view .LVU164
 771              	.LBB492:
 772              	.LBB490:
 773              		.loc 30 15 47 is_stmt 0 view .LVU165
 774 005e 3A4B     		ldr	r3, .L12+36
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 52


 775 0060 BC61     		str	r4, [r7, #24]
 776              	.LVL21:
 777              		.loc 30 15 47 view .LVU166
 778              	.LBE490:
 779              	.LBE492:
 780              	.LBE496:
 781              	.LBB497:
 782              	.LBI497:
  11:GranularSynth.h ****   public:
  12:GranularSynth.h ****     GranularSynth(DaisyPod& pod) 
 783              		.loc 17 12 5 is_stmt 1 view .LVU167
 784              	.LBE497:
 785              	.LBB510:
 786              	.LBB493:
 787              	.LBB491:
 788              		.loc 30 15 47 is_stmt 0 view .LVU168
 789 0062 7E60     		str	r6, [r7, #4]
 790 0064 C7E90235 		strd	r3, r5, [r7, #8]
 791 0068 384B     		ldr	r3, .L12+40
 792 006a C7E90434 		strd	r3, r4, [r7, #16]
 793              	.LBE491:
 794              	.LBE493:
 795              	.LBE510:
 796              	.LBB511:
 797              	.LBB498:
 798              	.LBB499:
  13:GranularSynth.h ****       : pod_(pod), left_buf_(nullptr), right_buf_(nullptr), audio_len_(0),
  14:GranularSynth.h ****         grains_(){}
 799              		.loc 17 14 17 view .LVU169
 800 006e 384B     		ldr	r3, .L12+44
 801 0070 C3E90054 		strd	r5, r4, [r3]
 802 0074 C3E90244 		strd	r4, r4, [r3, #8]
 803              		.loc 17 14 17 is_stmt 1 view .LVU170
 804 0078 1424     		movs	r4, #20
 805              	.L10:
 806              	.LVL22:
 807              	.LBB500:
 808              	.LBI500:
 809              		.file 31 "Grain.h"
   1:Grain.h       **** #pragma once
   2:Grain.h       **** 
   3:Grain.h       **** #include "daisy_pod.h"
   4:Grain.h       **** #include "daisysp.h"
   5:Grain.h       **** #include "sample.h"
   6:Grain.h       **** #include "GrainPhasor.h"
   7:Grain.h       **** 
   8:Grain.h       **** using namespace daisy;
   9:Grain.h       **** using namespace daisysp;
  10:Grain.h       **** 
  11:Grain.h       **** class Grain {
  12:Grain.h       ****   public:
  13:Grain.h       ****     /// @brief Enum class to store references to differen types of amplitude envelope
  14:Grain.h       ****     enum class EnvelopeType {
  15:Grain.h       ****       /* basic linear fade out from start ie |\ */
  16:Grain.h       ****       LinearDecay,
  17:Grain.h       ****       /* No fade in or out */
  18:Grain.h       ****       Rectangular,
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 53


  19:Grain.h       ****       /* Simple fade out starting at phase=0.8f ie: |‾\  */
  20:Grain.h       ****       Decay,
  21:Grain.h       ****       /* Smooth symmetric increase/decrease
  22:Grain.h       ****         ie linear fade in and out: /\  */
  23:Grain.h       ****       Triangular,
  24:Grain.h       ****       /* smooth curve on/off, crosses 0 at both sides */
  25:Grain.h       ****       Hann,
  26:Grain.h       ****       // could add option for ADSR where user sets params? 
  27:Grain.h       ****     };
  28:Grain.h       **** 
  29:Grain.h       ****     Grain():
 810              		.loc 31 29 5 view .LVU171
 811              	.LBB501:
  30:Grain.h       ****       is_active_(false), envelope_type_(EnvelopeType::Decay){}
 812              		.loc 31 30 60 is_stmt 0 view .LVU172
 813 007a 0022     		movs	r2, #0
 814              	.LBB502:
 815              	.LBB503:
 816              		.file 32 "GrainPhasor.h"
   1:GrainPhasor.h **** #include "constants_utils.h"
   2:GrainPhasor.h **** class GrainPhasor {
   3:GrainPhasor.h ****   public:
   4:GrainPhasor.h ****     enum class Mode {
   5:GrainPhasor.h ****       OneShot,
   6:GrainPhasor.h ****       OneShotReverse,
   7:GrainPhasor.h ****       Cycle,
   8:GrainPhasor.h ****       PingPong,
   9:GrainPhasor.h ****     };
  10:GrainPhasor.h **** 
  11:GrainPhasor.h ****     GrainPhasor(): 
  12:GrainPhasor.h ****       phase_(0), increment_(0), mode_(Mode::OneShot), 
  13:GrainPhasor.h ****       direction_(1), grain_finished_(false) {};
 817              		.loc 32 13 43 view .LVU173
 818 007c 0021     		movs	r1, #0
 819              	.LBE503:
 820              	.LBE502:
 821              	.LBE501:
 822              	.LBE500:
 823              		.loc 17 14 17 view .LVU174
 824 007e 013C     		subs	r4, r4, #1
 825 0080 03F13003 		add	r3, r3, #48
 826              	.LVL23:
 827              	.LBB509:
 828              	.LBB508:
 829              		.loc 31 30 60 view .LVU175
 830 0084 03F8202C 		strb	r2, [r3, #-32]
 831              	.LVL24:
 832              	.LBB506:
 833              	.LBI502:
  11:GrainPhasor.h ****       phase_(0), increment_(0), mode_(Mode::OneShot), 
 834              		.loc 32 11 5 is_stmt 1 view .LVU176
 835              	.LBB504:
 836              		.loc 32 13 43 is_stmt 0 view .LVU177
 837 0088 43F81C1C 		str	r1, [r3, #-28]	@ float
 838 008c 43F8181C 		str	r1, [r3, #-24]	@ float
 839 0090 4FF00101 		mov	r1, #1
 840 0094 43F8142C 		str	r2, [r3, #-20]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 54


 841 0098 03F80C2C 		strb	r2, [r3, #-12]
 842              	.LVL25:
 843              		.loc 32 13 43 view .LVU178
 844              	.LBE504:
 845              	.LBE506:
 846              		.loc 31 30 60 view .LVU179
 847 009c 4FF00202 		mov	r2, #2
 848              	.LBB507:
 849              	.LBB505:
 850              		.loc 32 13 43 view .LVU180
 851 00a0 43F8101C 		str	r1, [r3, #-16]
 852              	.LBE505:
 853              	.LBE507:
 854              		.loc 31 30 60 view .LVU181
 855 00a4 DA60     		str	r2, [r3, #12]
 856              	.LVL26:
 857              		.loc 31 30 60 view .LVU182
 858              	.LBE508:
 859              	.LBE509:
 860              		.loc 17 14 17 is_stmt 1 view .LVU183
 861              		.loc 17 14 17 view .LVU184
 862 00a6 E8D1     		bne	.L10
 863              	.LVL27:
 864              		.loc 17 14 17 is_stmt 0 view .LVU185
 865              	.LBE499:
 866              	.LBE498:
 867              	.LBE511:
 868              	.LBB512:
 869              	.LBB513:
 870              	.LBB514:
  17:GrannyChordApp.h ****   public:
  18:GrannyChordApp.h ****   GrannyChordApp(DaisyPod& pod, GranularSynth& synth, AudioFileManager& filemgr, ReverbSc &reverb)
  19:GrannyChordApp.h ****         : pod_(pod), synth_(synth), 
  20:GrannyChordApp.h ****           filemgr_(filemgr), reverb_(reverb){
 871              		.loc 18 20 44 view .LVU186
 872 00a8 2A4E     		ldr	r6, .L12+48
 873              	.LBE514:
 874              	.LBE513:
 875              	.LBE512:
  38:main.cpp      **** GrannyChordApp app(pod, synth, filemgr, reverb);
 876              		.loc 24 38 22 view .LVU187
 877 00aa 204A     		ldr	r2, .L12+8
 878 00ac 2A49     		ldr	r1, .L12+52
 879 00ae 2848     		ldr	r0, .L12+44
 880 00b0 FFF7FEFF 		bl	__aeabi_atexit
 881              	.LVL28:
 882              	.LBB528:
 883              	.LBI512:
  18:GrannyChordApp.h ****         : pod_(pod), synth_(synth), 
 884              		.loc 18 18 3 is_stmt 1 view .LVU188
 885              	.LBB526:
 886              	.LBB524:
 887              	.LBB515:
 888              	.LBI515:
 889              		.file 33 "../libDaisy/src/util/CpuLoadMeter.h"
   1:../libDaisy/src/util/CpuLoadMeter.h **** #pragma once
   2:../libDaisy/src/util/CpuLoadMeter.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 55


   3:../libDaisy/src/util/CpuLoadMeter.h **** #include "sys/system.h"
   4:../libDaisy/src/util/CpuLoadMeter.h **** #include <cmath>
   5:../libDaisy/src/util/CpuLoadMeter.h **** 
   6:../libDaisy/src/util/CpuLoadMeter.h **** namespace daisy
   7:../libDaisy/src/util/CpuLoadMeter.h **** {
   8:../libDaisy/src/util/CpuLoadMeter.h **** /** @brief CPU load metering
   9:../libDaisy/src/util/CpuLoadMeter.h ****  *  @author jelliesen
  10:../libDaisy/src/util/CpuLoadMeter.h ****  *  @addtogroup utility
  11:../libDaisy/src/util/CpuLoadMeter.h ****  * 
  12:../libDaisy/src/util/CpuLoadMeter.h ****  *  To measure the CPU load of your audio processing, create a CpuLoadMeter
  13:../libDaisy/src/util/CpuLoadMeter.h ****  *  and initialize it with your block size and sample rate.
  14:../libDaisy/src/util/CpuLoadMeter.h ****  *  Then at the beginning of the audio callback, call `OnBlockStart()`, 
  15:../libDaisy/src/util/CpuLoadMeter.h ****  *  and at the end of the audio callback, call `OnBlockEnd()`.
  16:../libDaisy/src/util/CpuLoadMeter.h ****  *  You can then read out the minimum, maximum and average CPU load.
  17:../libDaisy/src/util/CpuLoadMeter.h ****  */
  18:../libDaisy/src/util/CpuLoadMeter.h **** class CpuLoadMeter
  19:../libDaisy/src/util/CpuLoadMeter.h **** {
  20:../libDaisy/src/util/CpuLoadMeter.h ****   public:
  21:../libDaisy/src/util/CpuLoadMeter.h ****     CpuLoadMeter(){};
 890              		.loc 33 21 5 view .LVU189
 891              		.loc 33 21 5 is_stmt 0 view .LVU190
 892              	.LBE515:
 893              		.loc 18 20 44 view .LVU191
 894 00b4 4FF48262 		mov	r2, #1040
 895 00b8 2549     		ldr	r1, .L12+44
 896 00ba 06F12000 		add	r0, r6, #32
 897 00be F561     		str	r5, [r6, #28]
 898 00c0 FFF7FEFF 		bl	memcpy
 899              	.LVL29:
 900 00c4 1F4B     		ldr	r3, .L12+32
 901              	.LBE524:
 902              	.LBE526:
 903              	.LBE528:
  39:main.cpp      **** 
 904              		.loc 24 39 16 view .LVU192
 905 00c6 3046     		mov	r0, r6
 906              	.LBB529:
 907              	.LBB527:
 908              	.LBB525:
 909              		.loc 18 20 44 view .LVU193
 910 00c8 C6F83074 		str	r7, [r6, #1072]
 911              	.LVL30:
 912              	.LBB516:
 913              	.LBI516:
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 914              		.loc 23 37 5 is_stmt 1 view .LVU194
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h ****     ~Compressor() {}
 915              		.loc 23 37 5 is_stmt 0 view .LVU195
 916              	.LBE516:
 917              		.loc 18 20 44 view .LVU196
 918 00cc C6F88834 		str	r3, [r6, #1160]
 919              	.LVL31:
 920              	.LBB517:
 921              	.LBI517:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 922              		.loc 22 22 5 is_stmt 1 view .LVU197
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 56


 923              		.loc 22 22 5 is_stmt 0 view .LVU198
 924              	.LBE517:
 925              	.LBB518:
 926              	.LBI518:
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 927              		.loc 21 29 5 is_stmt 1 view .LVU199
  29:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
 928              		.loc 21 29 5 is_stmt 0 view .LVU200
 929              	.LBE518:
 930              		.loc 18 20 44 view .LVU201
 931 00d0 06F50043 		add	r3, r6, #32768
 932 00d4 C6F8EC44 		str	r4, [r6, #1260]
 933 00d8 83F82448 		strb	r4, [r3, #2084]
 934 00dc C3F82848 		str	r4, [r3, #2088]
 935 00e0 83F82C48 		strb	r4, [r3, #2092]
 936 00e4 C3F83048 		str	r4, [r3, #2096]
 937 00e8 C3F83448 		str	r4, [r3, #2100]
 938              	.LBB519:
 939              	.LBB520:
 940              	.LBB521:
  97:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 941              		.loc 19 97 35 view .LVU202
 942 00ec C3F84048 		str	r4, [r3, #2112]
 943              	.LBE521:
 944              	.LBE520:
 945              	.LBE519:
 946              		.loc 18 20 44 view .LVU203
 947 00f0 C3F84448 		str	r4, [r3, #2116]
 948 00f4 C3F84848 		str	r4, [r3, #2120]
 949 00f8 C3F84C48 		str	r4, [r3, #2124]
 950 00fc C3F85048 		str	r4, [r3, #2128]
 951 0100 C3F85448 		str	r4, [r3, #2132]
 952 0104 C3F85848 		str	r4, [r3, #2136]
 953 0108 C3F85C48 		str	r4, [r3, #2140]
  21:GrannyChordApp.h ****             instance_ = this;
 954              		.loc 18 21 23 view .LVU204
 955 010c 134B     		ldr	r3, .L12+56
  20:GrannyChordApp.h ****             instance_ = this;
 956              		.loc 18 20 44 view .LVU205
 957 010e C6F8F044 		str	r4, [r6, #1264]
 958 0112 C6F8F444 		str	r4, [r6, #1268]
 959              	.LVL32:
 960              	.LBB522:
 961              	.LBI522:
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 962              		.loc 20 36 5 is_stmt 1 view .LVU206
  36:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
 963              		.loc 20 36 5 is_stmt 0 view .LVU207
 964              	.LBE522:
 965              	.LBB523:
 966              	.LBI519:
  97:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 967              		.loc 19 97 5 is_stmt 1 view .LVU208
  97:../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 968              		.loc 19 97 5 is_stmt 0 view .LVU209
 969              	.LBE523:
 970              		.loc 18 21 13 is_stmt 1 view .LVU210
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 57


 971              		.loc 18 21 23 is_stmt 0 view .LVU211
 972 0116 1E60     		str	r6, [r3]
 973              	.LVL33:
 974              		.loc 18 21 23 view .LVU212
 975              	.LBE525:
 976              	.LBE527:
 977              	.LBE529:
  39:main.cpp      **** 
 978              		.loc 24 39 16 view .LVU213
 979 0118 044A     		ldr	r2, .L12+8
 980 011a 1149     		ldr	r1, .L12+60
 981              	.LBE530:
 982              	.LBE532:
 983              		.loc 24 51 1 view .LVU214
 984 011c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 985              		.cfi_restore 14
 986              		.cfi_restore 7
 987              		.cfi_restore 6
 988              		.cfi_restore 5
 989              		.cfi_restore 4
 990              		.cfi_restore 3
 991              		.cfi_def_cfa_offset 0
 992              	.LBB533:
 993              	.LBB531:
  39:main.cpp      **** 
 994              		.loc 24 39 16 view .LVU215
 995 0120 FFF7FEBF 		b	__aeabi_atexit
 996              	.LVL34:
 997              	.L13:
 998              		.align	2
 999              	.L12:
 1000 0124 00000000 		.word	.LANCHOR0
 1001 0128 00000000 		.word	pod
 1002 012c 00000000 		.word	__dso_handle
 1003 0130 00000000 		.word	_ZN5daisy12SdmmcHandlerD1Ev
 1004 0134 0080707F 		.word	2138079232
 1005 0138 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 1006 013c 00000000 		.word	filemgr
 1007 0140 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
 1008 0144 00000000 		.word	reverb
 1009 0148 00000000 		.word	.LANCHOR1
 1010 014c 00000000 		.word	.LANCHOR2
 1011 0150 00000000 		.word	.LANCHOR3
 1012 0154 00000000 		.word	app
 1013 0158 00000000 		.word	_ZN13GranularSynthD1Ev
 1014 015c 00000000 		.word	_ZN14GrannyChordApp9instance_E
 1015 0160 00000000 		.word	_ZN14GrannyChordAppD1Ev
 1016              	.LBE531:
 1017              	.LBE533:
 1018              		.cfi_endproc
 1019              	.LFE5497:
 1021              		.section	.init_array,"aw",%init_array
 1022              		.align	2
 1023 0000 00000000 		.word	_GLOBAL__sub_I_left_buf(target1)
 1024              		.global	rng_state
 1025              		.global	app
 1026              		.global	filemgr
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 58


 1027              		.global	reverb
 1028              		.global	file
 1029              		.global	pod
 1030              		.global	fsi
 1031              		.global	sd
 1032              		.global	temp_buf
 1033              		.global	right_buf
 1034              		.global	left_buf
 1035              		.section	.bss._ZL5synth,"aw",%nobits
 1036              		.align	2
 1037              		.set	.LANCHOR3,. + 0
 1040              	_ZL5synth:
 1041 0000 00000000 		.space	1040
 1041      00000000 
 1041      00000000 
 1041      00000000 
 1041      00000000 
 1042              		.section	.bss.app,"aw",%nobits
 1043              		.align	2
 1046              	app:
 1047 0000 00000000 		.space	34912
 1047      00000000 
 1047      00000000 
 1047      00000000 
 1047      00000000 
 1048              		.section	.bss.file,"aw",%nobits
 1049              		.align	2
 1050              		.set	.LANCHOR2,. + 0
 1053              	file:
 1054 0000 00000000 		.space	556
 1054      00000000 
 1054      00000000 
 1054      00000000 
 1054      00000000 
 1055              		.section	.bss.filemgr,"aw",%nobits
 1056              		.align	2
 1059              	filemgr:
 1060 0000 00000000 		.space	4148
 1060      00000000 
 1060      00000000 
 1060      00000000 
 1060      00000000 
 1061              		.section	.bss.fsi,"aw",%nobits
 1062              		.align	2
 1063              		.set	.LANCHOR1,. + 0
 1066              	fsi:
 1067 0000 00000000 		.space	1152
 1067      00000000 
 1067      00000000 
 1067      00000000 
 1067      00000000 
 1068              		.section	.bss.pod,"aw",%nobits
 1069              		.align	2
 1072              	pod:
 1073 0000 00000000 		.space	37600
 1073      00000000 
 1073      00000000 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 59


 1073      00000000 
 1073      00000000 
 1074              		.section	.bss.rng_state,"aw",%nobits
 1075              		.align	2
 1078              	rng_state:
 1079 0000 00000000 		.space	4
 1080              		.section	.bss.sd,"aw",%nobits
 1081              		.set	.LANCHOR0,. + 0
 1084              	sd:
 1085 0000 00       		.space	1
 1086              		.section	.sdram_bss,"aw"
 1087              		.align	4
 1090              	reverb:
 1091 0000 00000000 		.space	396104
 1091      00000000 
 1091      00000000 
 1091      00000000 
 1091      00000000 
 1092 60b48 00000000 		.space	8
 1092      00000000 
 1095              	temp_buf:
 1096 60b50 00000000 		.space	32768
 1096      00000000 
 1096      00000000 
 1096      00000000 
 1096      00000000 
 1099              	right_buf:
 1100 68b50 00000000 		.space	16777216
 1100      00000000 
 1100      00000000 
 1100      00000000 
 1100      00000000 
 1103              	left_buf:
 1104 1068b50 00000000 		.space	16777216
 1104      00000000 
 1104      00000000 
 1104      00000000 
 1104      00000000 
 1105              		.text
 1106              	.Letext0:
 1107              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1108              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1109              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1110              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1111              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1112              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1113              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1114              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1115              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1116              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1117              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1118              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 1119              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1120              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1121              		.file 48 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 1122              		.file 49 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1123              		.file 50 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 60


 1124              		.file 51 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 1125              		.file 52 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1126              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1127              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 1128              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1129              		.file 56 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1130              		.file 57 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1131              		.file 58 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1132              		.file 59 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1133              		.file 60 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1134              		.file 61 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1135              		.file 62 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1136              		.file 63 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1137              		.file 64 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1138              		.file 65 "../DaisySP/Source/Control/adenv.h"
 1139              		.file 66 "../DaisySP/Source/Utility/dsp.h"
 1140              		.file 67 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 1141              		.file 68 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/time.h"
 1142              		.file 69 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 1143              		.file 70 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1144              		.file 71 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1145              		.file 72 "../libDaisy/src/daisy_core.h"
 1146              		.file 73 "../libDaisy/src/hid/MidiEvent.h"
 1147              		.file 74 "../libDaisy/src/hid/logger_impl.h"
 1148              		.file 75 "../libDaisy/src/util/wav_format.h"
 1149              		.file 76 "../libDaisy/src/util/color.h"
 1150              		.file 77 "../libDaisy/src/dev/max11300.h"
 1151              		.file 78 "../libDaisy/src/hid/logger.h"
 1152              		.file 79 "../libDaisy/src/per/gpio.h"
 1153              		.file 80 "../libDaisy/src/dev/sdram.h"
 1154              		.file 81 "../libDaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 1155              		.file 82 "../libDaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 1156              		.file 83 "constants_utils.h"
 1157              		.file 84 "../libDaisy/src/dev/sr_595.h"
 1158              		.file 85 "sample.h"
 1159              		.file 86 "AppState.h"
 1160              		.file 87 "<built-in>"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:19     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:25     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:25     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:42     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:48     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:48     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:65     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:71     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:71     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:215    .text._ZN13GranularSynthD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:221    .text._ZN13GranularSynthD2Ev:0000000000000000 _ZN13GranularSynthD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:238    .text._ZN14GrannyChordAppD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:244    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:244    .text._ZN14GrannyChordAppD2Ev:0000000000000000 _ZN14GrannyChordAppD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:299    .text.startup.main:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:305    .text.startup.main:0000000000000000 main
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:368    .text.startup.main:000000000000002c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1072   .bss.pod:0000000000000000 pod
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1095   .sdram_bss:0000000000060b50 temp_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1099   .sdram_bss:0000000000068b50 right_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1103   .sdram_bss:0000000001068b50 left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1046   .bss.app:0000000000000000 app
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:378    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:383    .text.startup._GLOBAL__sub_I_left_buf:0000000000000000 _GLOBAL__sub_I_left_buf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1000   .text.startup._GLOBAL__sub_I_left_buf:0000000000000124 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1059   .bss.filemgr:0000000000000000 filemgr
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1090   .sdram_bss:0000000000000000 reverb
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1022   .init_array:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1078   .bss.rng_state:0000000000000000 rng_state
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1053   .bss.file:0000000000000000 file
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1066   .bss.fsi:0000000000000000 fsi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1084   .bss.sd:0000000000000000 sd
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1036   .bss._ZL5synth:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1040   .bss._ZL5synth:0000000000000000 _ZL5synth
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1043   .bss.app:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1049   .bss.file:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1056   .bss.filemgr:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1062   .bss.fsi:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1069   .bss.pod:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1075   .bss.rng_state:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1085   .bss.sd:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s:1087   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN7daisysp8ReverbScD5Ev
                           .group:0000000000000000 _ZN5daisy12SdmmcHandlerD5Ev
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev
                           .group:0000000000000000 _ZN13GranularSynthD5Ev
                           .group:0000000000000000 _ZN14GrannyChordAppD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN14GrannyChordApp4InitEPsS0_S0_
_ZN14GrannyChordApp3RunEv
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccpc4MXq.s 			page 62


__aeabi_atexit
_ZN5daisy17MidiUartTransport6ConfigC1Ev
memcpy
__dso_handle
_ZN14GrannyChordApp9instance_E

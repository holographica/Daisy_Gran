ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"GrannyChordApp.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZSt3absf,"axG",%progbits,_ZSt3absf,comdat
  19              		.align	1
  20              		.weak	_ZSt3absf
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZSt3absf:
  26              	.LFB141:
  27              		.file 1 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  */
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 2


  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #pragma GCC system_header
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** # include_next <math.h>
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #endif
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #undef abs
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** extern "C++"
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** {
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** {
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   using ::abs;
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline long
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #endif
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline long long
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #endif
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(double __x)
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(float __x)
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
  28              		.loc 1 76 3
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 3


  40 0006 87ED010A 		vstr.32	s0, [r7, #4]
  41              		.loc 1 76 31
  42 000a D7ED017A 		vldr.32	s15, [r7, #4]
  43 000e F0EEE77A 		vabs.f32	s15, s15
  44              		.loc 1 76 34
  45 0012 B0EE670A 		vmov.f32	s0, s15
  46 0016 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0018 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 001a 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 001e 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE141:
  58              		.section	.rodata._ZStL19piecewise_construct,"a"
  59              		.align	2
  62              	_ZStL19piecewise_construct:
  63 0000 00       		.space	1
  64              		.section	.text._ZNK5daisy6Switch11FallingEdgeEv,"axG",%progbits,_ZNK5daisy6Switch11FallingEdgeEv,c
  65              		.align	1
  66              		.weak	_ZNK5daisy6Switch11FallingEdgeEv
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	_ZNK5daisy6Switch11FallingEdgeEv:
  72              	.LFB1643:
  73              		.file 2 "../libDaisy/src/hid/switch.h"
   1:../libDaisy/src/hid/switch.h **** #pragma once
   2:../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libDaisy/src/hid/switch.h **** 
   8:../libDaisy/src/hid/switch.h **** namespace daisy
   9:../libDaisy/src/hid/switch.h **** {
  10:../libDaisy/src/hid/switch.h **** /** 
  11:../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../libDaisy/src/hid/switch.h **** */
  17:../libDaisy/src/hid/switch.h **** class Switch
  18:../libDaisy/src/hid/switch.h **** {
  19:../libDaisy/src/hid/switch.h ****   public:
  20:../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libDaisy/src/hid/switch.h ****     enum Type
  22:../libDaisy/src/hid/switch.h ****     {
  23:../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libDaisy/src/hid/switch.h ****     };
  26:../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libDaisy/src/hid/switch.h ****     enum Polarity
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 4


  28:../libDaisy/src/hid/switch.h ****     {
  29:../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libDaisy/src/hid/switch.h ****     };
  32:../libDaisy/src/hid/switch.h **** 
  33:../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libDaisy/src/hid/switch.h ****     enum Pull
  35:../libDaisy/src/hid/switch.h ****     {
  36:../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libDaisy/src/hid/switch.h ****     };
  40:../libDaisy/src/hid/switch.h **** 
  41:../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../libDaisy/src/hid/switch.h ****     ~Switch() {}
  43:../libDaisy/src/hid/switch.h **** 
  44:../libDaisy/src/hid/switch.h ****     /** 
  45:../libDaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../libDaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../libDaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../libDaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../libDaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../libDaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../libDaisy/src/hid/switch.h ****     */
  52:../libDaisy/src/hid/switch.h ****     void
  53:../libDaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../libDaisy/src/hid/switch.h **** 
  55:../libDaisy/src/hid/switch.h ****     /**
  56:../libDaisy/src/hid/switch.h ****        Simplified Init.
  57:../libDaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../libDaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../libDaisy/src/hid/switch.h ****     */
  60:../libDaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../libDaisy/src/hid/switch.h **** 
  62:../libDaisy/src/hid/switch.h ****     /** 
  63:../libDaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../libDaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../libDaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../libDaisy/src/hid/switch.h ****     */
  67:../libDaisy/src/hid/switch.h ****     void Debounce();
  68:../libDaisy/src/hid/switch.h **** 
  69:../libDaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../libDaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  71:../libDaisy/src/hid/switch.h **** 
  72:../libDaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  73:../libDaisy/src/hid/switch.h ****     inline bool FallingEdge() const
  74              		.loc 2 73 17
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 0002 83B0     		sub	sp, sp, #12
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 5


  85              		.cfi_def_cfa_register 7
  86 0006 7860     		str	r0, [r7, #4]
  74:../libDaisy/src/hid/switch.h ****     {
  75:../libDaisy/src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  87              		.loc 2 75 16
  88 0008 7B68     		ldr	r3, [r7, #4]
  89 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  90              		.loc 2 75 25
  91 000c 002B     		cmp	r3, #0
  92 000e 07D0     		beq	.L4
  93              		.loc 2 75 27 discriminator 1
  94 0010 7B68     		ldr	r3, [r7, #4]
  95 0012 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  96              		.loc 2 75 25 discriminator 1
  97 0014 802B     		cmp	r3, #128
  98 0016 0CBF     		ite	eq
  99 0018 0123     		moveq	r3, #1
 100 001a 0023     		movne	r3, #0
 101 001c DBB2     		uxtb	r3, r3
 102 001e 00E0     		b	.L5
 103              	.L4:
 104              		.loc 2 75 25 is_stmt 0 discriminator 2
 105 0020 0023     		movs	r3, #0
 106              	.L5:
  76:../libDaisy/src/hid/switch.h ****     }
 107              		.loc 2 76 5 is_stmt 1 discriminator 4
 108 0022 1846     		mov	r0, r3
 109 0024 0C37     		adds	r7, r7, #12
 110              		.cfi_def_cfa_offset 4
 111 0026 BD46     		mov	sp, r7
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 0028 5DF8047B 		ldr	r7, [sp], #4
 115              		.cfi_restore 7
 116              		.cfi_def_cfa_offset 0
 117 002c 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE1643:
 121              		.section	.text._ZNK5daisy6Switch7PressedEv,"axG",%progbits,_ZNK5daisy6Switch7PressedEv,comdat
 122              		.align	1
 123              		.weak	_ZNK5daisy6Switch7PressedEv
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 128              	_ZNK5daisy6Switch7PressedEv:
 129              	.LFB1644:
  77:../libDaisy/src/hid/switch.h **** 
  78:../libDaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../libDaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 130              		.loc 2 79 17
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 80B4     		push	{r7}
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 6


 138 0002 83B0     		sub	sp, sp, #12
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 142 0006 7860     		str	r0, [r7, #4]
 143              		.loc 2 79 42
 144 0008 7B68     		ldr	r3, [r7, #4]
 145 000a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 146              		.loc 2 79 52
 147 000c FF2B     		cmp	r3, #255
 148 000e 0CBF     		ite	eq
 149 0010 0123     		moveq	r3, #1
 150 0012 0023     		movne	r3, #0
 151 0014 DBB2     		uxtb	r3, r3
 152              		.loc 2 79 58
 153 0016 1846     		mov	r0, r3
 154 0018 0C37     		adds	r7, r7, #12
 155              		.cfi_def_cfa_offset 4
 156 001a BD46     		mov	sp, r7
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 001c 5DF8047B 		ldr	r7, [sp], #4
 160              		.cfi_restore 7
 161              		.cfi_def_cfa_offset 0
 162 0020 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE1644:
 166              		.section	.text._ZNK5daisy6Switch10TimeHeldMsEv,"axG",%progbits,_ZNK5daisy6Switch10TimeHeldMsEv,com
 167              		.align	1
 168              		.weak	_ZNK5daisy6Switch10TimeHeldMsEv
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	_ZNK5daisy6Switch10TimeHeldMsEv:
 174              	.LFB1646:
  80:../libDaisy/src/hid/switch.h **** 
  81:../libDaisy/src/hid/switch.h ****     /** \return true if the button is held down, without debouncing */
  82:../libDaisy/src/hid/switch.h ****     inline bool RawState()
  83:../libDaisy/src/hid/switch.h ****     {
  84:../libDaisy/src/hid/switch.h ****         return flip_ ? !dsy_gpio_read(&hw_gpio_) : dsy_gpio_read(&hw_gpio_);
  85:../libDaisy/src/hid/switch.h ****     }
  86:../libDaisy/src/hid/switch.h **** 
  87:../libDaisy/src/hid/switch.h ****     /** \return the time in milliseconds that the button has been held (or toggle has been on) */
  88:../libDaisy/src/hid/switch.h ****     inline float TimeHeldMs() const
 175              		.loc 2 88 18
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
 184              		.cfi_def_cfa_offset 16
 185 0004 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 187 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 7


  89:../libDaisy/src/hid/switch.h ****     {
  90:../libDaisy/src/hid/switch.h ****         return Pressed() ? System::GetNow() - rising_edge_time_ : 0;
 188              		.loc 2 90 23
 189 0008 7868     		ldr	r0, [r7, #4]
 190 000a FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 191 000e 0346     		mov	r3, r0
 192              		.loc 2 90 26
 193 0010 002B     		cmp	r3, #0
 194 0012 0BD0     		beq	.L10
 195              		.loc 2 90 42 discriminator 1
 196 0014 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 197 0018 07EE900A 		vmov	s15, r0	@ int
 198              		.loc 2 90 45 discriminator 1
 199 001c B8EE677A 		vcvt.f32.u32	s14, s15
 200              		.loc 2 90 47 discriminator 1
 201 0020 7B68     		ldr	r3, [r7, #4]
 202 0022 D3ED037A 		vldr.32	s15, [r3, #12]
 203              		.loc 2 90 26 discriminator 1
 204 0026 77EE677A 		vsub.f32	s15, s14, s15
 205              		.loc 2 90 67 discriminator 1
 206 002a 01E0     		b	.L12
 207              	.L10:
 208              		.loc 2 90 26 discriminator 2
 209 002c DFED037A 		vldr.32	s15, .L13
 210              	.L12:
  91:../libDaisy/src/hid/switch.h ****     }
 211              		.loc 2 91 5 discriminator 5
 212 0030 B0EE670A 		vmov.f32	s0, s15
 213 0034 0837     		adds	r7, r7, #8
 214              		.cfi_def_cfa_offset 8
 215 0036 BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 0038 80BD     		pop	{r7, pc}
 219              	.L14:
 220 003a 00BF     		.align	2
 221              	.L13:
 222 003c 00000000 		.word	0
 223              		.cfi_endproc
 224              	.LFE1646:
 226              		.section	.text._ZNK5daisy7Encoder9IncrementEv,"axG",%progbits,_ZNK5daisy7Encoder9IncrementEv,comda
 227              		.align	1
 228              		.weak	_ZNK5daisy7Encoder9IncrementEv
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	_ZNK5daisy7Encoder9IncrementEv:
 234              	.LFB1654:
 235              		.file 3 "../libDaisy/src/hid/encoder.h"
   1:../libDaisy/src/hid/encoder.h **** #pragma once
   2:../libDaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../libDaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../libDaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../libDaisy/src/hid/encoder.h **** 
   8:../libDaisy/src/hid/encoder.h **** namespace daisy
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 8


   9:../libDaisy/src/hid/encoder.h **** {
  10:../libDaisy/src/hid/encoder.h **** /** 
  11:../libDaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../libDaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../libDaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/encoder.h ****     @date December 2019
  15:../libDaisy/src/hid/encoder.h ****     @ingroup controls
  16:../libDaisy/src/hid/encoder.h **** */
  17:../libDaisy/src/hid/encoder.h **** class Encoder
  18:../libDaisy/src/hid/encoder.h **** {
  19:../libDaisy/src/hid/encoder.h ****   public:
  20:../libDaisy/src/hid/encoder.h ****     Encoder() {}
  21:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
  22:../libDaisy/src/hid/encoder.h **** 
  23:../libDaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../libDaisy/src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../libDaisy/src/hid/encoder.h ****      */
  26:../libDaisy/src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../libDaisy/src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../libDaisy/src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../libDaisy/src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../libDaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../libDaisy/src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../libDaisy/src/hid/encoder.h ****      */
  33:../libDaisy/src/hid/encoder.h ****     void Debounce();
  34:../libDaisy/src/hid/encoder.h **** 
  35:../libDaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../libDaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 236              		.loc 3 36 20
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241 0000 80B4     		push	{r7}
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 83B0     		sub	sp, sp, #12
 245              		.cfi_def_cfa_offset 16
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 249              		.loc 3 36 47
 250 0008 7B68     		ldr	r3, [r7, #4]
 251 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 252              		.loc 3 36 56
 253 000c 002B     		cmp	r3, #0
 254 000e 02D0     		beq	.L16
 255              		.loc 3 36 56 is_stmt 0 discriminator 1
 256 0010 7B68     		ldr	r3, [r7, #4]
 257 0012 5B6A     		ldr	r3, [r3, #36]
 258              		.loc 3 36 65 is_stmt 1 discriminator 1
 259 0014 00E0     		b	.L18
 260              	.L16:
 261              		.loc 3 36 56 discriminator 2
 262 0016 0023     		movs	r3, #0
 263              	.L18:
 264              		.loc 3 36 68 discriminator 5
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 9


 265 0018 1846     		mov	r0, r3
 266 001a 0C37     		adds	r7, r7, #12
 267              		.cfi_def_cfa_offset 4
 268 001c BD46     		mov	sp, r7
 269              		.cfi_def_cfa_register 13
 270              		@ sp needed
 271 001e 5DF8047B 		ldr	r7, [sp], #4
 272              		.cfi_restore 7
 273              		.cfi_def_cfa_offset 0
 274 0022 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE1654:
 278              		.section	.text._ZNK5daisy7Encoder11FallingEdgeEv,"axG",%progbits,_ZNK5daisy7Encoder11FallingEdgeEv
 279              		.align	1
 280              		.weak	_ZNK5daisy7Encoder11FallingEdgeEv
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	_ZNK5daisy7Encoder11FallingEdgeEv:
 286              	.LFB1656:
  37:../libDaisy/src/hid/encoder.h **** 
  38:../libDaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../libDaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
  40:../libDaisy/src/hid/encoder.h **** 
  41:../libDaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just released. */
  42:../libDaisy/src/hid/encoder.h ****     inline bool FallingEdge() const { return sw_.FallingEdge(); }
 287              		.loc 3 42 17
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291 0000 80B5     		push	{r7, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0002 82B0     		sub	sp, sp, #8
 296              		.cfi_def_cfa_offset 16
 297 0004 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
 299 0006 7860     		str	r0, [r7, #4]
 300              		.loc 3 42 61
 301 0008 7B68     		ldr	r3, [r7, #4]
 302 000a 0833     		adds	r3, r3, #8
 303 000c 1846     		mov	r0, r3
 304 000e FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 305 0012 0346     		mov	r3, r0
 306              		.loc 3 42 65
 307 0014 1846     		mov	r0, r3
 308 0016 0837     		adds	r7, r7, #8
 309              		.cfi_def_cfa_offset 8
 310 0018 BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 001a 80BD     		pop	{r7, pc}
 314              		.cfi_endproc
 315              	.LFE1656:
 317              		.section	.text._ZNK5daisy7Encoder10TimeHeldMsEv,"axG",%progbits,_ZNK5daisy7Encoder10TimeHeldMsEv,c
 318              		.align	1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 10


 319              		.weak	_ZNK5daisy7Encoder10TimeHeldMsEv
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	_ZNK5daisy7Encoder10TimeHeldMsEv:
 325              	.LFB1658:
  43:../libDaisy/src/hid/encoder.h **** 
  44:../libDaisy/src/hid/encoder.h ****     /** Returns true while the encoder is held down.*/
  45:../libDaisy/src/hid/encoder.h ****     inline bool Pressed() const { return sw_.Pressed(); }
  46:../libDaisy/src/hid/encoder.h **** 
  47:../libDaisy/src/hid/encoder.h ****     /** Returns the time in milliseconds that the encoder has been held down. */
  48:../libDaisy/src/hid/encoder.h ****     inline float TimeHeldMs() const { return sw_.TimeHeldMs(); }
 326              		.loc 3 48 18
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 82B0     		sub	sp, sp, #8
 335              		.cfi_def_cfa_offset 16
 336 0004 00AF     		add	r7, sp, #0
 337              		.cfi_def_cfa_register 7
 338 0006 7860     		str	r0, [r7, #4]
 339              		.loc 3 48 60
 340 0008 7B68     		ldr	r3, [r7, #4]
 341 000a 0833     		adds	r3, r3, #8
 342 000c 1846     		mov	r0, r3
 343 000e FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 344 0012 F0EE407A 		vmov.f32	s15, s0
 345              		.loc 3 48 64
 346 0016 B0EE670A 		vmov.f32	s0, s15
 347 001a 0837     		adds	r7, r7, #8
 348              		.cfi_def_cfa_offset 8
 349 001c BD46     		mov	sp, r7
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 001e 80BD     		pop	{r7, pc}
 353              		.cfi_endproc
 354              	.LFE1658:
 356              		.section	.rodata._ZN5daisyL15kWavFileChunkIdE,"a"
 357              		.align	2
 360              	_ZN5daisyL15kWavFileChunkIdE:
 361 0000 52494646 		.word	1179011410
 362              		.section	.rodata._ZN5daisyL14kWavFileWaveIdE,"a"
 363              		.align	2
 366              	_ZN5daisyL14kWavFileWaveIdE:
 367 0000 57415645 		.word	1163280727
 368              		.section	.rodata._ZN5daisyL19kWavFileSubChunk1IdE,"a"
 369              		.align	2
 372              	_ZN5daisyL19kWavFileSubChunk1IdE:
 373 0000 666D7420 		.word	544501094
 374              		.section	.rodata._ZN5daisyL19kWavFileSubChunk2IdE,"a"
 375              		.align	2
 378              	_ZN5daisyL19kWavFileSubChunk2IdE:
 379 0000 64617461 		.word	1635017060
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 11


 380              		.section	.text._ZN5daisy5ColorD2Ev,"axG",%progbits,_ZN5daisy5ColorD5Ev,comdat
 381              		.align	1
 382              		.weak	_ZN5daisy5ColorD2Ev
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 387              	_ZN5daisy5ColorD2Ev:
 388              	.LFB1852:
 389              		.file 4 "../libDaisy/src/util/color.h"
   1:../libDaisy/src/util/color.h **** /* 
   2:../libDaisy/src/util/color.h **** TODO:
   3:../libDaisy/src/util/color.h **** - Add Blend(), Scale(), etc.
   4:../libDaisy/src/util/color.h **** - I'd also like to change the way the Color names are accessed.
   5:../libDaisy/src/util/color.h **** */
   6:../libDaisy/src/util/color.h **** /**        I'd like for it to be easy and not `Color::PresetColor::Foo`
   7:../libDaisy/src/util/color.h **** */
   8:../libDaisy/src/util/color.h **** /** - There's no way to change a color once its been created (without unintuitively reiniting it).
   9:../libDaisy/src/util/color.h **** */
  10:../libDaisy/src/util/color.h **** #pragma once
  11:../libDaisy/src/util/color.h **** #ifndef DSY_COLOR_H
  12:../libDaisy/src/util/color.h **** #define DSY_COLOR_H
  13:../libDaisy/src/util/color.h **** #include <stdint.h>
  14:../libDaisy/src/util/color.h **** 
  15:../libDaisy/src/util/color.h **** 
  16:../libDaisy/src/util/color.h **** namespace daisy
  17:../libDaisy/src/util/color.h **** {
  18:../libDaisy/src/util/color.h **** /** @addtogroup utility
  19:../libDaisy/src/util/color.h ****     @{
  20:../libDaisy/src/util/color.h **** */
  21:../libDaisy/src/util/color.h **** 
  22:../libDaisy/src/util/color.h **** /** Class for handling simple colors */
  23:../libDaisy/src/util/color.h **** class Color
  24:../libDaisy/src/util/color.h **** {
  25:../libDaisy/src/util/color.h ****   public:
  26:../libDaisy/src/util/color.h ****     Color() {}
  27:../libDaisy/src/util/color.h ****     ~Color() {}
 390              		.loc 4 27 5
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 8
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395 0000 80B4     		push	{r7}
 396              		.cfi_def_cfa_offset 4
 397              		.cfi_offset 7, -4
 398 0002 83B0     		sub	sp, sp, #12
 399              		.cfi_def_cfa_offset 16
 400 0004 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 402 0006 7860     		str	r0, [r7, #4]
 403              		.loc 4 27 15
 404 0008 7B68     		ldr	r3, [r7, #4]
 405 000a 1846     		mov	r0, r3
 406 000c 0C37     		adds	r7, r7, #12
 407              		.cfi_def_cfa_offset 4
 408 000e BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 12


 411 0010 5DF8047B 		ldr	r7, [sp], #4
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0014 7047     		bx	lr
 415              		.cfi_endproc
 416              	.LFE1852:
 418              		.weak	_ZN5daisy5ColorD1Ev
 419              		.thumb_set _ZN5daisy5ColorD1Ev,_ZN5daisy5ColorD2Ev
 420              		.section	.rodata._ZL19kMaxSr595DaisyChain,"a"
 421              		.align	2
 424              	_ZL19kMaxSr595DaisyChain:
 425 0000 10000000 		.word	16
 426              		.section	.text._ZN5daisy12CpuLoadMeter12OnBlockStartEv,"axG",%progbits,_ZN5daisy12CpuLoadMeter12On
 427              		.align	1
 428              		.weak	_ZN5daisy12CpuLoadMeter12OnBlockStartEv
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 433              	_ZN5daisy12CpuLoadMeter12OnBlockStartEv:
 434              	.LFB2501:
 435              		.file 5 "../libDaisy/src/util/CpuLoadMeter.h"
   1:../libDaisy/src/util/CpuLoadMeter.h **** #pragma once
   2:../libDaisy/src/util/CpuLoadMeter.h **** 
   3:../libDaisy/src/util/CpuLoadMeter.h **** #include "sys/system.h"
   4:../libDaisy/src/util/CpuLoadMeter.h **** #include <cmath>
   5:../libDaisy/src/util/CpuLoadMeter.h **** 
   6:../libDaisy/src/util/CpuLoadMeter.h **** namespace daisy
   7:../libDaisy/src/util/CpuLoadMeter.h **** {
   8:../libDaisy/src/util/CpuLoadMeter.h **** /** @brief CPU load metering
   9:../libDaisy/src/util/CpuLoadMeter.h ****  *  @author jelliesen
  10:../libDaisy/src/util/CpuLoadMeter.h ****  *  @addtogroup utility
  11:../libDaisy/src/util/CpuLoadMeter.h ****  * 
  12:../libDaisy/src/util/CpuLoadMeter.h ****  *  To measure the CPU load of your audio processing, create a CpuLoadMeter
  13:../libDaisy/src/util/CpuLoadMeter.h ****  *  and initialize it with your block size and sample rate.
  14:../libDaisy/src/util/CpuLoadMeter.h ****  *  Then at the beginning of the audio callback, call `OnBlockStart()`, 
  15:../libDaisy/src/util/CpuLoadMeter.h ****  *  and at the end of the audio callback, call `OnBlockEnd()`.
  16:../libDaisy/src/util/CpuLoadMeter.h ****  *  You can then read out the minimum, maximum and average CPU load.
  17:../libDaisy/src/util/CpuLoadMeter.h ****  */
  18:../libDaisy/src/util/CpuLoadMeter.h **** class CpuLoadMeter
  19:../libDaisy/src/util/CpuLoadMeter.h **** {
  20:../libDaisy/src/util/CpuLoadMeter.h ****   public:
  21:../libDaisy/src/util/CpuLoadMeter.h ****     CpuLoadMeter(){};
  22:../libDaisy/src/util/CpuLoadMeter.h **** 
  23:../libDaisy/src/util/CpuLoadMeter.h ****     /** Initializes the CpuLoadMeter for a particular sample rate and block size.
  24:../libDaisy/src/util/CpuLoadMeter.h ****      *  @param sampleRateInHz           The sample rate in Hz
  25:../libDaisy/src/util/CpuLoadMeter.h ****      *  @param blockSizeInSamples       The block size in samples
  26:../libDaisy/src/util/CpuLoadMeter.h ****      *  @param smoothingFilterCutoffHz  The cutoff frequency of the smoothing filter that's used to
  27:../libDaisy/src/util/CpuLoadMeter.h ****      *                                  create the average CPU load reading.
  28:../libDaisy/src/util/CpuLoadMeter.h ****      */
  29:../libDaisy/src/util/CpuLoadMeter.h ****     void Init(float sampleRateInHz,
  30:../libDaisy/src/util/CpuLoadMeter.h ****               int   blockSizeInSamples,
  31:../libDaisy/src/util/CpuLoadMeter.h ****               float smoothingFilterCutoffHz = 1.0f)
  32:../libDaisy/src/util/CpuLoadMeter.h ****     {
  33:../libDaisy/src/util/CpuLoadMeter.h ****         const auto secPerBlock = float(blockSizeInSamples) / sampleRateInHz;
  34:../libDaisy/src/util/CpuLoadMeter.h ****         const auto ticksPerS   = float(System::GetTickFreq());
  35:../libDaisy/src/util/CpuLoadMeter.h ****         ticksPerBlockInv_      = 1.0f / (ticksPerS * secPerBlock);
  36:../libDaisy/src/util/CpuLoadMeter.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 13


  37:../libDaisy/src/util/CpuLoadMeter.h ****         // update filter coefficient for smoothing filter (1pole lowpass)
  38:../libDaisy/src/util/CpuLoadMeter.h ****         const auto blockRateInHz = sampleRateInHz / float(blockSizeInSamples);
  39:../libDaisy/src/util/CpuLoadMeter.h ****         const auto cutoffNormalized
  40:../libDaisy/src/util/CpuLoadMeter.h ****             = smoothingFilterCutoffHz * 2.0f * 3.141592653f / blockRateInHz;
  41:../libDaisy/src/util/CpuLoadMeter.h ****         // according to
  42:../libDaisy/src/util/CpuLoadMeter.h ****         // https://en.wikipedia.org/wiki/Low-pass_filter#Simple_infinite_impulse_response_filter
  43:../libDaisy/src/util/CpuLoadMeter.h ****         smoothingConstant_ = cutoffNormalized / (cutoffNormalized + 1.0f);
  44:../libDaisy/src/util/CpuLoadMeter.h **** 
  45:../libDaisy/src/util/CpuLoadMeter.h ****         Reset();
  46:../libDaisy/src/util/CpuLoadMeter.h ****     }
  47:../libDaisy/src/util/CpuLoadMeter.h **** 
  48:../libDaisy/src/util/CpuLoadMeter.h ****     /** Call this at the beginning of your audio callback */
  49:../libDaisy/src/util/CpuLoadMeter.h ****     void OnBlockStart() { currentBlockStartTicks_ = System::GetTick(); }
 436              		.loc 5 49 10
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 80B5     		push	{r7, lr}
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 82B0     		sub	sp, sp, #8
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 449              		.loc 5 49 68
 450 0008 FFF7FEFF 		bl	_ZN5daisy6System7GetTickEv
 451 000c 0246     		mov	r2, r0
 452              		.loc 5 49 51
 453 000e 7B68     		ldr	r3, [r7, #4]
 454 0010 9A60     		str	r2, [r3, #8]
 455              		.loc 5 49 72
 456 0012 00BF     		nop
 457 0014 0837     		adds	r7, r7, #8
 458              		.cfi_def_cfa_offset 8
 459 0016 BD46     		mov	sp, r7
 460              		.cfi_def_cfa_register 13
 461              		@ sp needed
 462 0018 80BD     		pop	{r7, pc}
 463              		.cfi_endproc
 464              	.LFE2501:
 466              		.section	.text._ZN5daisy12CpuLoadMeter10OnBlockEndEv,"axG",%progbits,_ZN5daisy12CpuLoadMeter10OnBl
 467              		.align	1
 468              		.weak	_ZN5daisy12CpuLoadMeter10OnBlockEndEv
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 473              	_ZN5daisy12CpuLoadMeter10OnBlockEndEv:
 474              	.LFB2502:
  50:../libDaisy/src/util/CpuLoadMeter.h **** 
  51:../libDaisy/src/util/CpuLoadMeter.h ****     /** Call this at the end of your audio callback */
  52:../libDaisy/src/util/CpuLoadMeter.h ****     void OnBlockEnd()
 475              		.loc 5 52 10
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 24
 478              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 14


 479 0000 80B5     		push	{r7, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 86B0     		sub	sp, sp, #24
 484              		.cfi_def_cfa_offset 32
 485 0004 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 487 0006 7860     		str	r0, [r7, #4]
  53:../libDaisy/src/util/CpuLoadMeter.h ****     {
  54:../libDaisy/src/util/CpuLoadMeter.h ****         const auto end         = System::GetTick();
 488              		.loc 5 54 49
 489 0008 FFF7FEFF 		bl	_ZN5daisy6System7GetTickEv
 490 000c 7861     		str	r0, [r7, #20]
  55:../libDaisy/src/util/CpuLoadMeter.h ****         const auto ticksPassed = end - currentBlockStartTicks_;
 491              		.loc 5 55 40
 492 000e 7B68     		ldr	r3, [r7, #4]
 493 0010 9B68     		ldr	r3, [r3, #8]
 494              		.loc 5 55 20
 495 0012 7A69     		ldr	r2, [r7, #20]
 496 0014 D31A     		subs	r3, r2, r3
 497 0016 3B61     		str	r3, [r7, #16]
  56:../libDaisy/src/util/CpuLoadMeter.h ****         const auto currentBlockLoad
  57:../libDaisy/src/util/CpuLoadMeter.h ****             = float(ticksPassed) * ticksPerBlockInv_; // usPassed / usPerBlock
 498              		.loc 5 57 15
 499 0018 3B69     		ldr	r3, [r7, #16]
 500 001a 07EE903A 		vmov	s15, r3	@ int
 501 001e B8EE677A 		vcvt.f32.u32	s14, s15
 502              		.loc 5 57 36
 503 0022 7B68     		ldr	r3, [r7, #4]
 504 0024 D3ED017A 		vldr.32	s15, [r3, #4]
  56:../libDaisy/src/util/CpuLoadMeter.h ****         const auto currentBlockLoad
 505              		.loc 5 56 20
 506 0028 67EE277A 		vmul.f32	s15, s14, s15
 507 002c C7ED037A 		vstr.32	s15, [r7, #12]
  58:../libDaisy/src/util/CpuLoadMeter.h **** 
  59:../libDaisy/src/util/CpuLoadMeter.h ****         if(firstCycle_)
 508              		.loc 5 59 12
 509 0030 7B68     		ldr	r3, [r7, #4]
 510 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 511              		.loc 5 59 9
 512 0034 002B     		cmp	r3, #0
 513 0036 0ED0     		beq	.L27
  60:../libDaisy/src/util/CpuLoadMeter.h ****         {
  61:../libDaisy/src/util/CpuLoadMeter.h ****             max_ = min_ = avg_ = currentBlockLoad;
 514              		.loc 5 61 32
 515 0038 7B68     		ldr	r3, [r7, #4]
 516 003a FA68     		ldr	r2, [r7, #12]	@ float
 517 003c 5A61     		str	r2, [r3, #20]	@ float
 518              		.loc 5 61 27
 519 003e 7B68     		ldr	r3, [r7, #4]
 520 0040 5A69     		ldr	r2, [r3, #20]	@ float
 521              		.loc 5 61 25
 522 0042 7B68     		ldr	r3, [r7, #4]
 523 0044 DA60     		str	r2, [r3, #12]	@ float
 524              		.loc 5 61 20
 525 0046 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 15


 526 0048 DA68     		ldr	r2, [r3, #12]	@ float
 527              		.loc 5 61 18
 528 004a 7B68     		ldr	r3, [r7, #4]
 529 004c 1A61     		str	r2, [r3, #16]	@ float
  62:../libDaisy/src/util/CpuLoadMeter.h ****             firstCycle_        = false;
 530              		.loc 5 62 32
 531 004e 7B68     		ldr	r3, [r7, #4]
 532 0050 0022     		movs	r2, #0
 533 0052 1A70     		strb	r2, [r3]
  63:../libDaisy/src/util/CpuLoadMeter.h ****         }
  64:../libDaisy/src/util/CpuLoadMeter.h ****         else
  65:../libDaisy/src/util/CpuLoadMeter.h ****         {
  66:../libDaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad > max_)
  67:../libDaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
  68:../libDaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad < min_)
  69:../libDaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
  70:../libDaisy/src/util/CpuLoadMeter.h **** 
  71:../libDaisy/src/util/CpuLoadMeter.h ****             avg_ = smoothingConstant_ * currentBlockLoad
  72:../libDaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
  73:../libDaisy/src/util/CpuLoadMeter.h ****         }
  74:../libDaisy/src/util/CpuLoadMeter.h ****     }
 534              		.loc 5 74 5
 535 0054 31E0     		b	.L35
 536              	.L27:
  66:../libDaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
 537              		.loc 5 66 35
 538 0056 7B68     		ldr	r3, [r7, #4]
 539 0058 D3ED047A 		vldr.32	s15, [r3, #16]
  66:../libDaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
 540              		.loc 5 66 13
 541 005c 97ED037A 		vldr.32	s14, [r7, #12]
 542 0060 B4EEE77A 		vcmpe.f32	s14, s15
 543 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 544 0068 02DD     		ble	.L29
  67:../libDaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad < min_)
 545              		.loc 5 67 22
 546 006a 7B68     		ldr	r3, [r7, #4]
 547 006c FA68     		ldr	r2, [r7, #12]	@ float
 548 006e 1A61     		str	r2, [r3, #16]	@ float
 549              	.L29:
  68:../libDaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
 550              		.loc 5 68 35
 551 0070 7B68     		ldr	r3, [r7, #4]
 552 0072 D3ED037A 		vldr.32	s15, [r3, #12]
  68:../libDaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
 553              		.loc 5 68 13
 554 0076 97ED037A 		vldr.32	s14, [r7, #12]
 555 007a B4EEE77A 		vcmpe.f32	s14, s15
 556 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 557 0082 02D5     		bpl	.L31
  69:../libDaisy/src/util/CpuLoadMeter.h **** 
 558              		.loc 5 69 22
 559 0084 7B68     		ldr	r3, [r7, #4]
 560 0086 FA68     		ldr	r2, [r7, #12]	@ float
 561 0088 DA60     		str	r2, [r3, #12]	@ float
 562              	.L31:
  71:../libDaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 16


 563              		.loc 5 71 20
 564 008a 7B68     		ldr	r3, [r7, #4]
 565 008c 93ED067A 		vldr.32	s14, [r3, #24]
  71:../libDaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
 566              		.loc 5 71 39
 567 0090 D7ED037A 		vldr.32	s15, [r7, #12]
 568 0094 27EE277A 		vmul.f32	s14, s14, s15
  72:../libDaisy/src/util/CpuLoadMeter.h ****         }
 569              		.loc 5 72 30
 570 0098 7B68     		ldr	r3, [r7, #4]
 571 009a D3ED067A 		vldr.32	s15, [r3, #24]
  72:../libDaisy/src/util/CpuLoadMeter.h ****         }
 572              		.loc 5 72 28
 573 009e F7EE006A 		vmov.f32	s13, #1.0e+0
 574 00a2 76EEE76A 		vsub.f32	s13, s13, s15
  72:../libDaisy/src/util/CpuLoadMeter.h ****         }
 575              		.loc 5 72 52
 576 00a6 7B68     		ldr	r3, [r7, #4]
 577 00a8 D3ED057A 		vldr.32	s15, [r3, #20]
  72:../libDaisy/src/util/CpuLoadMeter.h ****         }
 578              		.loc 5 72 50
 579 00ac 66EEA77A 		vmul.f32	s15, s13, s15
  72:../libDaisy/src/util/CpuLoadMeter.h ****         }
 580              		.loc 5 72 20
 581 00b0 77EE277A 		vadd.f32	s15, s14, s15
  71:../libDaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
 582              		.loc 5 71 18
 583 00b4 7B68     		ldr	r3, [r7, #4]
 584 00b6 C3ED057A 		vstr.32	s15, [r3, #20]
 585              	.L35:
 586              		.loc 5 74 5
 587 00ba 00BF     		nop
 588 00bc 1837     		adds	r7, r7, #24
 589              		.cfi_def_cfa_offset 8
 590 00be BD46     		mov	sp, r7
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 00c0 80BD     		pop	{r7, pc}
 594              		.cfi_endproc
 595              	.LFE2502:
 597              		.section	.text._ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv,"axG",%progbits,_ZNK5daisy12CpuLoadMeter1
 598              		.align	1
 599              		.weak	_ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 604              	_ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv:
 605              	.LFB2503:
  75:../libDaisy/src/util/CpuLoadMeter.h **** 
  76:../libDaisy/src/util/CpuLoadMeter.h ****     /** Returns the smoothed average CPU load in the range 0..1 */
  77:../libDaisy/src/util/CpuLoadMeter.h ****     float GetAvgCpuLoad() const { return avg_; }
 606              		.loc 5 77 11
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 611 0000 80B4     		push	{r7}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 17


 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 7, -4
 614 0002 83B0     		sub	sp, sp, #12
 615              		.cfi_def_cfa_offset 16
 616 0004 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0006 7860     		str	r0, [r7, #4]
 619              		.loc 5 77 42
 620 0008 7B68     		ldr	r3, [r7, #4]
 621 000a 5B69     		ldr	r3, [r3, #20]	@ float
 622 000c 07EE903A 		vmov	s15, r3
 623              		.loc 5 77 48
 624 0010 B0EE670A 		vmov.f32	s0, s15
 625 0014 0C37     		adds	r7, r7, #12
 626              		.cfi_def_cfa_offset 4
 627 0016 BD46     		mov	sp, r7
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0018 5DF8047B 		ldr	r7, [sp], #4
 631              		.cfi_restore 7
 632              		.cfi_def_cfa_offset 0
 633 001c 7047     		bx	lr
 634              		.cfi_endproc
 635              	.LFE2503:
 637              		.section	.text._ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv,"axG",%progbits,_ZNK5daisy12CpuLoadMeter1
 638              		.align	1
 639              		.weak	_ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 644              	_ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv:
 645              	.LFB2504:
  78:../libDaisy/src/util/CpuLoadMeter.h ****     /** Returns the minimun CPU load observed since the last call to Reset(). */
  79:../libDaisy/src/util/CpuLoadMeter.h ****     float GetMinCpuLoad() const { return min_; }
 646              		.loc 5 79 11
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 8
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651 0000 80B4     		push	{r7}
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 7, -4
 654 0002 83B0     		sub	sp, sp, #12
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 658 0006 7860     		str	r0, [r7, #4]
 659              		.loc 5 79 42
 660 0008 7B68     		ldr	r3, [r7, #4]
 661 000a DB68     		ldr	r3, [r3, #12]	@ float
 662 000c 07EE903A 		vmov	s15, r3
 663              		.loc 5 79 48
 664 0010 B0EE670A 		vmov.f32	s0, s15
 665 0014 0C37     		adds	r7, r7, #12
 666              		.cfi_def_cfa_offset 4
 667 0016 BD46     		mov	sp, r7
 668              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 18


 669              		@ sp needed
 670 0018 5DF8047B 		ldr	r7, [sp], #4
 671              		.cfi_restore 7
 672              		.cfi_def_cfa_offset 0
 673 001c 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE2504:
 677              		.section	.text._ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv,"axG",%progbits,_ZNK5daisy12CpuLoadMeter1
 678              		.align	1
 679              		.weak	_ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	_ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv:
 685              	.LFB2505:
  80:../libDaisy/src/util/CpuLoadMeter.h ****     /** Returns the maximum CPU load observed since the last call to Reset(). */
  81:../libDaisy/src/util/CpuLoadMeter.h ****     float GetMaxCpuLoad() const { return max_; }
 686              		.loc 5 81 11
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 8
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691 0000 80B4     		push	{r7}
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 7, -4
 694 0002 83B0     		sub	sp, sp, #12
 695              		.cfi_def_cfa_offset 16
 696 0004 00AF     		add	r7, sp, #0
 697              		.cfi_def_cfa_register 7
 698 0006 7860     		str	r0, [r7, #4]
 699              		.loc 5 81 42
 700 0008 7B68     		ldr	r3, [r7, #4]
 701 000a 1B69     		ldr	r3, [r3, #16]	@ float
 702 000c 07EE903A 		vmov	s15, r3
 703              		.loc 5 81 48
 704 0010 B0EE670A 		vmov.f32	s0, s15
 705 0014 0C37     		adds	r7, r7, #12
 706              		.cfi_def_cfa_offset 4
 707 0016 BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 0018 5DF8047B 		ldr	r7, [sp], #4
 711              		.cfi_restore 7
 712              		.cfi_def_cfa_offset 0
 713 001c 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE2505:
 717              		.section	.rodata._ZN5daisy4seedL2D0E,"a"
 718              		.align	2
 721              	_ZN5daisy4seedL2D0E:
 722 0000 01       		.byte	1
 723 0001 0C       		.byte	12
 724              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 725              		.align	2
 728              	_ZN5daisy4seedL2D1E:
 729 0000 02       		.byte	2
 730 0001 0B       		.byte	11
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 19


 731              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 732              		.align	2
 735              	_ZN5daisy4seedL2D2E:
 736 0000 02       		.byte	2
 737 0001 0A       		.byte	10
 738              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 739              		.align	2
 742              	_ZN5daisy4seedL2D3E:
 743 0000 02       		.byte	2
 744 0001 09       		.byte	9
 745              		.section	.rodata._ZN5daisy4seedL2D4E,"a"
 746              		.align	2
 749              	_ZN5daisy4seedL2D4E:
 750 0000 02       		.byte	2
 751 0001 08       		.byte	8
 752              		.section	.rodata._ZN5daisy4seedL2D5E,"a"
 753              		.align	2
 756              	_ZN5daisy4seedL2D5E:
 757 0000 03       		.byte	3
 758 0001 02       		.byte	2
 759              		.section	.rodata._ZN5daisy4seedL2D6E,"a"
 760              		.align	2
 763              	_ZN5daisy4seedL2D6E:
 764 0000 02       		.byte	2
 765 0001 0C       		.byte	12
 766              		.section	.rodata._ZN5daisy4seedL2D7E,"a"
 767              		.align	2
 770              	_ZN5daisy4seedL2D7E:
 771 0000 06       		.byte	6
 772 0001 0A       		.byte	10
 773              		.section	.rodata._ZN5daisy4seedL2D8E,"a"
 774              		.align	2
 777              	_ZN5daisy4seedL2D8E:
 778 0000 06       		.byte	6
 779 0001 0B       		.byte	11
 780              		.section	.rodata._ZN5daisy4seedL2D9E,"a"
 781              		.align	2
 784              	_ZN5daisy4seedL2D9E:
 785 0000 01       		.byte	1
 786 0001 04       		.byte	4
 787              		.section	.rodata._ZN5daisy4seedL3D10E,"a"
 788              		.align	2
 791              	_ZN5daisy4seedL3D10E:
 792 0000 01       		.byte	1
 793 0001 05       		.byte	5
 794              		.section	.rodata._ZN5daisy4seedL3D11E,"a"
 795              		.align	2
 798              	_ZN5daisy4seedL3D11E:
 799 0000 01       		.byte	1
 800 0001 08       		.byte	8
 801              		.section	.rodata._ZN5daisy4seedL3D12E,"a"
 802              		.align	2
 805              	_ZN5daisy4seedL3D12E:
 806 0000 01       		.byte	1
 807 0001 09       		.byte	9
 808              		.section	.rodata._ZN5daisy4seedL3D13E,"a"
 809              		.align	2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 20


 812              	_ZN5daisy4seedL3D13E:
 813 0000 01       		.byte	1
 814 0001 06       		.byte	6
 815              		.section	.rodata._ZN5daisy4seedL3D14E,"a"
 816              		.align	2
 819              	_ZN5daisy4seedL3D14E:
 820 0000 01       		.byte	1
 821 0001 07       		.byte	7
 822              		.section	.rodata._ZN5daisy4seedL3D15E,"a"
 823              		.align	2
 826              	_ZN5daisy4seedL3D15E:
 827 0000 02       		.byte	2
 828 0001 00       		.byte	0
 829              		.section	.rodata._ZN5daisy4seedL3D16E,"a"
 830              		.align	2
 833              	_ZN5daisy4seedL3D16E:
 834 0000 00       		.byte	0
 835 0001 03       		.byte	3
 836              		.section	.rodata._ZN5daisy4seedL3D17E,"a"
 837              		.align	2
 840              	_ZN5daisy4seedL3D17E:
 841 0000 01       		.byte	1
 842 0001 01       		.byte	1
 843              		.section	.rodata._ZN5daisy4seedL3D18E,"a"
 844              		.align	2
 847              	_ZN5daisy4seedL3D18E:
 848 0000 00       		.byte	0
 849 0001 07       		.byte	7
 850              		.section	.rodata._ZN5daisy4seedL3D19E,"a"
 851              		.align	2
 854              	_ZN5daisy4seedL3D19E:
 855 0000 00       		.byte	0
 856 0001 06       		.byte	6
 857              		.section	.rodata._ZN5daisy4seedL3D20E,"a"
 858              		.align	2
 861              	_ZN5daisy4seedL3D20E:
 862 0000 02       		.byte	2
 863 0001 01       		.byte	1
 864              		.section	.rodata._ZN5daisy4seedL3D21E,"a"
 865              		.align	2
 868              	_ZN5daisy4seedL3D21E:
 869 0000 02       		.byte	2
 870 0001 04       		.byte	4
 871              		.section	.rodata._ZN5daisy4seedL3D22E,"a"
 872              		.align	2
 875              	_ZN5daisy4seedL3D22E:
 876 0000 00       		.byte	0
 877 0001 05       		.byte	5
 878              		.section	.rodata._ZN5daisy4seedL3D23E,"a"
 879              		.align	2
 882              	_ZN5daisy4seedL3D23E:
 883 0000 00       		.byte	0
 884 0001 04       		.byte	4
 885              		.section	.rodata._ZN5daisy4seedL3D24E,"a"
 886              		.align	2
 889              	_ZN5daisy4seedL3D24E:
 890 0000 00       		.byte	0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 21


 891 0001 01       		.byte	1
 892              		.section	.rodata._ZN5daisy4seedL3D25E,"a"
 893              		.align	2
 896              	_ZN5daisy4seedL3D25E:
 897 0000 0000     		.space	2
 898              		.section	.rodata._ZN5daisy4seedL3D26E,"a"
 899              		.align	2
 902              	_ZN5daisy4seedL3D26E:
 903 0000 03       		.byte	3
 904 0001 0B       		.byte	11
 905              		.section	.rodata._ZN5daisy4seedL3D27E,"a"
 906              		.align	2
 909              	_ZN5daisy4seedL3D27E:
 910 0000 06       		.byte	6
 911 0001 09       		.byte	9
 912              		.section	.rodata._ZN5daisy4seedL3D28E,"a"
 913              		.align	2
 916              	_ZN5daisy4seedL3D28E:
 917 0000 00       		.byte	0
 918 0001 02       		.byte	2
 919              		.section	.rodata._ZN5daisy4seedL3D29E,"a"
 920              		.align	2
 923              	_ZN5daisy4seedL3D29E:
 924 0000 01       		.byte	1
 925 0001 0E       		.byte	14
 926              		.section	.rodata._ZN5daisy4seedL3D30E,"a"
 927              		.align	2
 930              	_ZN5daisy4seedL3D30E:
 931 0000 01       		.byte	1
 932 0001 0F       		.byte	15
 933              		.section	.rodata._ZN5daisy4seedL2A0E,"a"
 934              		.align	2
 937              	_ZN5daisy4seedL2A0E:
 938 0000 02       		.byte	2
 939 0001 00       		.byte	0
 940              		.section	.rodata._ZN5daisy4seedL2A1E,"a"
 941              		.align	2
 944              	_ZN5daisy4seedL2A1E:
 945 0000 00       		.byte	0
 946 0001 03       		.byte	3
 947              		.section	.rodata._ZN5daisy4seedL2A2E,"a"
 948              		.align	2
 951              	_ZN5daisy4seedL2A2E:
 952 0000 01       		.byte	1
 953 0001 01       		.byte	1
 954              		.section	.rodata._ZN5daisy4seedL2A3E,"a"
 955              		.align	2
 958              	_ZN5daisy4seedL2A3E:
 959 0000 00       		.byte	0
 960 0001 07       		.byte	7
 961              		.section	.rodata._ZN5daisy4seedL2A4E,"a"
 962              		.align	2
 965              	_ZN5daisy4seedL2A4E:
 966 0000 00       		.byte	0
 967 0001 06       		.byte	6
 968              		.section	.rodata._ZN5daisy4seedL2A5E,"a"
 969              		.align	2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 22


 972              	_ZN5daisy4seedL2A5E:
 973 0000 02       		.byte	2
 974 0001 01       		.byte	1
 975              		.section	.rodata._ZN5daisy4seedL2A6E,"a"
 976              		.align	2
 979              	_ZN5daisy4seedL2A6E:
 980 0000 02       		.byte	2
 981 0001 04       		.byte	4
 982              		.section	.rodata._ZN5daisy4seedL2A7E,"a"
 983              		.align	2
 986              	_ZN5daisy4seedL2A7E:
 987 0000 00       		.byte	0
 988 0001 05       		.byte	5
 989              		.section	.rodata._ZN5daisy4seedL2A8E,"a"
 990              		.align	2
 993              	_ZN5daisy4seedL2A8E:
 994 0000 00       		.byte	0
 995 0001 04       		.byte	4
 996              		.section	.rodata._ZN5daisy4seedL2A9E,"a"
 997              		.align	2
 1000              	_ZN5daisy4seedL2A9E:
 1001 0000 00       		.byte	0
 1002 0001 01       		.byte	1
 1003              		.section	.rodata._ZN5daisy4seedL3A10E,"a"
 1004              		.align	2
 1007              	_ZN5daisy4seedL3A10E:
 1008 0000 0000     		.space	2
 1009              		.section	.rodata._ZN5daisy4seedL3A11E,"a"
 1010              		.align	2
 1013              	_ZN5daisy4seedL3A11E:
 1014 0000 00       		.byte	0
 1015 0001 02       		.byte	2
 1016              		.section	.rodata._ZN5daisy4seedL3D31E,"a"
 1017              		.align	2
 1020              	_ZN5daisy4seedL3D31E:
 1021 0000 02       		.byte	2
 1022 0001 02       		.byte	2
 1023              		.section	.rodata._ZN5daisy4seedL3D32E,"a"
 1024              		.align	2
 1027              	_ZN5daisy4seedL3D32E:
 1028 0000 02       		.byte	2
 1029 0001 03       		.byte	3
 1030              		.section	.rodata._ZN5daisy4seedL3A12E,"a"
 1031              		.align	2
 1034              	_ZN5daisy4seedL3A12E:
 1035 0000 02       		.byte	2
 1036 0001 02       		.byte	2
 1037              		.section	.rodata._ZN5daisy4seedL3A13E,"a"
 1038              		.align	2
 1041              	_ZN5daisy4seedL3A13E:
 1042 0000 02       		.byte	2
 1043 0001 03       		.byte	3
 1044              		.section	.text._ZL20__gthread_key_deletei,"ax",%progbits
 1045              		.align	1
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 23


 1050              	_ZL20__gthread_key_deletei:
 1051              	.LFB2854:
 1052              		.file 6 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Compile this one with gcc.  */
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** This file is part of GCC.
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** version.
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** for more details.
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_key_t;
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_once_t;
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_mutex_t;
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx) do {} while (0)
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((__unused__))
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #ifdef _LIBOBJC
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Thread local storage for a single thread */
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static void *thread_local_storage = NULL;
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend initialization functions */
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Initialize the threads subsystem.  */
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 24


  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Close the threads subsystem.  */
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend thread functions */
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Create a new thread of execution.  */
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline objc_thread_t
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return NULL;
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Set the current thread's priority.  */
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Return the current thread's priority.  */
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Yield our process time to another thread.  */
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline void
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_yield (void)
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return;
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Terminate the current thread.  */
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_exit (void)
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* Should we really exit the program */
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline objc_thread_t
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_id (void)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 25


 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support, use 1.  */
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return (objc_thread_t) 1;
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   thread_local_storage = value;
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline void *
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return thread_local_storage;
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend mutex functions */
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Allocate a mutex.  */
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Deallocate a mutex.  */
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Grab a lock on a mutex.  */
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Unlock the mutex */
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 26


 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend condition mutex functions */
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Allocate a condition.  */
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Deallocate a condition.  */
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Wait on the condition */
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #else /* _LIBOBJC */
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_active_p (void)
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 27


 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static int _GLIBCXX_UNUSED
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 1053              		.loc 6 230 1
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 8
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058 0000 80B4     		push	{r7}
 1059              		.cfi_def_cfa_offset 4
 1060              		.cfi_offset 7, -4
 1061 0002 83B0     		sub	sp, sp, #12
 1062              		.cfi_def_cfa_offset 16
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 7860     		str	r0, [r7, #4]
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 1066              		.loc 6 231 10
 1067 0008 0023     		movs	r3, #0
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 1068              		.loc 6 232 1
 1069 000a 1846     		mov	r0, r3
 1070 000c 0C37     		adds	r7, r7, #12
 1071              		.cfi_def_cfa_offset 4
 1072 000e BD46     		mov	sp, r7
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 0010 5DF8047B 		ldr	r7, [sp], #4
 1076              		.cfi_restore 7
 1077              		.cfi_def_cfa_offset 0
 1078 0014 7047     		bx	lr
 1079              		.cfi_endproc
 1080              	.LFE2854:
 1082              		.section	.rodata._ZN7daisyspL9kRandFracE,"a"
 1083              		.align	2
 1086              	_ZN7daisyspL9kRandFracE:
 1087 0000 00000030 		.word	805306368
 1088              		.section	.rodata._ZN7daisyspL11kOneTwelfthE,"a"
 1089              		.align	2
 1092              	_ZN7daisyspL11kOneTwelfthE:
 1093 0000 ABAAAA3D 		.word	1034594987
 1094              		.section	.text._ZN7daisysp4fmaxEff,"axG",%progbits,_ZN7daisysp4fmaxEff,comdat
 1095              		.align	1
 1096              		.weak	_ZN7daisysp4fmaxEff
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1101              	_ZN7daisysp4fmaxEff:
 1102              	.LFB4218:
 1103              		.file 7 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /*
   2:../DaisySP/Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Utility/dsp.h **** 
   4:../DaisySP/Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 28


   6:../DaisySP/Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Utility/dsp.h **** */
   8:../DaisySP/Source/Utility/dsp.h **** 
   9:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../DaisySP/Source/Utility/dsp.h **** */
  11:../DaisySP/Source/Utility/dsp.h **** #pragma once
  12:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
  15:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
  16:../DaisySP/Source/Utility/dsp.h **** #include <random>
  17:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  18:../DaisySP/Source/Utility/dsp.h **** 
  19:../DaisySP/Source/Utility/dsp.h **** /** PIs
  20:../DaisySP/Source/Utility/dsp.h **** */
  21:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  30:../DaisySP/Source/Utility/dsp.h **** {
  31:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../DaisySP/Source/Utility/dsp.h **** 
  34:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../DaisySP/Source/Utility/dsp.h **** 
  37:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  39:../DaisySP/Source/Utility/dsp.h **** */
  40:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../DaisySP/Source/Utility/dsp.h **** {
 1104              		.loc 7 41 1
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 16
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108              		@ link register save eliminated.
 1109 0000 80B4     		push	{r7}
 1110              		.cfi_def_cfa_offset 4
 1111              		.cfi_offset 7, -4
 1112 0002 85B0     		sub	sp, sp, #20
 1113              		.cfi_def_cfa_offset 24
 1114 0004 00AF     		add	r7, sp, #0
 1115              		.cfi_def_cfa_register 7
 1116 0006 87ED010A 		vstr.32	s0, [r7, #4]
 1117 000a C7ED000A 		vstr.32	s1, [r7]
  42:../DaisySP/Source/Utility/dsp.h ****     float r;
  43:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  44:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 1118              		.loc 7 44 5
 1119 000e D7ED017A 		vldr.32	s15, [r7, #4]
 1120 0012 97ED007A 		vldr.32	s14, [r7]
 1121              		.syntax unified
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 29


 1122              	@ 44 "../DaisySP/Source/Utility/dsp.h" 1
 1123 0016 C7FE877A 		vmaxnm.f32 s15, s15, s14
 1124              	@ 0 "" 2
 1125              		.thumb
 1126              		.syntax unified
 1127 001a C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Utility/dsp.h **** #else
  46:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  48:../DaisySP/Source/Utility/dsp.h ****     return r;
 1128              		.loc 7 48 12
 1129 001e FB68     		ldr	r3, [r7, #12]	@ float
 1130 0020 07EE903A 		vmov	s15, r3
  49:../DaisySP/Source/Utility/dsp.h **** }
 1131              		.loc 7 49 1
 1132 0024 B0EE670A 		vmov.f32	s0, s15
 1133 0028 1437     		adds	r7, r7, #20
 1134              		.cfi_def_cfa_offset 4
 1135 002a BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 002c 5DF8047B 		ldr	r7, [sp], #4
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 0030 7047     		bx	lr
 1142              		.cfi_endproc
 1143              	.LFE4218:
 1145              		.section	.text._ZN7daisysp4fminEff,"axG",%progbits,_ZN7daisysp4fminEff,comdat
 1146              		.align	1
 1147              		.weak	_ZN7daisysp4fminEff
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1152              	_ZN7daisysp4fminEff:
 1153              	.LFB4219:
  50:../DaisySP/Source/Utility/dsp.h **** 
  51:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../DaisySP/Source/Utility/dsp.h **** {
 1154              		.loc 7 52 1
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 16
 1157              		@ frame_needed = 1, uses_anonymous_args = 0
 1158              		@ link register save eliminated.
 1159 0000 80B4     		push	{r7}
 1160              		.cfi_def_cfa_offset 4
 1161              		.cfi_offset 7, -4
 1162 0002 85B0     		sub	sp, sp, #20
 1163              		.cfi_def_cfa_offset 24
 1164 0004 00AF     		add	r7, sp, #0
 1165              		.cfi_def_cfa_register 7
 1166 0006 87ED010A 		vstr.32	s0, [r7, #4]
 1167 000a C7ED000A 		vstr.32	s1, [r7]
  53:../DaisySP/Source/Utility/dsp.h ****     float r;
  54:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  55:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 1168              		.loc 7 55 5
 1169 000e D7ED017A 		vldr.32	s15, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 30


 1170 0012 97ED007A 		vldr.32	s14, [r7]
 1171              		.syntax unified
 1172              	@ 55 "../DaisySP/Source/Utility/dsp.h" 1
 1173 0016 C7FEC77A 		vminnm.f32 s15, s15, s14
 1174              	@ 0 "" 2
 1175              		.thumb
 1176              		.syntax unified
 1177 001a C7ED037A 		vstr.32	s15, [r7, #12]
  56:../DaisySP/Source/Utility/dsp.h **** #else
  57:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  59:../DaisySP/Source/Utility/dsp.h ****     return r;
 1178              		.loc 7 59 12
 1179 001e FB68     		ldr	r3, [r7, #12]	@ float
 1180 0020 07EE903A 		vmov	s15, r3
  60:../DaisySP/Source/Utility/dsp.h **** }
 1181              		.loc 7 60 1
 1182 0024 B0EE670A 		vmov.f32	s0, s15
 1183 0028 1437     		adds	r7, r7, #20
 1184              		.cfi_def_cfa_offset 4
 1185 002a BD46     		mov	sp, r7
 1186              		.cfi_def_cfa_register 13
 1187              		@ sp needed
 1188 002c 5DF8047B 		ldr	r7, [sp], #4
 1189              		.cfi_restore 7
 1190              		.cfi_def_cfa_offset 0
 1191 0030 7047     		bx	lr
 1192              		.cfi_endproc
 1193              	.LFE4219:
 1195              		.section	.text._ZN7daisysp6fclampEfff,"axG",%progbits,_ZN7daisysp6fclampEfff,comdat
 1196              		.align	1
 1197              		.weak	_ZN7daisysp6fclampEfff
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
 1202              	_ZN7daisysp6fclampEfff:
 1203              	.LFB4220:
  61:../DaisySP/Source/Utility/dsp.h **** 
  62:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  63:../DaisySP/Source/Utility/dsp.h **** */
  64:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:../DaisySP/Source/Utility/dsp.h **** {
 1204              		.loc 7 65 1
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 16
 1207              		@ frame_needed = 1, uses_anonymous_args = 0
 1208 0000 80B5     		push	{r7, lr}
 1209              		.cfi_def_cfa_offset 8
 1210              		.cfi_offset 7, -8
 1211              		.cfi_offset 14, -4
 1212 0002 84B0     		sub	sp, sp, #16
 1213              		.cfi_def_cfa_offset 24
 1214 0004 00AF     		add	r7, sp, #0
 1215              		.cfi_def_cfa_register 7
 1216 0006 87ED030A 		vstr.32	s0, [r7, #12]
 1217 000a C7ED020A 		vstr.32	s1, [r7, #8]
 1218 000e 87ED011A 		vstr.32	s2, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 31


  66:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
 1219              		.loc 7 66 16
 1220 0012 D7ED020A 		vldr.32	s1, [r7, #8]
 1221 0016 97ED030A 		vldr.32	s0, [r7, #12]
 1222 001a FFF7FEFF 		bl	_ZN7daisysp4fmaxEff
 1223 001e F0EE407A 		vmov.f32	s15, s0
 1224 0022 D7ED010A 		vldr.32	s1, [r7, #4]
 1225 0026 B0EE670A 		vmov.f32	s0, s15
 1226 002a FFF7FEFF 		bl	_ZN7daisysp4fminEff
 1227 002e F0EE407A 		vmov.f32	s15, s0
  67:../DaisySP/Source/Utility/dsp.h **** }
 1228              		.loc 7 67 1
 1229 0032 B0EE670A 		vmov.f32	s0, s15
 1230 0036 1037     		adds	r7, r7, #16
 1231              		.cfi_def_cfa_offset 8
 1232 0038 BD46     		mov	sp, r7
 1233              		.cfi_def_cfa_register 13
 1234              		@ sp needed
 1235 003a 80BD     		pop	{r7, pc}
 1236              		.cfi_endproc
 1237              	.LFE4220:
 1239              		.section	.text._ZN7daisysp4fmapEfffNS_7MappingE,"axG",%progbits,_ZN7daisysp4fmapEfffNS_7MappingE,c
 1240              		.align	1
 1241              		.weak	_ZN7daisysp4fmapEfffNS_7MappingE
 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1246              	_ZN7daisysp4fmapEfffNS_7MappingE:
 1247              	.LFB4229:
  68:../DaisySP/Source/Utility/dsp.h **** 
  69:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:../DaisySP/Source/Utility/dsp.h **** These are approximations
  72:../DaisySP/Source/Utility/dsp.h **** */
  73:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  74:../DaisySP/Source/Utility/dsp.h **** {
  75:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  76:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  78:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  80:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  81:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  82:../DaisySP/Source/Utility/dsp.h ****     return f;
  83:../DaisySP/Source/Utility/dsp.h **** }
  84:../DaisySP/Source/Utility/dsp.h **** 
  85:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:../DaisySP/Source/Utility/dsp.h **** {
  87:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  88:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  90:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:../DaisySP/Source/Utility/dsp.h ****     l >>= (n - 1);
  92:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  93:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  94:../DaisySP/Source/Utility/dsp.h ****     return f;
  95:../DaisySP/Source/Utility/dsp.h **** }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 32


  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:../DaisySP/Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:../DaisySP/Source/Utility/dsp.h ****  */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     return x - static_cast<int>(x);
 103:../DaisySP/Source/Utility/dsp.h **** }
 104:../DaisySP/Source/Utility/dsp.h **** 
 105:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
 107:../DaisySP/Source/Utility/dsp.h **** */
 108:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
 109:../DaisySP/Source/Utility/dsp.h **** {
 110:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:../DaisySP/Source/Utility/dsp.h **** }
 112:../DaisySP/Source/Utility/dsp.h **** 
 113:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
 114:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:../DaisySP/Source/Utility/dsp.h **** */
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     float frac;
 119:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 120:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 123:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 125:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 126:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 127:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 129:../DaisySP/Source/Utility/dsp.h ****     return (f);
 130:../DaisySP/Source/Utility/dsp.h **** }
 131:../DaisySP/Source/Utility/dsp.h **** 
 132:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 133:../DaisySP/Source/Utility/dsp.h **** {
 134:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:../DaisySP/Source/Utility/dsp.h **** }
 136:../DaisySP/Source/Utility/dsp.h **** 
 137:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 138:../DaisySP/Source/Utility/dsp.h **** */
 139:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 140:../DaisySP/Source/Utility/dsp.h **** {
 141:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 142:../DaisySP/Source/Utility/dsp.h **** }
 143:../DaisySP/Source/Utility/dsp.h **** 
 144:../DaisySP/Source/Utility/dsp.h **** 
 145:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 146:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 147:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 148:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 149:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 150:../DaisySP/Source/Utility/dsp.h **** */
 151:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 152:../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 33


 153:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 154:../DaisySP/Source/Utility/dsp.h **** }
 155:../DaisySP/Source/Utility/dsp.h **** 
 156:../DaisySP/Source/Utility/dsp.h **** /** Curves to use with the fmap function */
 157:../DaisySP/Source/Utility/dsp.h **** enum class Mapping
 158:../DaisySP/Source/Utility/dsp.h **** {
 159:../DaisySP/Source/Utility/dsp.h ****     LINEAR,
 160:../DaisySP/Source/Utility/dsp.h ****     EXP,
 161:../DaisySP/Source/Utility/dsp.h ****     LOG,
 162:../DaisySP/Source/Utility/dsp.h **** };
 163:../DaisySP/Source/Utility/dsp.h **** 
 164:../DaisySP/Source/Utility/dsp.h **** /** Maps a float between a specified range, using a specified curve.
 165:../DaisySP/Source/Utility/dsp.h ****  *
 166:../DaisySP/Source/Utility/dsp.h ****  *  \param in a value between 0 to 1 that will be mapped to the new range.
 167:../DaisySP/Source/Utility/dsp.h ****  *  \param min the new minimum value
 168:../DaisySP/Source/Utility/dsp.h ****  *  \param max the new maxmimum value
 169:../DaisySP/Source/Utility/dsp.h ****  *  \param curve a Mapping Value to adjust the response curve of the transformation
 170:../DaisySP/Source/Utility/dsp.h ****  *               defaults to Linear. @see Mapping
 171:../DaisySP/Source/Utility/dsp.h ****  *
 172:../DaisySP/Source/Utility/dsp.h ****  *  When using the log curve min and max, must be greater than zero.
 173:../DaisySP/Source/Utility/dsp.h ****  *
 174:../DaisySP/Source/Utility/dsp.h ****  *  \retval returns the transformed float within the new range.
 175:../DaisySP/Source/Utility/dsp.h **** */
 176:../DaisySP/Source/Utility/dsp.h **** inline float
 177:../DaisySP/Source/Utility/dsp.h **** fmap(float in, float min, float max, Mapping curve = Mapping::LINEAR)
 178:../DaisySP/Source/Utility/dsp.h **** {
 1248              		.loc 7 178 1
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 24
 1251              		@ frame_needed = 1, uses_anonymous_args = 0
 1252 0000 80B5     		push	{r7, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 7, -8
 1255              		.cfi_offset 14, -4
 1256 0002 86B0     		sub	sp, sp, #24
 1257              		.cfi_def_cfa_offset 32
 1258 0004 00AF     		add	r7, sp, #0
 1259              		.cfi_def_cfa_register 7
 1260 0006 87ED030A 		vstr.32	s0, [r7, #12]
 1261 000a C7ED020A 		vstr.32	s1, [r7, #8]
 1262 000e 87ED011A 		vstr.32	s2, [r7, #4]
 1263 0012 3860     		str	r0, [r7]
 1264              	.LBB16:
 179:../DaisySP/Source/Utility/dsp.h ****     switch(curve)
 1265              		.loc 7 179 5
 1266 0014 3B68     		ldr	r3, [r7]
 1267 0016 012B     		cmp	r3, #1
 1268 0018 03D0     		beq	.L51
 1269 001a 3B68     		ldr	r3, [r7]
 1270 001c 022B     		cmp	r3, #2
 1271 001e 1BD0     		beq	.L52
 1272 0020 49E0     		b	.L55
 1273              	.L51:
 1274              	.LBB17:
 180:../DaisySP/Source/Utility/dsp.h ****     {
 181:../DaisySP/Source/Utility/dsp.h ****         case Mapping::EXP:
 182:../DaisySP/Source/Utility/dsp.h ****             return fclamp(min + (in * in) * (max - min), min, max);
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 34


 1275              		.loc 7 182 37
 1276 0022 D7ED037A 		vldr.32	s15, [r7, #12]
 1277 0026 27EEA77A 		vmul.f32	s14, s15, s15
 1278              		.loc 7 182 50
 1279 002a D7ED016A 		vldr.32	s13, [r7, #4]
 1280 002e D7ED027A 		vldr.32	s15, [r7, #8]
 1281 0032 76EEE77A 		vsub.f32	s15, s13, s15
 1282              		.loc 7 182 43
 1283 0036 27EE277A 		vmul.f32	s14, s14, s15
 1284              		.loc 7 182 26
 1285 003a D7ED027A 		vldr.32	s15, [r7, #8]
 1286 003e 77EE277A 		vadd.f32	s15, s14, s15
 1287 0042 97ED011A 		vldr.32	s2, [r7, #4]
 1288 0046 D7ED020A 		vldr.32	s1, [r7, #8]
 1289 004a B0EE670A 		vmov.f32	s0, s15
 1290 004e FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 1291 0052 F0EE407A 		vmov.f32	s15, s0
 1292              		.loc 7 182 66
 1293 0056 47E0     		b	.L54
 1294              	.L52:
 1295              	.LBB18:
 183:../DaisySP/Source/Utility/dsp.h ****         case Mapping::LOG:
 184:../DaisySP/Source/Utility/dsp.h ****         {
 185:../DaisySP/Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 1296              		.loc 7 185 41
 1297 0058 97ED017A 		vldr.32	s14, [r7, #4]
 1298 005c D7ED027A 		vldr.32	s15, [r7, #8]
 1299 0060 C7EE276A 		vdiv.f32	s13, s14, s15
 1300 0064 B0EE660A 		vmov.f32	s0, s13
 1301 0068 FFF7FEFF 		bl	log10f
 1302 006c B0EE407A 		vmov.f32	s14, s0
 1303              		.loc 7 185 51
 1304 0070 F7EE006A 		vmov.f32	s13, #1.0e+0
 1305 0074 C6EE877A 		vdiv.f32	s15, s13, s14
 1306 0078 C7ED057A 		vstr.32	s15, [r7, #20]
 186:../DaisySP/Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 1307              		.loc 7 186 37
 1308 007c 97ED037A 		vldr.32	s14, [r7, #12]
 1309 0080 D7ED057A 		vldr.32	s15, [r7, #20]
 1310 0084 C7EE276A 		vdiv.f32	s13, s14, s15
 1311 0088 F0EE660A 		vmov.f32	s1, s13
 1312 008c B2EE040A 		vmov.f32	s0, #1.0e+1
 1313 0090 FFF7FEFF 		bl	powf
 1314 0094 B0EE407A 		vmov.f32	s14, s0
 1315              		.loc 7 186 26
 1316 0098 D7ED027A 		vldr.32	s15, [r7, #8]
 1317 009c 67EE277A 		vmul.f32	s15, s14, s15
 1318 00a0 97ED011A 		vldr.32	s2, [r7, #4]
 1319 00a4 D7ED020A 		vldr.32	s1, [r7, #8]
 1320 00a8 B0EE670A 		vmov.f32	s0, s15
 1321 00ac FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 1322 00b0 F0EE407A 		vmov.f32	s15, s0
 1323              		.loc 7 186 59
 1324 00b4 18E0     		b	.L54
 1325              	.L55:
 1326              	.LBE18:
 187:../DaisySP/Source/Utility/dsp.h ****         }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 35


 188:../DaisySP/Source/Utility/dsp.h ****         case Mapping::LINEAR:
 189:../DaisySP/Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 1327              		.loc 7 189 48
 1328 00b6 97ED017A 		vldr.32	s14, [r7, #4]
 1329 00ba D7ED027A 		vldr.32	s15, [r7, #8]
 1330 00be 37EE677A 		vsub.f32	s14, s14, s15
 1331              		.loc 7 189 41
 1332 00c2 D7ED037A 		vldr.32	s15, [r7, #12]
 1333 00c6 27EE277A 		vmul.f32	s14, s14, s15
 1334              		.loc 7 189 31
 1335 00ca D7ED027A 		vldr.32	s15, [r7, #8]
 1336 00ce 77EE277A 		vadd.f32	s15, s14, s15
 1337 00d2 97ED011A 		vldr.32	s2, [r7, #4]
 1338 00d6 D7ED020A 		vldr.32	s1, [r7, #8]
 1339 00da B0EE670A 		vmov.f32	s0, s15
 1340 00de FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 1341 00e2 F0EE407A 		vmov.f32	s15, s0
 1342              		.loc 7 189 64
 1343 00e6 00BF     		nop
 1344              	.L54:
 1345              	.LBE17:
 1346              	.LBE16:
 190:../DaisySP/Source/Utility/dsp.h ****     }
 191:../DaisySP/Source/Utility/dsp.h **** }
 1347              		.loc 7 191 1
 1348 00e8 B0EE670A 		vmov.f32	s0, s15
 1349 00ec 1837     		adds	r7, r7, #24
 1350              		.cfi_def_cfa_offset 8
 1351 00ee BD46     		mov	sp, r7
 1352              		.cfi_def_cfa_register 13
 1353              		@ sp needed
 1354 00f0 80BD     		pop	{r7, pc}
 1355              		.cfi_endproc
 1356              	.LFE4229:
 1358              		.section	.text._ZN7daisysp7OnePole4InitEv,"axG",%progbits,_ZN7daisysp7OnePole4InitEv,comdat
 1359              		.align	1
 1360              		.weak	_ZN7daisysp7OnePole4InitEv
 1361              		.syntax unified
 1362              		.thumb
 1363              		.thumb_func
 1365              	_ZN7daisysp7OnePole4InitEv:
 1366              	.LFB4460:
 1367              		.file 8 "../DaisySP/Source/Filters/onepole.h"
   1:../DaisySP/Source/Filters/onepole.h **** /*
   2:../DaisySP/Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Filters/onepole.h **** 
   4:../DaisySP/Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Filters/onepole.h **** */
   8:../DaisySP/Source/Filters/onepole.h **** 
   9:../DaisySP/Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../DaisySP/Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../DaisySP/Source/Filters/onepole.h **** 
  12:../DaisySP/Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../DaisySP/Source/Filters/onepole.h **** #include <cmath>
  14:../DaisySP/Source/Filters/onepole.h **** #include <algorithm>
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 36


  15:../DaisySP/Source/Filters/onepole.h **** 
  16:../DaisySP/Source/Filters/onepole.h **** namespace daisysp
  17:../DaisySP/Source/Filters/onepole.h **** {
  18:../DaisySP/Source/Filters/onepole.h **** /**         
  19:../DaisySP/Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../DaisySP/Source/Filters/onepole.h ****     @author beserge
  21:../DaisySP/Source/Filters/onepole.h ****     @date Dec 2023 
  22:../DaisySP/Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../DaisySP/Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../DaisySP/Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../DaisySP/Source/Filters/onepole.h **** */
  26:../DaisySP/Source/Filters/onepole.h **** class OnePole
  27:../DaisySP/Source/Filters/onepole.h **** {
  28:../DaisySP/Source/Filters/onepole.h ****   public:
  29:../DaisySP/Source/Filters/onepole.h ****     OnePole() {}
  30:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
  31:../DaisySP/Source/Filters/onepole.h **** 
  32:../DaisySP/Source/Filters/onepole.h ****     /**
  33:../DaisySP/Source/Filters/onepole.h ****      * @brief Operational modes of the filter
  34:../DaisySP/Source/Filters/onepole.h ****      * - LOW_PASS = cuts out high frequency sound, lets low frequency sound pass through
  35:../DaisySP/Source/Filters/onepole.h ****      * - HIGH_PASS = cuts out low frequency sound, lets high frequency sound pass through
  36:../DaisySP/Source/Filters/onepole.h ****      */
  37:../DaisySP/Source/Filters/onepole.h ****     enum FilterMode
  38:../DaisySP/Source/Filters/onepole.h ****     {
  39:../DaisySP/Source/Filters/onepole.h ****         FILTER_MODE_LOW_PASS,
  40:../DaisySP/Source/Filters/onepole.h ****         FILTER_MODE_HIGH_PASS
  41:../DaisySP/Source/Filters/onepole.h ****     };
  42:../DaisySP/Source/Filters/onepole.h **** 
  43:../DaisySP/Source/Filters/onepole.h ****     /** Initializes the module */
  44:../DaisySP/Source/Filters/onepole.h ****     void Init()
 1368              		.loc 8 44 10
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 8
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 82B0     		sub	sp, sp, #8
 1377              		.cfi_def_cfa_offset 16
 1378 0004 00AF     		add	r7, sp, #0
 1379              		.cfi_def_cfa_register 7
 1380 0006 7860     		str	r0, [r7, #4]
  45:../DaisySP/Source/Filters/onepole.h ****     {
  46:../DaisySP/Source/Filters/onepole.h ****         Reset();
 1381              		.loc 8 46 14
 1382 0008 7868     		ldr	r0, [r7, #4]
 1383 000a FFF7FEFF 		bl	_ZN7daisysp7OnePole5ResetEv
  47:../DaisySP/Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
 1384              		.loc 8 47 15
 1385 000e 7B68     		ldr	r3, [r7, #4]
 1386 0010 0022     		movs	r2, #0
 1387 0012 1A73     		strb	r2, [r3, #12]
  48:../DaisySP/Source/Filters/onepole.h ****     }
 1388              		.loc 8 48 5
 1389 0014 00BF     		nop
 1390 0016 0837     		adds	r7, r7, #8
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 37


 1391              		.cfi_def_cfa_offset 8
 1392 0018 BD46     		mov	sp, r7
 1393              		.cfi_def_cfa_register 13
 1394              		@ sp needed
 1395 001a 80BD     		pop	{r7, pc}
 1396              		.cfi_endproc
 1397              	.LFE4460:
 1399              		.section	.text._ZN7daisysp7OnePole5ResetEv,"axG",%progbits,_ZN7daisysp7OnePole5ResetEv,comdat
 1400              		.align	1
 1401              		.weak	_ZN7daisysp7OnePole5ResetEv
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1406              	_ZN7daisysp7OnePole5ResetEv:
 1407              	.LFB4461:
  49:../DaisySP/Source/Filters/onepole.h **** 
  50:../DaisySP/Source/Filters/onepole.h ****     /** Reset the module to its default state */
  51:../DaisySP/Source/Filters/onepole.h ****     inline void Reset() { state_ = 0.0f; }
 1408              		.loc 8 51 17
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 8
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413 0000 80B4     		push	{r7}
 1414              		.cfi_def_cfa_offset 4
 1415              		.cfi_offset 7, -4
 1416 0002 83B0     		sub	sp, sp, #12
 1417              		.cfi_def_cfa_offset 16
 1418 0004 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
 1420 0006 7860     		str	r0, [r7, #4]
 1421              		.loc 8 51 34
 1422 0008 7B68     		ldr	r3, [r7, #4]
 1423 000a 4FF00002 		mov	r2, #0
 1424 000e 9A60     		str	r2, [r3, #8]	@ float
 1425              		.loc 8 51 42
 1426 0010 00BF     		nop
 1427 0012 0C37     		adds	r7, r7, #12
 1428              		.cfi_def_cfa_offset 4
 1429 0014 BD46     		mov	sp, r7
 1430              		.cfi_def_cfa_register 13
 1431              		@ sp needed
 1432 0016 5DF8047B 		ldr	r7, [sp], #4
 1433              		.cfi_restore 7
 1434              		.cfi_def_cfa_offset 0
 1435 001a 7047     		bx	lr
 1436              		.cfi_endproc
 1437              	.LFE4461:
 1439              		.section	.text._ZN7daisysp7OnePole12SetFrequencyEf,"axG",%progbits,_ZN7daisysp7OnePole12SetFrequen
 1440              		.align	1
 1441              		.weak	_ZN7daisysp7OnePole12SetFrequencyEf
 1442              		.syntax unified
 1443              		.thumb
 1444              		.thumb_func
 1446              	_ZN7daisysp7OnePole12SetFrequencyEf:
 1447              	.LFB4462:
  52:../DaisySP/Source/Filters/onepole.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 38


  53:../DaisySP/Source/Filters/onepole.h ****     /** Set the filter cutoff frequency
  54:../DaisySP/Source/Filters/onepole.h ****     *   \param freq Cutoff frequency. Valid range from 0 to .497f
  55:../DaisySP/Source/Filters/onepole.h ****     */
  56:../DaisySP/Source/Filters/onepole.h ****     inline void SetFrequency(float freq)
 1448              		.loc 8 56 17
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 8
 1451              		@ frame_needed = 1, uses_anonymous_args = 0
 1452 0000 80B5     		push	{r7, lr}
 1453              		.cfi_def_cfa_offset 8
 1454              		.cfi_offset 7, -8
 1455              		.cfi_offset 14, -4
 1456 0002 82B0     		sub	sp, sp, #8
 1457              		.cfi_def_cfa_offset 16
 1458 0004 00AF     		add	r7, sp, #0
 1459              		.cfi_def_cfa_register 7
 1460 0006 7860     		str	r0, [r7, #4]
 1461 0008 87ED000A 		vstr.32	s0, [r7]
  57:../DaisySP/Source/Filters/onepole.h ****     {
  58:../DaisySP/Source/Filters/onepole.h ****         // Clip coefficient to about 100.
  59:../DaisySP/Source/Filters/onepole.h ****         freq = freq < 0.497f ? freq : 0.497f;
 1462              		.loc 8 59 30
 1463 000c D7ED007A 		vldr.32	s15, [r7]
 1464 0010 9FED157A 		vldr.32	s14, .L64
 1465 0014 F4EEC77A 		vcmpe.f32	s15, s14
 1466 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1467 001c 01D5     		bpl	.L63
 1468              		.loc 8 59 30 is_stmt 0 discriminator 1
 1469 001e 3B68     		ldr	r3, [r7]	@ float
 1470 0020 00E0     		b	.L61
 1471              	.L63:
 1472              		.loc 8 59 30 discriminator 2
 1473 0022 124B     		ldr	r3, .L64+4
 1474              	.L61:
 1475              		.loc 8 59 14 is_stmt 1 discriminator 4
 1476 0024 3B60     		str	r3, [r7]	@ float
  60:../DaisySP/Source/Filters/onepole.h **** 
  61:../DaisySP/Source/Filters/onepole.h ****         g_  = tanf(PI_F * freq);
 1477              		.loc 8 61 19 discriminator 4
 1478 0026 D7ED007A 		vldr.32	s15, [r7]
 1479 002a 9FED117A 		vldr.32	s14, .L64+8
 1480 002e 67EE877A 		vmul.f32	s15, s15, s14
 1481 0032 B0EE670A 		vmov.f32	s0, s15
 1482 0036 FFF7FEFF 		bl	tanf
 1483 003a F0EE407A 		vmov.f32	s15, s0
 1484              		.loc 8 61 13 discriminator 4
 1485 003e 7B68     		ldr	r3, [r7, #4]
 1486 0040 C3ED007A 		vstr.32	s15, [r3]
  62:../DaisySP/Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1487              		.loc 8 62 28 discriminator 4
 1488 0044 7B68     		ldr	r3, [r7, #4]
 1489 0046 D3ED007A 		vldr.32	s15, [r3]
 1490              		.loc 8 62 26 discriminator 4
 1491 004a B7EE007A 		vmov.f32	s14, #1.0e+0
 1492 004e 37EE877A 		vadd.f32	s14, s15, s14
 1493              		.loc 8 62 19 discriminator 4
 1494 0052 F7EE006A 		vmov.f32	s13, #1.0e+0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 39


 1495 0056 C6EE877A 		vdiv.f32	s15, s13, s14
 1496              		.loc 8 62 13 discriminator 4
 1497 005a 7B68     		ldr	r3, [r7, #4]
 1498 005c C3ED017A 		vstr.32	s15, [r3, #4]
  63:../DaisySP/Source/Filters/onepole.h ****     }
 1499              		.loc 8 63 5 discriminator 4
 1500 0060 00BF     		nop
 1501 0062 0837     		adds	r7, r7, #8
 1502              		.cfi_def_cfa_offset 8
 1503 0064 BD46     		mov	sp, r7
 1504              		.cfi_def_cfa_register 13
 1505              		@ sp needed
 1506 0066 80BD     		pop	{r7, pc}
 1507              	.L65:
 1508              		.align	2
 1509              	.L64:
 1510 0068 C976FE3E 		.word	1056863945
 1511 006c C976FE3E 		.word	1056863945
 1512 0070 DB0F4940 		.word	1078530011
 1513              		.cfi_endproc
 1514              	.LFE4462:
 1516              		.section	.text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE,"axG",%progbits,_ZN7daisysp7On
 1517              		.align	1
 1518              		.weak	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
 1519              		.syntax unified
 1520              		.thumb
 1521              		.thumb_func
 1523              	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:
 1524              	.LFB4463:
  64:../DaisySP/Source/Filters/onepole.h **** 
  65:../DaisySP/Source/Filters/onepole.h ****     /** Set the filter mode
  66:../DaisySP/Source/Filters/onepole.h ****     *   \param mode Filter mode. Can be lowpass or highpass
  67:../DaisySP/Source/Filters/onepole.h ****     */
  68:../DaisySP/Source/Filters/onepole.h ****     inline void SetFilterMode(FilterMode mode) { mode_ = mode; }
 1525              		.loc 8 68 17
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 8
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529              		@ link register save eliminated.
 1530 0000 80B4     		push	{r7}
 1531              		.cfi_def_cfa_offset 4
 1532              		.cfi_offset 7, -4
 1533 0002 83B0     		sub	sp, sp, #12
 1534              		.cfi_def_cfa_offset 16
 1535 0004 00AF     		add	r7, sp, #0
 1536              		.cfi_def_cfa_register 7
 1537 0006 7860     		str	r0, [r7, #4]
 1538 0008 0B46     		mov	r3, r1
 1539 000a FB70     		strb	r3, [r7, #3]
 1540              		.loc 8 68 56
 1541 000c 7B68     		ldr	r3, [r7, #4]
 1542 000e FA78     		ldrb	r2, [r7, #3]
 1543 0010 1A73     		strb	r2, [r3, #12]
 1544              		.loc 8 68 64
 1545 0012 00BF     		nop
 1546 0014 0C37     		adds	r7, r7, #12
 1547              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 40


 1548 0016 BD46     		mov	sp, r7
 1549              		.cfi_def_cfa_register 13
 1550              		@ sp needed
 1551 0018 5DF8047B 		ldr	r7, [sp], #4
 1552              		.cfi_restore 7
 1553              		.cfi_def_cfa_offset 0
 1554 001c 7047     		bx	lr
 1555              		.cfi_endproc
 1556              	.LFE4463:
 1558              		.section	.text._ZN7daisysp7OnePole7ProcessEf,"axG",%progbits,_ZN7daisysp7OnePole7ProcessEf,comdat
 1559              		.align	1
 1560              		.weak	_ZN7daisysp7OnePole7ProcessEf
 1561              		.syntax unified
 1562              		.thumb
 1563              		.thumb_func
 1565              	_ZN7daisysp7OnePole7ProcessEf:
 1566              	.LFB4464:
  69:../DaisySP/Source/Filters/onepole.h **** 
  70:../DaisySP/Source/Filters/onepole.h ****     /** Process audio through the filter
  71:../DaisySP/Source/Filters/onepole.h ****     *   \param in The next sample to be processed
  72:../DaisySP/Source/Filters/onepole.h ****     */
  73:../DaisySP/Source/Filters/onepole.h ****     inline float Process(float in)
 1567              		.loc 8 73 18
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 16
 1570              		@ frame_needed = 1, uses_anonymous_args = 0
 1571              		@ link register save eliminated.
 1572 0000 80B4     		push	{r7}
 1573              		.cfi_def_cfa_offset 4
 1574              		.cfi_offset 7, -4
 1575 0002 85B0     		sub	sp, sp, #20
 1576              		.cfi_def_cfa_offset 24
 1577 0004 00AF     		add	r7, sp, #0
 1578              		.cfi_def_cfa_register 7
 1579 0006 7860     		str	r0, [r7, #4]
 1580 0008 87ED000A 		vstr.32	s0, [r7]
  74:../DaisySP/Source/Filters/onepole.h ****     {
  75:../DaisySP/Source/Filters/onepole.h ****         float lp;
  76:../DaisySP/Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 1581              		.loc 8 76 19
 1582 000c 7B68     		ldr	r3, [r7, #4]
 1583 000e 93ED007A 		vldr.32	s14, [r3]
 1584              		.loc 8 76 22
 1585 0012 D7ED007A 		vldr.32	s15, [r7]
 1586 0016 27EE277A 		vmul.f32	s14, s14, s15
 1587              		.loc 8 76 29
 1588 001a 7B68     		ldr	r3, [r7, #4]
 1589 001c D3ED027A 		vldr.32	s15, [r3, #8]
 1590              		.loc 8 76 27
 1591 0020 37EE277A 		vadd.f32	s14, s14, s15
 1592              		.loc 8 76 39
 1593 0024 7B68     		ldr	r3, [r7, #4]
 1594 0026 D3ED017A 		vldr.32	s15, [r3, #4]
 1595              		.loc 8 76 16
 1596 002a 67EE277A 		vmul.f32	s15, s14, s15
 1597 002e C7ED037A 		vstr.32	s15, [r7, #12]
  77:../DaisySP/Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 41


 1598              		.loc 8 77 18
 1599 0032 7B68     		ldr	r3, [r7, #4]
 1600 0034 93ED007A 		vldr.32	s14, [r3]
 1601              		.loc 8 77 27
 1602 0038 D7ED006A 		vldr.32	s13, [r7]
 1603 003c D7ED037A 		vldr.32	s15, [r7, #12]
 1604 0040 76EEE77A 		vsub.f32	s15, s13, s15
 1605              		.loc 8 77 21
 1606 0044 27EE277A 		vmul.f32	s14, s14, s15
 1607              		.loc 8 77 33
 1608 0048 D7ED037A 		vldr.32	s15, [r7, #12]
 1609 004c 77EE277A 		vadd.f32	s15, s14, s15
 1610              		.loc 8 77 16
 1611 0050 7B68     		ldr	r3, [r7, #4]
 1612 0052 C3ED027A 		vstr.32	s15, [r3, #8]
  78:../DaisySP/Source/Filters/onepole.h **** 
  79:../DaisySP/Source/Filters/onepole.h ****         switch(mode_)
 1613              		.loc 8 79 16
 1614 0056 7B68     		ldr	r3, [r7, #4]
 1615 0058 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1616              		.loc 8 79 9
 1617 005a 002B     		cmp	r3, #0
 1618 005c 02D0     		beq	.L68
 1619 005e 012B     		cmp	r3, #1
 1620 0060 03D0     		beq	.L69
 1621 0062 09E0     		b	.L72
 1622              	.L68:
  80:../DaisySP/Source/Filters/onepole.h ****         {
  81:../DaisySP/Source/Filters/onepole.h ****             case FILTER_MODE_LOW_PASS: return lp;
 1623              		.loc 8 81 47
 1624 0064 D7ED037A 		vldr.32	s15, [r7, #12]
 1625 0068 08E0     		b	.L71
 1626              	.L69:
  82:../DaisySP/Source/Filters/onepole.h ****             case FILTER_MODE_HIGH_PASS: return in - lp;
 1627              		.loc 8 82 53
 1628 006a 97ED007A 		vldr.32	s14, [r7]
 1629 006e D7ED037A 		vldr.32	s15, [r7, #12]
 1630 0072 77EE677A 		vsub.f32	s15, s14, s15
 1631 0076 01E0     		b	.L71
 1632              	.L72:
  83:../DaisySP/Source/Filters/onepole.h ****         }
  84:../DaisySP/Source/Filters/onepole.h **** 
  85:../DaisySP/Source/Filters/onepole.h ****         return 0.0f;
 1633              		.loc 8 85 16
 1634 0078 DFED047A 		vldr.32	s15, .L73
 1635              	.L71:
  86:../DaisySP/Source/Filters/onepole.h ****     }
 1636              		.loc 8 86 5
 1637 007c B0EE670A 		vmov.f32	s0, s15
 1638 0080 1437     		adds	r7, r7, #20
 1639              		.cfi_def_cfa_offset 4
 1640 0082 BD46     		mov	sp, r7
 1641              		.cfi_def_cfa_register 13
 1642              		@ sp needed
 1643 0084 5DF8047B 		ldr	r7, [sp], #4
 1644              		.cfi_restore 7
 1645              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 42


 1646 0088 7047     		bx	lr
 1647              	.L74:
 1648 008a 00BF     		.align	2
 1649              	.L73:
 1650 008c 00000000 		.word	0
 1651              		.cfi_endproc
 1652              	.LFE4464:
 1654              		.section	.text._ZN7daisysp8ReverbSc6SetMixEf,"axG",%progbits,_ZN7daisysp8ReverbSc6SetMixEf,comdat
 1655              		.align	1
 1656              		.weak	_ZN7daisysp8ReverbSc6SetMixEf
 1657              		.syntax unified
 1658              		.thumb
 1659              		.thumb_func
 1661              	_ZN7daisysp8ReverbSc6SetMixEf:
 1662              	.LFB4746:
 1663              		.file 9 "../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Copyright (c) 2023 Electrosmith, Corp, Sean Costello, Istvan Varga, Paul Batchelor
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** // #define DSY_REVERBSC_MAX_SIZE 49468
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** typedef struct
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
  31:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** } ReverbScDl;
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /** Stereo Reverb */
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** class ReverbSc
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****   public:
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ReverbSc() {}
  39:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
  40:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /** Initializes the reverb module, and sets the sample_rate at which the Process function will 
  41:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****         Returns 0 if all good, or 1 if it runs out of delay times exceed maximum allowed.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 43


  42:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     */
  43:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int Init(float sample_rate);
  44:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  45:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /** Process the input through the reverb, and updates values of out1, and out2 with the new pro
  46:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     */
  47:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int Process(const float &in1, const float &in2, float *out1, float *out2);
  48:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  49:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /* process using a simple wet/dry mix */
  50:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     void ProcessMix(const float &in1, const float &in2, float *out1, float *out2);
  51:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     void SetMix(float mix) { wet_mix_ = mix; }
 1664              		.loc 9 51 10
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 8
 1667              		@ frame_needed = 1, uses_anonymous_args = 0
 1668              		@ link register save eliminated.
 1669 0000 80B4     		push	{r7}
 1670              		.cfi_def_cfa_offset 4
 1671              		.cfi_offset 7, -4
 1672 0002 83B0     		sub	sp, sp, #12
 1673              		.cfi_def_cfa_offset 16
 1674 0004 00AF     		add	r7, sp, #0
 1675              		.cfi_def_cfa_register 7
 1676 0006 7860     		str	r0, [r7, #4]
 1677 0008 87ED000A 		vstr.32	s0, [r7]
 1678              		.loc 9 51 39
 1679 000c 7B68     		ldr	r3, [r7, #4]
 1680 000e 03F5C023 		add	r3, r3, #393216
 1681 0012 03F64433 		addw	r3, r3, #2884
 1682 0016 3A68     		ldr	r2, [r7]	@ float
 1683 0018 1A60     		str	r2, [r3]	@ float
 1684              		.loc 9 51 46
 1685 001a 00BF     		nop
 1686 001c 0C37     		adds	r7, r7, #12
 1687              		.cfi_def_cfa_offset 4
 1688 001e BD46     		mov	sp, r7
 1689              		.cfi_def_cfa_register 13
 1690              		@ sp needed
 1691 0020 5DF8047B 		ldr	r7, [sp], #4
 1692              		.cfi_restore 7
 1693              		.cfi_def_cfa_offset 0
 1694 0024 7047     		bx	lr
 1695              		.cfi_endproc
 1696              	.LFE4746:
 1698              		.section	.text._ZN7daisysp8ReverbSc11SetFeedbackERKf,"axG",%progbits,_ZN7daisysp8ReverbSc11SetFeed
 1699              		.align	1
 1700              		.weak	_ZN7daisysp8ReverbSc11SetFeedbackERKf
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1705              	_ZN7daisysp8ReverbSc11SetFeedbackERKf:
 1706              	.LFB4747:
  52:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     
  53:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /** controls the reverb time. reverb tail becomes infinite when set to 1.0
  54:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****         \param fb - sets reverb time. range: 0.0 to 1.0
  55:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     */
  56:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     inline void SetFeedback(const float &fb) { feedback_ = fb; }
 1707              		.loc 9 56 17
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 44


 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 8
 1710              		@ frame_needed = 1, uses_anonymous_args = 0
 1711              		@ link register save eliminated.
 1712 0000 80B4     		push	{r7}
 1713              		.cfi_def_cfa_offset 4
 1714              		.cfi_offset 7, -4
 1715 0002 83B0     		sub	sp, sp, #12
 1716              		.cfi_def_cfa_offset 16
 1717 0004 00AF     		add	r7, sp, #0
 1718              		.cfi_def_cfa_register 7
 1719 0006 7860     		str	r0, [r7, #4]
 1720 0008 3960     		str	r1, [r7]
 1721              		.loc 9 56 60
 1722 000a 3B68     		ldr	r3, [r7]
 1723 000c 1A68     		ldr	r2, [r3]	@ float
 1724              		.loc 9 56 58
 1725 000e 7B68     		ldr	r3, [r7, #4]
 1726 0010 1A60     		str	r2, [r3]	@ float
 1727              		.loc 9 56 64
 1728 0012 00BF     		nop
 1729 0014 0C37     		adds	r7, r7, #12
 1730              		.cfi_def_cfa_offset 4
 1731 0016 BD46     		mov	sp, r7
 1732              		.cfi_def_cfa_register 13
 1733              		@ sp needed
 1734 0018 5DF8047B 		ldr	r7, [sp], #4
 1735              		.cfi_restore 7
 1736              		.cfi_def_cfa_offset 0
 1737 001c 7047     		bx	lr
 1738              		.cfi_endproc
 1739              	.LFE4747:
 1741              		.section	.text._ZN7daisysp10MoogLadder7SetFreqEf,"axG",%progbits,_ZN7daisysp10MoogLadder7SetFreqEf
 1742              		.align	1
 1743              		.weak	_ZN7daisysp10MoogLadder7SetFreqEf
 1744              		.syntax unified
 1745              		.thumb
 1746              		.thumb_func
 1748              	_ZN7daisysp10MoogLadder7SetFreqEf:
 1749              	.LFB4796:
 1750              		.file 10 "../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Copyright (c) 2023 Electrosmith, Corp, Victor Lazzarini, John ffitch (fast tanh), Bob Moog
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifndef DSY_MOOGLADDER_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #define DSY_MOOGLADDER_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #include <stdint.h>
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifdef __cplusplus
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** namespace daisysp
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 45


  17:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /** Moog ladder filter module*/
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** class MoogLadder
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****   public:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     MoogLadder() {}
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** Initializes the MoogLadder module.
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         sample_rate - The sample rate of the audio engine being run. 
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     void Init(float sample_rate);
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** Processes the lowpass filter
  31:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     float Process(float in);
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** 
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         Sets the cutoff frequency or half-way point of the filter.
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         Arguments
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         - freq - frequency value in Hz. Range: Any positive value.
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  39:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     inline void SetFreq(float freq) { freq_ = freq; }
 1751              		.loc 10 39 17
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 8
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755              		@ link register save eliminated.
 1756 0000 80B4     		push	{r7}
 1757              		.cfi_def_cfa_offset 4
 1758              		.cfi_offset 7, -4
 1759 0002 83B0     		sub	sp, sp, #12
 1760              		.cfi_def_cfa_offset 16
 1761 0004 00AF     		add	r7, sp, #0
 1762              		.cfi_def_cfa_register 7
 1763 0006 7860     		str	r0, [r7, #4]
 1764 0008 87ED000A 		vstr.32	s0, [r7]
 1765              		.loc 10 39 45
 1766 000c 7B68     		ldr	r3, [r7, #4]
 1767 000e 3A68     		ldr	r2, [r7]	@ float
 1768 0010 9A60     		str	r2, [r3, #8]	@ float
 1769              		.loc 10 39 53
 1770 0012 00BF     		nop
 1771 0014 0C37     		adds	r7, r7, #12
 1772              		.cfi_def_cfa_offset 4
 1773 0016 BD46     		mov	sp, r7
 1774              		.cfi_def_cfa_register 13
 1775              		@ sp needed
 1776 0018 5DF8047B 		ldr	r7, [sp], #4
 1777              		.cfi_restore 7
 1778              		.cfi_def_cfa_offset 0
 1779 001c 7047     		bx	lr
 1780              		.cfi_endproc
 1781              	.LFE4796:
 1783              		.section	.text._ZN7daisysp10MoogLadder6SetResEf,"axG",%progbits,_ZN7daisysp10MoogLadder6SetResEf,c
 1784              		.align	1
 1785              		.weak	_ZN7daisysp10MoogLadder6SetResEf
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 46


 1786              		.syntax unified
 1787              		.thumb
 1788              		.thumb_func
 1790              	_ZN7daisysp10MoogLadder6SetResEf:
 1791              	.LFB4797:
  40:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** 
  41:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         Sets the resonance of the filter.
  42:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  43:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     inline void SetRes(float res) { res_ = res; }
 1792              		.loc 10 43 17
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 8
 1795              		@ frame_needed = 1, uses_anonymous_args = 0
 1796              		@ link register save eliminated.
 1797 0000 80B4     		push	{r7}
 1798              		.cfi_def_cfa_offset 4
 1799              		.cfi_offset 7, -4
 1800 0002 83B0     		sub	sp, sp, #12
 1801              		.cfi_def_cfa_offset 16
 1802 0004 00AF     		add	r7, sp, #0
 1803              		.cfi_def_cfa_register 7
 1804 0006 7860     		str	r0, [r7, #4]
 1805 0008 87ED000A 		vstr.32	s0, [r7]
 1806              		.loc 10 43 42
 1807 000c 7B68     		ldr	r3, [r7, #4]
 1808 000e 3A68     		ldr	r2, [r7]	@ float
 1809 0010 5A60     		str	r2, [r3, #4]	@ float
 1810              		.loc 10 43 49
 1811 0012 00BF     		nop
 1812 0014 0C37     		adds	r7, r7, #12
 1813              		.cfi_def_cfa_offset 4
 1814 0016 BD46     		mov	sp, r7
 1815              		.cfi_def_cfa_register 13
 1816              		@ sp needed
 1817 0018 5DF8047B 		ldr	r7, [sp], #4
 1818              		.cfi_restore 7
 1819              		.cfi_def_cfa_offset 0
 1820 001c 7047     		bx	lr
 1821              		.cfi_endproc
 1822              	.LFE4797:
 1824              		.section	.rodata._ZL11SAMPLE_RATE,"a"
 1825              		.align	2
 1828              	_ZL11SAMPLE_RATE:
 1829 0000 80BB0000 		.word	48000
 1830              		.section	.rodata._ZL17SAMPLE_RATE_FLOAT,"a"
 1831              		.align	2
 1834              	_ZL17SAMPLE_RATE_FLOAT:
 1835 0000 00803B47 		.word	1195081728
 1836              		.section	.rodata._ZL9BIT_DEPTH,"a"
 1837              		.align	2
 1840              	_ZL9BIT_DEPTH:
 1841 0000 10000000 		.word	16
 1842              		.section	.rodata._ZL10DELAY_TIME,"a"
 1843              		.align	2
 1846              	_ZL10DELAY_TIME:
 1847 0000 00770100 		.word	96000
 1848              		.section	.rodata._ZL15MAX_REC_OUT_LEN,"a"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 47


 1849              		.align	2
 1852              	_ZL15MAX_REC_OUT_LEN:
 1853 0000 78000000 		.word	120
 1854              		.section	.rodata._ZL17CHNL_BUF_SIZE_ABS,"a"
 1855              		.align	2
 1858              	_ZL17CHNL_BUF_SIZE_ABS:
 1859 0000 00000001 		.word	16777216
 1860              		.section	.rodata._ZL19CHNL_BUF_SIZE_SAMPS,"a"
 1861              		.align	2
 1864              	_ZL19CHNL_BUF_SIZE_SAMPS:
 1865 0000 00008000 		.word	8388608
 1866              		.section	.rodata._ZL12BUF_CHUNK_SZ,"a"
 1867              		.align	2
 1870              	_ZL12BUF_CHUNK_SZ:
 1871 0000 00400000 		.word	16384
 1872              		.section	.rodata._ZL9MAX_FILES,"a"
 1873              		.align	1
 1876              	_ZL9MAX_FILES:
 1877 0000 2000     		.short	32
 1878              		.section	.rodata._ZL13MAX_FNAME_LEN,"a"
 1879              		.align	1
 1882              	_ZL13MAX_FNAME_LEN:
 1883 0000 8000     		.short	128
 1884              		.section	.rodata._ZL10MIN_GRAINS,"a"
 1885              		.align	2
 1888              	_ZL10MIN_GRAINS:
 1889 0000 01000000 		.word	1
 1890              		.section	.rodata._ZL10MAX_GRAINS,"a"
 1891              		.align	2
 1894              	_ZL10MAX_GRAINS:
 1895 0000 0A000000 		.word	10
 1896              		.section	.rodata._ZL25GRAIN_INCREASE_SMOOTHNESS,"a"
 1897              		.align	2
 1900              	_ZL25GRAIN_INCREASE_SMOOTHNESS:
 1901 0000 A4707D3F 		.word	1065185444
 1902              		.section	.rodata._ZL15NUM_SYNTH_MODES,"a"
 1903              		.align	2
 1906              	_ZL15NUM_SYNTH_MODES:
 1907 0000 07000000 		.word	7
 1908              		.section	.rodata._ZL22PARAM_CHANGE_THRESHOLD,"a"
 1909              		.align	2
 1912              	_ZL22PARAM_CHANGE_THRESHOLD:
 1913 0000 0AD7233C 		.word	1008981770
 1914              		.section	.rodata._ZL17MIN_GRAIN_SIZE_MS,"a"
 1915              		.align	2
 1918              	_ZL17MIN_GRAIN_SIZE_MS:
 1919 0000 0000C842 		.word	1120403456
 1920              		.section	.rodata._ZL17MAX_GRAIN_SIZE_MS,"a"
 1921              		.align	2
 1924              	_ZL17MAX_GRAIN_SIZE_MS:
 1925 0000 00803B45 		.word	1161527296
 1926              		.section	.rodata._ZL22MIN_GRAIN_SIZE_SAMPLES,"a"
 1927              		.align	2
 1930              	_ZL22MIN_GRAIN_SIZE_SAMPLES:
 1931 0000 C0120000 		.word	4800
 1932              		.section	.rodata._ZL22MAX_GRAIN_SIZE_SAMPLES,"a"
 1933              		.align	2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 48


 1936              	_ZL22MAX_GRAIN_SIZE_SAMPLES:
 1937 0000 80320200 		.word	144000
 1938              		.section	.rodata._ZL9MIN_PITCH,"a"
 1939              		.align	2
 1942              	_ZL9MIN_PITCH:
 1943 0000 0000003F 		.word	1056964608
 1944              		.section	.rodata._ZL9MAX_PITCH,"a"
 1945              		.align	2
 1948              	_ZL9MAX_PITCH:
 1949 0000 00004040 		.word	1077936128
 1950              		.section	.rodata._ZL14DEBOUNCE_DELAY,"a"
 1951              		.align	2
 1954              	_ZL14DEBOUNCE_DELAY:
 1955 0000 32000000 		.word	50
 1956              		.section	.rodata._ZL15LONG_PRESS_TIME,"a"
 1957              		.align	2
 1960              	_ZL15LONG_PRESS_TIME:
 1961 0000 E8030000 		.word	1000
 1962              		.section	.rodata._ZL18HIPASS_LOWER_BOUND,"a"
 1963              		.align	2
 1966              	_ZL18HIPASS_LOWER_BOUND:
 1967 0000 17B7D139 		.word	970045207
 1968              		.section	.rodata._ZL18HIPASS_UPPER_BOUND,"a"
 1969              		.align	2
 1972              	_ZL18HIPASS_UPPER_BOUND:
 1973 0000 0AD7233C 		.word	1008981770
 1974              		.section	.rodata._ZL18LOPASS_LOWER_BOUND,"a"
 1975              		.align	2
 1978              	_ZL18LOPASS_LOWER_BOUND:
 1979 0000 0000A041 		.word	1101004800
 1980              		.section	.rodata._ZL18LOPASS_UPPER_BOUND,"a"
 1981              		.align	2
 1984              	_ZL18LOPASS_UPPER_BOUND:
 1985 0000 00A08C46 		.word	1183621120
 1986              		.section	.rodata._ZL10HICUT_FREQ,"a"
 1987              		.align	2
 1990              	_ZL10HICUT_FREQ:
 1991 0000 0000B03E 		.word	1051721728
 1992              		.section	.text._ZL7SeedRngv,"ax",%progbits
 1993              		.align	1
 1994              		.syntax unified
 1995              		.thumb
 1996              		.thumb_func
 1998              	_ZL7SeedRngv:
 1999              	.LFB4852:
 2000              		.file 11 "constants_utils.h"
   1:constants_utils.h **** #pragma once
   2:constants_utils.h **** #include "stddef.h"
   3:constants_utils.h **** #include <time.h>
   4:constants_utils.h **** 
   5:constants_utils.h **** /* audio constants */
   6:constants_utils.h **** constexpr int SAMPLE_RATE = 48000;
   7:constants_utils.h **** constexpr float SAMPLE_RATE_FLOAT = 48000.f;
   8:constants_utils.h **** constexpr int BIT_DEPTH = 16;
   9:constants_utils.h **** 
  10:constants_utils.h **** /* delay line buffer size (2s @ 48kHz) */
  11:constants_utils.h **** constexpr size_t DELAY_TIME = 96000;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 49


  12:constants_utils.h **** 
  13:constants_utils.h **** /* maximum length of recording to SD card */
  14:constants_utils.h **** constexpr size_t MAX_REC_OUT_LEN = 120;
  15:constants_utils.h **** 
  16:constants_utils.h **** /* 16mb - max size of one stereo channel to be loaded into buffers */
  17:constants_utils.h **** constexpr size_t CHNL_BUF_SIZE_ABS = 16*1024*1024;
  18:constants_utils.h **** /* above is absolute size - each sample needs an int16 (2 bytes) so we do (abs_size)/2 */
  19:constants_utils.h **** constexpr size_t CHNL_BUF_SIZE_SAMPS = 8*1024*1024;
  20:constants_utils.h **** 
  21:constants_utils.h **** /* chunk size for reading audio into temporary buffer */
  22:constants_utils.h **** const size_t BUF_CHUNK_SZ = 16384;
  23:constants_utils.h **** 
  24:constants_utils.h **** /* file reading constants*/
  25:constants_utils.h **** static const uint16_t MAX_FILES = 32;                      
  26:constants_utils.h **** static const uint16_t MAX_FNAME_LEN = 128;
  27:constants_utils.h **** 
  28:constants_utils.h **** /* granular synth parameter constants */
  29:constants_utils.h **** constexpr int MIN_GRAINS = 1;
  30:constants_utils.h **** constexpr int MAX_GRAINS = 10;
  31:constants_utils.h **** /* grain count moves towards target by 0.1% every update 
  32:constants_utils.h ****   to avoid CPU overload due to rapid grain count increase
  33:constants_utils.h ****   as well as smoother sound */
  34:constants_utils.h **** constexpr float GRAIN_INCREASE_SMOOTHNESS = 0.99f;
  35:constants_utils.h **** static constexpr int NUM_SYNTH_MODES = 7;
  36:constants_utils.h **** constexpr float PARAM_CHANGE_THRESHOLD = 0.01f;
  37:constants_utils.h **** constexpr float MIN_GRAIN_SIZE_MS = 100.0f;
  38:constants_utils.h **** constexpr float MAX_GRAIN_SIZE_MS = 3000.0f;
  39:constants_utils.h **** constexpr size_t MIN_GRAIN_SIZE_SAMPLES = 4800; /* 100ms at 48kHz */
  40:constants_utils.h **** constexpr size_t MAX_GRAIN_SIZE_SAMPLES = 144000; /* 3s at 48kHz */
  41:constants_utils.h **** constexpr float MIN_PITCH = 0.5f;
  42:constants_utils.h **** constexpr float MAX_PITCH = 3.0f;
  43:constants_utils.h **** 
  44:constants_utils.h **** 
  45:constants_utils.h **** /* button event constants */
  46:constants_utils.h **** const unsigned long DEBOUNCE_DELAY = 50; 
  47:constants_utils.h **** const unsigned long LONG_PRESS_TIME = 1000;
  48:constants_utils.h **** 
  49:constants_utils.h **** /* hipass filter frequency range */
  50:constants_utils.h **** const float HIPASS_LOWER_BOUND = 0.0004f;
  51:constants_utils.h **** const float HIPASS_UPPER_BOUND = 0.01f;
  52:constants_utils.h **** 
  53:constants_utils.h **** /* lowpass filter frequency range */
  54:constants_utils.h **** const float LOPASS_LOWER_BOUND = 20.0f;
  55:constants_utils.h **** const float LOPASS_UPPER_BOUND = 18000.0f;
  56:constants_utils.h **** 
  57:constants_utils.h **** // const float HICUT_FREQ = 0.3125f; /* 15000Hz @ 48kHz sample rate */
  58:constants_utils.h **** const float HICUT_FREQ = 0.34375; /* 16500Hz @ 48kHz sample rate */
  59:constants_utils.h **** 
  60:constants_utils.h **** /* random number generator variables and helper functions */
  61:constants_utils.h **** extern uint32_t rng_state;
  62:constants_utils.h **** static inline void SeedRng(){
 2001              		.loc 11 62 29
 2002              		.cfi_startproc
 2003              		@ args = 0, pretend = 0, frame = 0
 2004              		@ frame_needed = 1, uses_anonymous_args = 0
 2005 0000 80B5     		push	{r7, lr}
 2006              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 50


 2007              		.cfi_offset 7, -8
 2008              		.cfi_offset 14, -4
 2009 0002 00AF     		add	r7, sp, #0
 2010              		.cfi_def_cfa_register 7
  63:constants_utils.h ****   rng_state = static_cast<uint32_t>(time(nullptr));
 2011              		.loc 11 63 41
 2012 0004 0020     		movs	r0, #0
 2013 0006 FFF7FEFF 		bl	time
 2014 000a 0246     		mov	r2, r0
 2015 000c 0B46     		mov	r3, r1
 2016              		.loc 11 63 13
 2017 000e 024B     		ldr	r3, .L80
 2018 0010 1A60     		str	r2, [r3]
  64:constants_utils.h **** }
 2019              		.loc 11 64 1
 2020 0012 00BF     		nop
 2021 0014 80BD     		pop	{r7, pc}
 2022              	.L81:
 2023 0016 00BF     		.align	2
 2024              	.L80:
 2025 0018 00000000 		.word	rng_state
 2026              		.cfi_endproc
 2027              	.LFE4852:
 2029              		.section	.rodata._ZL6halfpi,"a"
 2030              		.align	2
 2033              	_ZL6halfpi:
 2034 0000 DB0FC93F 		.word	1070141403
 2035              		.section	.text._ZL7FastCosf,"axG",%progbits,_ZN13StereoRotator7ProcessE6Sample,comdat
 2036              		.align	1
 2037              		.syntax unified
 2038              		.thumb
 2039              		.thumb_func
 2041              	_ZL7FastCosf:
 2042              	.LFB4857:
  65:constants_utils.h **** static inline float RngFloat(){
  66:constants_utils.h ****   /* xorshift32 from https://en.wikipedia.org/wiki/Xorshift 
  67:constants_utils.h ****   for simple fast random floats */
  68:constants_utils.h ****   rng_state ^= rng_state << 13;
  69:constants_utils.h ****   rng_state ^= rng_state >> 17;
  70:constants_utils.h ****   rng_state ^= rng_state << 5;
  71:constants_utils.h ****   /* ensures output is between 0-1 */
  72:constants_utils.h ****   float out = static_cast<float>(rng_state) / static_cast<float>(UINT32_MAX);
  73:constants_utils.h ****   return out;
  74:constants_utils.h **** }
  75:constants_utils.h **** 
  76:constants_utils.h **** /* integer clamp as can't use std::clamp */
  77:constants_utils.h **** static inline constexpr size_t intclamp(size_t val, size_t min, size_t max){
  78:constants_utils.h ****   if (val < min) val = min;
  79:constants_utils.h ****   else if (val > max) val = max;
  80:constants_utils.h ****   return val;
  81:constants_utils.h **** }
  82:constants_utils.h **** 
  83:constants_utils.h **** /* converts milliseconds to number of samples */
  84:constants_utils.h **** static inline constexpr size_t MsToSamples(float ms){
  85:constants_utils.h ****   return static_cast<size_t>(SAMPLE_RATE_FLOAT * (ms*0.001f));
  86:constants_utils.h **** }
  87:constants_utils.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 51


  88:constants_utils.h **** /* converts number of samples to milliseconds */
  89:constants_utils.h **** static inline constexpr float SamplesToMs(size_t samples){
  90:constants_utils.h ****   return (static_cast<float>(samples) * 1000.0f) / SAMPLE_RATE_FLOAT; 
  91:constants_utils.h **** }
  92:constants_utils.h **** 
  93:constants_utils.h **** /* fast cos and sin approximations
  94:constants_utils.h ****   thanks and credit to Jack Ganssle: 
  95:constants_utils.h ****   https://www.ganssle.com/item/approximations-for-trig-c-code.htm
  96:constants_utils.h ****   https://www.ganssle.com/approx/sincos.cpp
  97:constants_utils.h **** */
  98:constants_utils.h **** constexpr float halfpi = M_PI/2.0f;
  99:constants_utils.h **** 
 100:constants_utils.h **** static inline constexpr float FastCos(float x){
 2043              		.loc 11 100 47
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 24
 2046              		@ frame_needed = 1, uses_anonymous_args = 0
 2047              		@ link register save eliminated.
 2048 0000 80B4     		push	{r7}
 2049              		.cfi_def_cfa_offset 4
 2050              		.cfi_offset 7, -4
 2051 0002 87B0     		sub	sp, sp, #28
 2052              		.cfi_def_cfa_offset 32
 2053 0004 00AF     		add	r7, sp, #0
 2054              		.cfi_def_cfa_register 7
 2055 0006 87ED010A 		vstr.32	s0, [r7, #4]
 101:constants_utils.h ****   const float c1= 0.99940307;
 2056              		.loc 11 101 15
 2057 000a 124B     		ldr	r3, .L84
 2058 000c 7B61     		str	r3, [r7, #20]	@ float
 102:constants_utils.h ****   const float c2=-0.49558072;
 2059              		.loc 11 102 15
 2060 000e 124B     		ldr	r3, .L84+4
 2061 0010 3B61     		str	r3, [r7, #16]	@ float
 103:constants_utils.h ****   const float c3= 0.03679168;
 2062              		.loc 11 103 15
 2063 0012 124B     		ldr	r3, .L84+8
 2064 0014 FB60     		str	r3, [r7, #12]	@ float
 104:constants_utils.h **** 
 105:constants_utils.h ****   float x2 = x * x;
 2065              		.loc 11 105 9
 2066 0016 D7ED017A 		vldr.32	s15, [r7, #4]
 2067 001a 67EEA77A 		vmul.f32	s15, s15, s15
 2068 001e C7ED027A 		vstr.32	s15, [r7, #8]
 106:constants_utils.h ****   return (c1 + x2*(c2 + c3 * x2));
 2069              		.loc 11 106 28
 2070 0022 D7ED027A 		vldr.32	s15, [r7, #8]
 2071 0026 9FED0E7A 		vldr.32	s14, .L84+12
 2072 002a 67EE877A 		vmul.f32	s15, s15, s14
 2073              		.loc 11 106 23
 2074 002e 9FED0D7A 		vldr.32	s14, .L84+16
 2075 0032 37EEC77A 		vsub.f32	s14, s15, s14
 2076              		.loc 11 106 18
 2077 0036 D7ED027A 		vldr.32	s15, [r7, #8]
 2078 003a 67EE277A 		vmul.f32	s15, s14, s15
 2079              		.loc 11 106 33
 2080 003e 9FED0A7A 		vldr.32	s14, .L84+20
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 52


 2081 0042 77EE877A 		vadd.f32	s15, s15, s14
 107:constants_utils.h **** }
 2082              		.loc 11 107 1
 2083 0046 B0EE670A 		vmov.f32	s0, s15
 2084 004a 1C37     		adds	r7, r7, #28
 2085              		.cfi_def_cfa_offset 4
 2086 004c BD46     		mov	sp, r7
 2087              		.cfi_def_cfa_register 13
 2088              		@ sp needed
 2089 004e 5DF8047B 		ldr	r7, [sp], #4
 2090              		.cfi_restore 7
 2091              		.cfi_def_cfa_offset 0
 2092 0052 7047     		bx	lr
 2093              	.L85:
 2094              		.align	2
 2095              	.L84:
 2096 0054 E1D87F3F 		.word	1065343201
 2097 0058 C2BCFDBE 		.word	-1090667326
 2098 005c DFB2163D 		.word	1024897759
 2099 0060 DFB2163D 		.word	1024897759
 2100 0064 C2BCFD3E 		.word	1056816322
 2101 0068 E1D87F3F 		.word	1065343201
 2102              		.cfi_endproc
 2103              	.LFE4857:
 2105              		.section	.text._ZL7FastSinf,"axG",%progbits,_ZN13StereoRotator7ProcessE6Sample,comdat
 2106              		.align	1
 2107              		.syntax unified
 2108              		.thumb
 2109              		.thumb_func
 2111              	_ZL7FastSinf:
 2112              	.LFB4858:
 108:constants_utils.h **** 
 109:constants_utils.h **** 
 110:constants_utils.h **** static inline constexpr float FastSin(float x){
 2113              		.loc 11 110 47
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 8
 2116              		@ frame_needed = 1, uses_anonymous_args = 0
 2117 0000 80B5     		push	{r7, lr}
 2118              		.cfi_def_cfa_offset 8
 2119              		.cfi_offset 7, -8
 2120              		.cfi_offset 14, -4
 2121 0002 82B0     		sub	sp, sp, #8
 2122              		.cfi_def_cfa_offset 16
 2123 0004 00AF     		add	r7, sp, #0
 2124              		.cfi_def_cfa_register 7
 2125 0006 87ED010A 		vstr.32	s0, [r7, #4]
 111:constants_utils.h **** 	return FastCos(halfpi-x);
 2126              		.loc 11 111 16
 2127 000a 9FED087A 		vldr.32	s14, .L88
 2128 000e D7ED017A 		vldr.32	s15, [r7, #4]
 2129 0012 77EE677A 		vsub.f32	s15, s14, s15
 2130 0016 B0EE670A 		vmov.f32	s0, s15
 2131 001a FFF7FEFF 		bl	_ZL7FastCosf
 2132 001e F0EE407A 		vmov.f32	s15, s0
 112:constants_utils.h **** }
 2133              		.loc 11 112 1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 53


 2134 0022 B0EE670A 		vmov.f32	s0, s15
 2135 0026 0837     		adds	r7, r7, #8
 2136              		.cfi_def_cfa_offset 8
 2137 0028 BD46     		mov	sp, r7
 2138              		.cfi_def_cfa_register 13
 2139              		@ sp needed
 2140 002a 80BD     		pop	{r7, pc}
 2141              	.L89:
 2142              		.align	2
 2143              	.L88:
 2144 002c DB0FC93F 		.word	1070141403
 2145              		.cfi_endproc
 2146              	.LFE4858:
 2148              		.section	.text._ZL22NormaliseRotationAnglef,"axG",%progbits,_ZN13StereoRotator7ProcessE6Sample,com
 2149              		.align	1
 2150              		.syntax unified
 2151              		.thumb
 2152              		.thumb_func
 2154              	_ZL22NormaliseRotationAnglef:
 2155              	.LFB4859:
 113:constants_utils.h **** 
 114:constants_utils.h **** /* keep angle of rotation within bounds +-pi */
 115:constants_utils.h **** static inline constexpr float NormaliseRotationAngle(float rotation){
 2156              		.loc 11 115 69
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 8
 2159              		@ frame_needed = 1, uses_anonymous_args = 0
 2160              		@ link register save eliminated.
 2161 0000 80B4     		push	{r7}
 2162              		.cfi_def_cfa_offset 4
 2163              		.cfi_offset 7, -4
 2164 0002 83B0     		sub	sp, sp, #12
 2165              		.cfi_def_cfa_offset 16
 2166 0004 00AF     		add	r7, sp, #0
 2167              		.cfi_def_cfa_register 7
 2168 0006 87ED010A 		vstr.32	s0, [r7, #4]
 2169              	.L93:
 116:constants_utils.h ****   while (rotation > M_PI) rotation -= 2*M_PI;
 2170              		.loc 11 116 10 discriminator 2
 2171 000a D7ED017A 		vldr.32	s15, [r7, #4]
 2172 000e B7EEE77A 		vcvt.f64.f32	d7, s15
 2173              		.loc 11 116 19 discriminator 2
 2174 0012 9FED1B6B 		vldr.64	d6, .L100
 2175 0016 B4EEC67B 		vcmpe.f64	d7, d6
 2176 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2177 001e 00DC     		bgt	.L97
 2178 0020 0CE0     		b	.L91
 2179              	.L97:
 2180              		.loc 11 116 36 discriminator 1
 2181 0022 D7ED017A 		vldr.32	s15, [r7, #4]
 2182 0026 B7EEE77A 		vcvt.f64.f32	d7, s15
 2183 002a 9FED176B 		vldr.64	d6, .L100+8
 2184 002e 37EE467B 		vsub.f64	d7, d7, d6
 2185 0032 F7EEC77B 		vcvt.f32.f64	s15, d7
 2186 0036 C7ED017A 		vstr.32	s15, [r7, #4]
 2187              		.loc 11 116 3 discriminator 1
 2188 003a E6E7     		b	.L93
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 54


 2189              	.L91:
 117:constants_utils.h ****   while (rotation < -M_PI) rotation += 2*M_PI;
 2190              		.loc 11 117 10 discriminator 2
 2191 003c D7ED017A 		vldr.32	s15, [r7, #4]
 2192 0040 B7EEE77A 		vcvt.f64.f32	d7, s15
 2193              		.loc 11 117 19 discriminator 2
 2194 0044 9FED126B 		vldr.64	d6, .L100+16
 2195 0048 B4EEC67B 		vcmpe.f64	d7, d6
 2196 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2197 0050 0CD5     		bpl	.L99
 2198              		.loc 11 117 37 discriminator 1
 2199 0052 D7ED017A 		vldr.32	s15, [r7, #4]
 2200 0056 B7EEE77A 		vcvt.f64.f32	d7, s15
 2201 005a 9FED0B6B 		vldr.64	d6, .L100+8
 2202 005e 37EE067B 		vadd.f64	d7, d7, d6
 2203 0062 F7EEC77B 		vcvt.f32.f64	s15, d7
 2204 0066 C7ED017A 		vstr.32	s15, [r7, #4]
 2205              		.loc 11 117 3 discriminator 1
 2206 006a E7E7     		b	.L91
 2207              	.L99:
 118:constants_utils.h ****   return rotation;
 2208              		.loc 11 118 10
 2209 006c 7B68     		ldr	r3, [r7, #4]	@ float
 2210 006e 07EE903A 		vmov	s15, r3
 119:constants_utils.h **** }...
 2211              		.loc 11 119 1
 2212 0072 B0EE670A 		vmov.f32	s0, s15
 2213 0076 0C37     		adds	r7, r7, #12
 2214              		.cfi_def_cfa_offset 4
 2215 0078 BD46     		mov	sp, r7
 2216              		.cfi_def_cfa_register 13
 2217              		@ sp needed
 2218 007a 5DF8047B 		ldr	r7, [sp], #4
 2219              		.cfi_restore 7
 2220              		.cfi_def_cfa_offset 0
 2221 007e 7047     		bx	lr
 2222              	.L101:
 2223              		.align	3
 2224              	.L100:
 2225 0080 182D4454 		.word	1413754136
 2226 0084 FB210940 		.word	1074340347
 2227 0088 182D4454 		.word	1413754136
 2228 008c FB211940 		.word	1075388923
 2229 0090 182D4454 		.word	1413754136
 2230 0094 FB2109C0 		.word	-1073143301
 2231              		.cfi_endproc
 2232              	.LFE4859:
 2234              		.section	.text._ZNK16AudioFileManager20GetSamplesPerChannelEv,"axG",%progbits,_ZNK16AudioFileManag
 2235              		.align	1
 2236              		.weak	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2241              	_ZNK16AudioFileManager20GetSamplesPerChannelEv:
 2242              	.LFB4889:
 2243              		.file 12 "AudioFileManager.h"
   1:AudioFileManager.h **** #pragma once
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 55


   2:AudioFileManager.h **** #include <stdio.h>
   3:AudioFileManager.h **** #include <stdint.h>
   4:AudioFileManager.h **** #include <vector>
   5:AudioFileManager.h **** #include "daisy_pod.h"
   6:AudioFileManager.h **** #include "constants_utils.h"
   7:AudioFileManager.h **** #include "debug_print.h"
   8:AudioFileManager.h **** 
   9:AudioFileManager.h **** using namespace daisy; 
  10:AudioFileManager.h **** 
  11:AudioFileManager.h **** class AudioFileManager {
  12:AudioFileManager.h ****   public:
  13:AudioFileManager.h ****     AudioFileManager(SdmmcHandler &sd, FatFSInterface &fsi, DaisyPod &pod, FIL *file)
  14:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
  15:AudioFileManager.h ****         left_buf_(nullptr), right_buf_(nullptr) {};
  16:AudioFileManager.h ****     
  17:AudioFileManager.h ****     bool Init();
  18:AudioFileManager.h ****     bool ScanWavFiles();
  19:AudioFileManager.h ****     void SetBuffers(int16_t *left, int16_t *right);
  20:AudioFileManager.h ****     bool LoadFile(uint16_t file_idx);
  21:AudioFileManager.h ****     
  22:AudioFileManager.h ****     bool CloseFile();
  23:AudioFileManager.h ****     bool GetWavHeader(FIL *file);
  24:AudioFileManager.h **** 
  25:AudioFileManager.h ****     int16_t* GetLeftBuffer() const { return left_buf_; }
  26:AudioFileManager.h ****     int16_t* GetRightBuffer() const { return right_buf_; }
  27:AudioFileManager.h ****     size_t GetSamplesPerChannel() const { return header_.total_samples / header_.channels; }
 2244              		.loc 12 27 12
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 8
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248              		@ link register save eliminated.
 2249 0000 80B4     		push	{r7}
 2250              		.cfi_def_cfa_offset 4
 2251              		.cfi_offset 7, -4
 2252 0002 83B0     		sub	sp, sp, #12
 2253              		.cfi_def_cfa_offset 16
 2254 0004 00AF     		add	r7, sp, #0
 2255              		.cfi_def_cfa_register 7
 2256 0006 7860     		str	r0, [r7, #4]
 2257              		.loc 12 27 58
 2258 0008 7B68     		ldr	r3, [r7, #4]
 2259 000a 03F58053 		add	r3, r3, #4096
 2260 000e DB6A     		ldr	r3, [r3, #44]
 2261              		.loc 12 27 82
 2262 0010 7A68     		ldr	r2, [r7, #4]
 2263 0012 02F58052 		add	r2, r2, #4096
 2264 0016 B2F92820 		ldrsh	r2, [r2, #40]
 2265 001a B3FBF2F3 		udiv	r3, r3, r2
 2266              		.loc 12 27 92
 2267 001e 1846     		mov	r0, r3
 2268 0020 0C37     		adds	r7, r7, #12
 2269              		.cfi_def_cfa_offset 4
 2270 0022 BD46     		mov	sp, r7
 2271              		.cfi_def_cfa_register 13
 2272              		@ sp needed
 2273 0024 5DF8047B 		ldr	r7, [sp], #4
 2274              		.cfi_restore 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 56


 2275              		.cfi_def_cfa_offset 0
 2276 0028 7047     		bx	lr
 2277              		.cfi_endproc
 2278              	.LFE4889:
 2280              		.section	.text._ZNK16AudioFileManager14GetNumChannelsEv,"axG",%progbits,_ZNK16AudioFileManager14Ge
 2281              		.align	1
 2282              		.weak	_ZNK16AudioFileManager14GetNumChannelsEv
 2283              		.syntax unified
 2284              		.thumb
 2285              		.thumb_func
 2287              	_ZNK16AudioFileManager14GetNumChannelsEv:
 2288              	.LFB4891:
  28:AudioFileManager.h ****     size_t GetTotalSamples() const { return header_.total_samples; }
  29:AudioFileManager.h ****     int16_t GetNumChannels() const { return header_.channels; }
 2289              		.loc 12 29 13
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 8
 2292              		@ frame_needed = 1, uses_anonymous_args = 0
 2293              		@ link register save eliminated.
 2294 0000 80B4     		push	{r7}
 2295              		.cfi_def_cfa_offset 4
 2296              		.cfi_offset 7, -4
 2297 0002 83B0     		sub	sp, sp, #12
 2298              		.cfi_def_cfa_offset 16
 2299 0004 00AF     		add	r7, sp, #0
 2300              		.cfi_def_cfa_register 7
 2301 0006 7860     		str	r0, [r7, #4]
 2302              		.loc 12 29 53
 2303 0008 7B68     		ldr	r3, [r7, #4]
 2304 000a 03F58053 		add	r3, r3, #4096
 2305 000e B3F92830 		ldrsh	r3, [r3, #40]
 2306              		.loc 12 29 63
 2307 0012 1846     		mov	r0, r3
 2308 0014 0C37     		adds	r7, r7, #12
 2309              		.cfi_def_cfa_offset 4
 2310 0016 BD46     		mov	sp, r7
 2311              		.cfi_def_cfa_register 13
 2312              		@ sp needed
 2313 0018 5DF8047B 		ldr	r7, [sp], #4
 2314              		.cfi_restore 7
 2315              		.cfi_def_cfa_offset 0
 2316 001c 7047     		bx	lr
 2317              		.cfi_endproc
 2318              	.LFE4891:
 2320              		.section	.text._ZNK16AudioFileManager12GetFileCountEv,"axG",%progbits,_ZNK16AudioFileManager12GetF
 2321              		.align	1
 2322              		.weak	_ZNK16AudioFileManager12GetFileCountEv
 2323              		.syntax unified
 2324              		.thumb
 2325              		.thumb_func
 2327              	_ZNK16AudioFileManager12GetFileCountEv:
 2328              	.LFB4892:
  30:AudioFileManager.h ****     uint16_t GetFileCount() const { return file_count_; }
 2329              		.loc 12 30 14
 2330              		.cfi_startproc
 2331              		@ args = 0, pretend = 0, frame = 8
 2332              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 57


 2333              		@ link register save eliminated.
 2334 0000 80B4     		push	{r7}
 2335              		.cfi_def_cfa_offset 4
 2336              		.cfi_offset 7, -4
 2337 0002 83B0     		sub	sp, sp, #12
 2338              		.cfi_def_cfa_offset 16
 2339 0004 00AF     		add	r7, sp, #0
 2340              		.cfi_def_cfa_register 7
 2341 0006 7860     		str	r0, [r7, #4]
 2342              		.loc 12 30 44
 2343 0008 7B68     		ldr	r3, [r7, #4]
 2344 000a 03F58053 		add	r3, r3, #4096
 2345 000e DB8B     		ldrh	r3, [r3, #30]
 2346              		.loc 12 30 57
 2347 0010 1846     		mov	r0, r3
 2348 0012 0C37     		adds	r7, r7, #12
 2349              		.cfi_def_cfa_offset 4
 2350 0014 BD46     		mov	sp, r7
 2351              		.cfi_def_cfa_register 13
 2352              		@ sp needed
 2353 0016 5DF8047B 		ldr	r7, [sp], #4
 2354              		.cfi_restore 7
 2355              		.cfi_def_cfa_offset 0
 2356 001a 7047     		bx	lr
 2357              		.cfi_endproc
 2358              	.LFE4892:
 2360              		.section	.text._ZNK16AudioFileManager7GetNameEtPc,"axG",%progbits,_ZNK16AudioFileManager7GetNameEt
 2361              		.align	1
 2362              		.weak	_ZNK16AudioFileManager7GetNameEtPc
 2363              		.syntax unified
 2364              		.thumb
 2365              		.thumb_func
 2367              	_ZNK16AudioFileManager7GetNameEtPc:
 2368              	.LFB4893:
  31:AudioFileManager.h ****     void GetName(uint16_t idx, char* name) const { strcpy(name, names_[idx]); }
 2369              		.loc 12 31 10
 2370              		.cfi_startproc
 2371              		@ args = 0, pretend = 0, frame = 16
 2372              		@ frame_needed = 1, uses_anonymous_args = 0
 2373 0000 80B5     		push	{r7, lr}
 2374              		.cfi_def_cfa_offset 8
 2375              		.cfi_offset 7, -8
 2376              		.cfi_offset 14, -4
 2377 0002 84B0     		sub	sp, sp, #16
 2378              		.cfi_def_cfa_offset 24
 2379 0004 00AF     		add	r7, sp, #0
 2380              		.cfi_def_cfa_register 7
 2381 0006 F860     		str	r0, [r7, #12]
 2382 0008 0B46     		mov	r3, r1
 2383 000a 7A60     		str	r2, [r7, #4]
 2384 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 2385              		.loc 12 31 72
 2386 000e 7B89     		ldrh	r3, [r7, #10]
 2387              		.loc 12 31 75
 2388 0010 DB01     		lsls	r3, r3, #7
 2389 0012 1833     		adds	r3, r3, #24
 2390 0014 FA68     		ldr	r2, [r7, #12]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 58


 2391 0016 1344     		add	r3, r3, r2
 2392 0018 0433     		adds	r3, r3, #4
 2393              		.loc 12 31 58
 2394 001a 1946     		mov	r1, r3
 2395 001c 7868     		ldr	r0, [r7, #4]
 2396 001e FFF7FEFF 		bl	strcpy
 2397              		.loc 12 31 79
 2398 0022 00BF     		nop
 2399 0024 1037     		adds	r7, r7, #16
 2400              		.cfi_def_cfa_offset 8
 2401 0026 BD46     		mov	sp, r7
 2402              		.cfi_def_cfa_register 13
 2403              		@ sp needed
 2404 0028 80BD     		pop	{r7, pc}
 2405              		.cfi_endproc
 2406              	.LFE4893:
 2408              		.section	.text._ZN13StereoRotator7SetFreqEf,"axG",%progbits,_ZN13StereoRotator7SetFreqEf,comdat
 2409              		.align	1
 2410              		.weak	_ZN13StereoRotator7SetFreqEf
 2411              		.syntax unified
 2412              		.thumb
 2413              		.thumb_func
 2415              	_ZN13StereoRotator7SetFreqEf:
 2416              	.LFB4897:
 2417              		.file 13 "StereoRotator.h"
   1:StereoRotator.h **** #include <cmath>
   2:StereoRotator.h **** 
   3:StereoRotator.h **** class StereoRotator{
   4:StereoRotator.h ****   public:
   5:StereoRotator.h ****     StereoRotator(){}
   6:StereoRotator.h **** 
   7:StereoRotator.h ****     void SetFreq(float freq){
 2418              		.loc 13 7 10
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 8
 2421              		@ frame_needed = 1, uses_anonymous_args = 0
 2422 0000 80B5     		push	{r7, lr}
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 82B0     		sub	sp, sp, #8
 2427              		.cfi_def_cfa_offset 16
 2428 0004 00AF     		add	r7, sp, #0
 2429              		.cfi_def_cfa_register 7
 2430 0006 7860     		str	r0, [r7, #4]
 2431 0008 87ED000A 		vstr.32	s0, [r7]
   8:StereoRotator.h ****       /* map to 0.01Hz to 1.0Hz - don't want it too fast */
   9:StereoRotator.h ****       freq_ = fmap(freq, 0.01f, 0.5f, daisysp::Mapping::EXP);
 2432              		.loc 13 9 19
 2433 000c 0120     		movs	r0, #1
 2434 000e B6EE001A 		vmov.f32	s2, #5.0e-1
 2435 0012 DFED070A 		vldr.32	s1, .L110
 2436 0016 97ED000A 		vldr.32	s0, [r7]
 2437 001a FFF7FEFF 		bl	_ZN7daisysp4fmapEfffNS_7MappingE
 2438 001e F0EE407A 		vmov.f32	s15, s0
 2439              		.loc 13 9 13
 2440 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 59


 2441 0024 C3ED017A 		vstr.32	s15, [r3, #4]
  10:StereoRotator.h ****     }
 2442              		.loc 13 10 5
 2443 0028 00BF     		nop
 2444 002a 0837     		adds	r7, r7, #8
 2445              		.cfi_def_cfa_offset 8
 2446 002c BD46     		mov	sp, r7
 2447              		.cfi_def_cfa_register 13
 2448              		@ sp needed
 2449 002e 80BD     		pop	{r7, pc}
 2450              	.L111:
 2451              		.align	2
 2452              	.L110:
 2453 0030 0AD7233C 		.word	1008981770
 2454              		.cfi_endproc
 2455              	.LFE4897:
 2457              		.section	.text._ZN13StereoRotator7ProcessE6Sample,"axG",%progbits,_ZN13StereoRotator7ProcessE6Samp
 2458              		.align	1
 2459              		.weak	_ZN13StereoRotator7ProcessE6Sample
 2460              		.syntax unified
 2461              		.thumb
 2462              		.thumb_func
 2464              	_ZN13StereoRotator7ProcessE6Sample:
 2465              	.LFB4898:
  11:StereoRotator.h **** 
  12:StereoRotator.h ****     Sample Process(Sample in){
 2466              		.loc 13 12 12
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 48
 2469              		@ frame_needed = 1, uses_anonymous_args = 0
 2470 0000 80B5     		push	{r7, lr}
 2471              		.cfi_def_cfa_offset 8
 2472              		.cfi_offset 7, -8
 2473              		.cfi_offset 14, -4
 2474 0002 8CB0     		sub	sp, sp, #48
 2475              		.cfi_def_cfa_offset 56
 2476 0004 00AF     		add	r7, sp, #0
 2477              		.cfi_def_cfa_register 7
 2478 0006 7861     		str	r0, [r7, #20]
 2479 0008 B0EE407A 		vmov.f32	s14, s0
 2480 000c F0EE607A 		vmov.f32	s15, s1
 2481 0010 87ED037A 		vstr.32	s14, [r7, #12]
 2482 0014 C7ED047A 		vstr.32	s15, [r7, #16]
  13:StereoRotator.h ****       /* increment the rotation in the stereo field */
  14:StereoRotator.h ****       rotation_  += (2*M_PI*freq_)/SAMPLE_RATE_FLOAT;
 2483              		.loc 13 14 18
 2484 0018 7B69     		ldr	r3, [r7, #20]
 2485 001a D3ED007A 		vldr.32	s15, [r3]
 2486 001e B7EEE76A 		vcvt.f64.f32	d6, s15
 2487              		.loc 13 14 29
 2488 0022 7B69     		ldr	r3, [r7, #20]
 2489 0024 D3ED017A 		vldr.32	s15, [r3, #4]
 2490 0028 B7EEE77A 		vcvt.f64.f32	d7, s15
 2491              		.loc 13 14 28
 2492 002c 9FED305B 		vldr.64	d5, .L114
 2493 0030 27EE055B 		vmul.f64	d5, d7, d5
 2494              		.loc 13 14 35
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 60


 2495 0034 9FED304B 		vldr.64	d4, .L114+8
 2496 0038 85EE047B 		vdiv.f64	d7, d5, d4
 2497              		.loc 13 14 18
 2498 003c 36EE077B 		vadd.f64	d7, d6, d7
 2499 0040 F7EEC77B 		vcvt.f32.f64	s15, d7
 2500 0044 7B69     		ldr	r3, [r7, #20]
 2501 0046 C3ED007A 		vstr.32	s15, [r3]
  15:StereoRotator.h ****       /* normalise angle to keep within bounds of +- pi for accurate-ish(?) results */
  16:StereoRotator.h ****       rotation_ = NormaliseRotationAngle(rotation_);
 2502              		.loc 13 16 41
 2503 004a 7B69     		ldr	r3, [r7, #20]
 2504 004c D3ED007A 		vldr.32	s15, [r3]
 2505 0050 B0EE670A 		vmov.f32	s0, s15
 2506 0054 FFF7FEFF 		bl	_ZL22NormaliseRotationAnglef
 2507 0058 F0EE407A 		vmov.f32	s15, s0
 2508              		.loc 13 16 17
 2509 005c 7B69     		ldr	r3, [r7, #20]
 2510 005e C3ED007A 		vstr.32	s15, [r3]
  17:StereoRotator.h **** 
  18:StereoRotator.h ****       Sample out;
  19:StereoRotator.h ****       float cos_rotation = FastCos(rotation_);
 2511              		.loc 13 19 35
 2512 0062 7B69     		ldr	r3, [r7, #20]
 2513 0064 D3ED007A 		vldr.32	s15, [r3]
 2514 0068 B0EE670A 		vmov.f32	s0, s15
 2515 006c FFF7FEFF 		bl	_ZL7FastCosf
 2516 0070 87ED0B0A 		vstr.32	s0, [r7, #44]
  20:StereoRotator.h ****       float sin_rotation = FastSin(rotation_);
 2517              		.loc 13 20 35
 2518 0074 7B69     		ldr	r3, [r7, #20]
 2519 0076 D3ED007A 		vldr.32	s15, [r3]
 2520 007a B0EE670A 		vmov.f32	s0, s15
 2521 007e FFF7FEFF 		bl	_ZL7FastSinf
 2522 0082 87ED0A0A 		vstr.32	s0, [r7, #40]
  21:StereoRotator.h ****       /* from https://en.wikipedia.org/wiki/Rotation_matrix:
  22:StereoRotator.h ****         treat left as x coord, right as y coord to rotate around centre */
  23:StereoRotator.h ****       out.left = (in.left*cos_rotation) - (in.right*sin_rotation);
 2523              		.loc 13 23 22
 2524 0086 97ED037A 		vldr.32	s14, [r7, #12]
 2525              		.loc 13 23 26
 2526 008a D7ED0B7A 		vldr.32	s15, [r7, #44]
 2527 008e 27EE277A 		vmul.f32	s14, s14, s15
 2528              		.loc 13 23 47
 2529 0092 D7ED046A 		vldr.32	s13, [r7, #16]
 2530              		.loc 13 23 52
 2531 0096 D7ED0A7A 		vldr.32	s15, [r7, #40]
 2532 009a 66EEA77A 		vmul.f32	s15, s13, s15
 2533              		.loc 13 23 41
 2534 009e 77EE677A 		vsub.f32	s15, s14, s15
 2535              		.loc 13 23 16
 2536 00a2 C7ED067A 		vstr.32	s15, [r7, #24]
  24:StereoRotator.h ****       out.right =(in.left*sin_rotation) - (in.right*cos_rotation);
 2537              		.loc 13 24 22
 2538 00a6 97ED037A 		vldr.32	s14, [r7, #12]
 2539              		.loc 13 24 26
 2540 00aa D7ED0A7A 		vldr.32	s15, [r7, #40]
 2541 00ae 27EE277A 		vmul.f32	s14, s14, s15
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 61


 2542              		.loc 13 24 47
 2543 00b2 D7ED046A 		vldr.32	s13, [r7, #16]
 2544              		.loc 13 24 52
 2545 00b6 D7ED0B7A 		vldr.32	s15, [r7, #44]
 2546 00ba 66EEA77A 		vmul.f32	s15, s13, s15
 2547              		.loc 13 24 41
 2548 00be 77EE677A 		vsub.f32	s15, s14, s15
 2549              		.loc 13 24 17
 2550 00c2 C7ED077A 		vstr.32	s15, [r7, #28]
  25:StereoRotator.h ****       return out;
 2551              		.loc 13 25 14
 2552 00c6 07F12003 		add	r3, r7, #32
 2553 00ca 07F11802 		add	r2, r7, #24
 2554 00ce 92E80300 		ldm	r2, {r0, r1}
 2555 00d2 83E80300 		stm	r3, {r0, r1}
 2556 00d6 3A6A     		ldr	r2, [r7, #32]	@ float
 2557 00d8 7B6A     		ldr	r3, [r7, #36]	@ float
 2558 00da 07EE102A 		vmov	s14, r2
 2559 00de 07EE903A 		vmov	s15, r3
  26:StereoRotator.h ****     }
 2560              		.loc 13 26 5
 2561 00e2 B0EE470A 		vmov.f32	s0, s14
 2562 00e6 F0EE670A 		vmov.f32	s1, s15
 2563 00ea 3037     		adds	r7, r7, #48
 2564              		.cfi_def_cfa_offset 8
 2565 00ec BD46     		mov	sp, r7
 2566              		.cfi_def_cfa_register 13
 2567              		@ sp needed
 2568 00ee 80BD     		pop	{r7, pc}
 2569              	.L115:
 2570              		.align	3
 2571              	.L114:
 2572 00f0 182D4454 		.word	1413754136
 2573 00f4 FB211940 		.word	1075388923
 2574 00f8 00000000 		.word	0
 2575 00fc 0070E740 		.word	1088909312
 2576              		.cfi_endproc
 2577              	.LFE4898:
 2579              		.section	.text._ZN13StereoRotator10ProcessMixE6Sample,"axG",%progbits,_ZN13StereoRotator10ProcessM
 2580              		.align	1
 2581              		.weak	_ZN13StereoRotator10ProcessMixE6Sample
 2582              		.syntax unified
 2583              		.thumb
 2584              		.thumb_func
 2586              	_ZN13StereoRotator10ProcessMixE6Sample:
 2587              	.LFB4899:
  27:StereoRotator.h **** 
  28:StereoRotator.h ****     /* process input then mix by the wet/dry amount controlled by knob */
  29:StereoRotator.h ****     Sample ProcessMix(Sample in){
 2588              		.loc 13 29 12
 2589              		.cfi_startproc
 2590              		@ args = 0, pretend = 0, frame = 48
 2591              		@ frame_needed = 1, uses_anonymous_args = 0
 2592 0000 80B5     		push	{r7, lr}
 2593              		.cfi_def_cfa_offset 8
 2594              		.cfi_offset 7, -8
 2595              		.cfi_offset 14, -4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 62


 2596 0002 8CB0     		sub	sp, sp, #48
 2597              		.cfi_def_cfa_offset 56
 2598 0004 00AF     		add	r7, sp, #0
 2599              		.cfi_def_cfa_register 7
 2600 0006 7861     		str	r0, [r7, #20]
 2601 0008 B0EE407A 		vmov.f32	s14, s0
 2602 000c F0EE607A 		vmov.f32	s15, s1
 2603 0010 87ED037A 		vstr.32	s14, [r7, #12]
 2604 0014 C7ED047A 		vstr.32	s15, [r7, #16]
  30:StereoRotator.h ****       Sample out;
  31:StereoRotator.h ****       Sample processed = Process(in);
 2605              		.loc 13 31 36
 2606 0018 97ED037A 		vldr.32	s14, [r7, #12]
 2607 001c D7ED047A 		vldr.32	s15, [r7, #16]
 2608 0020 B0EE470A 		vmov.f32	s0, s14
 2609 0024 F0EE670A 		vmov.f32	s1, s15
 2610 0028 7869     		ldr	r0, [r7, #20]
 2611 002a FFF7FEFF 		bl	_ZN13StereoRotator7ProcessE6Sample
 2612 002e B0EE407A 		vmov.f32	s14, s0
 2613 0032 F0EE607A 		vmov.f32	s15, s1
 2614 0036 87ED067A 		vstr.32	s14, [r7, #24]
 2615 003a C7ED077A 		vstr.32	s15, [r7, #28]
  32:StereoRotator.h ****       out.left = wet_mix_*processed.left + ((1.0f-wet_mix_)*in.left);
 2616              		.loc 13 32 18
 2617 003e 7B69     		ldr	r3, [r7, #20]
 2618 0040 93ED027A 		vldr.32	s14, [r3, #8]
 2619              		.loc 13 32 37
 2620 0044 D7ED067A 		vldr.32	s15, [r7, #24]
 2621              		.loc 13 32 26
 2622 0048 27EE277A 		vmul.f32	s14, s14, s15
 2623              		.loc 13 32 51
 2624 004c 7B69     		ldr	r3, [r7, #20]
 2625 004e D3ED027A 		vldr.32	s15, [r3, #8]
 2626              		.loc 13 32 50
 2627 0052 F7EE006A 		vmov.f32	s13, #1.0e+0
 2628 0056 76EEE76A 		vsub.f32	s13, s13, s15
 2629              		.loc 13 32 64
 2630 005a D7ED037A 		vldr.32	s15, [r7, #12]
 2631              		.loc 13 32 60
 2632 005e 66EEA77A 		vmul.f32	s15, s13, s15
 2633              		.loc 13 32 42
 2634 0062 77EE277A 		vadd.f32	s15, s14, s15
 2635              		.loc 13 32 16
 2636 0066 C7ED087A 		vstr.32	s15, [r7, #32]
  33:StereoRotator.h ****       out.right = wet_mix_*processed.right + ((1.0f-wet_mix_)*in.right);
 2637              		.loc 13 33 19
 2638 006a 7B69     		ldr	r3, [r7, #20]
 2639 006c 93ED027A 		vldr.32	s14, [r3, #8]
 2640              		.loc 13 33 38
 2641 0070 D7ED077A 		vldr.32	s15, [r7, #28]
 2642              		.loc 13 33 27
 2643 0074 27EE277A 		vmul.f32	s14, s14, s15
 2644              		.loc 13 33 53
 2645 0078 7B69     		ldr	r3, [r7, #20]
 2646 007a D3ED027A 		vldr.32	s15, [r3, #8]
 2647              		.loc 13 33 52
 2648 007e F7EE006A 		vmov.f32	s13, #1.0e+0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 63


 2649 0082 76EEE76A 		vsub.f32	s13, s13, s15
 2650              		.loc 13 33 66
 2651 0086 D7ED047A 		vldr.32	s15, [r7, #16]
 2652              		.loc 13 33 62
 2653 008a 66EEA77A 		vmul.f32	s15, s13, s15
 2654              		.loc 13 33 44
 2655 008e 77EE277A 		vadd.f32	s15, s14, s15
 2656              		.loc 13 33 17
 2657 0092 C7ED097A 		vstr.32	s15, [r7, #36]
  34:StereoRotator.h ****       return out;
 2658              		.loc 13 34 14
 2659 0096 07F12803 		add	r3, r7, #40
 2660 009a 07F12002 		add	r2, r7, #32
 2661 009e 92E80300 		ldm	r2, {r0, r1}
 2662 00a2 83E80300 		stm	r3, {r0, r1}
 2663 00a6 BA6A     		ldr	r2, [r7, #40]	@ float
 2664 00a8 FB6A     		ldr	r3, [r7, #44]	@ float
 2665 00aa 07EE102A 		vmov	s14, r2
 2666 00ae 07EE903A 		vmov	s15, r3
  35:StereoRotator.h ****     }
 2667              		.loc 13 35 5
 2668 00b2 B0EE470A 		vmov.f32	s0, s14
 2669 00b6 F0EE670A 		vmov.f32	s1, s15
 2670 00ba 3037     		adds	r7, r7, #48
 2671              		.cfi_def_cfa_offset 8
 2672 00bc BD46     		mov	sp, r7
 2673              		.cfi_def_cfa_register 13
 2674              		@ sp needed
 2675 00be 80BD     		pop	{r7, pc}
 2676              		.cfi_endproc
 2677              	.LFE4899:
 2679              		.section	.text._ZN13StereoRotator6SetMixEf,"axG",%progbits,_ZN13StereoRotator6SetMixEf,comdat
 2680              		.align	1
 2681              		.weak	_ZN13StereoRotator6SetMixEf
 2682              		.syntax unified
 2683              		.thumb
 2684              		.thumb_func
 2686              	_ZN13StereoRotator6SetMixEf:
 2687              	.LFB4900:
  36:StereoRotator.h **** 
  37:StereoRotator.h ****     void SetMix(float mix) { wet_mix_ = mix; }
 2688              		.loc 13 37 10
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 8
 2691              		@ frame_needed = 1, uses_anonymous_args = 0
 2692              		@ link register save eliminated.
 2693 0000 80B4     		push	{r7}
 2694              		.cfi_def_cfa_offset 4
 2695              		.cfi_offset 7, -4
 2696 0002 83B0     		sub	sp, sp, #12
 2697              		.cfi_def_cfa_offset 16
 2698 0004 00AF     		add	r7, sp, #0
 2699              		.cfi_def_cfa_register 7
 2700 0006 7860     		str	r0, [r7, #4]
 2701 0008 87ED000A 		vstr.32	s0, [r7]
 2702              		.loc 13 37 39
 2703 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 64


 2704 000e 3A68     		ldr	r2, [r7]	@ float
 2705 0010 9A60     		str	r2, [r3, #8]	@ float
 2706              		.loc 13 37 46
 2707 0012 00BF     		nop
 2708 0014 0C37     		adds	r7, r7, #12
 2709              		.cfi_def_cfa_offset 4
 2710 0016 BD46     		mov	sp, r7
 2711              		.cfi_def_cfa_register 13
 2712              		@ sp needed
 2713 0018 5DF8047B 		ldr	r7, [sp], #4
 2714              		.cfi_restore 7
 2715              		.cfi_def_cfa_offset 0
 2716 001c 7047     		bx	lr
 2717              		.cfi_endproc
 2718              	.LFE4900:
 2720              		.global	_ZN14GrannyChordApp9instance_E
 2721              		.section	.bss._ZN14GrannyChordApp9instance_E,"aw",%nobits
 2722              		.align	2
 2725              	_ZN14GrannyChordApp9instance_E:
 2726 0000 00000000 		.space	4
 2727              		.section	.rodata
 2728              		.align	2
 2729              	.LC0:
 2730 0000 46696C65 		.ascii	"File manager failed to init\000"
 2730      206D616E 
 2730      61676572 
 2730      20666169 
 2730      6C656420 
 2731              		.section	.text._ZN14GrannyChordApp4InitEPsS0_,"ax",%progbits
 2732              		.align	1
 2733              		.global	_ZN14GrannyChordApp4InitEPsS0_
 2734              		.syntax unified
 2735              		.thumb
 2736              		.thumb_func
 2738              	_ZN14GrannyChordApp4InitEPsS0_:
 2739              	.LFB4913:
 2740              		.file 14 "GrannyChordApp.cpp"
   1:GrannyChordApp.cpp **** #ifdef DEBUG_MODE // TODO: remove
   2:GrannyChordApp.cpp **** #pragma message("Debug mode is ON")
   3:GrannyChordApp.cpp **** #else
   4:GrannyChordApp.cpp **** #pragma message("Debug mode is OFF")
   5:GrannyChordApp.cpp **** #endif
   6:GrannyChordApp.cpp **** 
   7:GrannyChordApp.cpp **** #include "GrannyChordApp.h"
   8:GrannyChordApp.cpp **** 
   9:GrannyChordApp.cpp **** /* this is required for AudioCallback as it needs a static object */
  10:GrannyChordApp.cpp **** GrannyChordApp* GrannyChordApp::instance_ = nullptr;
  11:GrannyChordApp.cpp **** 
  12:GrannyChordApp.cpp **** /// @brief Initialises app state and members and goes through app startup process
  13:GrannyChordApp.cpp **** /// @param left Left channel audio data buffer
  14:GrannyChordApp.cpp **** /// @param right Right channel audio data buffer
  15:GrannyChordApp.cpp **** void GrannyChordApp::Init(int16_t *left, int16_t *right){
 2741              		.loc 14 15 57
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 16
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
 2745 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 65


 2746              		.cfi_def_cfa_offset 8
 2747              		.cfi_offset 7, -8
 2748              		.cfi_offset 14, -4
 2749 0002 84B0     		sub	sp, sp, #16
 2750              		.cfi_def_cfa_offset 24
 2751 0004 00AF     		add	r7, sp, #0
 2752              		.cfi_def_cfa_register 7
 2753 0006 F860     		str	r0, [r7, #12]
 2754 0008 B960     		str	r1, [r7, #8]
 2755 000a 7A60     		str	r2, [r7, #4]
  16:GrannyChordApp.cpp ****   left_buf_ = left, right_buf_ = right;
 2756              		.loc 14 16 13
 2757 000c FB68     		ldr	r3, [r7, #12]
 2758 000e BA68     		ldr	r2, [r7, #8]
 2759 0010 C3F84023 		str	r2, [r3, #832]
 2760              		.loc 14 16 32
 2761 0014 FB68     		ldr	r3, [r7, #12]
 2762 0016 7A68     		ldr	r2, [r7, #4]
 2763 0018 C3F84423 		str	r2, [r3, #836]
  17:GrannyChordApp.cpp ****   pod_.SetAudioBlockSize(2);
 2764              		.loc 14 17 3
 2765 001c FB68     		ldr	r3, [r7, #12]
 2766 001e DB69     		ldr	r3, [r3, #28]
 2767              		.loc 14 17 25
 2768 0020 0221     		movs	r1, #2
 2769 0022 1846     		mov	r0, r3
 2770 0024 FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
  18:GrannyChordApp.cpp ****   pod_.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 2771              		.loc 14 18 3
 2772 0028 FB68     		ldr	r3, [r7, #12]
 2773 002a DB69     		ldr	r3, [r3, #28]
 2774              		.loc 14 18 26
 2775 002c 0321     		movs	r1, #3
 2776 002e 1846     		mov	r0, r3
 2777 0030 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
  19:GrannyChordApp.cpp ****   curr_state_ = AppState::SelectFile;
 2778              		.loc 14 19 15
 2779 0034 FB68     		ldr	r3, [r7, #12]
 2780 0036 0022     		movs	r2, #0
 2781 0038 C3F87422 		str	r2, [r3, #628]
  20:GrannyChordApp.cpp ****   // SetupTimer();
  21:GrannyChordApp.cpp ****   if (!InitFileMgr()){
 2782              		.loc 14 21 19
 2783 003c F868     		ldr	r0, [r7, #12]
 2784 003e FFF7FEFF 		bl	_ZN14GrannyChordApp11InitFileMgrEv
 2785 0042 0346     		mov	r3, r0
 2786              		.loc 14 21 7
 2787 0044 83F00103 		eor	r3, r3, #1
 2788 0048 DBB2     		uxtb	r3, r3
 2789              		.loc 14 21 3
 2790 004a 002B     		cmp	r3, #0
 2791 004c 19D0     		beq	.L120
  22:GrannyChordApp.cpp ****     DebugPrint(pod_,"File manager failed to init");
 2792              		.loc 14 22 5
 2793 004e 2048     		ldr	r0, .L122
 2794 0050 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
  23:GrannyChordApp.cpp ****     pod_.led1.SetRed(1);
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 66


 2795              		.loc 14 23 5
 2796 0054 FB68     		ldr	r3, [r7, #12]
 2797 0056 DB69     		ldr	r3, [r3, #28]
 2798              		.loc 14 23 21
 2799 0058 D833     		adds	r3, r3, #216
 2800 005a B7EE000A 		vmov.f32	s0, #1.0e+0
 2801 005e 1846     		mov	r0, r3
 2802 0060 FFF7FEFF 		bl	_ZN5daisy6RgbLed6SetRedEf
  24:GrannyChordApp.cpp ****     pod_.led2.SetRed(1);
 2803              		.loc 14 24 5
 2804 0064 FB68     		ldr	r3, [r7, #12]
 2805 0066 DB69     		ldr	r3, [r3, #28]
 2806              		.loc 14 24 21
 2807 0068 03F59673 		add	r3, r3, #300
 2808 006c B7EE000A 		vmov.f32	s0, #1.0e+0
 2809 0070 1846     		mov	r0, r3
 2810 0072 FFF7FEFF 		bl	_ZN5daisy6RgbLed6SetRedEf
  25:GrannyChordApp.cpp ****     pod_.UpdateLeds();
 2811              		.loc 14 25 5
 2812 0076 FB68     		ldr	r3, [r7, #12]
 2813 0078 DB69     		ldr	r3, [r3, #28]
 2814              		.loc 14 25 20
 2815 007a 1846     		mov	r0, r3
 2816 007c FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
  26:GrannyChordApp.cpp ****     return;
 2817              		.loc 14 26 5
 2818 0080 23E0     		b	.L119
 2819              	.L120:
  27:GrannyChordApp.cpp ****   }
  28:GrannyChordApp.cpp ****   // loadmeter.Init(pod_.AudioSampleRate(), pod_.AudioBlockSize());
  29:GrannyChordApp.cpp ****   InitFX();
 2820              		.loc 14 29 9
 2821 0082 F868     		ldr	r0, [r7, #12]
 2822 0084 FFF7FEFF 		bl	_ZN14GrannyChordApp6InitFXEv
  30:GrannyChordApp.cpp ****   InitPrevParamVals();
 2823              		.loc 14 30 20
 2824 0088 F868     		ldr	r0, [r7, #12]
 2825 008a FFF7FEFF 		bl	_ZN14GrannyChordApp17InitPrevParamValsEv
  31:GrannyChordApp.cpp ****   InitColours();
 2826              		.loc 14 31 14
 2827 008e F868     		ldr	r0, [r7, #12]
 2828 0090 FFF7FEFF 		bl	_ZN14GrannyChordApp11InitColoursEv
  32:GrannyChordApp.cpp ****   SetLedAppState();
 2829              		.loc 14 32 17
 2830 0094 F868     		ldr	r0, [r7, #12]
 2831 0096 FFF7FEFF 		bl	_ZN14GrannyChordApp14SetLedAppStateEv
  33:GrannyChordApp.cpp ****   pod_.UpdateLeds();
 2832              		.loc 14 33 3
 2833 009a FB68     		ldr	r3, [r7, #12]
 2834 009c DB69     		ldr	r3, [r3, #28]
 2835              		.loc 14 33 18
 2836 009e 1846     		mov	r0, r3
 2837 00a0 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
  34:GrannyChordApp.cpp ****   SeedRng();
 2838              		.loc 14 34 10
 2839 00a4 FFF7FEFF 		bl	_ZL7SeedRngv
  35:GrannyChordApp.cpp ****   synth_.Init(left_buf_, right_buf_, 0);
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 67


 2840              		.loc 14 35 14
 2841 00a8 FB68     		ldr	r3, [r7, #12]
 2842 00aa 03F12000 		add	r0, r3, #32
 2843 00ae FB68     		ldr	r3, [r7, #12]
 2844 00b0 D3F84013 		ldr	r1, [r3, #832]
 2845 00b4 FB68     		ldr	r3, [r7, #12]
 2846 00b6 D3F84423 		ldr	r2, [r3, #836]
 2847 00ba 0023     		movs	r3, #0
 2848 00bc FFF7FEFF 		bl	_ZN13GranularSynth4InitEPsS0_j
  36:GrannyChordApp.cpp ****   pod_.StartAdc();
 2849              		.loc 14 36 3
 2850 00c0 FB68     		ldr	r3, [r7, #12]
 2851 00c2 DB69     		ldr	r3, [r3, #28]
 2852              		.loc 14 36 16
 2853 00c4 1846     		mov	r0, r3
 2854 00c6 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 2855              	.L119:
  37:GrannyChordApp.cpp **** }
 2856              		.loc 14 37 1
 2857 00ca 1037     		adds	r7, r7, #16
 2858              		.cfi_def_cfa_offset 8
 2859 00cc BD46     		mov	sp, r7
 2860              		.cfi_def_cfa_register 13
 2861              		@ sp needed
 2862 00ce 80BD     		pop	{r7, pc}
 2863              	.L123:
 2864              		.align	2
 2865              	.L122:
 2866 00d0 00000000 		.word	.LC0
 2867              		.cfi_endproc
 2868              	.LFE4913:
 2870              		.section	.rodata
 2871              		.align	2
 2872              	.LC1:
 2873 001c 50726F63 		.ascii	"Processing Load %:\000"
 2873      65737369 
 2873      6E67204C 
 2873      6F616420 
 2873      253A00
 2874 002f 00       		.align	2
 2875              	.LC2:
 2876 0030 4D61783A 		.ascii	"Max: %c%d.%03d\000"
 2876      20256325 
 2876      642E2530 
 2876      336400
 2877 003f 00       		.align	2
 2878              	.LC3:
 2879 0040 4176673A 		.ascii	"Avg: %c%d.%03d\000"
 2879      20256325 
 2879      642E2530 
 2879      336400
 2880 004f 00       		.align	2
 2881              	.LC4:
 2882 0050 4D696E3A 		.ascii	"Min: %c%d.%03d\000"
 2882      20256325 
 2882      642E2530 
 2882      336400
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 68


 2883              		.section	.text._ZN14GrannyChordApp12PrintCPULoadEv,"ax",%progbits
 2884              		.align	1
 2885              		.global	_ZN14GrannyChordApp12PrintCPULoadEv
 2886              		.syntax unified
 2887              		.thumb
 2888              		.thumb_func
 2890              	_ZN14GrannyChordApp12PrintCPULoadEv:
 2891              	.LFB4914:
  38:GrannyChordApp.cpp **** 
  39:GrannyChordApp.cpp **** #ifdef DEBUG_MODE
  40:GrannyChordApp.cpp **** void GrannyChordApp::PrintCPULoad(){
 2892              		.loc 14 40 36
 2893              		.cfi_startproc
 2894              		@ args = 0, pretend = 0, frame = 24
 2895              		@ frame_needed = 1, uses_anonymous_args = 0
 2896 0000 90B5     		push	{r4, r7, lr}
 2897              		.cfi_def_cfa_offset 12
 2898              		.cfi_offset 4, -12
 2899              		.cfi_offset 7, -8
 2900              		.cfi_offset 14, -4
 2901 0002 2DED048B 		vpush.64	{d8, d9}
 2902              		.cfi_def_cfa_offset 28
 2903              		.cfi_offset 80, -28
 2904              		.cfi_offset 81, -24
 2905              		.cfi_offset 82, -20
 2906              		.cfi_offset 83, -16
 2907 0006 87B0     		sub	sp, sp, #28
 2908              		.cfi_def_cfa_offset 56
 2909 0008 00AF     		add	r7, sp, #0
 2910              		.cfi_def_cfa_register 7
 2911 000a 7860     		str	r0, [r7, #4]
  41:GrannyChordApp.cpp ****   const float avgLoad = loadmeter.GetAvgCpuLoad();
 2912              		.loc 14 41 48
 2913 000c 7B68     		ldr	r3, [r7, #4]
 2914 000e 1846     		mov	r0, r3
 2915 0010 FFF7FEFF 		bl	_ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv
 2916 0014 87ED050A 		vstr.32	s0, [r7, #20]
  42:GrannyChordApp.cpp ****   const float maxLoad = loadmeter.GetMaxCpuLoad();
 2917              		.loc 14 42 48
 2918 0018 7B68     		ldr	r3, [r7, #4]
 2919 001a 1846     		mov	r0, r3
 2920 001c FFF7FEFF 		bl	_ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv
 2921 0020 87ED040A 		vstr.32	s0, [r7, #16]
  43:GrannyChordApp.cpp ****   const float minLoad = loadmeter.GetMinCpuLoad();
 2922              		.loc 14 43 48
 2923 0024 7B68     		ldr	r3, [r7, #4]
 2924 0026 1846     		mov	r0, r3
 2925 0028 FFF7FEFF 		bl	_ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv
 2926 002c 87ED030A 		vstr.32	s0, [r7, #12]
  44:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Processing Load %:");
 2927              		.loc 14 44 22
 2928 0030 7948     		ldr	r0, .L140
 2929 0032 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
  45:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Max: " FLT_FMT3, FLT_VAR3(maxLoad * 100.0f));
 2930              		.loc 14 45 41
 2931 0036 D7ED047A 		vldr.32	s15, [r7, #16]
 2932 003a 9FED787A 		vldr.32	s14, .L140+4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 69


 2933 003e 67EE877A 		vmul.f32	s15, s15, s14
 2934              		.loc 14 45 22
 2935 0042 F5EEC07A 		vcmpe.f32	s15, #0
 2936 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2937 004a 01D5     		bpl	.L137
 2938              		.loc 14 45 22 is_stmt 0 discriminator 1
 2939 004c 2D24     		movs	r4, #45
 2940 004e 00E0     		b	.L127
 2941              	.L137:
 2942              		.loc 14 45 22 discriminator 2
 2943 0050 2024     		movs	r4, #32
 2944              	.L127:
 2945              		.loc 14 45 41 is_stmt 1 discriminator 4
 2946 0052 D7ED047A 		vldr.32	s15, [r7, #16]
 2947 0056 9FED717A 		vldr.32	s14, .L140+4
 2948 005a 67EE877A 		vmul.f32	s15, s15, s14
 2949 005e B0EE670A 		vmov.f32	s0, s15
 2950 0062 FFF7FEFF 		bl	_ZSt3absf
 2951 0066 F0EE407A 		vmov.f32	s15, s0
 2952              		.loc 14 45 22 discriminator 4
 2953 006a BDEEE79A 		vcvt.s32.f32	s18, s15
 2954              		.loc 14 45 41 discriminator 4
 2955 006e D7ED047A 		vldr.32	s15, [r7, #16]
 2956 0072 9FED6A7A 		vldr.32	s14, .L140+4
 2957 0076 67EE877A 		vmul.f32	s15, s15, s14
 2958 007a B0EE670A 		vmov.f32	s0, s15
 2959 007e FFF7FEFF 		bl	_ZSt3absf
 2960 0082 B0EE408A 		vmov.f32	s16, s0
 2961 0086 D7ED047A 		vldr.32	s15, [r7, #16]
 2962 008a 9FED647A 		vldr.32	s14, .L140+4
 2963 008e 67EE877A 		vmul.f32	s15, s15, s14
 2964 0092 B0EE670A 		vmov.f32	s0, s15
 2965 0096 FFF7FEFF 		bl	_ZSt3absf
 2966 009a F0EE407A 		vmov.f32	s15, s0
 2967 009e FDEEE77A 		vcvt.s32.f32	s15, s15
 2968 00a2 F8EEE77A 		vcvt.f32.s32	s15, s15
 2969 00a6 78EE677A 		vsub.f32	s15, s16, s15
 2970 00aa B7EEE78A 		vcvt.f64.f32	d8, s15
 2971 00ae 0321     		movs	r1, #3
 2972 00b0 0A20     		movs	r0, #10
 2973 00b2 FFF7FEFF 		bl	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 2974 00b6 B0EE407B 		vmov.f64	d7, d0
 2975 00ba 28EE077B 		vmul.f64	d7, d8, d7
 2976              		.loc 14 45 22 discriminator 4
 2977 00be FDEEC77B 		vcvt.s32.f64	s15, d7
 2978 00c2 17EE903A 		vmov	r3, s15	@ int
 2979 00c6 19EE102A 		vmov	r2, s18	@ int
 2980 00ca 2146     		mov	r1, r4
 2981 00cc 5448     		ldr	r0, .L140+8
 2982 00ce FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
  46:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Avg: " FLT_FMT3, FLT_VAR3(avgLoad * 100.0f));
 2983              		.loc 14 46 41 discriminator 4
 2984 00d2 D7ED057A 		vldr.32	s15, [r7, #20]
 2985 00d6 9FED517A 		vldr.32	s14, .L140+4
 2986 00da 67EE877A 		vmul.f32	s15, s15, s14
 2987              		.loc 14 46 22 discriminator 4
 2988 00de F5EEC07A 		vcmpe.f32	s15, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 70


 2989 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2990 00e6 01D5     		bpl	.L138
 2991              		.loc 14 46 22 is_stmt 0 discriminator 1
 2992 00e8 2D24     		movs	r4, #45
 2993 00ea 00E0     		b	.L130
 2994              	.L138:
 2995              		.loc 14 46 22 discriminator 2
 2996 00ec 2024     		movs	r4, #32
 2997              	.L130:
 2998              		.loc 14 46 41 is_stmt 1 discriminator 4
 2999 00ee D7ED057A 		vldr.32	s15, [r7, #20]
 3000 00f2 9FED4A7A 		vldr.32	s14, .L140+4
 3001 00f6 67EE877A 		vmul.f32	s15, s15, s14
 3002 00fa B0EE670A 		vmov.f32	s0, s15
 3003 00fe FFF7FEFF 		bl	_ZSt3absf
 3004 0102 F0EE407A 		vmov.f32	s15, s0
 3005              		.loc 14 46 22 discriminator 4
 3006 0106 BDEEE79A 		vcvt.s32.f32	s18, s15
 3007              		.loc 14 46 41 discriminator 4
 3008 010a D7ED057A 		vldr.32	s15, [r7, #20]
 3009 010e 9FED437A 		vldr.32	s14, .L140+4
 3010 0112 67EE877A 		vmul.f32	s15, s15, s14
 3011 0116 B0EE670A 		vmov.f32	s0, s15
 3012 011a FFF7FEFF 		bl	_ZSt3absf
 3013 011e B0EE408A 		vmov.f32	s16, s0
 3014 0122 D7ED057A 		vldr.32	s15, [r7, #20]
 3015 0126 9FED3D7A 		vldr.32	s14, .L140+4
 3016 012a 67EE877A 		vmul.f32	s15, s15, s14
 3017 012e B0EE670A 		vmov.f32	s0, s15
 3018 0132 FFF7FEFF 		bl	_ZSt3absf
 3019 0136 F0EE407A 		vmov.f32	s15, s0
 3020 013a FDEEE77A 		vcvt.s32.f32	s15, s15
 3021 013e F8EEE77A 		vcvt.f32.s32	s15, s15
 3022 0142 78EE677A 		vsub.f32	s15, s16, s15
 3023 0146 B7EEE78A 		vcvt.f64.f32	d8, s15
 3024 014a 0321     		movs	r1, #3
 3025 014c 0A20     		movs	r0, #10
 3026 014e FFF7FEFF 		bl	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 3027 0152 B0EE407B 		vmov.f64	d7, d0
 3028 0156 28EE077B 		vmul.f64	d7, d8, d7
 3029              		.loc 14 46 22 discriminator 4
 3030 015a FDEEC77B 		vcvt.s32.f64	s15, d7
 3031 015e 17EE903A 		vmov	r3, s15	@ int
 3032 0162 19EE102A 		vmov	r2, s18	@ int
 3033 0166 2146     		mov	r1, r4
 3034 0168 2E48     		ldr	r0, .L140+12
 3035 016a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
  47:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Min: " FLT_FMT3, FLT_VAR3(minLoad * 100.0f));
 3036              		.loc 14 47 41 discriminator 4
 3037 016e D7ED037A 		vldr.32	s15, [r7, #12]
 3038 0172 9FED2A7A 		vldr.32	s14, .L140+4
 3039 0176 67EE877A 		vmul.f32	s15, s15, s14
 3040              		.loc 14 47 22 discriminator 4
 3041 017a F5EEC07A 		vcmpe.f32	s15, #0
 3042 017e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3043 0182 01D5     		bpl	.L139
 3044              		.loc 14 47 22 is_stmt 0 discriminator 1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 71


 3045 0184 2D24     		movs	r4, #45
 3046 0186 00E0     		b	.L133
 3047              	.L139:
 3048              		.loc 14 47 22 discriminator 2
 3049 0188 2024     		movs	r4, #32
 3050              	.L133:
 3051              		.loc 14 47 41 is_stmt 1 discriminator 4
 3052 018a D7ED037A 		vldr.32	s15, [r7, #12]
 3053 018e 9FED237A 		vldr.32	s14, .L140+4
 3054 0192 67EE877A 		vmul.f32	s15, s15, s14
 3055 0196 B0EE670A 		vmov.f32	s0, s15
 3056 019a FFF7FEFF 		bl	_ZSt3absf
 3057 019e F0EE407A 		vmov.f32	s15, s0
 3058              		.loc 14 47 22 discriminator 4
 3059 01a2 BDEEE79A 		vcvt.s32.f32	s18, s15
 3060              		.loc 14 47 41 discriminator 4
 3061 01a6 D7ED037A 		vldr.32	s15, [r7, #12]
 3062 01aa 9FED1C7A 		vldr.32	s14, .L140+4
 3063 01ae 67EE877A 		vmul.f32	s15, s15, s14
 3064 01b2 B0EE670A 		vmov.f32	s0, s15
 3065 01b6 FFF7FEFF 		bl	_ZSt3absf
 3066 01ba B0EE408A 		vmov.f32	s16, s0
 3067 01be D7ED037A 		vldr.32	s15, [r7, #12]
 3068 01c2 9FED167A 		vldr.32	s14, .L140+4
 3069 01c6 67EE877A 		vmul.f32	s15, s15, s14
 3070 01ca B0EE670A 		vmov.f32	s0, s15
 3071 01ce FFF7FEFF 		bl	_ZSt3absf
 3072 01d2 F0EE407A 		vmov.f32	s15, s0
 3073 01d6 FDEEE77A 		vcvt.s32.f32	s15, s15
 3074 01da F8EEE77A 		vcvt.f32.s32	s15, s15
 3075 01de 78EE677A 		vsub.f32	s15, s16, s15
 3076 01e2 B7EEE78A 		vcvt.f64.f32	d8, s15
 3077 01e6 0321     		movs	r1, #3
 3078 01e8 0A20     		movs	r0, #10
 3079 01ea FFF7FEFF 		bl	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 3080 01ee B0EE407B 		vmov.f64	d7, d0
 3081 01f2 28EE077B 		vmul.f64	d7, d8, d7
 3082              		.loc 14 47 22 discriminator 4
 3083 01f6 FDEEC77B 		vcvt.s32.f64	s15, d7
 3084 01fa 17EE903A 		vmov	r3, s15	@ int
 3085 01fe 19EE102A 		vmov	r2, s18	@ int
 3086 0202 2146     		mov	r1, r4
 3087 0204 0848     		ldr	r0, .L140+16
 3088 0206 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
  48:GrannyChordApp.cpp **** }
 3089              		.loc 14 48 1 discriminator 4
 3090 020a 00BF     		nop
 3091 020c 1C37     		adds	r7, r7, #28
 3092              		.cfi_def_cfa_offset 28
 3093 020e BD46     		mov	sp, r7
 3094              		.cfi_def_cfa_register 13
 3095              		@ sp needed
 3096 0210 BDEC048B 		vldm	sp!, {d8-d9}
 3097              		.cfi_restore 82
 3098              		.cfi_restore 83
 3099              		.cfi_restore 80
 3100              		.cfi_restore 81
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 72


 3101              		.cfi_def_cfa_offset 12
 3102 0214 90BD     		pop	{r4, r7, pc}
 3103              	.L141:
 3104 0216 00BF     		.align	2
 3105              	.L140:
 3106 0218 1C000000 		.word	.LC1
 3107 021c 0000C842 		.word	1120403456
 3108 0220 30000000 		.word	.LC2
 3109 0224 40000000 		.word	.LC3
 3110 0228 50000000 		.word	.LC4
 3111              		.cfi_endproc
 3112              	.LFE4914:
 3114              		.section	.rodata
 3115 005f 00       		.align	2
 3116              	.LC5:
 3117 0060 61707020 		.ascii	"app is running\000"
 3117      69732072 
 3117      756E6E69 
 3117      6E6700
 3118              		.section	.text._ZN14GrannyChordApp3RunEv,"ax",%progbits
 3119              		.align	1
 3120              		.global	_ZN14GrannyChordApp3RunEv
 3121              		.syntax unified
 3122              		.thumb
 3123              		.thumb_func
 3125              	_ZN14GrannyChordApp3RunEv:
 3126              	.LFB4915:
  49:GrannyChordApp.cpp **** #endif
  50:GrannyChordApp.cpp **** 
  51:GrannyChordApp.cpp **** /// @brief Loops whilst app is running, updating state and UI, handling 
  52:GrannyChordApp.cpp **** ///        state transitions, updating parameters and managing audio recordings
  53:GrannyChordApp.cpp **** void GrannyChordApp::Run(){
 3127              		.loc 14 53 27
 3128              		.cfi_startproc
 3129              		@ args = 0, pretend = 0, frame = 8
 3130              		@ frame_needed = 1, uses_anonymous_args = 0
 3131 0000 80B5     		push	{r7, lr}
 3132              		.cfi_def_cfa_offset 8
 3133              		.cfi_offset 7, -8
 3134              		.cfi_offset 14, -4
 3135 0002 82B0     		sub	sp, sp, #8
 3136              		.cfi_def_cfa_offset 16
 3137 0004 00AF     		add	r7, sp, #0
 3138              		.cfi_def_cfa_register 7
 3139 0006 7860     		str	r0, [r7, #4]
  54:GrannyChordApp.cpp ****   pod_.seed.PrintLine("app is running");
 3140              		.loc 14 54 22
 3141 0008 2F48     		ldr	r0, .L146
 3142 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 3143              	.L145:
  55:GrannyChordApp.cpp ****   // timer_.Start();
  56:GrannyChordApp.cpp ****   while(true){
  57:GrannyChordApp.cpp ****     #ifdef DEBUG_MODE
  58:GrannyChordApp.cpp ****     loop_count++;
 3144              		.loc 14 58 5
 3145 000e 7B68     		ldr	r3, [r7, #4]
 3146 0010 03F50043 		add	r3, r3, #32768
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 73


 3147 0014 D3F8C836 		ldr	r3, [r3, #1736]
 3148              		.loc 14 58 15
 3149 0018 0133     		adds	r3, r3, #1
 3150 001a 7A68     		ldr	r2, [r7, #4]
 3151 001c 02F50042 		add	r2, r2, #32768
 3152 0020 C2F8C836 		str	r3, [r2, #1736]
  59:GrannyChordApp.cpp ****     if (loop_count%2000000==0){
 3153              		.loc 14 59 9
 3154 0024 7B68     		ldr	r3, [r7, #4]
 3155 0026 03F50043 		add	r3, r3, #32768
 3156 002a D3F8C826 		ldr	r2, [r3, #1736]
 3157              		.loc 14 59 19
 3158 002e 274B     		ldr	r3, .L146+4
 3159 0030 A3FB0213 		umull	r1, r3, r3, r2
 3160 0034 DB0C     		lsrs	r3, r3, #19
 3161 0036 2649     		ldr	r1, .L146+8
 3162 0038 01FB03F3 		mul	r3, r1, r3
 3163 003c D31A     		subs	r3, r2, r3
 3164              		.loc 14 59 5
 3165 003e 002B     		cmp	r3, #0
 3166 0040 09D1     		bne	.L143
  60:GrannyChordApp.cpp ****       PrintCPULoad();
 3167              		.loc 14 60 19
 3168 0042 7868     		ldr	r0, [r7, #4]
 3169 0044 FFF7FEFF 		bl	_ZN14GrannyChordApp12PrintCPULoadEv
  61:GrannyChordApp.cpp ****       loop_count=0;
 3170              		.loc 14 61 17
 3171 0048 7B68     		ldr	r3, [r7, #4]
 3172 004a 03F50043 		add	r3, r3, #32768
 3173 004e 1A46     		mov	r2, r3
 3174 0050 0023     		movs	r3, #0
 3175 0052 C2F8C836 		str	r3, [r2, #1736]
 3176              	.L143:
  62:GrannyChordApp.cpp ****       // System::Delay(500);
  63:GrannyChordApp.cpp ****     }
  64:GrannyChordApp.cpp ****     #endif
  65:GrannyChordApp.cpp **** 
  66:GrannyChordApp.cpp ****     if (counter%128000==0){
 3177              		.loc 14 66 9
 3178 0056 7B68     		ldr	r3, [r7, #4]
 3179 0058 03F50043 		add	r3, r3, #32768
 3180 005c D3F83827 		ldr	r2, [r3, #1848]
  67:GrannyChordApp.cpp **** 
  68:GrannyChordApp.cpp ****     }
  69:GrannyChordApp.cpp **** 
  70:GrannyChordApp.cpp ****     if (recording_out_) {
 3181              		.loc 14 70 9
 3182 0060 7B68     		ldr	r3, [r7, #4]
 3183 0062 03F50043 		add	r3, r3, #32768
 3184 0066 93F8C036 		ldrb	r3, [r3, #1728]	@ zero_extendqisi2
 3185              		.loc 14 70 5
 3186 006a 002B     		cmp	r3, #0
 3187 006c 25D0     		beq	.L144
  71:GrannyChordApp.cpp ****       sd_writer_.Write();
 3188              		.loc 14 71 23
 3189 006e 7B68     		ldr	r3, [r7, #4]
 3190 0070 03F24443 		addw	r3, r3, #1092
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 74


 3191 0074 1846     		mov	r0, r3
 3192 0076 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE5WriteEv
  72:GrannyChordApp.cpp ****       if (sd_writer_.GetLengthSeconds()>120){
 3193              		.loc 14 72 38
 3194 007a 7B68     		ldr	r3, [r7, #4]
 3195 007c 03F24443 		addw	r3, r3, #1092
 3196 0080 1846     		mov	r0, r3
 3197 0082 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
 3198 0086 F0EE407A 		vmov.f32	s15, s0
 3199              		.loc 14 72 40
 3200 008a 9FED127A 		vldr.32	s14, .L146+12
 3201 008e F4EEC77A 		vcmpe.f32	s15, s14
 3202 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3203 0096 CCBF     		ite	gt
 3204 0098 0123     		movgt	r3, #1
 3205 009a 0023     		movle	r3, #0
 3206 009c DBB2     		uxtb	r3, r3
 3207              		.loc 14 72 7
 3208 009e 002B     		cmp	r3, #0
 3209 00a0 0BD0     		beq	.L144
  73:GrannyChordApp.cpp ****         sd_writer_.SaveFile();
 3210              		.loc 14 73 28
 3211 00a2 7B68     		ldr	r3, [r7, #4]
 3212 00a4 03F24443 		addw	r3, r3, #1092
 3213 00a8 1846     		mov	r0, r3
 3214 00aa FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE8SaveFileEv
  74:GrannyChordApp.cpp ****         recording_out_ = false;
 3215              		.loc 14 74 24
 3216 00ae 7B68     		ldr	r3, [r7, #4]
 3217 00b0 03F50043 		add	r3, r3, #32768
 3218 00b4 0022     		movs	r2, #0
 3219 00b6 83F8C026 		strb	r2, [r3, #1728]
 3220              	.L144:
  75:GrannyChordApp.cpp ****       }
  76:GrannyChordApp.cpp ****     }
  77:GrannyChordApp.cpp ****     UpdateUI();
 3221              		.loc 14 77 13
 3222 00ba 7868     		ldr	r0, [r7, #4]
 3223 00bc FFF7FEFF 		bl	_ZN14GrannyChordApp8UpdateUIEv
  78:GrannyChordApp.cpp ****     UpdateSynthParams();
 3224              		.loc 14 78 22
 3225 00c0 7868     		ldr	r0, [r7, #4]
 3226 00c2 FFF7FEFF 		bl	_ZN14GrannyChordApp17UpdateSynthParamsEv
  58:GrannyChordApp.cpp ****     if (loop_count%2000000==0){
 3227              		.loc 14 58 15
 3228 00c6 A2E7     		b	.L145
 3229              	.L147:
 3230              		.align	2
 3231              	.L146:
 3232 00c8 60000000 		.word	.LC5
 3233 00cc 83DE1B43 		.word	1125899907
 3234 00d0 80841E00 		.word	2000000
 3235 00d4 0000F042 		.word	1123024896
 3236              		.cfi_endproc
 3237              	.LFE4915:
 3239              		.section	.rodata
 3240 006f 00       		.align	2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 75


 3241              	.LC6:
 3242 0070 73776974 		.ascii	"switching states\000"
 3242      6368696E 
 3242      67207374 
 3242      61746573 
 3242      00
 3243              		.section	.text._ZN14GrannyChordApp8UpdateUIEv,"ax",%progbits
 3244              		.align	1
 3245              		.global	_ZN14GrannyChordApp8UpdateUIEv
 3246              		.syntax unified
 3247              		.thumb
 3248              		.thumb_func
 3250              	_ZN14GrannyChordApp8UpdateUIEv:
 3251              	.LFB4916:
  79:GrannyChordApp.cpp ****     // System::Delay(1);
  80:GrannyChordApp.cpp ****   }
  81:GrannyChordApp.cpp **** }
  82:GrannyChordApp.cpp **** 
  83:GrannyChordApp.cpp **** /// @brief Handles hardware control inputs and calls state change methods
  84:GrannyChordApp.cpp **** void GrannyChordApp::UpdateUI(){
 3252              		.loc 14 84 32
 3253              		.cfi_startproc
 3254              		@ args = 0, pretend = 0, frame = 16
 3255              		@ frame_needed = 1, uses_anonymous_args = 0
 3256 0000 80B5     		push	{r7, lr}
 3257              		.cfi_def_cfa_offset 8
 3258              		.cfi_offset 7, -8
 3259              		.cfi_offset 14, -4
 3260 0002 84B0     		sub	sp, sp, #16
 3261              		.cfi_def_cfa_offset 24
 3262 0004 00AF     		add	r7, sp, #0
 3263              		.cfi_def_cfa_register 7
 3264 0006 7860     		str	r0, [r7, #4]
  85:GrannyChordApp.cpp ****   pod_.ProcessDigitalControls();
 3265              		.loc 14 85 3
 3266 0008 7B68     		ldr	r3, [r7, #4]
 3267 000a DB69     		ldr	r3, [r3, #28]
 3268              		.loc 14 85 30
 3269 000c 1846     		mov	r0, r3
 3270 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
  86:GrannyChordApp.cpp **** 
  87:GrannyChordApp.cpp ****   if (pod_.encoder.TimeHeldMs() > 1000.0f) HandleEncoderLongPress();
 3271              		.loc 14 87 7
 3272 0012 7B68     		ldr	r3, [r7, #4]
 3273 0014 DB69     		ldr	r3, [r3, #28]
 3274              		.loc 14 87 30
 3275 0016 4033     		adds	r3, r3, #64
 3276 0018 1846     		mov	r0, r3
 3277 001a FFF7FEFF 		bl	_ZNK5daisy7Encoder10TimeHeldMsEv
 3278 001e F0EE407A 		vmov.f32	s15, s0
 3279              		.loc 14 87 33
 3280 0022 9FED497A 		vldr.32	s14, .L164
 3281 0026 F4EEC77A 		vcmpe.f32	s15, s14
 3282 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3283 002e CCBF     		ite	gt
 3284 0030 0123     		movgt	r3, #1
 3285 0032 0023     		movle	r3, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 76


 3286 0034 DBB2     		uxtb	r3, r3
 3287              		.loc 14 87 3
 3288 0036 002B     		cmp	r3, #0
 3289 0038 03D0     		beq	.L149
 3290              		.loc 14 87 66 discriminator 1
 3291 003a 7868     		ldr	r0, [r7, #4]
 3292 003c FFF7FEFF 		bl	_ZN14GrannyChordApp22HandleEncoderLongPressEv
 3293 0040 0BE0     		b	.L150
 3294              	.L149:
  88:GrannyChordApp.cpp ****   else if (pod_.encoder.FallingEdge()) HandleEncoderPressed();
 3295              		.loc 14 88 12
 3296 0042 7B68     		ldr	r3, [r7, #4]
 3297 0044 DB69     		ldr	r3, [r3, #28]
 3298              		.loc 14 88 36
 3299 0046 4033     		adds	r3, r3, #64
 3300 0048 1846     		mov	r0, r3
 3301 004a FFF7FEFF 		bl	_ZNK5daisy7Encoder11FallingEdgeEv
 3302 004e 0346     		mov	r3, r0
 3303              		.loc 14 88 8
 3304 0050 002B     		cmp	r3, #0
 3305 0052 02D0     		beq	.L150
 3306              		.loc 14 88 60 discriminator 1
 3307 0054 7868     		ldr	r0, [r7, #4]
 3308 0056 FFF7FEFF 		bl	_ZN14GrannyChordApp20HandleEncoderPressedEv
 3309              	.L150:
  89:GrannyChordApp.cpp **** 
  90:GrannyChordApp.cpp ****   if (curr_state_==AppState::Synthesis){
 3310              		.loc 14 90 7
 3311 005a 7B68     		ldr	r3, [r7, #4]
 3312 005c D3F87432 		ldr	r3, [r3, #628]
 3313              		.loc 14 90 3
 3314 0060 022B     		cmp	r3, #2
 3315 0062 40D1     		bne	.L151
  91:GrannyChordApp.cpp ****     if (pod_.button1.TimeHeldMs()>500.0f || pod_.button2.TimeHeldMs()>500.0f){
 3316              		.loc 14 91 9
 3317 0064 7B68     		ldr	r3, [r7, #4]
 3318 0066 DB69     		ldr	r3, [r3, #28]
 3319              		.loc 14 91 32
 3320 0068 B033     		adds	r3, r3, #176
 3321 006a 1846     		mov	r0, r3
 3322 006c FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3323 0070 F0EE407A 		vmov.f32	s15, s0
 3324              		.loc 14 91 42
 3325 0074 9FED357A 		vldr.32	s14, .L164+4
 3326 0078 F4EEC77A 		vcmpe.f32	s15, s14
 3327 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3328 0080 0EDC     		bgt	.L152
 3329              		.loc 14 91 45 discriminator 2
 3330 0082 7B68     		ldr	r3, [r7, #4]
 3331 0084 DB69     		ldr	r3, [r3, #28]
 3332              		.loc 14 91 68 discriminator 2
 3333 0086 C033     		adds	r3, r3, #192
 3334 0088 1846     		mov	r0, r3
 3335 008a FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3336 008e F0EE407A 		vmov.f32	s15, s0
 3337              		.loc 14 91 42 discriminator 2
 3338 0092 9FED2E7A 		vldr.32	s14, .L164+4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 77


 3339 0096 F4EEC77A 		vcmpe.f32	s15, s14
 3340 009a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3341 009e 01DD     		ble	.L162
 3342              	.L152:
 3343              		.loc 14 91 42 is_stmt 0 discriminator 3
 3344 00a0 0123     		movs	r3, #1
 3345 00a2 00E0     		b	.L155
 3346              	.L162:
 3347              		.loc 14 91 42 discriminator 4
 3348 00a4 0023     		movs	r3, #0
 3349              	.L155:
 3350              		.loc 14 91 5 is_stmt 1 discriminator 6
 3351 00a6 002B     		cmp	r3, #0
 3352 00a8 03D0     		beq	.L156
  92:GrannyChordApp.cpp ****       ButtonLongPressHandler();
 3353              		.loc 14 92 29
 3354 00aa 7868     		ldr	r0, [r7, #4]
 3355 00ac FFF7FEFF 		bl	_ZN14GrannyChordApp22ButtonLongPressHandlerEv
 3356 00b0 19E0     		b	.L151
 3357              	.L156:
  93:GrannyChordApp.cpp ****     }
  94:GrannyChordApp.cpp ****     else if (pod_.button1.FallingEdge() || pod_.button2.FallingEdge()){
 3358              		.loc 14 94 14
 3359 00b2 7B68     		ldr	r3, [r7, #4]
 3360 00b4 DB69     		ldr	r3, [r3, #28]
 3361              		.loc 14 94 38
 3362 00b6 B033     		adds	r3, r3, #176
 3363 00b8 1846     		mov	r0, r3
 3364 00ba FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 3365 00be 0346     		mov	r3, r0
 3366              		.loc 14 94 41
 3367 00c0 002B     		cmp	r3, #0
 3368 00c2 08D1     		bne	.L157
 3369              		.loc 14 94 44 discriminator 2
 3370 00c4 7B68     		ldr	r3, [r7, #4]
 3371 00c6 DB69     		ldr	r3, [r3, #28]
 3372              		.loc 14 94 68 discriminator 2
 3373 00c8 C033     		adds	r3, r3, #192
 3374 00ca 1846     		mov	r0, r3
 3375 00cc FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 3376 00d0 0346     		mov	r3, r0
 3377              		.loc 14 94 41 discriminator 2
 3378 00d2 002B     		cmp	r3, #0
 3379 00d4 01D0     		beq	.L158
 3380              	.L157:
 3381              		.loc 14 94 41 is_stmt 0 discriminator 3
 3382 00d6 0123     		movs	r3, #1
 3383 00d8 00E0     		b	.L159
 3384              	.L158:
 3385              		.loc 14 94 41 discriminator 4
 3386 00da 0023     		movs	r3, #0
 3387              	.L159:
 3388              		.loc 14 94 10 is_stmt 1 discriminator 6
 3389 00dc 002B     		cmp	r3, #0
 3390 00de 02D0     		beq	.L151
  95:GrannyChordApp.cpp ****       ButtonHandler();
 3391              		.loc 14 95 20
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 78


 3392 00e0 7868     		ldr	r0, [r7, #4]
 3393 00e2 FFF7FEFF 		bl	_ZN14GrannyChordApp13ButtonHandlerEv
 3394              	.L151:
  96:GrannyChordApp.cpp ****     }
  97:GrannyChordApp.cpp ****   }
  98:GrannyChordApp.cpp **** 
  99:GrannyChordApp.cpp ****   int32_t encoder_inc = pod_.encoder.Increment();
 3395              		.loc 14 99 25
 3396 00e6 7B68     		ldr	r3, [r7, #4]
 3397 00e8 DB69     		ldr	r3, [r3, #28]
 3398              		.loc 14 99 47
 3399 00ea 4033     		adds	r3, r3, #64
 3400 00ec 1846     		mov	r0, r3
 3401 00ee FFF7FEFF 		bl	_ZNK5daisy7Encoder9IncrementEv
 3402 00f2 F860     		str	r0, [r7, #12]
 100:GrannyChordApp.cpp ****   if (encoder_inc!=0){
 3403              		.loc 14 100 3
 3404 00f4 FB68     		ldr	r3, [r7, #12]
 3405 00f6 002B     		cmp	r3, #0
 3406 00f8 03D0     		beq	.L160
 101:GrannyChordApp.cpp ****     HandleEncoderIncrement(encoder_inc);
 3407              		.loc 14 101 27
 3408 00fa F968     		ldr	r1, [r7, #12]
 3409 00fc 7868     		ldr	r0, [r7, #4]
 3410 00fe FFF7FEFF 		bl	_ZN14GrannyChordApp22HandleEncoderIncrementEi
 3411              	.L160:
 102:GrannyChordApp.cpp ****   }
 103:GrannyChordApp.cpp ****   if (curr_state_ != next_state_){
 3412              		.loc 14 103 7
 3413 0102 7B68     		ldr	r3, [r7, #4]
 3414 0104 D3F87422 		ldr	r2, [r3, #628]
 3415              		.loc 14 103 22
 3416 0108 7B68     		ldr	r3, [r7, #4]
 3417 010a D3F87832 		ldr	r3, [r3, #632]
 3418              		.loc 14 103 3
 3419 010e 9A42     		cmp	r2, r3
 3420 0110 16D0     		beq	.L163
 104:GrannyChordApp.cpp ****     #ifdef DEBUG_MODE
 105:GrannyChordApp.cpp ****     DebugPrintState(curr_state_);
 3421              		.loc 14 105 20
 3422 0112 7B68     		ldr	r3, [r7, #4]
 3423 0114 D3F87432 		ldr	r3, [r3, #628]
 3424 0118 1946     		mov	r1, r3
 3425 011a 7868     		ldr	r0, [r7, #4]
 3426 011c FFF7FEFF 		bl	_ZN14GrannyChordApp15DebugPrintStateE8AppState
 106:GrannyChordApp.cpp ****     DebugPrint(pod_, "switching states");
 3427              		.loc 14 106 5
 3428 0120 0B48     		ldr	r0, .L164+8
 3429 0122 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 107:GrannyChordApp.cpp ****     DebugPrintState(next_state_);
 3430              		.loc 14 107 20
 3431 0126 7B68     		ldr	r3, [r7, #4]
 3432 0128 D3F87832 		ldr	r3, [r3, #632]
 3433 012c 1946     		mov	r1, r3
 3434 012e 7868     		ldr	r0, [r7, #4]
 3435 0130 FFF7FEFF 		bl	_ZN14GrannyChordApp15DebugPrintStateE8AppState
 108:GrannyChordApp.cpp ****     #endif
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 79


 109:GrannyChordApp.cpp ****     SetLedAppState();
 3436              		.loc 14 109 19
 3437 0134 7868     		ldr	r0, [r7, #4]
 3438 0136 FFF7FEFF 		bl	_ZN14GrannyChordApp14SetLedAppStateEv
 110:GrannyChordApp.cpp ****     HandleStateChange();
 3439              		.loc 14 110 22
 3440 013a 7868     		ldr	r0, [r7, #4]
 3441 013c FFF7FEFF 		bl	_ZN14GrannyChordApp17HandleStateChangeEv
 3442              	.L163:
 111:GrannyChordApp.cpp ****     // DebugPrint(pod_, "handled state change");
 112:GrannyChordApp.cpp ****   }
 113:GrannyChordApp.cpp **** }
 3443              		.loc 14 113 1
 3444 0140 00BF     		nop
 3445 0142 1037     		adds	r7, r7, #16
 3446              		.cfi_def_cfa_offset 8
 3447 0144 BD46     		mov	sp, r7
 3448              		.cfi_def_cfa_register 13
 3449              		@ sp needed
 3450 0146 80BD     		pop	{r7, pc}
 3451              	.L165:
 3452              		.align	2
 3453              	.L164:
 3454 0148 00007A44 		.word	1148846080
 3455 014c 0000FA43 		.word	1140457472
 3456 0150 70000000 		.word	.LC6
 3457              		.cfi_endproc
 3458              	.LFE4916:
 3460              		.section	.rodata
 3461 0081 000000   		.align	2
 3462              	.LC7:
 3463 0084 5265636F 		.ascii	"Recording in\000"
 3463      7264696E 
 3463      6720696E 
 3463      00
 3464 0091 000000   		.align	2
 3465              	.LC8:
 3466 0094 73746172 		.ascii	"starting playback\000"
 3466      74696E67 
 3466      20706C61 
 3466      79626163 
 3466      6B00
 3467              		.section	.text._ZN14GrannyChordApp17HandleStateChangeEv,"ax",%progbits
 3468              		.align	1
 3469              		.global	_ZN14GrannyChordApp17HandleStateChangeEv
 3470              		.syntax unified
 3471              		.thumb
 3472              		.thumb_func
 3474              	_ZN14GrannyChordApp17HandleStateChangeEv:
 3475              	.LFB4917:
 114:GrannyChordApp.cpp **** 
 115:GrannyChordApp.cpp **** /// @brief handles transitions between states and prepares for next state
 116:GrannyChordApp.cpp **** void GrannyChordApp::HandleStateChange(){
 3476              		.loc 14 116 41
 3477              		.cfi_startproc
 3478              		@ args = 0, pretend = 0, frame = 8
 3479              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 80


 3480 0000 80B5     		push	{r7, lr}
 3481              		.cfi_def_cfa_offset 8
 3482              		.cfi_offset 7, -8
 3483              		.cfi_offset 14, -4
 3484 0002 82B0     		sub	sp, sp, #8
 3485              		.cfi_def_cfa_offset 16
 3486 0004 00AF     		add	r7, sp, #0
 3487              		.cfi_def_cfa_register 7
 3488 0006 7860     		str	r0, [r7, #4]
 117:GrannyChordApp.cpp ****   switch(next_state_){
 3489              		.loc 14 117 10
 3490 0008 7B68     		ldr	r3, [r7, #4]
 3491 000a D3F87832 		ldr	r3, [r3, #632]
 3492              		.loc 14 117 3
 3493 000e 052B     		cmp	r3, #5
 3494 0010 3BD8     		bhi	.L175
 3495 0012 01A2     		adr	r2, .L169
 3496 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3497              		.p2align 2
 3498              	.L169:
 3499 0018 31000000 		.word	.L173+1
 3500 001c 5B000000 		.word	.L172+1
 3501 0020 71000000 		.word	.L171+1
 3502 0024 45000000 		.word	.L170+1
 3503 0028 8B000000 		.word	.L175+1
 3504 002c 81000000 		.word	.L168+1
 3505              		.p2align 1
 3506              	.L173:
 118:GrannyChordApp.cpp ****     case AppState::SelectFile:
 119:GrannyChordApp.cpp ****       pod_.StopAudio();
 3507              		.loc 14 119 7
 3508 0030 7B68     		ldr	r3, [r7, #4]
 3509 0032 DB69     		ldr	r3, [r3, #28]
 3510              		.loc 14 119 21
 3511 0034 1846     		mov	r0, r3
 3512 0036 FFF7FEFF 		bl	_ZN5daisy8DaisyPod9StopAudioEv
 120:GrannyChordApp.cpp ****       // DebugPrint(pod_, "stopped audio for select file");
 121:GrannyChordApp.cpp ****       curr_state_ = AppState::SelectFile;
 3513              		.loc 14 121 19
 3514 003a 7B68     		ldr	r3, [r7, #4]
 3515 003c 0022     		movs	r2, #0
 3516 003e C3F87422 		str	r2, [r3, #628]
 122:GrannyChordApp.cpp ****       break; 
 3517              		.loc 14 122 7
 3518 0042 23E0     		b	.L174
 3519              	.L170:
 123:GrannyChordApp.cpp ****     case AppState::RecordIn:
 124:GrannyChordApp.cpp ****       InitRecordIn();
 3520              		.loc 14 124 19
 3521 0044 7868     		ldr	r0, [r7, #4]
 3522 0046 FFF7FEFF 		bl	_ZN14GrannyChordApp12InitRecordInEv
 125:GrannyChordApp.cpp ****       DebugPrint(pod_, "Recording in");
 3523              		.loc 14 125 7
 3524 004a 1248     		ldr	r0, .L176
 3525 004c FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 126:GrannyChordApp.cpp ****       curr_state_ = AppState::RecordIn;  
 3526              		.loc 14 126 19
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 81


 3527 0050 7B68     		ldr	r3, [r7, #4]
 3528 0052 0322     		movs	r2, #3
 3529 0054 C3F87422 		str	r2, [r3, #628]
 127:GrannyChordApp.cpp ****       break;
 3530              		.loc 14 127 7
 3531 0058 18E0     		b	.L174
 3532              	.L172:
 128:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 129:GrannyChordApp.cpp ****       InitPlayback(); 
 3533              		.loc 14 129 19
 3534 005a 7868     		ldr	r0, [r7, #4]
 3535 005c FFF7FEFF 		bl	_ZN14GrannyChordApp12InitPlaybackEv
 130:GrannyChordApp.cpp ****       DebugPrint(pod_,"starting playback");
 3536              		.loc 14 130 7
 3537 0060 0D48     		ldr	r0, .L176+4
 3538 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 131:GrannyChordApp.cpp ****       curr_state_ = AppState::PlayWAV;
 3539              		.loc 14 131 19
 3540 0066 7B68     		ldr	r3, [r7, #4]
 3541 0068 0122     		movs	r2, #1
 3542 006a C3F87422 		str	r2, [r3, #628]
 132:GrannyChordApp.cpp ****       break;
 3543              		.loc 14 132 7
 3544 006e 0DE0     		b	.L174
 3545              	.L171:
 133:GrannyChordApp.cpp ****     case AppState::Synthesis:
 134:GrannyChordApp.cpp ****       InitSynth();
 3546              		.loc 14 134 16
 3547 0070 7868     		ldr	r0, [r7, #4]
 3548 0072 FFF7FEFF 		bl	_ZN14GrannyChordApp9InitSynthEv
 135:GrannyChordApp.cpp ****       curr_state_ = AppState::Synthesis;
 3549              		.loc 14 135 19
 3550 0076 7B68     		ldr	r3, [r7, #4]
 3551 0078 0222     		movs	r2, #2
 3552 007a C3F87422 		str	r2, [r3, #628]
 136:GrannyChordApp.cpp ****       // SetLedSynthMode();
 137:GrannyChordApp.cpp ****       // DebugPrint(pod_, "started audiocallback");
 138:GrannyChordApp.cpp ****       break;
 3553              		.loc 14 138 7
 3554 007e 05E0     		b	.L174
 3555              	.L168:
 139:GrannyChordApp.cpp ****     case AppState::Error: 
 140:GrannyChordApp.cpp ****       curr_state_ = AppState::Error;
 3556              		.loc 14 140 19
 3557 0080 7B68     		ldr	r3, [r7, #4]
 3558 0082 0522     		movs	r2, #5
 3559 0084 C3F87422 		str	r2, [r3, #628]
 141:GrannyChordApp.cpp ****       break;
 3560              		.loc 14 141 7
 3561 0088 00E0     		b	.L174
 3562              	.L175:
 142:GrannyChordApp.cpp ****     default: 
 143:GrannyChordApp.cpp ****       break;
 3563              		.loc 14 143 7
 3564 008a 00BF     		nop
 3565              	.L174:
 144:GrannyChordApp.cpp ****   }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 82


 145:GrannyChordApp.cpp **** }
 3566              		.loc 14 145 1
 3567 008c 00BF     		nop
 3568 008e 0837     		adds	r7, r7, #8
 3569              		.cfi_def_cfa_offset 8
 3570 0090 BD46     		mov	sp, r7
 3571              		.cfi_def_cfa_register 13
 3572              		@ sp needed
 3573 0092 80BD     		pop	{r7, pc}
 3574              	.L177:
 3575              		.align	2
 3576              	.L176:
 3577 0094 84000000 		.word	.LC7
 3578 0098 94000000 		.word	.LC8
 3579              		.cfi_endproc
 3580              	.LFE4917:
 3582              		.section	.text._ZN14GrannyChordApp22HandleEncoderIncrementEi,"ax",%progbits
 3583              		.align	1
 3584              		.global	_ZN14GrannyChordApp22HandleEncoderIncrementEi
 3585              		.syntax unified
 3586              		.thumb
 3587              		.thumb_func
 3589              	_ZN14GrannyChordApp22HandleEncoderIncrementEi:
 3590              	.LFB4918:
 146:GrannyChordApp.cpp **** 
 147:GrannyChordApp.cpp **** /// @brief Handles when encoder is scrolled to select a file 
 148:GrannyChordApp.cpp **** /// @param encoder_inc amount the encoder has been scrolled/incremented
 149:GrannyChordApp.cpp **** void GrannyChordApp::HandleEncoderIncrement(int encoder_inc){
 3591              		.loc 14 149 61
 3592              		.cfi_startproc
 3593              		@ args = 0, pretend = 0, frame = 8
 3594              		@ frame_needed = 1, uses_anonymous_args = 0
 3595 0000 80B5     		push	{r7, lr}
 3596              		.cfi_def_cfa_offset 8
 3597              		.cfi_offset 7, -8
 3598              		.cfi_offset 14, -4
 3599 0002 82B0     		sub	sp, sp, #8
 3600              		.cfi_def_cfa_offset 16
 3601 0004 00AF     		add	r7, sp, #0
 3602              		.cfi_def_cfa_register 7
 3603 0006 7860     		str	r0, [r7, #4]
 3604 0008 3960     		str	r1, [r7]
 150:GrannyChordApp.cpp ****   if (curr_state_==AppState::PlayWAV){
 3605              		.loc 14 150 7
 3606 000a 7B68     		ldr	r3, [r7, #4]
 3607 000c D3F87432 		ldr	r3, [r3, #628]
 3608              		.loc 14 150 3
 3609 0010 012B     		cmp	r3, #1
 3610 0012 09D1     		bne	.L179
 151:GrannyChordApp.cpp ****     recorded_in_ = false;
 3611              		.loc 14 151 18
 3612 0014 7B68     		ldr	r3, [r7, #4]
 3613 0016 03F50043 		add	r3, r3, #32768
 3614 001a 0022     		movs	r2, #0
 3615 001c 83F8B826 		strb	r2, [r3, #1720]
 152:GrannyChordApp.cpp ****     next_state_ = AppState::SelectFile;
 3616              		.loc 14 152 17
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 83


 3617 0020 7B68     		ldr	r3, [r7, #4]
 3618 0022 0022     		movs	r2, #0
 3619 0024 C3F87822 		str	r2, [r3, #632]
 3620              	.L179:
 153:GrannyChordApp.cpp ****   }
 154:GrannyChordApp.cpp ****   if (next_state_== AppState::SelectFile){
 3621              		.loc 14 154 7
 3622 0028 7B68     		ldr	r3, [r7, #4]
 3623 002a D3F87832 		ldr	r3, [r3, #632]
 3624              		.loc 14 154 3
 3625 002e 002B     		cmp	r3, #0
 3626 0030 09D1     		bne	.L181
 155:GrannyChordApp.cpp ****     recorded_in_ = false;
 3627              		.loc 14 155 18
 3628 0032 7B68     		ldr	r3, [r7, #4]
 3629 0034 03F50043 		add	r3, r3, #32768
 3630 0038 0022     		movs	r2, #0
 3631 003a 83F8B826 		strb	r2, [r3, #1720]
 156:GrannyChordApp.cpp ****     HandleFileSelection(encoder_inc);
 3632              		.loc 14 156 24
 3633 003e 3968     		ldr	r1, [r7]
 3634 0040 7868     		ldr	r0, [r7, #4]
 3635 0042 FFF7FEFF 		bl	_ZN14GrannyChordApp19HandleFileSelectionEl
 3636              	.L181:
 157:GrannyChordApp.cpp ****   }
 158:GrannyChordApp.cpp **** }
 3637              		.loc 14 158 1
 3638 0046 00BF     		nop
 3639 0048 0837     		adds	r7, r7, #8
 3640              		.cfi_def_cfa_offset 8
 3641 004a BD46     		mov	sp, r7
 3642              		.cfi_def_cfa_register 13
 3643              		@ sp needed
 3644 004c 80BD     		pop	{r7, pc}
 3645              		.cfi_endproc
 3646              	.LFE4918:
 3648              		.section	.text._ZN14GrannyChordApp20HandleEncoderPressedEv,"ax",%progbits
 3649              		.align	1
 3650              		.global	_ZN14GrannyChordApp20HandleEncoderPressedEv
 3651              		.syntax unified
 3652              		.thumb
 3653              		.thumb_func
 3655              	_ZN14GrannyChordApp20HandleEncoderPressedEv:
 3656              	.LFB4919:
 159:GrannyChordApp.cpp **** 
 160:GrannyChordApp.cpp **** /// @brief handles when the encoder is pressed down (not held)
 161:GrannyChordApp.cpp **** void GrannyChordApp::HandleEncoderPressed(){
 3657              		.loc 14 161 44
 3658              		.cfi_startproc
 3659              		@ args = 0, pretend = 0, frame = 8
 3660              		@ frame_needed = 1, uses_anonymous_args = 0
 3661              		@ link register save eliminated.
 3662 0000 80B4     		push	{r7}
 3663              		.cfi_def_cfa_offset 4
 3664              		.cfi_offset 7, -4
 3665 0002 83B0     		sub	sp, sp, #12
 3666              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 84


 3667 0004 00AF     		add	r7, sp, #0
 3668              		.cfi_def_cfa_register 7
 3669 0006 7860     		str	r0, [r7, #4]
 162:GrannyChordApp.cpp ****   switch(curr_state_){
 3670              		.loc 14 162 10
 3671 0008 7B68     		ldr	r3, [r7, #4]
 3672 000a D3F87432 		ldr	r3, [r3, #628]
 3673              		.loc 14 162 3
 3674 000e 032B     		cmp	r3, #3
 3675 0010 0BD0     		beq	.L183
 3676 0012 032B     		cmp	r3, #3
 3677 0014 19DC     		bgt	.L188
 3678 0016 002B     		cmp	r3, #0
 3679 0018 02D0     		beq	.L185
 3680 001a 012B     		cmp	r3, #1
 3681 001c 10D0     		beq	.L186
 163:GrannyChordApp.cpp ****     case AppState::SelectFile:
 164:GrannyChordApp.cpp ****       next_state_ = AppState::PlayWAV;
 165:GrannyChordApp.cpp ****       return;
 166:GrannyChordApp.cpp ****     case AppState::RecordIn: 
 167:GrannyChordApp.cpp ****       recorded_in_ = true;
 168:GrannyChordApp.cpp ****       next_state_ = AppState::PlayWAV; 
 169:GrannyChordApp.cpp ****       return;
 170:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 171:GrannyChordApp.cpp ****       next_state_ = AppState::Synthesis;
 172:GrannyChordApp.cpp ****       return;
 173:GrannyChordApp.cpp ****     default:
 174:GrannyChordApp.cpp ****       return;
 3682              		.loc 14 174 7
 3683 001e 14E0     		b	.L188
 3684              	.L185:
 164:GrannyChordApp.cpp ****       return;
 3685              		.loc 14 164 19
 3686 0020 7B68     		ldr	r3, [r7, #4]
 3687 0022 0122     		movs	r2, #1
 3688 0024 C3F87822 		str	r2, [r3, #632]
 165:GrannyChordApp.cpp ****     case AppState::RecordIn: 
 3689              		.loc 14 165 7
 3690 0028 10E0     		b	.L182
 3691              	.L183:
 167:GrannyChordApp.cpp ****       next_state_ = AppState::PlayWAV; 
 3692              		.loc 14 167 20
 3693 002a 7B68     		ldr	r3, [r7, #4]
 3694 002c 03F50043 		add	r3, r3, #32768
 3695 0030 0122     		movs	r2, #1
 3696 0032 83F8B826 		strb	r2, [r3, #1720]
 168:GrannyChordApp.cpp ****       return;
 3697              		.loc 14 168 19
 3698 0036 7B68     		ldr	r3, [r7, #4]
 3699 0038 0122     		movs	r2, #1
 3700 003a C3F87822 		str	r2, [r3, #632]
 169:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 3701              		.loc 14 169 7
 3702 003e 05E0     		b	.L182
 3703              	.L186:
 171:GrannyChordApp.cpp ****       return;
 3704              		.loc 14 171 19
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 85


 3705 0040 7B68     		ldr	r3, [r7, #4]
 3706 0042 0222     		movs	r2, #2
 3707 0044 C3F87822 		str	r2, [r3, #632]
 172:GrannyChordApp.cpp ****     default:
 3708              		.loc 14 172 7
 3709 0048 00E0     		b	.L182
 3710              	.L188:
 3711              		.loc 14 174 7
 3712 004a 00BF     		nop
 3713              	.L182:
 175:GrannyChordApp.cpp ****   }
 176:GrannyChordApp.cpp **** }
 3714              		.loc 14 176 1
 3715 004c 0C37     		adds	r7, r7, #12
 3716              		.cfi_def_cfa_offset 4
 3717 004e BD46     		mov	sp, r7
 3718              		.cfi_def_cfa_register 13
 3719              		@ sp needed
 3720 0050 5DF8047B 		ldr	r7, [sp], #4
 3721              		.cfi_restore 7
 3722              		.cfi_def_cfa_offset 0
 3723 0054 7047     		bx	lr
 3724              		.cfi_endproc
 3725              	.LFE4919:
 3727              		.section	.text._ZN14GrannyChordApp22HandleEncoderLongPressEv,"ax",%progbits
 3728              		.align	1
 3729              		.global	_ZN14GrannyChordApp22HandleEncoderLongPressEv
 3730              		.syntax unified
 3731              		.thumb
 3732              		.thumb_func
 3734              	_ZN14GrannyChordApp22HandleEncoderLongPressEv:
 3735              	.LFB4920:
 177:GrannyChordApp.cpp **** 
 178:GrannyChordApp.cpp **** /// @brief switch between app states by long pressing encoder.
 179:GrannyChordApp.cpp **** void GrannyChordApp::HandleEncoderLongPress(){
 3736              		.loc 14 179 46
 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 8
 3739              		@ frame_needed = 1, uses_anonymous_args = 0
 3740 0000 80B5     		push	{r7, lr}
 3741              		.cfi_def_cfa_offset 8
 3742              		.cfi_offset 7, -8
 3743              		.cfi_offset 14, -4
 3744 0002 82B0     		sub	sp, sp, #8
 3745              		.cfi_def_cfa_offset 16
 3746 0004 00AF     		add	r7, sp, #0
 3747              		.cfi_def_cfa_register 7
 3748 0006 7860     		str	r0, [r7, #4]
 3749              	.L191:
 180:GrannyChordApp.cpp ****   do { pod_.encoder.Debounce();  }
 3750              		.loc 14 180 8
 3751 0008 7B68     		ldr	r3, [r7, #4]
 3752 000a DB69     		ldr	r3, [r3, #28]
 3753              		.loc 14 180 29
 3754 000c 4033     		adds	r3, r3, #64
 3755 000e 1846     		mov	r0, r3
 3756 0010 FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 86


 181:GrannyChordApp.cpp ****   while(!pod_.encoder.FallingEdge());
 3757              		.loc 14 181 10
 3758 0014 7B68     		ldr	r3, [r7, #4]
 3759 0016 DB69     		ldr	r3, [r3, #28]
 3760              		.loc 14 181 34
 3761 0018 4033     		adds	r3, r3, #64
 3762 001a 1846     		mov	r0, r3
 3763 001c FFF7FEFF 		bl	_ZNK5daisy7Encoder11FallingEdgeEv
 3764 0020 0346     		mov	r3, r0
 3765              		.loc 14 181 9
 3766 0022 83F00103 		eor	r3, r3, #1
 3767 0026 DBB2     		uxtb	r3, r3
 3768 0028 002B     		cmp	r3, #0
 3769 002a 00D0     		beq	.L190
 180:GrannyChordApp.cpp ****   do { pod_.encoder.Debounce();  }
 3770              		.loc 14 180 3
 3771 002c ECE7     		b	.L191
 3772              	.L190:
 182:GrannyChordApp.cpp ****   switch(curr_state_){
 3773              		.loc 14 182 10
 3774 002e 7B68     		ldr	r3, [r7, #4]
 3775 0030 D3F87432 		ldr	r3, [r3, #628]
 3776              		.loc 14 182 3
 3777 0034 012B     		cmp	r3, #1
 3778 0036 02DC     		bgt	.L192
 3779 0038 002B     		cmp	r3, #0
 3780 003a 08DA     		bge	.L193
 183:GrannyChordApp.cpp ****     case AppState::Synthesis:
 184:GrannyChordApp.cpp ****     case AppState::RecordIn:  
 185:GrannyChordApp.cpp ****       next_state_ = AppState::SelectFile;
 186:GrannyChordApp.cpp ****       return;
 187:GrannyChordApp.cpp ****     case AppState::SelectFile:
 188:GrannyChordApp.cpp ****     case AppState::PlayWAV: 
 189:GrannyChordApp.cpp ****       recorded_in_ = true;
 190:GrannyChordApp.cpp ****       next_state_ = AppState::RecordIn;  
 191:GrannyChordApp.cpp ****       return;
 192:GrannyChordApp.cpp ****     default:
 193:GrannyChordApp.cpp ****       return;
 3781              		.loc 14 193 7
 3782 003c 12E0     		b	.L196
 3783              	.L192:
 3784 003e 023B     		subs	r3, r3, #2
 182:GrannyChordApp.cpp ****   switch(curr_state_){
 3785              		.loc 14 182 3
 3786 0040 012B     		cmp	r3, #1
 3787 0042 0FD8     		bhi	.L196
 185:GrannyChordApp.cpp ****       return;
 3788              		.loc 14 185 19
 3789 0044 7B68     		ldr	r3, [r7, #4]
 3790 0046 0022     		movs	r2, #0
 3791 0048 C3F87822 		str	r2, [r3, #632]
 186:GrannyChordApp.cpp ****     case AppState::SelectFile:
 3792              		.loc 14 186 7
 3793 004c 0BE0     		b	.L189
 3794              	.L193:
 189:GrannyChordApp.cpp ****       next_state_ = AppState::RecordIn;  
 3795              		.loc 14 189 20
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 87


 3796 004e 7B68     		ldr	r3, [r7, #4]
 3797 0050 03F50043 		add	r3, r3, #32768
 3798 0054 0122     		movs	r2, #1
 3799 0056 83F8B826 		strb	r2, [r3, #1720]
 190:GrannyChordApp.cpp ****       return;
 3800              		.loc 14 190 19
 3801 005a 7B68     		ldr	r3, [r7, #4]
 3802 005c 0322     		movs	r2, #3
 3803 005e C3F87822 		str	r2, [r3, #632]
 191:GrannyChordApp.cpp ****     default:
 3804              		.loc 14 191 7
 3805 0062 00E0     		b	.L189
 3806              	.L196:
 3807              		.loc 14 193 7
 3808 0064 00BF     		nop
 3809              	.L189:
 194:GrannyChordApp.cpp ****   }
 195:GrannyChordApp.cpp **** }
 3810              		.loc 14 195 1
 3811 0066 0837     		adds	r7, r7, #8
 3812              		.cfi_def_cfa_offset 8
 3813 0068 BD46     		mov	sp, r7
 3814              		.cfi_def_cfa_register 13
 3815              		@ sp needed
 3816 006a 80BD     		pop	{r7, pc}
 3817              		.cfi_endproc
 3818              	.LFE4920:
 3820              		.section	.rodata
 3821 00a6 0000     		.align	2
 3822              	.LC9:
 3823 00a8 68656C64 		.ascii	"held button 2 and released\000"
 3823      20627574 
 3823      746F6E20 
 3823      3220616E 
 3823      64207265 
 3824              		.section	.text._ZN14GrannyChordApp22ButtonLongPressHandlerEv,"ax",%progbits
 3825              		.align	1
 3826              		.global	_ZN14GrannyChordApp22ButtonLongPressHandlerEv
 3827              		.syntax unified
 3828              		.thumb
 3829              		.thumb_func
 3831              	_ZN14GrannyChordApp22ButtonLongPressHandlerEv:
 3832              	.LFB4921:
 196:GrannyChordApp.cpp **** 
 197:GrannyChordApp.cpp **** void GrannyChordApp::ButtonLongPressHandler(){
 3833              		.loc 14 197 46
 3834              		.cfi_startproc
 3835              		@ args = 0, pretend = 0, frame = 8
 3836              		@ frame_needed = 1, uses_anonymous_args = 0
 3837 0000 80B5     		push	{r7, lr}
 3838              		.cfi_def_cfa_offset 8
 3839              		.cfi_offset 7, -8
 3840              		.cfi_offset 14, -4
 3841 0002 82B0     		sub	sp, sp, #8
 3842              		.cfi_def_cfa_offset 16
 3843 0004 00AF     		add	r7, sp, #0
 3844              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 88


 3845 0006 7860     		str	r0, [r7, #4]
 198:GrannyChordApp.cpp ****   if (pod_.button1.TimeHeldMs()>1000.0f){
 3846              		.loc 14 198 7
 3847 0008 7B68     		ldr	r3, [r7, #4]
 3848 000a DB69     		ldr	r3, [r3, #28]
 3849              		.loc 14 198 30
 3850 000c B033     		adds	r3, r3, #176
 3851 000e 1846     		mov	r0, r3
 3852 0010 FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3853 0014 F0EE407A 		vmov.f32	s15, s0
 3854              		.loc 14 198 32
 3855 0018 9FED277A 		vldr.32	s14, .L205
 3856 001c F4EEC77A 		vcmpe.f32	s15, s14
 3857 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3858 0024 CCBF     		ite	gt
 3859 0026 0123     		movgt	r3, #1
 3860 0028 0023     		movle	r3, #0
 3861 002a DBB2     		uxtb	r3, r3
 3862              		.loc 14 198 3
 3863 002c 002B     		cmp	r3, #0
 3864 002e 15D0     		beq	.L198
 3865              	.L200:
 199:GrannyChordApp.cpp ****     while (!pod_.button1.FallingEdge()){
 3866              		.loc 14 199 13
 3867 0030 7B68     		ldr	r3, [r7, #4]
 3868 0032 DB69     		ldr	r3, [r3, #28]
 3869              		.loc 14 199 37
 3870 0034 B033     		adds	r3, r3, #176
 3871 0036 1846     		mov	r0, r3
 3872 0038 FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 3873 003c 0346     		mov	r3, r0
 3874              		.loc 14 199 12
 3875 003e 83F00103 		eor	r3, r3, #1
 3876 0042 DBB2     		uxtb	r3, r3
 3877 0044 002B     		cmp	r3, #0
 3878 0046 06D0     		beq	.L199
 200:GrannyChordApp.cpp ****       pod_.button1.Debounce();
 3879              		.loc 14 200 7
 3880 0048 7B68     		ldr	r3, [r7, #4]
 3881 004a DB69     		ldr	r3, [r3, #28]
 3882              		.loc 14 200 28
 3883 004c B033     		adds	r3, r3, #176
 3884 004e 1846     		mov	r0, r3
 3885 0050 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 199:GrannyChordApp.cpp ****     while (!pod_.button1.FallingEdge()){
 3886              		.loc 14 199 5
 3887 0054 ECE7     		b	.L200
 3888              	.L199:
 201:GrannyChordApp.cpp ****     }
 202:GrannyChordApp.cpp ****     HandleButton1LongPress();
 3889              		.loc 14 202 27
 3890 0056 7868     		ldr	r0, [r7, #4]
 3891 0058 FFF7FEFF 		bl	_ZN14GrannyChordApp22HandleButton1LongPressEv
 3892              	.L198:
 203:GrannyChordApp.cpp ****   }
 204:GrannyChordApp.cpp ****   if (pod_.button2.TimeHeldMs()>1000.0f){
 3893              		.loc 14 204 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 89


 3894 005c 7B68     		ldr	r3, [r7, #4]
 3895 005e DB69     		ldr	r3, [r3, #28]
 3896              		.loc 14 204 30
 3897 0060 C033     		adds	r3, r3, #192
 3898 0062 1846     		mov	r0, r3
 3899 0064 FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3900 0068 F0EE407A 		vmov.f32	s15, s0
 3901              		.loc 14 204 32
 3902 006c 9FED127A 		vldr.32	s14, .L205
 3903 0070 F4EEC77A 		vcmpe.f32	s15, s14
 3904 0074 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3905 0078 CCBF     		ite	gt
 3906 007a 0123     		movgt	r3, #1
 3907 007c 0023     		movle	r3, #0
 3908 007e DBB2     		uxtb	r3, r3
 3909              		.loc 14 204 3
 3910 0080 002B     		cmp	r3, #0
 3911 0082 15D0     		beq	.L204
 3912              	.L203:
 205:GrannyChordApp.cpp ****     while(!pod_.button2.FallingEdge()){
 3913              		.loc 14 205 12
 3914 0084 7B68     		ldr	r3, [r7, #4]
 3915 0086 DB69     		ldr	r3, [r3, #28]
 3916              		.loc 14 205 36
 3917 0088 C033     		adds	r3, r3, #192
 3918 008a 1846     		mov	r0, r3
 3919 008c FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 3920 0090 0346     		mov	r3, r0
 3921              		.loc 14 205 11
 3922 0092 83F00103 		eor	r3, r3, #1
 3923 0096 DBB2     		uxtb	r3, r3
 3924 0098 002B     		cmp	r3, #0
 3925 009a 06D0     		beq	.L202
 206:GrannyChordApp.cpp ****       pod_.button2.Debounce();
 3926              		.loc 14 206 7
 3927 009c 7B68     		ldr	r3, [r7, #4]
 3928 009e DB69     		ldr	r3, [r3, #28]
 3929              		.loc 14 206 28
 3930 00a0 C033     		adds	r3, r3, #192
 3931 00a2 1846     		mov	r0, r3
 3932 00a4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 205:GrannyChordApp.cpp ****     while(!pod_.button2.FallingEdge()){
 3933              		.loc 14 205 5
 3934 00a8 ECE7     		b	.L203
 3935              	.L202:
 207:GrannyChordApp.cpp ****     }
 208:GrannyChordApp.cpp ****     DebugPrint(pod_,"held button 2 and released");
 3936              		.loc 14 208 5
 3937 00aa 0448     		ldr	r0, .L205+4
 3938 00ac FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 3939              	.L204:
 209:GrannyChordApp.cpp ****   }
 210:GrannyChordApp.cpp **** }
 3940              		.loc 14 210 1
 3941 00b0 00BF     		nop
 3942 00b2 0837     		adds	r7, r7, #8
 3943              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 90


 3944 00b4 BD46     		mov	sp, r7
 3945              		.cfi_def_cfa_register 13
 3946              		@ sp needed
 3947 00b6 80BD     		pop	{r7, pc}
 3948              	.L206:
 3949              		.align	2
 3950              	.L205:
 3951 00b8 00007A44 		.word	1148846080
 3952 00bc A8000000 		.word	.LC9
 3953              		.cfi_endproc
 3954              	.LFE4921:
 3956              		.section	.text._ZN14GrannyChordApp13ButtonHandlerEv,"ax",%progbits
 3957              		.align	1
 3958              		.global	_ZN14GrannyChordApp13ButtonHandlerEv
 3959              		.syntax unified
 3960              		.thumb
 3961              		.thumb_func
 3963              	_ZN14GrannyChordApp13ButtonHandlerEv:
 3964              	.LFB4922:
 211:GrannyChordApp.cpp **** 
 212:GrannyChordApp.cpp **** 
 213:GrannyChordApp.cpp **** void GrannyChordApp::ButtonHandler(){
 3965              		.loc 14 213 37
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 8
 3968              		@ frame_needed = 1, uses_anonymous_args = 0
 3969 0000 80B5     		push	{r7, lr}
 3970              		.cfi_def_cfa_offset 8
 3971              		.cfi_offset 7, -8
 3972              		.cfi_offset 14, -4
 3973 0002 82B0     		sub	sp, sp, #8
 3974              		.cfi_def_cfa_offset 16
 3975 0004 00AF     		add	r7, sp, #0
 3976              		.cfi_def_cfa_register 7
 3977 0006 7860     		str	r0, [r7, #4]
 214:GrannyChordApp.cpp ****   if (pod_.button1.FallingEdge()){
 3978              		.loc 14 214 7
 3979 0008 7B68     		ldr	r3, [r7, #4]
 3980 000a DB69     		ldr	r3, [r3, #28]
 3981              		.loc 14 214 31
 3982 000c B033     		adds	r3, r3, #176
 3983 000e 1846     		mov	r0, r3
 3984 0010 FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 3985 0014 0346     		mov	r3, r0
 3986              		.loc 14 214 3
 3987 0016 002B     		cmp	r3, #0
 3988 0018 02D0     		beq	.L208
 215:GrannyChordApp.cpp ****     HandleButton1();
 3989              		.loc 14 215 18
 3990 001a 7868     		ldr	r0, [r7, #4]
 3991 001c FFF7FEFF 		bl	_ZN14GrannyChordApp13HandleButton1Ev
 3992              	.L208:
 216:GrannyChordApp.cpp ****   }
 217:GrannyChordApp.cpp **** 
 218:GrannyChordApp.cpp ****   if (pod_.button2.FallingEdge()){
 3993              		.loc 14 218 7
 3994 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 91


 3995 0022 DB69     		ldr	r3, [r3, #28]
 3996              		.loc 14 218 31
 3997 0024 C033     		adds	r3, r3, #192
 3998 0026 1846     		mov	r0, r3
 3999 0028 FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 4000 002c 0346     		mov	r3, r0
 4001              		.loc 14 218 3
 4002 002e 002B     		cmp	r3, #0
 4003 0030 02D0     		beq	.L210
 219:GrannyChordApp.cpp ****     HandleButton2();
 4004              		.loc 14 219 18
 4005 0032 7868     		ldr	r0, [r7, #4]
 4006 0034 FFF7FEFF 		bl	_ZN14GrannyChordApp13HandleButton2Ev
 4007              	.L210:
 220:GrannyChordApp.cpp ****   }
 221:GrannyChordApp.cpp **** 
 222:GrannyChordApp.cpp ****   /* handle case when both buttons are held down */
 223:GrannyChordApp.cpp ****   // if (pod_.button1.Pressed() && pod_.button2.Pressed()){
 224:GrannyChordApp.cpp ****   //   float heldTime1 = pod_.button1.TimeHeldMs();
 225:GrannyChordApp.cpp ****   //   float heldTime2 = pod_.button2.TimeHeldMs();
 226:GrannyChordApp.cpp ****   //   if (heldTime1 > LONG_PRESS_TIME &&
 227:GrannyChordApp.cpp ****   //       heldTime2 > LONG_PRESS_TIME &&
 228:GrannyChordApp.cpp ****   //       !both_btns_long_press_fired_) 
 229:GrannyChordApp.cpp ****   //   {
 230:GrannyChordApp.cpp ****   //     if (!recording_out_){
 231:GrannyChordApp.cpp ****   //       pod_.seed.SetLed(1);
 232:GrannyChordApp.cpp ****   //       recording_out_ = true;
 233:GrannyChordApp.cpp ****   //       DebugPrint(pod_,"now recording out!");
 234:GrannyChordApp.cpp ****   //       RecordOutToSD();
 235:GrannyChordApp.cpp ****   //     } 
 236:GrannyChordApp.cpp ****   //     else{
 237:GrannyChordApp.cpp ****   //       pod_.seed.SetLed(0);
 238:GrannyChordApp.cpp ****   //       DebugPrint(pod_, "finished recording out: %.2fs",sd_writer_.GetLengthSeconds());
 239:GrannyChordApp.cpp ****   //       FinishRecording();
 240:GrannyChordApp.cpp ****   //     }
 241:GrannyChordApp.cpp ****   //     both_btns_long_press_fired_ = true;
 242:GrannyChordApp.cpp ****   //     last_action_time_ = time_now;
 243:GrannyChordApp.cpp ****   //   }
 244:GrannyChordApp.cpp ****   // } 
 245:GrannyChordApp.cpp ****   // else{
 246:GrannyChordApp.cpp ****   //   both_btns_long_press_fired_ = false;
 247:GrannyChordApp.cpp ****   // }
 248:GrannyChordApp.cpp **** }
 4008              		.loc 14 248 1
 4009 0038 00BF     		nop
 4010 003a 0837     		adds	r7, r7, #8
 4011              		.cfi_def_cfa_offset 8
 4012 003c BD46     		mov	sp, r7
 4013              		.cfi_def_cfa_register 13
 4014              		@ sp needed
 4015 003e 80BD     		pop	{r7, pc}
 4016              		.cfi_endproc
 4017              	.LFE4922:
 4019              		.section	.text._ZN14GrannyChordApp13HandleButton1Ev,"ax",%progbits
 4020              		.align	1
 4021              		.global	_ZN14GrannyChordApp13HandleButton1Ev
 4022              		.syntax unified
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 92


 4023              		.thumb
 4024              		.thumb_func
 4026              	_ZN14GrannyChordApp13HandleButton1Ev:
 4027              	.LFB4923:
 249:GrannyChordApp.cpp **** 
 250:GrannyChordApp.cpp **** /// @brief Switch between synth parameter control modes
 251:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton1(){
 4028              		.loc 14 251 37
 4029              		.cfi_startproc
 4030              		@ args = 0, pretend = 0, frame = 8
 4031              		@ frame_needed = 1, uses_anonymous_args = 0
 4032 0000 80B5     		push	{r7, lr}
 4033              		.cfi_def_cfa_offset 8
 4034              		.cfi_offset 7, -8
 4035              		.cfi_offset 14, -4
 4036 0002 82B0     		sub	sp, sp, #8
 4037              		.cfi_def_cfa_offset 16
 4038 0004 00AF     		add	r7, sp, #0
 4039              		.cfi_def_cfa_register 7
 4040 0006 7860     		str	r0, [r7, #4]
 252:GrannyChordApp.cpp ****   NextSynthMode();
 4041              		.loc 14 252 16
 4042 0008 7868     		ldr	r0, [r7, #4]
 4043 000a FFF7FEFF 		bl	_ZN14GrannyChordApp13NextSynthModeEv
 253:GrannyChordApp.cpp **** }
 4044              		.loc 14 253 1
 4045 000e 00BF     		nop
 4046 0010 0837     		adds	r7, r7, #8
 4047              		.cfi_def_cfa_offset 8
 4048 0012 BD46     		mov	sp, r7
 4049              		.cfi_def_cfa_register 13
 4050              		@ sp needed
 4051 0014 80BD     		pop	{r7, pc}
 4052              		.cfi_endproc
 4053              	.LFE4923:
 4055              		.section	.text._ZN14GrannyChordApp13HandleButton2Ev,"ax",%progbits
 4056              		.align	1
 4057              		.global	_ZN14GrannyChordApp13HandleButton2Ev
 4058              		.syntax unified
 4059              		.thumb
 4060              		.thumb_func
 4062              	_ZN14GrannyChordApp13HandleButton2Ev:
 4063              	.LFB4924:
 254:GrannyChordApp.cpp **** 
 255:GrannyChordApp.cpp **** /// @brief Toggles on/off synth parameter randomness controls
 256:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton2(){
 4064              		.loc 14 256 37
 4065              		.cfi_startproc
 4066              		@ args = 0, pretend = 0, frame = 8
 4067              		@ frame_needed = 1, uses_anonymous_args = 0
 4068 0000 80B5     		push	{r7, lr}
 4069              		.cfi_def_cfa_offset 8
 4070              		.cfi_offset 7, -8
 4071              		.cfi_offset 14, -4
 4072 0002 82B0     		sub	sp, sp, #8
 4073              		.cfi_def_cfa_offset 16
 4074 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 93


 4075              		.cfi_def_cfa_register 7
 4076 0006 7860     		str	r0, [r7, #4]
 257:GrannyChordApp.cpp ****     PrevSynthMode();
 4077              		.loc 14 257 18
 4078 0008 7868     		ldr	r0, [r7, #4]
 4079 000a FFF7FEFF 		bl	_ZN14GrannyChordApp13PrevSynthModeEv
 258:GrannyChordApp.cpp **** }
 4080              		.loc 14 258 1
 4081 000e 00BF     		nop
 4082 0010 0837     		adds	r7, r7, #8
 4083              		.cfi_def_cfa_offset 8
 4084 0012 BD46     		mov	sp, r7
 4085              		.cfi_def_cfa_register 13
 4086              		@ sp needed
 4087 0014 80BD     		pop	{r7, pc}
 4088              		.cfi_endproc
 4089              	.LFE4924:
 4091              		.section	.text._ZN14GrannyChordApp22HandleButton1LongPressEv,"ax",%progbits
 4092              		.align	1
 4093              		.global	_ZN14GrannyChordApp22HandleButton1LongPressEv
 4094              		.syntax unified
 4095              		.thumb
 4096              		.thumb_func
 4098              	_ZN14GrannyChordApp22HandleButton1LongPressEv:
 4099              	.LFB4925:
 259:GrannyChordApp.cpp **** 
 260:GrannyChordApp.cpp **** // /// @brief Switches between controlling regular parameter modes and FX parameter modes
 261:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton1LongPress(){
 4100              		.loc 14 261 46
 4101              		.cfi_startproc
 4102              		@ args = 0, pretend = 0, frame = 16
 4103              		@ frame_needed = 1, uses_anonymous_args = 0
 4104 0000 80B5     		push	{r7, lr}
 4105              		.cfi_def_cfa_offset 8
 4106              		.cfi_offset 7, -8
 4107              		.cfi_offset 14, -4
 4108 0002 84B0     		sub	sp, sp, #16
 4109              		.cfi_def_cfa_offset 24
 4110 0004 00AF     		add	r7, sp, #0
 4111              		.cfi_def_cfa_register 7
 4112 0006 7860     		str	r0, [r7, #4]
 262:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4113              		.loc 14 262 7
 4114 0008 7B68     		ldr	r3, [r7, #4]
 4115 000a D3F87C32 		ldr	r3, [r3, #636]
 4116 000e FB60     		str	r3, [r7, #12]
 263:GrannyChordApp.cpp ****   if (mode_idx<4) mode_idx = 4;
 4117              		.loc 14 263 3
 4118 0010 FB68     		ldr	r3, [r7, #12]
 4119 0012 032B     		cmp	r3, #3
 4120 0014 02DC     		bgt	.L214
 4121              		.loc 14 263 28 discriminator 1
 4122 0016 0423     		movs	r3, #4
 4123 0018 FB60     		str	r3, [r7, #12]
 4124 001a 01E0     		b	.L215
 4125              	.L214:
 264:GrannyChordApp.cpp ****   else mode_idx = 0;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 94


 4126              		.loc 14 264 17
 4127 001c 0023     		movs	r3, #0
 4128 001e FB60     		str	r3, [r7, #12]
 4129              	.L215:
 265:GrannyChordApp.cpp ****   curr_synth_mode_ = static_cast<SynthMode>(mode_idx);
 4130              		.loc 14 265 20
 4131 0020 7B68     		ldr	r3, [r7, #4]
 4132 0022 FA68     		ldr	r2, [r7, #12]
 4133 0024 C3F87C22 		str	r2, [r3, #636]
 266:GrannyChordApp.cpp ****   SetLedSynthMode();
 4134              		.loc 14 266 18
 4135 0028 7868     		ldr	r0, [r7, #4]
 4136 002a FFF7FEFF 		bl	_ZN14GrannyChordApp15SetLedSynthModeEv
 267:GrannyChordApp.cpp **** }
 4137              		.loc 14 267 1
 4138 002e 00BF     		nop
 4139 0030 1037     		adds	r7, r7, #16
 4140              		.cfi_def_cfa_offset 8
 4141 0032 BD46     		mov	sp, r7
 4142              		.cfi_def_cfa_register 13
 4143              		@ sp needed
 4144 0034 80BD     		pop	{r7, pc}
 4145              		.cfi_endproc
 4146              	.LFE4925:
 4148              		.section	.text._ZN14GrannyChordApp22HandleButton2LongPressEv,"ax",%progbits
 4149              		.align	1
 4150              		.global	_ZN14GrannyChordApp22HandleButton2LongPressEv
 4151              		.syntax unified
 4152              		.thumb
 4153              		.thumb_func
 4155              	_ZN14GrannyChordApp22HandleButton2LongPressEv:
 4156              	.LFB4926:
 268:GrannyChordApp.cpp **** 
 269:GrannyChordApp.cpp **** /// @brief Switches to Chord Mode
 270:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton2LongPress(){
 4157              		.loc 14 270 46
 4158              		.cfi_startproc
 4159              		@ args = 0, pretend = 0, frame = 8
 4160              		@ frame_needed = 1, uses_anonymous_args = 0
 4161              		@ link register save eliminated.
 4162 0000 80B4     		push	{r7}
 4163              		.cfi_def_cfa_offset 4
 4164              		.cfi_offset 7, -4
 4165 0002 83B0     		sub	sp, sp, #12
 4166              		.cfi_def_cfa_offset 16
 4167 0004 00AF     		add	r7, sp, #0
 4168              		.cfi_def_cfa_register 7
 4169 0006 7860     		str	r0, [r7, #4]
 271:GrannyChordApp.cpp ****   // TODO: RECORD OUT? 
 272:GrannyChordApp.cpp **** }
 4170              		.loc 14 272 1
 4171 0008 00BF     		nop
 4172 000a 0C37     		adds	r7, r7, #12
 4173              		.cfi_def_cfa_offset 4
 4174 000c BD46     		mov	sp, r7
 4175              		.cfi_def_cfa_register 13
 4176              		@ sp needed
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 95


 4177 000e 5DF8047B 		ldr	r7, [sp], #4
 4178              		.cfi_restore 7
 4179              		.cfi_def_cfa_offset 0
 4180 0012 7047     		bx	lr
 4181              		.cfi_endproc
 4182              	.LFE4926:
 4184              		.section	.rodata
 4185 00c3 00       		.align	2
 4186              	.LC10:
 4187 00c4 73656C65 		.ascii	"selected file %d %s\000"
 4187      63746564 
 4187      2066696C 
 4187      65202564 
 4187      20257300 
 4188              		.section	.text._ZN14GrannyChordApp19HandleFileSelectionEl,"ax",%progbits
 4189              		.align	1
 4190              		.global	_ZN14GrannyChordApp19HandleFileSelectionEl
 4191              		.syntax unified
 4192              		.thumb
 4193              		.thumb_func
 4195              	_ZN14GrannyChordApp19HandleFileSelectionEl:
 4196              	.LFB4927:
 273:GrannyChordApp.cpp **** 
 274:GrannyChordApp.cpp **** /// @brief Scrolls through list of files for user selection
 275:GrannyChordApp.cpp **** void GrannyChordApp::HandleFileSelection(int32_t encoder_inc){
 4197              		.loc 14 275 62
 4198              		.cfi_startproc
 4199              		@ args = 0, pretend = 0, frame = 16
 4200              		@ frame_needed = 1, uses_anonymous_args = 0
 4201 0000 80B5     		push	{r7, lr}
 4202              		.cfi_def_cfa_offset 8
 4203              		.cfi_offset 7, -8
 4204              		.cfi_offset 14, -4
 4205 0002 84B0     		sub	sp, sp, #16
 4206              		.cfi_def_cfa_offset 24
 4207 0004 00AF     		add	r7, sp, #0
 4208              		.cfi_def_cfa_register 7
 4209 0006 7860     		str	r0, [r7, #4]
 4210 0008 3960     		str	r1, [r7]
 276:GrannyChordApp.cpp ****   int file_count = filemgr_.GetFileCount();
 4211              		.loc 14 276 20
 4212 000a 7B68     		ldr	r3, [r7, #4]
 4213 000c D3F86C32 		ldr	r3, [r3, #620]
 4214              		.loc 14 276 41
 4215 0010 1846     		mov	r0, r3
 4216 0012 FFF7FEFF 		bl	_ZNK16AudioFileManager12GetFileCountEv
 4217 0016 0346     		mov	r3, r0
 4218              		.loc 14 276 42
 4219 0018 FB60     		str	r3, [r7, #12]
 277:GrannyChordApp.cpp ****   file_idx_ = (file_idx_ + encoder_inc + file_count) % file_count;
 4220              		.loc 14 277 16
 4221 001a 7B68     		ldr	r3, [r7, #4]
 4222 001c D3F84823 		ldr	r2, [r3, #840]
 4223              		.loc 14 277 26
 4224 0020 3B68     		ldr	r3, [r7]
 4225 0022 1A44     		add	r2, r2, r3
 4226              		.loc 14 277 40
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 96


 4227 0024 FB68     		ldr	r3, [r7, #12]
 4228 0026 1344     		add	r3, r3, r2
 4229              		.loc 14 277 54
 4230 0028 FA68     		ldr	r2, [r7, #12]
 4231 002a 93FBF2F2 		sdiv	r2, r3, r2
 4232 002e F968     		ldr	r1, [r7, #12]
 4233 0030 01FB02F2 		mul	r2, r1, r2
 4234 0034 9A1A     		subs	r2, r3, r2
 4235              		.loc 14 277 13
 4236 0036 7B68     		ldr	r3, [r7, #4]
 4237 0038 C3F84823 		str	r2, [r3, #840]
 278:GrannyChordApp.cpp ****   filemgr_.GetName(file_idx_,fname_);
 4238              		.loc 14 278 3
 4239 003c 7B68     		ldr	r3, [r7, #4]
 4240 003e D3F86C02 		ldr	r0, [r3, #620]
 4241              		.loc 14 278 20
 4242 0042 7B68     		ldr	r3, [r7, #4]
 4243 0044 D3F84833 		ldr	r3, [r3, #840]
 4244              		.loc 14 278 19
 4245 0048 99B2     		uxth	r1, r3
 4246              		.loc 14 278 30
 4247 004a 7B68     		ldr	r3, [r7, #4]
 4248 004c 03F55573 		add	r3, r3, #852
 4249              		.loc 14 278 19
 4250 0050 1A46     		mov	r2, r3
 4251 0052 FFF7FEFF 		bl	_ZNK16AudioFileManager7GetNameEtPc
 279:GrannyChordApp.cpp ****   DebugPrint(pod_, "selected file %d %s",file_idx_,fname_);
 4252              		.loc 14 279 3
 4253 0056 7B68     		ldr	r3, [r7, #4]
 4254 0058 D3F84813 		ldr	r1, [r3, #840]
 4255 005c 7B68     		ldr	r3, [r7, #4]
 4256 005e 03F55573 		add	r3, r3, #852
 4257 0062 1A46     		mov	r2, r3
 4258 0064 0348     		ldr	r0, .L218
 4259 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_
 280:GrannyChordApp.cpp **** }
 4260              		.loc 14 280 1
 4261 006a 00BF     		nop
 4262 006c 1037     		adds	r7, r7, #16
 4263              		.cfi_def_cfa_offset 8
 4264 006e BD46     		mov	sp, r7
 4265              		.cfi_def_cfa_register 13
 4266              		@ sp needed
 4267 0070 80BD     		pop	{r7, pc}
 4268              	.L219:
 4269 0072 00BF     		.align	2
 4270              	.L218:
 4271 0074 C4000000 		.word	.LC10
 4272              		.cfi_endproc
 4273              	.LFE4927:
 4275              		.section	.rodata
 4276              		.align	2
 4277              	.LC11:
 4278 00d8 676F696E 		.ascii	"going to synth mode\000"
 4278      6720746F 
 4278      2073796E 
 4278      7468206D 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 97


 4278      6F646500 
 4279              		.section	.text._ZN14GrannyChordApp13NextSynthModeEv,"ax",%progbits
 4280              		.align	1
 4281              		.global	_ZN14GrannyChordApp13NextSynthModeEv
 4282              		.syntax unified
 4283              		.thumb
 4284              		.thumb_func
 4286              	_ZN14GrannyChordApp13NextSynthModeEv:
 4287              	.LFB4928:
 281:GrannyChordApp.cpp **** 
 282:GrannyChordApp.cpp **** /// @brief iterates to next synth mode within regular or FX group
 283:GrannyChordApp.cpp **** void GrannyChordApp::NextSynthMode(){
 4288              		.loc 14 283 37
 4289              		.cfi_startproc
 4290              		@ args = 0, pretend = 0, frame = 16
 4291              		@ frame_needed = 1, uses_anonymous_args = 0
 4292 0000 80B5     		push	{r7, lr}
 4293              		.cfi_def_cfa_offset 8
 4294              		.cfi_offset 7, -8
 4295              		.cfi_offset 14, -4
 4296 0002 84B0     		sub	sp, sp, #16
 4297              		.cfi_def_cfa_offset 24
 4298 0004 00AF     		add	r7, sp, #0
 4299              		.cfi_def_cfa_register 7
 4300 0006 7860     		str	r0, [r7, #4]
 284:GrannyChordApp.cpp ****   DebugPrint(pod_, "going to synth mode");
 4301              		.loc 14 284 3
 4302 0008 2A48     		ldr	r0, .L223
 4303 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 285:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4304              		.loc 14 285 7
 4305 000e 7B68     		ldr	r3, [r7, #4]
 4306 0010 D3F87C32 		ldr	r3, [r3, #636]
 4307 0014 FB60     		str	r3, [r7, #12]
 286:GrannyChordApp.cpp ****   prev_k1_pos[mode_idx] = pod_.knob1.Process();
 4308              		.loc 14 286 27
 4309 0016 7B68     		ldr	r3, [r7, #4]
 4310 0018 DB69     		ldr	r3, [r3, #28]
 4311              		.loc 14 286 45
 4312 001a 6833     		adds	r3, r3, #104
 4313 001c 1846     		mov	r0, r3
 4314 001e FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4315 0022 F0EE407A 		vmov.f32	s15, s0
 4316              		.loc 14 286 25
 4317 0026 7A68     		ldr	r2, [r7, #4]
 4318 0028 FB68     		ldr	r3, [r7, #12]
 4319 002a 03F58173 		add	r3, r3, #258
 4320 002e 9B00     		lsls	r3, r3, #2
 4321 0030 1344     		add	r3, r3, r2
 4322 0032 0433     		adds	r3, r3, #4
 4323 0034 C3ED007A 		vstr.32	s15, [r3]
 287:GrannyChordApp.cpp ****   prev_k2_pos[mode_idx] = pod_.knob2.Process();
 4324              		.loc 14 287 27
 4325 0038 7B68     		ldr	r3, [r7, #4]
 4326 003a DB69     		ldr	r3, [r3, #28]
 4327              		.loc 14 287 45
 4328 003c 8833     		adds	r3, r3, #136
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 98


 4329 003e 1846     		mov	r0, r3
 4330 0040 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4331 0044 F0EE407A 		vmov.f32	s15, s0
 4332              		.loc 14 287 25
 4333 0048 7A68     		ldr	r2, [r7, #4]
 4334 004a FB68     		ldr	r3, [r7, #12]
 4335 004c 03F58573 		add	r3, r3, #266
 4336 0050 9B00     		lsls	r3, r3, #2
 4337 0052 1344     		add	r3, r3, r2
 4338 0054 C3ED007A 		vstr.32	s15, [r3]
 288:GrannyChordApp.cpp ****   if (mode_idx<=3){
 4339              		.loc 14 288 3
 4340 0058 FB68     		ldr	r3, [r7, #12]
 4341 005a 032B     		cmp	r3, #3
 4342 005c 08DC     		bgt	.L221
 289:GrannyChordApp.cpp ****     mode_idx++;
 4343              		.loc 14 289 13
 4344 005e FB68     		ldr	r3, [r7, #12]
 4345 0060 0133     		adds	r3, r3, #1
 4346 0062 FB60     		str	r3, [r7, #12]
 290:GrannyChordApp.cpp ****     if (mode_idx>3) mode_idx=0;
 4347              		.loc 14 290 5
 4348 0064 FB68     		ldr	r3, [r7, #12]
 4349 0066 032B     		cmp	r3, #3
 4350 0068 0ADD     		ble	.L222
 4351              		.loc 14 290 29 discriminator 1
 4352 006a 0023     		movs	r3, #0
 4353 006c FB60     		str	r3, [r7, #12]
 4354 006e 07E0     		b	.L222
 4355              	.L221:
 291:GrannyChordApp.cpp ****   }
 292:GrannyChordApp.cpp ****   else{
 293:GrannyChordApp.cpp ****     mode_idx++;
 4356              		.loc 14 293 13
 4357 0070 FB68     		ldr	r3, [r7, #12]
 4358 0072 0133     		adds	r3, r3, #1
 4359 0074 FB60     		str	r3, [r7, #12]
 294:GrannyChordApp.cpp ****     if (mode_idx>6) mode_idx = 4;
 4360              		.loc 14 294 5
 4361 0076 FB68     		ldr	r3, [r7, #12]
 4362 0078 062B     		cmp	r3, #6
 4363 007a 01DD     		ble	.L222
 4364              		.loc 14 294 30 discriminator 1
 4365 007c 0423     		movs	r3, #4
 4366 007e FB60     		str	r3, [r7, #12]
 4367              	.L222:
 295:GrannyChordApp.cpp ****   }
 296:GrannyChordApp.cpp ****   
 297:GrannyChordApp.cpp ****   // mode_idx ++;
 298:GrannyChordApp.cpp ****   // if (mode_idx>6) mode_idx = 0;
 299:GrannyChordApp.cpp ****   curr_synth_mode_ = static_cast<SynthMode>(mode_idx);
 4368              		.loc 14 299 20
 4369 0080 7B68     		ldr	r3, [r7, #4]
 4370 0082 FA68     		ldr	r2, [r7, #12]
 4371 0084 C3F87C22 		str	r2, [r3, #636]
 300:GrannyChordApp.cpp ****   DebugPrintMode(curr_synth_mode_);
 4372              		.loc 14 300 17
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 99


 4373 0088 7B68     		ldr	r3, [r7, #4]
 4374 008a D3F87C32 		ldr	r3, [r3, #636]
 4375 008e 1946     		mov	r1, r3
 4376 0090 7868     		ldr	r0, [r7, #4]
 4377 0092 FFF7FEFF 		bl	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode
 301:GrannyChordApp.cpp ****   SetLedSynthMode();
 4378              		.loc 14 301 18
 4379 0096 7868     		ldr	r0, [r7, #4]
 4380 0098 FFF7FEFF 		bl	_ZN14GrannyChordApp15SetLedSynthModeEv
 302:GrannyChordApp.cpp ****   // knob1_latched = true;
 303:GrannyChordApp.cpp ****   // knob2_latched = true;
 304:GrannyChordApp.cpp ****   knob1_latched = false;
 4381              		.loc 14 304 17
 4382 009c 7B68     		ldr	r3, [r7, #4]
 4383 009e 0022     		movs	r2, #0
 4384 00a0 83F88422 		strb	r2, [r3, #644]
 305:GrannyChordApp.cpp ****   knob2_latched = false;
 4385              		.loc 14 305 17
 4386 00a4 7B68     		ldr	r3, [r7, #4]
 4387 00a6 0022     		movs	r2, #0
 4388 00a8 83F88522 		strb	r2, [r3, #645]
 306:GrannyChordApp.cpp **** 
 307:GrannyChordApp.cpp **** }
 4389              		.loc 14 307 1
 4390 00ac 00BF     		nop
 4391 00ae 1037     		adds	r7, r7, #16
 4392              		.cfi_def_cfa_offset 8
 4393 00b0 BD46     		mov	sp, r7
 4394              		.cfi_def_cfa_register 13
 4395              		@ sp needed
 4396 00b2 80BD     		pop	{r7, pc}
 4397              	.L224:
 4398              		.align	2
 4399              	.L223:
 4400 00b4 D8000000 		.word	.LC11
 4401              		.cfi_endproc
 4402              	.LFE4928:
 4404              		.section	.rodata
 4405              		.align	2
 4406              	.LC12:
 4407 00ec 676F696E 		.ascii	"going to prev synth mode\000"
 4407      6720746F 
 4407      20707265 
 4407      76207379 
 4407      6E746820 
 4408              		.section	.text._ZN14GrannyChordApp13PrevSynthModeEv,"ax",%progbits
 4409              		.align	1
 4410              		.global	_ZN14GrannyChordApp13PrevSynthModeEv
 4411              		.syntax unified
 4412              		.thumb
 4413              		.thumb_func
 4415              	_ZN14GrannyChordApp13PrevSynthModeEv:
 4416              	.LFB4929:
 308:GrannyChordApp.cpp **** 
 309:GrannyChordApp.cpp **** /// @brief iterates to previous synth mode within regular or FX group
 310:GrannyChordApp.cpp **** void GrannyChordApp::PrevSynthMode(){
 4417              		.loc 14 310 37
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 100


 4418              		.cfi_startproc
 4419              		@ args = 0, pretend = 0, frame = 16
 4420              		@ frame_needed = 1, uses_anonymous_args = 0
 4421 0000 80B5     		push	{r7, lr}
 4422              		.cfi_def_cfa_offset 8
 4423              		.cfi_offset 7, -8
 4424              		.cfi_offset 14, -4
 4425 0002 84B0     		sub	sp, sp, #16
 4426              		.cfi_def_cfa_offset 24
 4427 0004 00AF     		add	r7, sp, #0
 4428              		.cfi_def_cfa_register 7
 4429 0006 7860     		str	r0, [r7, #4]
 311:GrannyChordApp.cpp ****   DebugPrint(pod_, "going to prev synth mode");
 4430              		.loc 14 311 3
 4431 0008 2A48     		ldr	r0, .L228
 4432 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 312:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4433              		.loc 14 312 7
 4434 000e 7B68     		ldr	r3, [r7, #4]
 4435 0010 D3F87C32 		ldr	r3, [r3, #636]
 4436 0014 FB60     		str	r3, [r7, #12]
 313:GrannyChordApp.cpp ****   prev_k1_pos[mode_idx] = pod_.knob1.Process();
 4437              		.loc 14 313 27
 4438 0016 7B68     		ldr	r3, [r7, #4]
 4439 0018 DB69     		ldr	r3, [r3, #28]
 4440              		.loc 14 313 45
 4441 001a 6833     		adds	r3, r3, #104
 4442 001c 1846     		mov	r0, r3
 4443 001e FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4444 0022 F0EE407A 		vmov.f32	s15, s0
 4445              		.loc 14 313 25
 4446 0026 7A68     		ldr	r2, [r7, #4]
 4447 0028 FB68     		ldr	r3, [r7, #12]
 4448 002a 03F58173 		add	r3, r3, #258
 4449 002e 9B00     		lsls	r3, r3, #2
 4450 0030 1344     		add	r3, r3, r2
 4451 0032 0433     		adds	r3, r3, #4
 4452 0034 C3ED007A 		vstr.32	s15, [r3]
 314:GrannyChordApp.cpp ****   prev_k2_pos[mode_idx] = pod_.knob2.Process();
 4453              		.loc 14 314 27
 4454 0038 7B68     		ldr	r3, [r7, #4]
 4455 003a DB69     		ldr	r3, [r3, #28]
 4456              		.loc 14 314 45
 4457 003c 8833     		adds	r3, r3, #136
 4458 003e 1846     		mov	r0, r3
 4459 0040 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4460 0044 F0EE407A 		vmov.f32	s15, s0
 4461              		.loc 14 314 25
 4462 0048 7A68     		ldr	r2, [r7, #4]
 4463 004a FB68     		ldr	r3, [r7, #12]
 4464 004c 03F58573 		add	r3, r3, #266
 4465 0050 9B00     		lsls	r3, r3, #2
 4466 0052 1344     		add	r3, r3, r2
 4467 0054 C3ED007A 		vstr.32	s15, [r3]
 315:GrannyChordApp.cpp ****   if (mode_idx<=3){
 4468              		.loc 14 315 3
 4469 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 101


 4470 005a 032B     		cmp	r3, #3
 4471 005c 08DC     		bgt	.L226
 316:GrannyChordApp.cpp ****     mode_idx--;
 4472              		.loc 14 316 13
 4473 005e FB68     		ldr	r3, [r7, #12]
 4474 0060 013B     		subs	r3, r3, #1
 4475 0062 FB60     		str	r3, [r7, #12]
 317:GrannyChordApp.cpp ****     if (mode_idx<0) mode_idx=3;
 4476              		.loc 14 317 5
 4477 0064 FB68     		ldr	r3, [r7, #12]
 4478 0066 002B     		cmp	r3, #0
 4479 0068 0ADA     		bge	.L227
 4480              		.loc 14 317 29 discriminator 1
 4481 006a 0323     		movs	r3, #3
 4482 006c FB60     		str	r3, [r7, #12]
 4483 006e 07E0     		b	.L227
 4484              	.L226:
 318:GrannyChordApp.cpp ****   }
 319:GrannyChordApp.cpp ****   else{
 320:GrannyChordApp.cpp ****     mode_idx --;
 4485              		.loc 14 320 14
 4486 0070 FB68     		ldr	r3, [r7, #12]
 4487 0072 013B     		subs	r3, r3, #1
 4488 0074 FB60     		str	r3, [r7, #12]
 321:GrannyChordApp.cpp ****     if (mode_idx<=3) mode_idx=6;
 4489              		.loc 14 321 5
 4490 0076 FB68     		ldr	r3, [r7, #12]
 4491 0078 032B     		cmp	r3, #3
 4492 007a 01DC     		bgt	.L227
 4493              		.loc 14 321 30 discriminator 1
 4494 007c 0623     		movs	r3, #6
 4495 007e FB60     		str	r3, [r7, #12]
 4496              	.L227:
 322:GrannyChordApp.cpp ****   }
 323:GrannyChordApp.cpp **** 
 324:GrannyChordApp.cpp **** 
 325:GrannyChordApp.cpp **** 
 326:GrannyChordApp.cpp ****   // if (mode_idx<0) mode_idx = 6;
 327:GrannyChordApp.cpp ****   curr_synth_mode_ = static_cast<SynthMode>(mode_idx);
 4497              		.loc 14 327 20
 4498 0080 7B68     		ldr	r3, [r7, #4]
 4499 0082 FA68     		ldr	r2, [r7, #12]
 4500 0084 C3F87C22 		str	r2, [r3, #636]
 328:GrannyChordApp.cpp ****   DebugPrintMode(curr_synth_mode_);
 4501              		.loc 14 328 17
 4502 0088 7B68     		ldr	r3, [r7, #4]
 4503 008a D3F87C32 		ldr	r3, [r3, #636]
 4504 008e 1946     		mov	r1, r3
 4505 0090 7868     		ldr	r0, [r7, #4]
 4506 0092 FFF7FEFF 		bl	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode
 329:GrannyChordApp.cpp ****   SetLedSynthMode();
 4507              		.loc 14 329 18
 4508 0096 7868     		ldr	r0, [r7, #4]
 4509 0098 FFF7FEFF 		bl	_ZN14GrannyChordApp15SetLedSynthModeEv
 330:GrannyChordApp.cpp ****   knob1_latched = false;
 4510              		.loc 14 330 17
 4511 009c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 102


 4512 009e 0022     		movs	r2, #0
 4513 00a0 83F88422 		strb	r2, [r3, #644]
 331:GrannyChordApp.cpp ****   knob2_latched = false;
 4514              		.loc 14 331 17
 4515 00a4 7B68     		ldr	r3, [r7, #4]
 4516 00a6 0022     		movs	r2, #0
 4517 00a8 83F88522 		strb	r2, [r3, #645]
 332:GrannyChordApp.cpp ****   // knob1_latched = true;
 333:GrannyChordApp.cpp ****   // knob2_latched = true;
 334:GrannyChordApp.cpp ****   
 335:GrannyChordApp.cpp **** }
 4518              		.loc 14 335 1
 4519 00ac 00BF     		nop
 4520 00ae 1037     		adds	r7, r7, #16
 4521              		.cfi_def_cfa_offset 8
 4522 00b0 BD46     		mov	sp, r7
 4523              		.cfi_def_cfa_register 13
 4524              		@ sp needed
 4525 00b2 80BD     		pop	{r7, pc}
 4526              	.L229:
 4527              		.align	2
 4528              	.L228:
 4529 00b4 EC000000 		.word	.LC12
 4530              		.cfi_endproc
 4531              	.LFE4929:
 4533              		.section	.text._ZN14GrannyChordApp17UpdateSynthParamsEv,"ax",%progbits
 4534              		.align	1
 4535              		.global	_ZN14GrannyChordApp17UpdateSynthParamsEv
 4536              		.syntax unified
 4537              		.thumb
 4538              		.thumb_func
 4540              	_ZN14GrannyChordApp17UpdateSynthParamsEv:
 4541              	.LFB4930:
 336:GrannyChordApp.cpp **** 
 337:GrannyChordApp.cpp **** /// @brief Updates synth parameters based on current synth mode and adjusts
 338:GrannyChordApp.cpp **** ///        knob input values to account for knob jitter and deadzones around 0/1
 339:GrannyChordApp.cpp **** void GrannyChordApp::UpdateSynthParams(){
 4542              		.loc 14 339 41
 4543              		.cfi_startproc
 4544              		@ args = 0, pretend = 0, frame = 24
 4545              		@ frame_needed = 1, uses_anonymous_args = 0
 4546 0000 80B5     		push	{r7, lr}
 4547              		.cfi_def_cfa_offset 8
 4548              		.cfi_offset 7, -8
 4549              		.cfi_offset 14, -4
 4550 0002 86B0     		sub	sp, sp, #24
 4551              		.cfi_def_cfa_offset 32
 4552 0004 00AF     		add	r7, sp, #0
 4553              		.cfi_def_cfa_register 7
 4554 0006 7860     		str	r0, [r7, #4]
 340:GrannyChordApp.cpp ****   if (curr_state_!=AppState::Synthesis) return;
 4555              		.loc 14 340 7
 4556 0008 7B68     		ldr	r3, [r7, #4]
 4557 000a D3F87432 		ldr	r3, [r3, #628]
 4558              		.loc 14 340 3
 4559 000e 022B     		cmp	r3, #2
 4560 0010 40F0F880 		bne	.L250
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 103


 341:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4561              		.loc 14 341 7
 4562 0014 7B68     		ldr	r3, [r7, #4]
 4563 0016 D3F87C32 		ldr	r3, [r3, #636]
 4564 001a 7B61     		str	r3, [r7, #20]
 342:GrannyChordApp.cpp **** 
 343:GrannyChordApp.cpp ****   /* set to 0 or 1 if very close to these bounds */
 344:GrannyChordApp.cpp ****   float knob1_val = MapKnobDeadzone(pod_.knob1.Process());
 4565              		.loc 14 344 37
 4566 001c 7B68     		ldr	r3, [r7, #4]
 4567 001e DB69     		ldr	r3, [r3, #28]
 4568              		.loc 14 344 36
 4569 0020 6833     		adds	r3, r3, #104
 4570 0022 1846     		mov	r0, r3
 4571 0024 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4572 0028 F0EE407A 		vmov.f32	s15, s0
 4573 002c B0EE670A 		vmov.f32	s0, s15
 4574 0030 7868     		ldr	r0, [r7, #4]
 4575 0032 FFF7FEFF 		bl	_ZN14GrannyChordApp15MapKnobDeadzoneEf
 4576 0036 87ED040A 		vstr.32	s0, [r7, #16]
 345:GrannyChordApp.cpp ****   float knob2_val = MapKnobDeadzone(pod_.knob2.Process());
 4577              		.loc 14 345 37
 4578 003a 7B68     		ldr	r3, [r7, #4]
 4579 003c DB69     		ldr	r3, [r3, #28]
 4580              		.loc 14 345 36
 4581 003e 8833     		adds	r3, r3, #136
 4582 0040 1846     		mov	r0, r3
 4583 0042 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4584 0046 F0EE407A 		vmov.f32	s15, s0
 4585 004a B0EE670A 		vmov.f32	s0, s15
 4586 004e 7868     		ldr	r0, [r7, #4]
 4587 0050 FFF7FEFF 		bl	_ZN14GrannyChordApp15MapKnobDeadzoneEf
 4588 0054 87ED030A 		vstr.32	s0, [r7, #12]
 346:GrannyChordApp.cpp **** 
 347:GrannyChordApp.cpp ****   if (!knob1_latched){
 4589              		.loc 14 347 8
 4590 0058 7B68     		ldr	r3, [r7, #4]
 4591 005a 93F88432 		ldrb	r3, [r3, #644]	@ zero_extendqisi2
 4592              		.loc 14 347 7
 4593 005e 83F00103 		eor	r3, r3, #1
 4594 0062 DBB2     		uxtb	r3, r3
 4595              		.loc 14 347 3
 4596 0064 002B     		cmp	r3, #0
 4597 0066 4FD0     		beq	.L233
 348:GrannyChordApp.cpp ****     if (((knob1_val >= prev_k1_pos[mode_idx]) && (prev_k1_pos[mode_idx] >= prev_param_k1[mode_idx])
 4598              		.loc 14 348 44
 4599 0068 7A68     		ldr	r2, [r7, #4]
 4600 006a 7B69     		ldr	r3, [r7, #20]
 4601 006c 03F58173 		add	r3, r3, #258
 4602 0070 9B00     		lsls	r3, r3, #2
 4603 0072 1344     		add	r3, r3, r2
 4604 0074 0433     		adds	r3, r3, #4
 4605 0076 D3ED007A 		vldr.32	s15, [r3]
 4606              		.loc 14 348 5
 4607 007a 97ED047A 		vldr.32	s14, [r7, #16]
 4608 007e B4EEE77A 		vcmpe.f32	s14, s15
 4609 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 104


 4610 0086 15DB     		blt	.L234
 4611              		.loc 14 348 71 discriminator 1
 4612 0088 7A68     		ldr	r2, [r7, #4]
 4613 008a 7B69     		ldr	r3, [r7, #20]
 4614 008c 03F58173 		add	r3, r3, #258
 4615 0090 9B00     		lsls	r3, r3, #2
 4616 0092 1344     		add	r3, r3, r2
 4617 0094 0433     		adds	r3, r3, #4
 4618 0096 93ED007A 		vldr.32	s14, [r3]
 4619              		.loc 14 348 98 discriminator 1
 4620 009a 7A68     		ldr	r2, [r7, #4]
 4621 009c 7B69     		ldr	r3, [r7, #20]
 4622 009e F433     		adds	r3, r3, #244
 4623 00a0 9B00     		lsls	r3, r3, #2
 4624 00a2 1344     		add	r3, r3, r2
 4625 00a4 0433     		adds	r3, r3, #4
 4626 00a6 D3ED007A 		vldr.32	s15, [r3]
 4627              		.loc 14 348 47 discriminator 1
 4628 00aa B4EEE77A 		vcmpe.f32	s14, s15
 4629 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4630 00b2 25DA     		bge	.L236
 4631              	.L234:
 349:GrannyChordApp.cpp ****       ((knob1_val <= prev_k1_pos[mode_idx]) && (prev_k1_pos[mode_idx] <= prev_param_k1[mode_idx])))
 4632              		.loc 14 349 42 discriminator 3
 4633 00b4 7A68     		ldr	r2, [r7, #4]
 4634 00b6 7B69     		ldr	r3, [r7, #20]
 4635 00b8 03F58173 		add	r3, r3, #258
 4636 00bc 9B00     		lsls	r3, r3, #2
 4637 00be 1344     		add	r3, r3, r2
 4638 00c0 0433     		adds	r3, r3, #4
 4639 00c2 D3ED007A 		vldr.32	s15, [r3]
 348:GrannyChordApp.cpp ****     if (((knob1_val >= prev_k1_pos[mode_idx]) && (prev_k1_pos[mode_idx] >= prev_param_k1[mode_idx])
 4640              		.loc 14 348 101 discriminator 3
 4641 00c6 97ED047A 		vldr.32	s14, [r7, #16]
 4642 00ca B4EEE77A 		vcmpe.f32	s14, s15
 4643 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4644 00d2 19D8     		bhi	.L233
 4645              		.loc 14 349 69
 4646 00d4 7A68     		ldr	r2, [r7, #4]
 4647 00d6 7B69     		ldr	r3, [r7, #20]
 4648 00d8 03F58173 		add	r3, r3, #258
 4649 00dc 9B00     		lsls	r3, r3, #2
 4650 00de 1344     		add	r3, r3, r2
 4651 00e0 0433     		adds	r3, r3, #4
 4652 00e2 93ED007A 		vldr.32	s14, [r3]
 4653              		.loc 14 349 96
 4654 00e6 7A68     		ldr	r2, [r7, #4]
 4655 00e8 7B69     		ldr	r3, [r7, #20]
 4656 00ea F433     		adds	r3, r3, #244
 4657 00ec 9B00     		lsls	r3, r3, #2
 4658 00ee 1344     		add	r3, r3, r2
 4659 00f0 0433     		adds	r3, r3, #4
 4660 00f2 D3ED007A 		vldr.32	s15, [r3]
 4661              		.loc 14 349 45
 4662 00f6 B4EEE77A 		vcmpe.f32	s14, s15
 4663 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4664 00fe 03D8     		bhi	.L233
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 105


 4665              	.L236:
 350:GrannyChordApp.cpp ****         knob1_latched = true;
 4666              		.loc 14 350 23
 4667 0100 7B68     		ldr	r3, [r7, #4]
 4668 0102 0122     		movs	r2, #1
 4669 0104 83F88422 		strb	r2, [r3, #644]
 4670              	.L233:
 351:GrannyChordApp.cpp ****         // DebugPrint(pod_, "unlatched 1");
 352:GrannyChordApp.cpp ****       }
 353:GrannyChordApp.cpp ****   }
 354:GrannyChordApp.cpp **** 
 355:GrannyChordApp.cpp ****   if (knob1_latched){
 4671              		.loc 14 355 7
 4672 0108 7B68     		ldr	r3, [r7, #4]
 4673 010a 93F88432 		ldrb	r3, [r3, #644]	@ zero_extendqisi2
 4674              		.loc 14 355 3
 4675 010e 002B     		cmp	r3, #0
 4676 0110 10D0     		beq	.L239
 356:GrannyChordApp.cpp ****     UpdateKnob1Params(knob1_val, curr_synth_mode_);
 4677              		.loc 14 356 22
 4678 0112 7B68     		ldr	r3, [r7, #4]
 4679 0114 D3F87C32 		ldr	r3, [r3, #636]
 4680 0118 1946     		mov	r1, r3
 4681 011a 97ED040A 		vldr.32	s0, [r7, #16]
 4682 011e 7868     		ldr	r0, [r7, #4]
 4683 0120 FFF7FEFF 		bl	_ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode
 357:GrannyChordApp.cpp ****     prev_param_k1[mode_idx] = knob1_val;
 4684              		.loc 14 357 29
 4685 0124 7A68     		ldr	r2, [r7, #4]
 4686 0126 7B69     		ldr	r3, [r7, #20]
 4687 0128 F433     		adds	r3, r3, #244
 4688 012a 9B00     		lsls	r3, r3, #2
 4689 012c 1344     		add	r3, r3, r2
 4690 012e 0433     		adds	r3, r3, #4
 4691 0130 3A69     		ldr	r2, [r7, #16]	@ float
 4692 0132 1A60     		str	r2, [r3]	@ float
 4693              	.L239:
 358:GrannyChordApp.cpp ****   }
 359:GrannyChordApp.cpp **** 
 360:GrannyChordApp.cpp ****   if (!knob2_latched){
 4694              		.loc 14 360 8
 4695 0134 7B68     		ldr	r3, [r7, #4]
 4696 0136 93F88532 		ldrb	r3, [r3, #645]	@ zero_extendqisi2
 4697              		.loc 14 360 7
 4698 013a 83F00103 		eor	r3, r3, #1
 4699 013e DBB2     		uxtb	r3, r3
 4700              		.loc 14 360 3
 4701 0140 002B     		cmp	r3, #0
 4702 0142 49D0     		beq	.L240
 361:GrannyChordApp.cpp ****     if (((knob2_val >= prev_k2_pos[mode_idx]) && (prev_k2_pos[mode_idx] >= prev_param_k2[mode_idx])
 4703              		.loc 14 361 44
 4704 0144 7A68     		ldr	r2, [r7, #4]
 4705 0146 7B69     		ldr	r3, [r7, #20]
 4706 0148 03F58573 		add	r3, r3, #266
 4707 014c 9B00     		lsls	r3, r3, #2
 4708 014e 1344     		add	r3, r3, r2
 4709 0150 D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 106


 4710              		.loc 14 361 5
 4711 0154 97ED037A 		vldr.32	s14, [r7, #12]
 4712 0158 B4EEE77A 		vcmpe.f32	s14, s15
 4713 015c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4714 0160 13DB     		blt	.L241
 4715              		.loc 14 361 71 discriminator 1
 4716 0162 7A68     		ldr	r2, [r7, #4]
 4717 0164 7B69     		ldr	r3, [r7, #20]
 4718 0166 03F58573 		add	r3, r3, #266
 4719 016a 9B00     		lsls	r3, r3, #2
 4720 016c 1344     		add	r3, r3, r2
 4721 016e 93ED007A 		vldr.32	s14, [r3]
 4722              		.loc 14 361 98 discriminator 1
 4723 0172 7A68     		ldr	r2, [r7, #4]
 4724 0174 7B69     		ldr	r3, [r7, #20]
 4725 0176 FC33     		adds	r3, r3, #252
 4726 0178 9B00     		lsls	r3, r3, #2
 4727 017a 1344     		add	r3, r3, r2
 4728 017c D3ED007A 		vldr.32	s15, [r3]
 4729              		.loc 14 361 47 discriminator 1
 4730 0180 B4EEE77A 		vcmpe.f32	s14, s15
 4731 0184 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4732 0188 22DA     		bge	.L243
 4733              	.L241:
 362:GrannyChordApp.cpp ****       ((knob2_val <= prev_k2_pos[mode_idx]) && (prev_k2_pos[mode_idx] <= prev_param_k2[mode_idx])))
 4734              		.loc 14 362 42 discriminator 3
 4735 018a 7A68     		ldr	r2, [r7, #4]
 4736 018c 7B69     		ldr	r3, [r7, #20]
 4737 018e 03F58573 		add	r3, r3, #266
 4738 0192 9B00     		lsls	r3, r3, #2
 4739 0194 1344     		add	r3, r3, r2
 4740 0196 D3ED007A 		vldr.32	s15, [r3]
 361:GrannyChordApp.cpp ****     if (((knob2_val >= prev_k2_pos[mode_idx]) && (prev_k2_pos[mode_idx] >= prev_param_k2[mode_idx])
 4741              		.loc 14 361 101 discriminator 3
 4742 019a 97ED037A 		vldr.32	s14, [r7, #12]
 4743 019e B4EEE77A 		vcmpe.f32	s14, s15
 4744 01a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4745 01a6 17D8     		bhi	.L240
 4746              		.loc 14 362 69
 4747 01a8 7A68     		ldr	r2, [r7, #4]
 4748 01aa 7B69     		ldr	r3, [r7, #20]
 4749 01ac 03F58573 		add	r3, r3, #266
 4750 01b0 9B00     		lsls	r3, r3, #2
 4751 01b2 1344     		add	r3, r3, r2
 4752 01b4 93ED007A 		vldr.32	s14, [r3]
 4753              		.loc 14 362 96
 4754 01b8 7A68     		ldr	r2, [r7, #4]
 4755 01ba 7B69     		ldr	r3, [r7, #20]
 4756 01bc FC33     		adds	r3, r3, #252
 4757 01be 9B00     		lsls	r3, r3, #2
 4758 01c0 1344     		add	r3, r3, r2
 4759 01c2 D3ED007A 		vldr.32	s15, [r3]
 4760              		.loc 14 362 45
 4761 01c6 B4EEE77A 		vcmpe.f32	s14, s15
 4762 01ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4763 01ce 03D8     		bhi	.L240
 4764              	.L243:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 107


 363:GrannyChordApp.cpp ****         knob2_latched = true;
 4765              		.loc 14 363 23
 4766 01d0 7B68     		ldr	r3, [r7, #4]
 4767 01d2 0122     		movs	r2, #1
 4768 01d4 83F88522 		strb	r2, [r3, #645]
 4769              	.L240:
 364:GrannyChordApp.cpp ****         // DebugPrint(pod_, "unlatched 2");
 365:GrannyChordApp.cpp ****       }
 366:GrannyChordApp.cpp ****   }
 367:GrannyChordApp.cpp **** 
 368:GrannyChordApp.cpp ****   if (knob2_latched){
 4770              		.loc 14 368 7
 4771 01d8 7B68     		ldr	r3, [r7, #4]
 4772 01da 93F88532 		ldrb	r3, [r3, #645]	@ zero_extendqisi2
 4773              		.loc 14 368 3
 4774 01de 002B     		cmp	r3, #0
 4775 01e0 11D0     		beq	.L230
 369:GrannyChordApp.cpp ****     UpdateKnob2Params(knob2_val, curr_synth_mode_);
 4776              		.loc 14 369 22
 4777 01e2 7B68     		ldr	r3, [r7, #4]
 4778 01e4 D3F87C32 		ldr	r3, [r3, #636]
 4779 01e8 1946     		mov	r1, r3
 4780 01ea 97ED030A 		vldr.32	s0, [r7, #12]
 4781 01ee 7868     		ldr	r0, [r7, #4]
 4782 01f0 FFF7FEFF 		bl	_ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode
 370:GrannyChordApp.cpp ****     prev_param_k2[mode_idx] = knob2_val;
 4783              		.loc 14 370 29
 4784 01f4 7A68     		ldr	r2, [r7, #4]
 4785 01f6 7B69     		ldr	r3, [r7, #20]
 4786 01f8 FC33     		adds	r3, r3, #252
 4787 01fa 9B00     		lsls	r3, r3, #2
 4788 01fc 1344     		add	r3, r3, r2
 4789 01fe FA68     		ldr	r2, [r7, #12]	@ float
 4790 0200 1A60     		str	r2, [r3]	@ float
 4791 0202 00E0     		b	.L230
 4792              	.L250:
 340:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4793              		.loc 14 340 41
 4794 0204 00BF     		nop
 4795              	.L230:
 371:GrannyChordApp.cpp ****   }
 372:GrannyChordApp.cpp **** }
 4796              		.loc 14 372 1
 4797 0206 1837     		adds	r7, r7, #24
 4798              		.cfi_def_cfa_offset 8
 4799 0208 BD46     		mov	sp, r7
 4800              		.cfi_def_cfa_register 13
 4801              		@ sp needed
 4802 020a 80BD     		pop	{r7, pc}
 4803              		.cfi_endproc
 4804              	.LFE4930:
 4806              		.section	.text._ZN14GrannyChordApp11InitFileMgrEv,"ax",%progbits
 4807              		.align	1
 4808              		.global	_ZN14GrannyChordApp11InitFileMgrEv
 4809              		.syntax unified
 4810              		.thumb
 4811              		.thumb_func
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 108


 4813              	_ZN14GrannyChordApp11InitFileMgrEv:
 4814              	.LFB4931:
 373:GrannyChordApp.cpp **** 
 374:GrannyChordApp.cpp **** /// @brief Initialises file manager, sets audio data buffers and scans SD card for WAV files
 375:GrannyChordApp.cpp **** /// @return True on successful initialisation, false if init fails or no WAV files found
 376:GrannyChordApp.cpp **** bool GrannyChordApp::InitFileMgr(){
 4815              		.loc 14 376 35
 4816              		.cfi_startproc
 4817              		@ args = 0, pretend = 0, frame = 8
 4818              		@ frame_needed = 1, uses_anonymous_args = 0
 4819 0000 80B5     		push	{r7, lr}
 4820              		.cfi_def_cfa_offset 8
 4821              		.cfi_offset 7, -8
 4822              		.cfi_offset 14, -4
 4823 0002 82B0     		sub	sp, sp, #8
 4824              		.cfi_def_cfa_offset 16
 4825 0004 00AF     		add	r7, sp, #0
 4826              		.cfi_def_cfa_register 7
 4827 0006 7860     		str	r0, [r7, #4]
 377:GrannyChordApp.cpp ****   filemgr_.SetBuffers(left_buf_,right_buf_);
 4828              		.loc 14 377 3
 4829 0008 7B68     		ldr	r3, [r7, #4]
 4830 000a D3F86C02 		ldr	r0, [r3, #620]
 4831              		.loc 14 377 22
 4832 000e 7B68     		ldr	r3, [r7, #4]
 4833 0010 D3F84013 		ldr	r1, [r3, #832]
 4834 0014 7B68     		ldr	r3, [r7, #4]
 4835 0016 D3F84433 		ldr	r3, [r3, #836]
 4836 001a 1A46     		mov	r2, r3
 4837 001c FFF7FEFF 		bl	_ZN16AudioFileManager10SetBuffersEPsS0_
 378:GrannyChordApp.cpp ****   if (!filemgr_.Init())return false;
 4838              		.loc 14 378 8
 4839 0020 7B68     		ldr	r3, [r7, #4]
 4840 0022 D3F86C32 		ldr	r3, [r3, #620]
 4841              		.loc 14 378 21
 4842 0026 1846     		mov	r0, r3
 4843 0028 FFF7FEFF 		bl	_ZN16AudioFileManager4InitEv
 4844 002c 0346     		mov	r3, r0
 4845              		.loc 14 378 7
 4846 002e 83F00103 		eor	r3, r3, #1
 4847 0032 DBB2     		uxtb	r3, r3
 4848              		.loc 14 378 3
 4849 0034 002B     		cmp	r3, #0
 4850 0036 01D0     		beq	.L252
 4851              		.loc 14 378 31 discriminator 1
 4852 0038 0023     		movs	r3, #0
 4853 003a 07E0     		b	.L253
 4854              	.L252:
 379:GrannyChordApp.cpp **** 
 380:GrannyChordApp.cpp ****   return filemgr_.ScanWavFiles();
 4855              		.loc 14 380 10
 4856 003c 7B68     		ldr	r3, [r7, #4]
 4857 003e D3F86C32 		ldr	r3, [r3, #620]
 4858              		.loc 14 380 31
 4859 0042 1846     		mov	r0, r3
 4860 0044 FFF7FEFF 		bl	_ZN16AudioFileManager12ScanWavFilesEv
 4861 0048 0346     		mov	r3, r0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 109


 4862              		.loc 14 380 32
 4863 004a 00BF     		nop
 4864              	.L253:
 381:GrannyChordApp.cpp **** }
 4865              		.loc 14 381 1
 4866 004c 1846     		mov	r0, r3
 4867 004e 0837     		adds	r7, r7, #8
 4868              		.cfi_def_cfa_offset 8
 4869 0050 BD46     		mov	sp, r7
 4870              		.cfi_def_cfa_register 13
 4871              		@ sp needed
 4872 0052 80BD     		pop	{r7, pc}
 4873              		.cfi_endproc
 4874              	.LFE4931:
 4876              		.section	.rodata
 4877 0105 000000   		.align	2
 4878              	.LC13:
 4879 0108 73796E74 		.ascii	"synth init ok - samples %u\000"
 4879      6820696E 
 4879      6974206F 
 4879      6B202D20 
 4879      73616D70 
 4880              		.section	.text._ZN14GrannyChordApp9InitSynthEv,"ax",%progbits
 4881              		.align	1
 4882              		.global	_ZN14GrannyChordApp9InitSynthEv
 4883              		.syntax unified
 4884              		.thumb
 4885              		.thumb_func
 4887              	_ZN14GrannyChordApp9InitSynthEv:
 4888              	.LFB4932:
 382:GrannyChordApp.cpp **** 
 383:GrannyChordApp.cpp **** /// @brief Calls synth initialisation function, passes audio data buffers and audio length
 384:GrannyChordApp.cpp **** void GrannyChordApp::InitSynth(){
 4889              		.loc 14 384 33
 4890              		.cfi_startproc
 4891              		@ args = 0, pretend = 0, frame = 8
 4892              		@ frame_needed = 1, uses_anonymous_args = 0
 4893 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4894              		.cfi_def_cfa_offset 20
 4895              		.cfi_offset 4, -20
 4896              		.cfi_offset 5, -16
 4897              		.cfi_offset 6, -12
 4898              		.cfi_offset 7, -8
 4899              		.cfi_offset 14, -4
 4900 0002 83B0     		sub	sp, sp, #12
 4901              		.cfi_def_cfa_offset 32
 4902 0004 00AF     		add	r7, sp, #0
 4903              		.cfi_def_cfa_register 7
 4904 0006 7860     		str	r0, [r7, #4]
 385:GrannyChordApp.cpp ****   synth_.Init(left_buf_, right_buf_, filemgr_.GetSamplesPerChannel());
 4905              		.loc 14 385 14
 4906 0008 7B68     		ldr	r3, [r7, #4]
 4907 000a 03F12004 		add	r4, r3, #32
 4908 000e 7B68     		ldr	r3, [r7, #4]
 4909 0010 D3F84053 		ldr	r5, [r3, #832]
 4910 0014 7B68     		ldr	r3, [r7, #4]
 4911 0016 D3F84463 		ldr	r6, [r3, #836]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 110


 4912              		.loc 14 385 38
 4913 001a 7B68     		ldr	r3, [r7, #4]
 4914 001c D3F86C32 		ldr	r3, [r3, #620]
 4915              		.loc 14 385 14
 4916 0020 1846     		mov	r0, r3
 4917 0022 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 4918 0026 0346     		mov	r3, r0
 4919 0028 3246     		mov	r2, r6
 4920 002a 2946     		mov	r1, r5
 4921 002c 2046     		mov	r0, r4
 4922 002e FFF7FEFF 		bl	_ZN13GranularSynth4InitEPsS0_j
 386:GrannyChordApp.cpp ****   InitPrevParamVals();
 4923              		.loc 14 386 20
 4924 0032 7868     		ldr	r0, [r7, #4]
 4925 0034 FFF7FEFF 		bl	_ZN14GrannyChordApp17InitPrevParamValsEv
 387:GrannyChordApp.cpp ****   DebugPrint(pod_,"synth init ok - samples %u",filemgr_.GetSamplesPerChannel());
 4926              		.loc 14 387 3
 4927 0038 7B68     		ldr	r3, [r7, #4]
 4928 003a D3F86C32 		ldr	r3, [r3, #620]
 4929 003e 1846     		mov	r0, r3
 4930 0040 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 4931 0044 0346     		mov	r3, r0
 4932 0046 1946     		mov	r1, r3
 4933 0048 0348     		ldr	r0, .L255
 4934 004a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_
 388:GrannyChordApp.cpp **** }
 4935              		.loc 14 388 1
 4936 004e 00BF     		nop
 4937 0050 0C37     		adds	r7, r7, #12
 4938              		.cfi_def_cfa_offset 20
 4939 0052 BD46     		mov	sp, r7
 4940              		.cfi_def_cfa_register 13
 4941              		@ sp needed
 4942 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 4943              	.L256:
 4944 0056 00BF     		.align	2
 4945              	.L255:
 4946 0058 08010000 		.word	.LC13
 4947              		.cfi_endproc
 4948              	.LFE4932:
 4950              		.section	.rodata
 4951 0123 00       		.align	2
 4952              	.LC14:
 4953 0124 6661696C 		.ascii	"failed to load file\000"
 4953      65642074 
 4953      6F206C6F 
 4953      61642066 
 4953      696C6500 
 4954              		.align	2
 4955              	.LC15:
 4956 0138 6C6F6164 		.ascii	"loaded file\000"
 4956      65642066 
 4956      696C6500 
 4957              		.section	.text._ZN14GrannyChordApp12InitPlaybackEv,"ax",%progbits
 4958              		.align	1
 4959              		.global	_ZN14GrannyChordApp12InitPlaybackEv
 4960              		.syntax unified
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 111


 4961              		.thumb
 4962              		.thumb_func
 4964              	_ZN14GrannyChordApp12InitPlaybackEv:
 4965              	.LFB4933:
 389:GrannyChordApp.cpp **** 
 390:GrannyChordApp.cpp **** /// @brief Initialises WAV playback state, resets playhead, sets current file audio length
 391:GrannyChordApp.cpp **** void GrannyChordApp::InitPlayback(){
 4966              		.loc 14 391 36
 4967              		.cfi_startproc
 4968              		@ args = 0, pretend = 0, frame = 8
 4969              		@ frame_needed = 1, uses_anonymous_args = 0
 4970 0000 80B5     		push	{r7, lr}
 4971              		.cfi_def_cfa_offset 8
 4972              		.cfi_offset 7, -8
 4973              		.cfi_offset 14, -4
 4974 0002 82B0     		sub	sp, sp, #8
 4975              		.cfi_def_cfa_offset 16
 4976 0004 00AF     		add	r7, sp, #0
 4977              		.cfi_def_cfa_register 7
 4978 0006 7860     		str	r0, [r7, #4]
 392:GrannyChordApp.cpp ****   wav_playhead_ = 0;
 4979              		.loc 14 392 17
 4980 0008 7B68     		ldr	r3, [r7, #4]
 4981 000a 0022     		movs	r2, #0
 4982 000c C3F84C23 		str	r2, [r3, #844]
 393:GrannyChordApp.cpp ****   record_in_pos_  = 0;
 4983              		.loc 14 393 19
 4984 0010 7B68     		ldr	r3, [r7, #4]
 4985 0012 03F50043 		add	r3, r3, #32768
 4986 0016 1A46     		mov	r2, r3
 4987 0018 0023     		movs	r3, #0
 4988 001a C2F8BC36 		str	r3, [r2, #1724]
 394:GrannyChordApp.cpp ****   if (!recorded_in_){
 4989              		.loc 14 394 8
 4990 001e 7B68     		ldr	r3, [r7, #4]
 4991 0020 03F50043 		add	r3, r3, #32768
 4992 0024 93F8B836 		ldrb	r3, [r3, #1720]	@ zero_extendqisi2
 4993              		.loc 14 394 7
 4994 0028 83F00103 		eor	r3, r3, #1
 4995 002c DBB2     		uxtb	r3, r3
 4996              		.loc 14 394 3
 4997 002e 002B     		cmp	r3, #0
 4998 0030 18D0     		beq	.L258
 395:GrannyChordApp.cpp ****     if (!filemgr_.LoadFile(file_idx_)) {
 4999              		.loc 14 395 10
 5000 0032 7B68     		ldr	r3, [r7, #4]
 5001 0034 D3F86C22 		ldr	r2, [r3, #620]
 5002              		.loc 14 395 28
 5003 0038 7B68     		ldr	r3, [r7, #4]
 5004 003a D3F84833 		ldr	r3, [r3, #840]
 5005              		.loc 14 395 27
 5006 003e 9BB2     		uxth	r3, r3
 5007 0040 1946     		mov	r1, r3
 5008 0042 1046     		mov	r0, r2
 5009 0044 FFF7FEFF 		bl	_ZN16AudioFileManager8LoadFileEt
 5010 0048 0346     		mov	r3, r0
 5011              		.loc 14 395 9
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 112


 5012 004a 83F00103 		eor	r3, r3, #1
 5013 004e DBB2     		uxtb	r3, r3
 5014              		.loc 14 395 5
 5015 0050 002B     		cmp	r3, #0
 5016 0052 07D0     		beq	.L258
 396:GrannyChordApp.cpp ****       DebugPrint(pod_,"failed to load file");
 5017              		.loc 14 396 7
 5018 0054 0948     		ldr	r0, .L260
 5019 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 397:GrannyChordApp.cpp ****       curr_state_=AppState::Error;
 5020              		.loc 14 397 18
 5021 005a 7B68     		ldr	r3, [r7, #4]
 5022 005c 0522     		movs	r2, #5
 5023 005e C3F87422 		str	r2, [r3, #628]
 398:GrannyChordApp.cpp ****       return;
 5024              		.loc 14 398 7
 5025 0062 08E0     		b	.L257
 5026              	.L258:
 399:GrannyChordApp.cpp ****     }
 400:GrannyChordApp.cpp ****   }
 401:GrannyChordApp.cpp ****   DebugPrint(pod_, "loaded file");
 5027              		.loc 14 401 3
 5028 0064 0648     		ldr	r0, .L260+4
 5029 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 402:GrannyChordApp.cpp ****   pod_.StartAudio(AudioCallback);
 5030              		.loc 14 402 3
 5031 006a 7B68     		ldr	r3, [r7, #4]
 5032 006c DB69     		ldr	r3, [r3, #28]
 5033              		.loc 14 402 18
 5034 006e 0549     		ldr	r1, .L260+8
 5035 0070 1846     		mov	r0, r3
 5036 0072 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 5037              	.L257:
 403:GrannyChordApp.cpp **** }
 5038              		.loc 14 403 1
 5039 0076 0837     		adds	r7, r7, #8
 5040              		.cfi_def_cfa_offset 8
 5041 0078 BD46     		mov	sp, r7
 5042              		.cfi_def_cfa_register 13
 5043              		@ sp needed
 5044 007a 80BD     		pop	{r7, pc}
 5045              	.L261:
 5046              		.align	2
 5047              	.L260:
 5048 007c 24010000 		.word	.LC14
 5049 0080 38010000 		.word	.LC15
 5050 0084 00000000 		.word	_ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj
 5051              		.cfi_endproc
 5052              	.LFE4933:
 5054              		.section	.text._ZN14GrannyChordApp12InitRecordInEv,"ax",%progbits
 5055              		.align	1
 5056              		.global	_ZN14GrannyChordApp12InitRecordInEv
 5057              		.syntax unified
 5058              		.thumb
 5059              		.thumb_func
 5061              	_ZN14GrannyChordApp12InitRecordInEv:
 5062              	.LFB4934:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 113


 404:GrannyChordApp.cpp **** 
 405:GrannyChordApp.cpp **** /// @brief Initialises RecordIn state, clears audio buffers
 406:GrannyChordApp.cpp **** void GrannyChordApp::InitRecordIn(){
 5063              		.loc 14 406 36
 5064              		.cfi_startproc
 5065              		@ args = 0, pretend = 0, frame = 8
 5066              		@ frame_needed = 1, uses_anonymous_args = 0
 5067 0000 80B5     		push	{r7, lr}
 5068              		.cfi_def_cfa_offset 8
 5069              		.cfi_offset 7, -8
 5070              		.cfi_offset 14, -4
 5071 0002 82B0     		sub	sp, sp, #8
 5072              		.cfi_def_cfa_offset 16
 5073 0004 00AF     		add	r7, sp, #0
 5074              		.cfi_def_cfa_register 7
 5075 0006 7860     		str	r0, [r7, #4]
 407:GrannyChordApp.cpp ****   memset(left_buf_, 0, CHNL_BUF_SIZE_ABS);
 5076              		.loc 14 407 10
 5077 0008 7B68     		ldr	r3, [r7, #4]
 5078 000a D3F84033 		ldr	r3, [r3, #832]
 5079              		.loc 14 407 9
 5080 000e 4FF08072 		mov	r2, #16777216
 5081 0012 0021     		movs	r1, #0
 5082 0014 1846     		mov	r0, r3
 5083 0016 FFF7FEFF 		bl	memset
 408:GrannyChordApp.cpp ****   memset(right_buf_, 0, CHNL_BUF_SIZE_ABS);
 5084              		.loc 14 408 10
 5085 001a 7B68     		ldr	r3, [r7, #4]
 5086 001c D3F84433 		ldr	r3, [r3, #836]
 5087              		.loc 14 408 9
 5088 0020 4FF08072 		mov	r2, #16777216
 5089 0024 0021     		movs	r1, #0
 5090 0026 1846     		mov	r0, r3
 5091 0028 FFF7FEFF 		bl	memset
 409:GrannyChordApp.cpp ****   record_in_pos_ = 0;
 5092              		.loc 14 409 18
 5093 002c 7B68     		ldr	r3, [r7, #4]
 5094 002e 03F50043 		add	r3, r3, #32768
 5095 0032 1A46     		mov	r2, r3
 5096 0034 0023     		movs	r3, #0
 5097 0036 C2F8BC36 		str	r3, [r2, #1724]
 410:GrannyChordApp.cpp **** }
 5098              		.loc 14 410 1
 5099 003a 00BF     		nop
 5100 003c 0837     		adds	r7, r7, #8
 5101              		.cfi_def_cfa_offset 8
 5102 003e BD46     		mov	sp, r7
 5103              		.cfi_def_cfa_register 13
 5104              		@ sp needed
 5105 0040 80BD     		pop	{r7, pc}
 5106              		.cfi_endproc
 5107              	.LFE4934:
 5109              		.section	.text._ZN14GrannyChordApp13InitWavWriterEv,"ax",%progbits
 5110              		.align	1
 5111              		.global	_ZN14GrannyChordApp13InitWavWriterEv
 5112              		.syntax unified
 5113              		.thumb
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 114


 5114              		.thumb_func
 5116              	_ZN14GrannyChordApp13InitWavWriterEv:
 5117              	.LFB4935:
 411:GrannyChordApp.cpp **** 
 412:GrannyChordApp.cpp **** // /// @brief Initialise object for recording out to SD card
 413:GrannyChordApp.cpp **** void GrannyChordApp::InitWavWriter(){
 5118              		.loc 14 413 37
 5119              		.cfi_startproc
 5120              		@ args = 0, pretend = 0, frame = 24
 5121              		@ frame_needed = 1, uses_anonymous_args = 0
 5122 0000 80B5     		push	{r7, lr}
 5123              		.cfi_def_cfa_offset 8
 5124              		.cfi_offset 7, -8
 5125              		.cfi_offset 14, -4
 5126 0002 86B0     		sub	sp, sp, #24
 5127              		.cfi_def_cfa_offset 32
 5128 0004 00AF     		add	r7, sp, #0
 5129              		.cfi_def_cfa_register 7
 5130 0006 7860     		str	r0, [r7, #4]
 414:GrannyChordApp.cpp ****   WavWriter<16384>::Config cfg;
 415:GrannyChordApp.cpp ****   cfg.bitspersample = BIT_DEPTH;
 5131              		.loc 14 415 21
 5132 0008 1023     		movs	r3, #16
 5133 000a 7B61     		str	r3, [r7, #20]
 416:GrannyChordApp.cpp ****   cfg.channels = filemgr_.GetNumChannels();
 5134              		.loc 14 416 18
 5135 000c 7B68     		ldr	r3, [r7, #4]
 5136 000e D3F86C32 		ldr	r3, [r3, #620]
 5137              		.loc 14 416 41
 5138 0012 1846     		mov	r0, r3
 5139 0014 FFF7FEFF 		bl	_ZNK16AudioFileManager14GetNumChannelsEv
 5140 0018 0346     		mov	r3, r0
 5141              		.loc 14 416 16
 5142 001a 3B61     		str	r3, [r7, #16]
 417:GrannyChordApp.cpp ****   cfg.samplerate = SAMPLE_RATE;
 5143              		.loc 14 417 18
 5144 001c 074B     		ldr	r3, .L264
 5145 001e FB60     		str	r3, [r7, #12]	@ float
 418:GrannyChordApp.cpp ****   sd_writer_.Init(cfg);
 5146              		.loc 14 418 18
 5147 0020 7B68     		ldr	r3, [r7, #4]
 5148 0022 03F24443 		addw	r3, r3, #1092
 5149 0026 07F10C02 		add	r2, r7, #12
 5150 002a 1146     		mov	r1, r2
 5151 002c 1846     		mov	r0, r3
 5152 002e FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE
 419:GrannyChordApp.cpp **** }
 5153              		.loc 14 419 1
 5154 0032 00BF     		nop
 5155 0034 1837     		adds	r7, r7, #24
 5156              		.cfi_def_cfa_offset 8
 5157 0036 BD46     		mov	sp, r7
 5158              		.cfi_def_cfa_register 13
 5159              		@ sp needed
 5160 0038 80BD     		pop	{r7, pc}
 5161              	.L265:
 5162 003a 00BF     		.align	2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 115


 5163              	.L264:
 5164 003c 00803B47 		.word	1195081728
 5165              		.cfi_endproc
 5166              	.LFE4935:
 5168              		.section	.text._ZN14GrannyChordApp6InitFXEv,"ax",%progbits
 5169              		.align	1
 5170              		.global	_ZN14GrannyChordApp6InitFXEv
 5171              		.syntax unified
 5172              		.thumb
 5173              		.thumb_func
 5175              	_ZN14GrannyChordApp6InitFXEv:
 5176              	.LFB4936:
 420:GrannyChordApp.cpp **** 
 421:GrannyChordApp.cpp **** /// @brief initialise reverb, compressor, filter configs for FX section 
 422:GrannyChordApp.cpp **** void GrannyChordApp::InitFX(){
 5177              		.loc 14 422 30
 5178              		.cfi_startproc
 5179              		@ args = 0, pretend = 0, frame = 8
 5180              		@ frame_needed = 1, uses_anonymous_args = 0
 5181 0000 80B5     		push	{r7, lr}
 5182              		.cfi_def_cfa_offset 8
 5183              		.cfi_offset 7, -8
 5184              		.cfi_offset 14, -4
 5185 0002 82B0     		sub	sp, sp, #8
 5186              		.cfi_def_cfa_offset 16
 5187 0004 00AF     		add	r7, sp, #0
 5188              		.cfi_def_cfa_register 7
 5189 0006 7860     		str	r0, [r7, #4]
 423:GrannyChordApp.cpp ****   limiter_.Init();
 5190              		.loc 14 423 16
 5191 0008 7B68     		ldr	r3, [r7, #4]
 5192 000a 03F53273 		add	r3, r3, #712
 5193 000e 1846     		mov	r0, r3
 5194 0010 FFF7FEFF 		bl	_ZN7daisysp7Limiter4InitEv
 424:GrannyChordApp.cpp ****   reverb_.Init(SAMPLE_RATE_FLOAT);
 5195              		.loc 14 424 3
 5196 0014 7B68     		ldr	r3, [r7, #4]
 5197 0016 D3F8CC32 		ldr	r3, [r3, #716]
 5198              		.loc 14 424 15
 5199 001a 9FED220A 		vldr.32	s0, .L267
 5200 001e 1846     		mov	r0, r3
 5201 0020 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc4InitEf
 425:GrannyChordApp.cpp ****   
 426:GrannyChordApp.cpp ****   lowpass_moog_.Init(SAMPLE_RATE_FLOAT);
 5202              		.loc 14 426 21
 5203 0024 7B68     		ldr	r3, [r7, #4]
 5204 0026 03F53473 		add	r3, r3, #720
 5205 002a 9FED1E0A 		vldr.32	s0, .L267
 5206 002e 1846     		mov	r0, r3
 5207 0030 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder4InitEf
 427:GrannyChordApp.cpp ****   lowpass_moog_.SetFreq(LOPASS_UPPER_BOUND);
 5208              		.loc 14 427 24
 5209 0034 7B68     		ldr	r3, [r7, #4]
 5210 0036 03F53473 		add	r3, r3, #720
 5211 003a 9FED1B0A 		vldr.32	s0, .L267+4
 5212 003e 1846     		mov	r0, r3
 5213 0040 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7SetFreqEf
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 116


 428:GrannyChordApp.cpp ****   lowpass_moog_.SetRes(0.7f);
 5214              		.loc 14 428 23
 5215 0044 7B68     		ldr	r3, [r7, #4]
 5216 0046 03F53473 		add	r3, r3, #720
 5217 004a 9FED180A 		vldr.32	s0, .L267+8
 5218 004e 1846     		mov	r0, r3
 5219 0050 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder6SetResEf
 429:GrannyChordApp.cpp ****   
 430:GrannyChordApp.cpp ****   hipass_.Init();
 5220              		.loc 14 430 15
 5221 0054 7B68     		ldr	r3, [r7, #4]
 5222 0056 03F54573 		add	r3, r3, #788
 5223 005a 1846     		mov	r0, r3
 5224 005c FFF7FEFF 		bl	_ZN7daisysp7OnePole4InitEv
 431:GrannyChordApp.cpp ****   hipass_.SetFilterMode(daisysp::OnePole::FilterMode::FILTER_MODE_HIGH_PASS);
 5225              		.loc 14 431 24
 5226 0060 7B68     		ldr	r3, [r7, #4]
 5227 0062 03F54573 		add	r3, r3, #788
 5228 0066 0121     		movs	r1, #1
 5229 0068 1846     		mov	r0, r3
 5230 006a FFF7FEFF 		bl	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
 432:GrannyChordApp.cpp ****   hipass_.SetFrequency(HIPASS_LOWER_BOUND);
 5231              		.loc 14 432 23
 5232 006e 7B68     		ldr	r3, [r7, #4]
 5233 0070 03F54573 		add	r3, r3, #788
 5234 0074 9FED0E0A 		vldr.32	s0, .L267+12
 5235 0078 1846     		mov	r0, r3
 5236 007a FFF7FEFF 		bl	_ZN7daisysp7OnePole12SetFrequencyEf
 433:GrannyChordApp.cpp **** 
 434:GrannyChordApp.cpp ****   hicut_.SetFilterMode(daisysp::OnePole::FilterMode::FILTER_MODE_LOW_PASS);
 5237              		.loc 14 434 23
 5238 007e 7B68     		ldr	r3, [r7, #4]
 5239 0080 03F54C73 		add	r3, r3, #816
 5240 0084 0021     		movs	r1, #0
 5241 0086 1846     		mov	r0, r3
 5242 0088 FFF7FEFF 		bl	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
 435:GrannyChordApp.cpp ****   hicut_.SetFrequency(HICUT_FREQ);
 5243              		.loc 14 435 22
 5244 008c 7B68     		ldr	r3, [r7, #4]
 5245 008e 03F54C73 		add	r3, r3, #816
 5246 0092 B5EE060A 		vmov.f32	s0, #3.4375e-1
 5247 0096 1846     		mov	r0, r3
 5248 0098 FFF7FEFF 		bl	_ZN7daisysp7OnePole12SetFrequencyEf
 436:GrannyChordApp.cpp **** }
 5249              		.loc 14 436 1
 5250 009c 00BF     		nop
 5251 009e 0837     		adds	r7, r7, #8
 5252              		.cfi_def_cfa_offset 8
 5253 00a0 BD46     		mov	sp, r7
 5254              		.cfi_def_cfa_register 13
 5255              		@ sp needed
 5256 00a2 80BD     		pop	{r7, pc}
 5257              	.L268:
 5258              		.align	2
 5259              	.L267:
 5260 00a4 00803B47 		.word	1195081728
 5261 00a8 00A08C46 		.word	1183621120
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 117


 5262 00ac 3333333F 		.word	1060320051
 5263 00b0 17B7D139 		.word	970045207
 5264              		.cfi_endproc
 5265              	.LFE4936:
 5267              		.section	.text._ZN14GrannyChordApp17InitPrevParamValsEv,"ax",%progbits
 5268              		.align	1
 5269              		.global	_ZN14GrannyChordApp17InitPrevParamValsEv
 5270              		.syntax unified
 5271              		.thumb
 5272              		.thumb_func
 5274              	_ZN14GrannyChordApp17InitPrevParamValsEv:
 5275              	.LFB4937:
 437:GrannyChordApp.cpp **** 
 438:GrannyChordApp.cpp **** /// @brief Initialise previous parameter value arrays to defaults
 439:GrannyChordApp.cpp **** void GrannyChordApp::InitPrevParamVals(){
 5276              		.loc 14 439 41
 5277              		.cfi_startproc
 5278              		@ args = 0, pretend = 0, frame = 16
 5279              		@ frame_needed = 1, uses_anonymous_args = 0
 5280              		@ link register save eliminated.
 5281 0000 80B4     		push	{r7}
 5282              		.cfi_def_cfa_offset 4
 5283              		.cfi_offset 7, -4
 5284 0002 85B0     		sub	sp, sp, #20
 5285              		.cfi_def_cfa_offset 24
 5286 0004 00AF     		add	r7, sp, #0
 5287              		.cfi_def_cfa_register 7
 5288 0006 7860     		str	r0, [r7, #4]
 5289              	.LBB19:
 440:GrannyChordApp.cpp ****   /* set regular synth parameters */
 441:GrannyChordApp.cpp ****   for (int i=0; i < NUM_SYNTH_MODES;i++){
 5290              		.loc 14 441 12
 5291 0008 0023     		movs	r3, #0
 5292 000a FB60     		str	r3, [r7, #12]
 5293              	.L273:
 5294              		.loc 14 441 19 discriminator 1
 5295 000c FB68     		ldr	r3, [r7, #12]
 5296 000e 062B     		cmp	r3, #6
 5297 0010 27DC     		bgt	.L274
 442:GrannyChordApp.cpp ****     if (i<=3){
 5298              		.loc 14 442 5
 5299 0012 FB68     		ldr	r3, [r7, #12]
 5300 0014 032B     		cmp	r3, #3
 5301 0016 11DC     		bgt	.L271
 443:GrannyChordApp.cpp ****       prev_param_k1[i] = 0.5f;
 5302              		.loc 14 443 24
 5303 0018 7A68     		ldr	r2, [r7, #4]
 5304 001a FB68     		ldr	r3, [r7, #12]
 5305 001c F433     		adds	r3, r3, #244
 5306 001e 9B00     		lsls	r3, r3, #2
 5307 0020 1344     		add	r3, r3, r2
 5308 0022 0433     		adds	r3, r3, #4
 5309 0024 4FF07C52 		mov	r2, #1056964608
 5310 0028 1A60     		str	r2, [r3]	@ float
 444:GrannyChordApp.cpp ****       prev_param_k2[i] = 0.5f;
 5311              		.loc 14 444 24
 5312 002a 7A68     		ldr	r2, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 118


 5313 002c FB68     		ldr	r3, [r7, #12]
 5314 002e FC33     		adds	r3, r3, #252
 5315 0030 9B00     		lsls	r3, r3, #2
 5316 0032 1344     		add	r3, r3, r2
 5317 0034 4FF07C52 		mov	r2, #1056964608
 5318 0038 1A60     		str	r2, [r3]	@ float
 5319 003a 0EE0     		b	.L272
 5320              	.L271:
 445:GrannyChordApp.cpp ****     }
 446:GrannyChordApp.cpp ****     /* set randomness and FX values to 0.01 initially */
 447:GrannyChordApp.cpp ****     else {
 448:GrannyChordApp.cpp ****       prev_param_k1[i]=0.01f;
 5321              		.loc 14 448 23
 5322 003c 7A68     		ldr	r2, [r7, #4]
 5323 003e FB68     		ldr	r3, [r7, #12]
 5324 0040 F433     		adds	r3, r3, #244
 5325 0042 9B00     		lsls	r3, r3, #2
 5326 0044 1344     		add	r3, r3, r2
 5327 0046 0433     		adds	r3, r3, #4
 5328 0048 094A     		ldr	r2, .L275
 5329 004a 1A60     		str	r2, [r3]	@ float
 449:GrannyChordApp.cpp ****       prev_param_k2[i]=0.01f;
 5330              		.loc 14 449 23
 5331 004c 7A68     		ldr	r2, [r7, #4]
 5332 004e FB68     		ldr	r3, [r7, #12]
 5333 0050 FC33     		adds	r3, r3, #252
 5334 0052 9B00     		lsls	r3, r3, #2
 5335 0054 1344     		add	r3, r3, r2
 5336 0056 064A     		ldr	r2, .L275
 5337 0058 1A60     		str	r2, [r3]	@ float
 5338              	.L272:
 441:GrannyChordApp.cpp ****     if (i<=3){
 5339              		.loc 14 441 3 discriminator 2
 5340 005a FB68     		ldr	r3, [r7, #12]
 5341 005c 0133     		adds	r3, r3, #1
 5342 005e FB60     		str	r3, [r7, #12]
 5343 0060 D4E7     		b	.L273
 5344              	.L274:
 5345              	.LBE19:
 450:GrannyChordApp.cpp ****     }
 451:GrannyChordApp.cpp ****   }
 452:GrannyChordApp.cpp **** }
 5346              		.loc 14 452 1
 5347 0062 00BF     		nop
 5348 0064 1437     		adds	r7, r7, #20
 5349              		.cfi_def_cfa_offset 4
 5350 0066 BD46     		mov	sp, r7
 5351              		.cfi_def_cfa_register 13
 5352              		@ sp needed
 5353 0068 5DF8047B 		ldr	r7, [sp], #4
 5354              		.cfi_restore 7
 5355              		.cfi_def_cfa_offset 0
 5356 006c 7047     		bx	lr
 5357              	.L276:
 5358 006e 00BF     		.align	2
 5359              	.L275:
 5360 0070 0AD7233C 		.word	1008981770
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 119


 5361              		.cfi_endproc
 5362              	.LFE4937:
 5364              		.section	.text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj,"ax",%progbits
 5365              		.align	1
 5366              		.global	_ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj
 5367              		.syntax unified
 5368              		.thumb
 5369              		.thumb_func
 5371              	_ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:
 5372              	.LFB4938:
 453:GrannyChordApp.cpp **** 
 454:GrannyChordApp.cpp **** /// @brief Master audio callback, called at audio rate, calls all audio processing methods
 455:GrannyChordApp.cpp **** /// @param in Audio input buffer
 456:GrannyChordApp.cpp **** /// @param out Audio output buffer
 457:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 458:GrannyChordApp.cpp **** void GrannyChordApp::AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size
 5373              		.loc 14 458 108
 5374              		.cfi_startproc
 5375              		@ args = 0, pretend = 0, frame = 16
 5376              		@ frame_needed = 1, uses_anonymous_args = 0
 5377 0000 80B5     		push	{r7, lr}
 5378              		.cfi_def_cfa_offset 8
 5379              		.cfi_offset 7, -8
 5380              		.cfi_offset 14, -4
 5381 0002 84B0     		sub	sp, sp, #16
 5382              		.cfi_def_cfa_offset 24
 5383 0004 00AF     		add	r7, sp, #0
 5384              		.cfi_def_cfa_register 7
 5385 0006 F860     		str	r0, [r7, #12]
 5386 0008 B960     		str	r1, [r7, #8]
 5387 000a 7A60     		str	r2, [r7, #4]
 459:GrannyChordApp.cpp ****   instance_->ProcessAudio(in,out,size);
 5388              		.loc 14 459 26
 5389 000c 054B     		ldr	r3, .L278
 5390 000e 1868     		ldr	r0, [r3]
 5391 0010 7B68     		ldr	r3, [r7, #4]
 5392 0012 BA68     		ldr	r2, [r7, #8]
 5393 0014 F968     		ldr	r1, [r7, #12]
 5394 0016 FFF7FEFF 		bl	_ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj
 460:GrannyChordApp.cpp **** }
 5395              		.loc 14 460 1
 5396 001a 00BF     		nop
 5397 001c 1037     		adds	r7, r7, #16
 5398              		.cfi_def_cfa_offset 8
 5399 001e BD46     		mov	sp, r7
 5400              		.cfi_def_cfa_register 13
 5401              		@ sp needed
 5402 0020 80BD     		pop	{r7, pc}
 5403              	.L279:
 5404 0022 00BF     		.align	2
 5405              	.L278:
 5406 0024 00000000 		.word	_ZN14GrannyChordApp9instance_E
 5407              		.cfi_endproc
 5408              	.LFE4938:
 5410              		.section	.rodata
 5411              		.align	2
 5412              	.LC16:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 120


 5413 0144 73746F70 		.ascii	"stopped audio > len\000"
 5413      70656420 
 5413      61756469 
 5413      6F203E20 
 5413      6C656E00 
 5414              		.section	.text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj,"ax",%progbits
 5415              		.align	1
 5416              		.global	_ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj
 5417              		.syntax unified
 5418              		.thumb
 5419              		.thumb_func
 5421              	_ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:
 5422              	.LFB4939:
 461:GrannyChordApp.cpp **** 
 462:GrannyChordApp.cpp **** void GrannyChordApp::ProcessAudio(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_
 5423              		.loc 14 462 107
 5424              		.cfi_startproc
 5425              		@ args = 0, pretend = 0, frame = 16
 5426              		@ frame_needed = 1, uses_anonymous_args = 0
 5427 0000 90B5     		push	{r4, r7, lr}
 5428              		.cfi_def_cfa_offset 12
 5429              		.cfi_offset 4, -12
 5430              		.cfi_offset 7, -8
 5431              		.cfi_offset 14, -4
 5432 0002 85B0     		sub	sp, sp, #20
 5433              		.cfi_def_cfa_offset 32
 5434 0004 00AF     		add	r7, sp, #0
 5435              		.cfi_def_cfa_register 7
 5436 0006 F860     		str	r0, [r7, #12]
 5437 0008 B960     		str	r1, [r7, #8]
 5438 000a 7A60     		str	r2, [r7, #4]
 5439 000c 3B60     		str	r3, [r7]
 463:GrannyChordApp.cpp ****   switch(curr_state_){
 5440              		.loc 14 463 10
 5441 000e FB68     		ldr	r3, [r7, #12]
 5442 0010 D3F87432 		ldr	r3, [r3, #628]
 5443              		.loc 14 463 3
 5444 0014 032B     		cmp	r3, #3
 5445 0016 2ED0     		beq	.L287
 5446 0018 032B     		cmp	r3, #3
 5447 001a 2EDC     		bgt	.L288
 5448 001c 012B     		cmp	r3, #1
 5449 001e 02D0     		beq	.L283
 5450 0020 022B     		cmp	r3, #2
 5451 0022 22D0     		beq	.L284
 464:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 465:GrannyChordApp.cpp ****       if (wav_playhead_>= filemgr_.GetSamplesPerChannel() -1){
 466:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 467:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 468:GrannyChordApp.cpp ****         return;
 469:GrannyChordApp.cpp ****       }
 470:GrannyChordApp.cpp ****       ProcessWAVPlayback(out,size);
 471:GrannyChordApp.cpp ****       return;  
 472:GrannyChordApp.cpp ****     case AppState::RecordIn:
 473:GrannyChordApp.cpp ****       // ProcessRecordIn(in, out, size);
 474:GrannyChordApp.cpp ****       return;
 475:GrannyChordApp.cpp ****     case AppState::Synthesis:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 121


 476:GrannyChordApp.cpp ****       ProcessSynthesis(out,size);
 477:GrannyChordApp.cpp ****       return;
 478:GrannyChordApp.cpp ****     // case AppState::ChordMode:
 479:GrannyChordApp.cpp ****     // return;
 480:GrannyChordApp.cpp ****     default:
 481:GrannyChordApp.cpp ****       return;
 5452              		.loc 14 481 7
 5453 0024 29E0     		b	.L288
 5454              	.L283:
 465:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5455              		.loc 14 465 11
 5456 0026 FB68     		ldr	r3, [r7, #12]
 5457 0028 D3F84C43 		ldr	r4, [r3, #844]
 465:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5458              		.loc 14 465 27
 5459 002c FB68     		ldr	r3, [r7, #12]
 5460 002e D3F86C32 		ldr	r3, [r3, #620]
 465:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5461              		.loc 14 465 56
 5462 0032 1846     		mov	r0, r3
 5463 0034 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 5464 0038 0346     		mov	r3, r0
 465:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5465              		.loc 14 465 59
 5466 003a 013B     		subs	r3, r3, #1
 465:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5467              		.loc 14 465 24
 5468 003c 9C42     		cmp	r4, r3
 5469 003e 2CBF     		ite	cs
 5470 0040 0123     		movcs	r3, #1
 5471 0042 0023     		movcc	r3, #0
 5472 0044 DBB2     		uxtb	r3, r3
 465:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5473              		.loc 14 465 7
 5474 0046 002B     		cmp	r3, #0
 5475 0048 09D0     		beq	.L285
 466:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 5476              		.loc 14 466 34
 5477 004a 0E4B     		ldr	r3, .L289
 5478 004c 1B68     		ldr	r3, [r3]
 466:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 5479              		.loc 14 466 20
 5480 004e DB69     		ldr	r3, [r3, #28]
 466:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 5481              		.loc 14 466 34
 5482 0050 1846     		mov	r0, r3
 5483 0052 FFF7FEFF 		bl	_ZN5daisy8DaisyPod9StopAudioEv
 467:GrannyChordApp.cpp ****         return;
 5484              		.loc 14 467 9
 5485 0056 0C48     		ldr	r0, .L289+4
 5486 0058 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 468:GrannyChordApp.cpp ****       }
 5487              		.loc 14 468 9
 5488 005c 0EE0     		b	.L280
 5489              	.L285:
 470:GrannyChordApp.cpp ****       return;  
 5490              		.loc 14 470 25
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 122


 5491 005e 3A68     		ldr	r2, [r7]
 5492 0060 7968     		ldr	r1, [r7, #4]
 5493 0062 F868     		ldr	r0, [r7, #12]
 5494 0064 FFF7FEFF 		bl	_ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj
 471:GrannyChordApp.cpp ****     case AppState::RecordIn:
 5495              		.loc 14 471 7
 5496 0068 08E0     		b	.L280
 5497              	.L284:
 476:GrannyChordApp.cpp ****       return;
 5498              		.loc 14 476 23
 5499 006a 3A68     		ldr	r2, [r7]
 5500 006c 7968     		ldr	r1, [r7, #4]
 5501 006e F868     		ldr	r0, [r7, #12]
 5502 0070 FFF7FEFF 		bl	_ZN14GrannyChordApp16ProcessSynthesisEPPfj
 477:GrannyChordApp.cpp ****     // case AppState::ChordMode:
 5503              		.loc 14 477 7
 5504 0074 02E0     		b	.L280
 5505              	.L287:
 474:GrannyChordApp.cpp ****     case AppState::Synthesis:
 5506              		.loc 14 474 7
 5507 0076 00BF     		nop
 5508 0078 00E0     		b	.L280
 5509              	.L288:
 5510              		.loc 14 481 7
 5511 007a 00BF     		nop
 5512              	.L280:
 482:GrannyChordApp.cpp ****   }
 483:GrannyChordApp.cpp **** }
 5513              		.loc 14 483 1
 5514 007c 1437     		adds	r7, r7, #20
 5515              		.cfi_def_cfa_offset 12
 5516 007e BD46     		mov	sp, r7
 5517              		.cfi_def_cfa_register 13
 5518              		@ sp needed
 5519 0080 90BD     		pop	{r4, r7, pc}
 5520              	.L290:
 5521 0082 00BF     		.align	2
 5522              	.L289:
 5523 0084 00000000 		.word	_ZN14GrannyChordApp9instance_E
 5524 0088 44010000 		.word	.LC16
 5525              		.cfi_endproc
 5526              	.LFE4939:
 5528              		.section	.text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj,"ax",%progbits
 5529              		.align	1
 5530              		.global	_ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj
 5531              		.syntax unified
 5532              		.thumb
 5533              		.thumb_func
 5535              	_ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:
 5536              	.LFB4940:
 484:GrannyChordApp.cpp **** 
 485:GrannyChordApp.cpp **** /// @brief Process audio for WAV playback mode and increment playback position
 486:GrannyChordApp.cpp **** /// @param out Output audio buffer
 487:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 488:GrannyChordApp.cpp **** void GrannyChordApp::ProcessWAVPlayback(AudioHandle::OutputBuffer out, size_t size){
 5537              		.loc 14 488 84
 5538              		.cfi_startproc
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 123


 5539              		@ args = 0, pretend = 0, frame = 24
 5540              		@ frame_needed = 1, uses_anonymous_args = 0
 5541 0000 90B5     		push	{r4, r7, lr}
 5542              		.cfi_def_cfa_offset 12
 5543              		.cfi_offset 4, -12
 5544              		.cfi_offset 7, -8
 5545              		.cfi_offset 14, -4
 5546 0002 87B0     		sub	sp, sp, #28
 5547              		.cfi_def_cfa_offset 40
 5548 0004 00AF     		add	r7, sp, #0
 5549              		.cfi_def_cfa_register 7
 5550 0006 F860     		str	r0, [r7, #12]
 5551 0008 B960     		str	r1, [r7, #8]
 5552 000a 7A60     		str	r2, [r7, #4]
 5553              	.LBB20:
 489:GrannyChordApp.cpp ****   for (size_t i=0; i<size; i++){
 5554              		.loc 14 489 15
 5555 000c 0023     		movs	r3, #0
 5556 000e 7B61     		str	r3, [r7, #20]
 5557              	.L296:
 5558              		.loc 14 489 21 discriminator 1
 5559 0010 7A69     		ldr	r2, [r7, #20]
 5560 0012 7B68     		ldr	r3, [r7, #4]
 5561 0014 9A42     		cmp	r2, r3
 5562 0016 5CD2     		bcs	.L297
 490:GrannyChordApp.cpp ****     if (wav_playhead_ < filemgr_.GetSamplesPerChannel()){
 5563              		.loc 14 490 9
 5564 0018 FB68     		ldr	r3, [r7, #12]
 5565 001a D3F84C43 		ldr	r4, [r3, #844]
 5566              		.loc 14 490 25
 5567 001e FB68     		ldr	r3, [r7, #12]
 5568 0020 D3F86C32 		ldr	r3, [r3, #620]
 5569              		.loc 14 490 54
 5570 0024 1846     		mov	r0, r3
 5571 0026 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 5572 002a 0346     		mov	r3, r0
 5573              		.loc 14 490 23
 5574 002c 9C42     		cmp	r4, r3
 5575 002e 34BF     		ite	cc
 5576 0030 0123     		movcc	r3, #1
 5577 0032 0023     		movcs	r3, #0
 5578 0034 DBB2     		uxtb	r3, r3
 5579              		.loc 14 490 5
 5580 0036 002B     		cmp	r3, #0
 5581 0038 47D0     		beq	.L293
 491:GrannyChordApp.cpp ****       out[0][i] = s162f(left_buf_[wav_playhead_]) * 0.5f;
 5582              		.loc 14 491 25
 5583 003a FB68     		ldr	r3, [r7, #12]
 5584 003c D3F84023 		ldr	r2, [r3, #832]
 5585              		.loc 14 491 35
 5586 0040 FB68     		ldr	r3, [r7, #12]
 5587 0042 D3F84C33 		ldr	r3, [r3, #844]
 5588              		.loc 14 491 48
 5589 0046 5B00     		lsls	r3, r3, #1
 5590 0048 1344     		add	r3, r3, r2
 5591              		.loc 14 491 24
 5592 004a B3F90030 		ldrsh	r3, [r3]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 124


 5593 004e 3B82     		strh	r3, [r7, #16]	@ movhi
 5594              	.LBB21:
 5595              	.LBB22:
 5596              		.file 15 "../libDaisy/src/daisy_core.h"
   1:../libDaisy/src/daisy_core.h **** #pragma once
   2:../libDaisy/src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../libDaisy/src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../libDaisy/src/daisy_core.h **** #include <stdint.h>
   5:../libDaisy/src/daisy_core.h **** #include <stdlib.h>
   6:../libDaisy/src/daisy_core.h **** 
   7:../libDaisy/src/daisy_core.h **** #if defined(_MSC_VER)
   8:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../libDaisy/src/daisy_core.h **** #elif defined(__clang__)
  10:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../libDaisy/src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../libDaisy/src/daisy_core.h **** #elif defined(__GNUC__)
  13:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../libDaisy/src/daisy_core.h **** #else
  15:../libDaisy/src/daisy_core.h **** #error unknown compiler
  16:../libDaisy/src/daisy_core.h **** #endif
  17:../libDaisy/src/daisy_core.h **** 
  18:../libDaisy/src/daisy_core.h **** /** @addtogroup utility
  19:../libDaisy/src/daisy_core.h ****     @{
  20:../libDaisy/src/daisy_core.h **** */
  21:../libDaisy/src/daisy_core.h **** 
  22:../libDaisy/src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../libDaisy/src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../libDaisy/src/daisy_core.h **** */
  25:../libDaisy/src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../libDaisy/src/daisy_core.h **** /** 
  27:../libDaisy/src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../libDaisy/src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../libDaisy/src/daisy_core.h **** cache enabled.
  30:../libDaisy/src/daisy_core.h **** */
  31:../libDaisy/src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../libDaisy/src/daisy_core.h **** 
  33:../libDaisy/src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../libDaisy/src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../libDaisy/src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../libDaisy/src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../libDaisy/src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../libDaisy/src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../libDaisy/src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../libDaisy/src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../libDaisy/src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../libDaisy/src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../libDaisy/src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../libDaisy/src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../libDaisy/src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../libDaisy/src/daisy_core.h **** 
  47:../libDaisy/src/daisy_core.h **** 
  48:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../libDaisy/src/daisy_core.h **** #define OUT_L out[0]
  51:../libDaisy/src/daisy_core.h **** 
  52:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 125


  54:../libDaisy/src/daisy_core.h **** #define OUT_R out[1]
  55:../libDaisy/src/daisy_core.h **** 
  56:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../libDaisy/src/daisy_core.h **** #define IN_L in[0]
  59:../libDaisy/src/daisy_core.h **** 
  60:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../libDaisy/src/daisy_core.h **** #define IN_R in[1]
  63:../libDaisy/src/daisy_core.h **** 
  64:../libDaisy/src/daisy_core.h **** /** 
  65:../libDaisy/src/daisy_core.h ****     Computes cube.
  66:../libDaisy/src/daisy_core.h ****     \param x Number to be cubed
  67:../libDaisy/src/daisy_core.h ****     \return x ^ 3
  68:../libDaisy/src/daisy_core.h **** */
  69:../libDaisy/src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../libDaisy/src/daisy_core.h **** {
  71:../libDaisy/src/daisy_core.h ****     return (x * x) * x;
  72:../libDaisy/src/daisy_core.h **** }
  73:../libDaisy/src/daisy_core.h **** 
  74:../libDaisy/src/daisy_core.h **** /** 
  75:../libDaisy/src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  77:../libDaisy/src/daisy_core.h ****     \return Scaled number.
  78:../libDaisy/src/daisy_core.h **** */
  79:../libDaisy/src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../libDaisy/src/daisy_core.h **** {
  81:../libDaisy/src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../libDaisy/src/daisy_core.h **** }
  83:../libDaisy/src/daisy_core.h **** 
  84:../libDaisy/src/daisy_core.h **** /**
  85:../libDaisy/src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../libDaisy/src/daisy_core.h **** */
  87:../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../libDaisy/src/daisy_core.h **** {
  89:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../libDaisy/src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../libDaisy/src/daisy_core.h **** }
  93:../libDaisy/src/daisy_core.h **** 
  94:../libDaisy/src/daisy_core.h **** 
  95:../libDaisy/src/daisy_core.h **** /** 
  96:../libDaisy/src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  98:../libDaisy/src/daisy_core.h ****     \return Scaled number.
  99:../libDaisy/src/daisy_core.h **** */
 100:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../libDaisy/src/daisy_core.h **** {
 102:../libDaisy/src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../libDaisy/src/daisy_core.h **** }
 104:../libDaisy/src/daisy_core.h **** 
 105:../libDaisy/src/daisy_core.h **** /**
 106:../libDaisy/src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../libDaisy/src/daisy_core.h **** */
 108:../libDaisy/src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../libDaisy/src/daisy_core.h **** {
 110:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 126


 111:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../libDaisy/src/daisy_core.h **** }
 114:../libDaisy/src/daisy_core.h **** 
 115:../libDaisy/src/daisy_core.h **** /** 
 116:../libDaisy/src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
 118:../libDaisy/src/daisy_core.h ****     \return Scaled number.
 119:../libDaisy/src/daisy_core.h **** */
 120:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../libDaisy/src/daisy_core.h **** {
 122:../libDaisy/src/daisy_core.h ****     return (float)x * S162F_SCALE;
 5597              		.loc 15 122 12
 5598 0050 B7F91030 		ldrsh	r3, [r7, #16]
 5599 0054 07EE903A 		vmov	s15, r3	@ int
 5600 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 5601              		.loc 15 122 23
 5602 005c 9FED1F7A 		vldr.32	s14, .L298
 5603 0060 67EE877A 		vmul.f32	s15, s15, s14
 5604              	.LBE22:
 5605              	.LBE21:
 5606              		.loc 14 491 12
 5607 0064 BB68     		ldr	r3, [r7, #8]
 5608 0066 1A68     		ldr	r2, [r3]
 5609              		.loc 14 491 15
 5610 0068 7B69     		ldr	r3, [r7, #20]
 5611 006a 9B00     		lsls	r3, r3, #2
 5612 006c 1344     		add	r3, r3, r2
 5613              		.loc 14 491 51
 5614 006e B6EE007A 		vmov.f32	s14, #5.0e-1
 5615 0072 67EE877A 		vmul.f32	s15, s15, s14
 5616              		.loc 14 491 17
 5617 0076 C3ED007A 		vstr.32	s15, [r3]
 492:GrannyChordApp.cpp ****       out[1][i] = s162f(right_buf_[wav_playhead_]) * 0.5f;
 5618              		.loc 14 492 25
 5619 007a FB68     		ldr	r3, [r7, #12]
 5620 007c D3F84423 		ldr	r2, [r3, #836]
 5621              		.loc 14 492 36
 5622 0080 FB68     		ldr	r3, [r7, #12]
 5623 0082 D3F84C33 		ldr	r3, [r3, #844]
 5624              		.loc 14 492 49
 5625 0086 5B00     		lsls	r3, r3, #1
 5626 0088 1344     		add	r3, r3, r2
 5627              		.loc 14 492 24
 5628 008a B3F90030 		ldrsh	r3, [r3]
 5629 008e 7B82     		strh	r3, [r7, #18]	@ movhi
 5630              	.LBB23:
 5631              	.LBB24:
 5632              		.loc 15 122 12
 5633 0090 B7F91230 		ldrsh	r3, [r7, #18]
 5634 0094 07EE903A 		vmov	s15, r3	@ int
 5635 0098 F8EEE77A 		vcvt.f32.s32	s15, s15
 5636              		.loc 15 122 23
 5637 009c 9FED0F7A 		vldr.32	s14, .L298
 5638 00a0 67EE877A 		vmul.f32	s15, s15, s14
 5639              	.LBE24:
 5640              	.LBE23:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 127


 5641              		.loc 14 492 12
 5642 00a4 BB68     		ldr	r3, [r7, #8]
 5643 00a6 0433     		adds	r3, r3, #4
 5644 00a8 1A68     		ldr	r2, [r3]
 5645              		.loc 14 492 15
 5646 00aa 7B69     		ldr	r3, [r7, #20]
 5647 00ac 9B00     		lsls	r3, r3, #2
 5648 00ae 1344     		add	r3, r3, r2
 5649              		.loc 14 492 52
 5650 00b0 B6EE007A 		vmov.f32	s14, #5.0e-1
 5651 00b4 67EE877A 		vmul.f32	s15, s15, s14
 5652              		.loc 14 492 17
 5653 00b8 C3ED007A 		vstr.32	s15, [r3]
 493:GrannyChordApp.cpp ****       wav_playhead_++;
 5654              		.loc 14 493 7
 5655 00bc FB68     		ldr	r3, [r7, #12]
 5656 00be D3F84C33 		ldr	r3, [r3, #844]
 5657              		.loc 14 493 20
 5658 00c2 5A1C     		adds	r2, r3, #1
 5659 00c4 FB68     		ldr	r3, [r7, #12]
 5660 00c6 C3F84C23 		str	r2, [r3, #844]
 5661              	.L293:
 489:GrannyChordApp.cpp ****     if (wav_playhead_ < filemgr_.GetSamplesPerChannel()){
 5662              		.loc 14 489 3 discriminator 2
 5663 00ca 7B69     		ldr	r3, [r7, #20]
 5664 00cc 0133     		adds	r3, r3, #1
 5665 00ce 7B61     		str	r3, [r7, #20]
 5666 00d0 9EE7     		b	.L296
 5667              	.L297:
 5668              	.LBE20:
 494:GrannyChordApp.cpp ****     }
 495:GrannyChordApp.cpp ****   }
 496:GrannyChordApp.cpp **** }
 5669              		.loc 14 496 1
 5670 00d2 00BF     		nop
 5671 00d4 1C37     		adds	r7, r7, #28
 5672              		.cfi_def_cfa_offset 12
 5673 00d6 BD46     		mov	sp, r7
 5674              		.cfi_def_cfa_register 13
 5675              		@ sp needed
 5676 00d8 90BD     		pop	{r4, r7, pc}
 5677              	.L299:
 5678 00da 00BF     		.align	2
 5679              	.L298:
 5680 00dc 00000038 		.word	939524096
 5681              		.cfi_endproc
 5682              	.LFE4940:
 5684              		.section	.text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj,"ax",%progbits
 5685              		.align	1
 5686              		.global	_ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj
 5687              		.syntax unified
 5688              		.thumb
 5689              		.thumb_func
 5691              	_ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:
 5692              	.LFB4941:
 497:GrannyChordApp.cpp **** 
 498:GrannyChordApp.cpp **** /// @brief Process input audio when app is in RecordIn state
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 128


 499:GrannyChordApp.cpp **** /// @param in Input audio buffer
 500:GrannyChordApp.cpp **** /// @param out Output audio buffer
 501:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 502:GrannyChordApp.cpp **** void GrannyChordApp::ProcessRecordIn(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, si
 5693              		.loc 14 502 110
 5694              		.cfi_startproc
 5695              		@ args = 0, pretend = 0, frame = 24
 5696              		@ frame_needed = 1, uses_anonymous_args = 0
 5697              		@ link register save eliminated.
 5698 0000 80B4     		push	{r7}
 5699              		.cfi_def_cfa_offset 4
 5700              		.cfi_offset 7, -4
 5701 0002 87B0     		sub	sp, sp, #28
 5702              		.cfi_def_cfa_offset 32
 5703 0004 00AF     		add	r7, sp, #0
 5704              		.cfi_def_cfa_register 7
 5705 0006 F860     		str	r0, [r7, #12]
 5706 0008 B960     		str	r1, [r7, #8]
 5707 000a 7A60     		str	r2, [r7, #4]
 5708 000c 3B60     		str	r3, [r7]
 503:GrannyChordApp.cpp ****   const size_t MAX_RECORDING_LEN = 120*48000; /* 120s @ 48kHZ */
 5709              		.loc 14 503 16
 5710 000e 374B     		ldr	r3, .L304
 5711 0010 3B61     		str	r3, [r7, #16]
 5712              	.LBB25:
 504:GrannyChordApp.cpp ****   for (size_t i=0; i<size;i++){
 5713              		.loc 14 504 15
 5714 0012 0023     		movs	r3, #0
 5715 0014 7B61     		str	r3, [r7, #20]
 5716              	.L302:
 5717              		.loc 14 504 21 discriminator 3
 5718 0016 7A69     		ldr	r2, [r7, #20]
 5719 0018 3B68     		ldr	r3, [r7]
 5720 001a 9A42     		cmp	r2, r3
 5721 001c 60D2     		bcs	.L303
 505:GrannyChordApp.cpp ****     /* send audio in straight to output for monitoring */
 506:GrannyChordApp.cpp ****     out[0][i]=in[0][i];
 5722              		.loc 14 506 19 discriminator 2
 5723 001e BB68     		ldr	r3, [r7, #8]
 5724 0020 1A68     		ldr	r2, [r3]
 5725              		.loc 14 506 22 discriminator 2
 5726 0022 7B69     		ldr	r3, [r7, #20]
 5727 0024 9B00     		lsls	r3, r3, #2
 5728 0026 1A44     		add	r2, r2, r3
 5729              		.loc 14 506 10 discriminator 2
 5730 0028 7B68     		ldr	r3, [r7, #4]
 5731 002a 1968     		ldr	r1, [r3]
 5732              		.loc 14 506 13 discriminator 2
 5733 002c 7B69     		ldr	r3, [r7, #20]
 5734 002e 9B00     		lsls	r3, r3, #2
 5735 0030 0B44     		add	r3, r3, r1
 5736              		.loc 14 506 22 discriminator 2
 5737 0032 1268     		ldr	r2, [r2]	@ float
 5738              		.loc 14 506 14 discriminator 2
 5739 0034 1A60     		str	r2, [r3]	@ float
 507:GrannyChordApp.cpp ****     out[1][i]=in[1][i];
 5740              		.loc 14 507 19 discriminator 2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 129


 5741 0036 BB68     		ldr	r3, [r7, #8]
 5742 0038 0433     		adds	r3, r3, #4
 5743 003a 1A68     		ldr	r2, [r3]
 5744              		.loc 14 507 22 discriminator 2
 5745 003c 7B69     		ldr	r3, [r7, #20]
 5746 003e 9B00     		lsls	r3, r3, #2
 5747 0040 1A44     		add	r2, r2, r3
 5748              		.loc 14 507 10 discriminator 2
 5749 0042 7B68     		ldr	r3, [r7, #4]
 5750 0044 0433     		adds	r3, r3, #4
 5751 0046 1968     		ldr	r1, [r3]
 5752              		.loc 14 507 13 discriminator 2
 5753 0048 7B69     		ldr	r3, [r7, #20]
 5754 004a 9B00     		lsls	r3, r3, #2
 5755 004c 0B44     		add	r3, r3, r1
 5756              		.loc 14 507 22 discriminator 2
 5757 004e 1268     		ldr	r2, [r2]	@ float
 5758              		.loc 14 507 14 discriminator 2
 5759 0050 1A60     		str	r2, [r3]	@ float
 508:GrannyChordApp.cpp ****     /* record audio in to SDRAM buffers */
 509:GrannyChordApp.cpp ****     left_buf_[record_in_pos_] = in[0][i];
 5760              		.loc 14 509 37 discriminator 2
 5761 0052 BB68     		ldr	r3, [r7, #8]
 5762 0054 1A68     		ldr	r2, [r3]
 5763              		.loc 14 509 40 discriminator 2
 5764 0056 7B69     		ldr	r3, [r7, #20]
 5765 0058 9B00     		lsls	r3, r3, #2
 5766 005a 1344     		add	r3, r3, r2
 5767 005c D3ED007A 		vldr.32	s15, [r3]
 5768              		.loc 14 509 5 discriminator 2
 5769 0060 FB68     		ldr	r3, [r7, #12]
 5770 0062 D3F84023 		ldr	r2, [r3, #832]
 5771              		.loc 14 509 15 discriminator 2
 5772 0066 FB68     		ldr	r3, [r7, #12]
 5773 0068 03F50043 		add	r3, r3, #32768
 5774 006c D3F8BC36 		ldr	r3, [r3, #1724]
 5775              		.loc 14 509 29 discriminator 2
 5776 0070 5B00     		lsls	r3, r3, #1
 5777 0072 1344     		add	r3, r3, r2
 5778              		.loc 14 509 31 discriminator 2
 5779 0074 FDEEE77A 		vcvt.s32.f32	s15, s15
 5780 0078 17EE902A 		vmov	r2, s15	@ int
 5781 007c 12B2     		sxth	r2, r2
 5782 007e 1A80     		strh	r2, [r3]	@ movhi
 510:GrannyChordApp.cpp ****     right_buf_[record_in_pos_] = in[1][i];
 5783              		.loc 14 510 38 discriminator 2
 5784 0080 BB68     		ldr	r3, [r7, #8]
 5785 0082 0433     		adds	r3, r3, #4
 5786 0084 1A68     		ldr	r2, [r3]
 5787              		.loc 14 510 41 discriminator 2
 5788 0086 7B69     		ldr	r3, [r7, #20]
 5789 0088 9B00     		lsls	r3, r3, #2
 5790 008a 1344     		add	r3, r3, r2
 5791 008c D3ED007A 		vldr.32	s15, [r3]
 5792              		.loc 14 510 5 discriminator 2
 5793 0090 FB68     		ldr	r3, [r7, #12]
 5794 0092 D3F84423 		ldr	r2, [r3, #836]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 130


 5795              		.loc 14 510 16 discriminator 2
 5796 0096 FB68     		ldr	r3, [r7, #12]
 5797 0098 03F50043 		add	r3, r3, #32768
 5798 009c D3F8BC36 		ldr	r3, [r3, #1724]
 5799              		.loc 14 510 30 discriminator 2
 5800 00a0 5B00     		lsls	r3, r3, #1
 5801 00a2 1344     		add	r3, r3, r2
 5802              		.loc 14 510 32 discriminator 2
 5803 00a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 5804 00a8 17EE902A 		vmov	r2, s15	@ int
 5805 00ac 12B2     		sxth	r2, r2
 5806 00ae 1A80     		strh	r2, [r3]	@ movhi
 511:GrannyChordApp.cpp ****     /* wrap around recording length - if it exceeds 120s,
 512:GrannyChordApp.cpp ****       the start of the recording will be overwritten */
 513:GrannyChordApp.cpp ****     record_in_pos_ = (record_in_pos_+1)%MAX_RECORDING_LEN;
 5807              		.loc 14 513 23 discriminator 2
 5808 00b0 FB68     		ldr	r3, [r7, #12]
 5809 00b2 03F50043 		add	r3, r3, #32768
 5810 00b6 D3F8BC36 		ldr	r3, [r3, #1724]
 5811              		.loc 14 513 37 discriminator 2
 5812 00ba 5A1C     		adds	r2, r3, #1
 5813              		.loc 14 513 40 discriminator 2
 5814 00bc 930A     		lsrs	r3, r2, #10
 5815 00be 0C49     		ldr	r1, .L304+4
 5816 00c0 A1FB0313 		umull	r1, r3, r1, r3
 5817 00c4 9B08     		lsrs	r3, r3, #2
 5818 00c6 0949     		ldr	r1, .L304
 5819 00c8 01FB03F3 		mul	r3, r1, r3
 5820 00cc D31A     		subs	r3, r2, r3
 5821              		.loc 14 513 20 discriminator 2
 5822 00ce FA68     		ldr	r2, [r7, #12]
 5823 00d0 02F50042 		add	r2, r2, #32768
 5824 00d4 C2F8BC36 		str	r3, [r2, #1724]
 504:GrannyChordApp.cpp ****     /* send audio in straight to output for monitoring */
 5825              		.loc 14 504 3 discriminator 2
 5826 00d8 7B69     		ldr	r3, [r7, #20]
 5827 00da 0133     		adds	r3, r3, #1
 5828 00dc 7B61     		str	r3, [r7, #20]
 5829 00de 9AE7     		b	.L302
 5830              	.L303:
 5831              	.LBE25:
 514:GrannyChordApp.cpp ****   }
 515:GrannyChordApp.cpp **** }
 5832              		.loc 14 515 1
 5833 00e0 00BF     		nop
 5834 00e2 1C37     		adds	r7, r7, #28
 5835              		.cfi_def_cfa_offset 4
 5836 00e4 BD46     		mov	sp, r7
 5837              		.cfi_def_cfa_register 13
 5838              		@ sp needed
 5839 00e6 5DF8047B 		ldr	r7, [sp], #4
 5840              		.cfi_restore 7
 5841              		.cfi_def_cfa_offset 0
 5842 00ea 7047     		bx	lr
 5843              	.L305:
 5844              		.align	2
 5845              	.L304:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 131


 5846 00ec 00E45700 		.word	5760000
 5847 00f0 779A2E00 		.word	3054199
 5848              		.cfi_endproc
 5849              	.LFE4941:
 5851              		.section	.text._ZN14GrannyChordApp16ProcessSynthesisEPPfj,"ax",%progbits
 5852              		.align	1
 5853              		.global	_ZN14GrannyChordApp16ProcessSynthesisEPPfj
 5854              		.syntax unified
 5855              		.thumb
 5856              		.thumb_func
 5858              	_ZN14GrannyChordApp16ProcessSynthesisEPPfj:
 5859              	.LFB4942:
 516:GrannyChordApp.cpp **** 
 517:GrannyChordApp.cpp **** /// @brief Process audio through granular synth and mix to output buffer
 518:GrannyChordApp.cpp **** /// @param out Output audio buffer
 519:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 520:GrannyChordApp.cpp **** void GrannyChordApp::ProcessSynthesis(AudioHandle::OutputBuffer out, size_t size){
 5860              		.loc 14 520 82
 5861              		.cfi_startproc
 5862              		@ args = 0, pretend = 0, frame = 40
 5863              		@ frame_needed = 1, uses_anonymous_args = 0
 5864 0000 80B5     		push	{r7, lr}
 5865              		.cfi_def_cfa_offset 8
 5866              		.cfi_offset 7, -8
 5867              		.cfi_offset 14, -4
 5868 0002 8AB0     		sub	sp, sp, #40
 5869              		.cfi_def_cfa_offset 48
 5870 0004 00AF     		add	r7, sp, #0
 5871              		.cfi_def_cfa_register 7
 5872 0006 F860     		str	r0, [r7, #12]
 5873 0008 B960     		str	r1, [r7, #8]
 5874 000a 7A60     		str	r2, [r7, #4]
 5875              	.LBB26:
 521:GrannyChordApp.cpp ****   // Sample samp;
 522:GrannyChordApp.cpp ****   for (size_t i=0; i<size; i++){ 
 5876              		.loc 14 522 15
 5877 000c 0023     		movs	r3, #0
 5878 000e 7B62     		str	r3, [r7, #36]
 5879              	.L312:
 5880              		.loc 14 522 21 discriminator 1
 5881 0010 7A6A     		ldr	r2, [r7, #36]
 5882 0012 7B68     		ldr	r3, [r7, #4]
 5883 0014 9A42     		cmp	r2, r3
 5884 0016 80F08480 		bcs	.L314
 5885              	.LBB27:
 523:GrannyChordApp.cpp ****   loadmeter.OnBlockStart();
 5886              		.loc 14 523 25
 5887 001a FB68     		ldr	r3, [r7, #12]
 5888 001c 1846     		mov	r0, r3
 5889 001e FFF7FEFF 		bl	_ZN5daisy12CpuLoadMeter12OnBlockStartEv
 524:GrannyChordApp.cpp ****     Sample samp = synth_.ProcessGrains();
 5890              		.loc 14 524 40
 5891 0022 FB68     		ldr	r3, [r7, #12]
 5892 0024 2033     		adds	r3, r3, #32
 5893 0026 1846     		mov	r0, r3
 5894 0028 FFF7FEFF 		bl	_ZN13GranularSynth13ProcessGrainsEv
 5895 002c B0EE407A 		vmov.f32	s14, s0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 132


 5896 0030 F0EE607A 		vmov.f32	s15, s1
 5897 0034 87ED077A 		vstr.32	s14, [r7, #28]
 5898 0038 C7ED087A 		vstr.32	s15, [r7, #32]
 525:GrannyChordApp.cpp ****     counter++;
 5899              		.loc 14 525 5
 5900 003c FB68     		ldr	r3, [r7, #12]
 5901 003e 03F50043 		add	r3, r3, #32768
 5902 0042 D3F83837 		ldr	r3, [r3, #1848]
 5903              		.loc 14 525 12
 5904 0046 0133     		adds	r3, r3, #1
 5905 0048 FA68     		ldr	r2, [r7, #12]
 5906 004a 02F50042 		add	r2, r2, #32768
 5907 004e C2F83837 		str	r3, [r2, #1848]
 526:GrannyChordApp.cpp **** 
 527:GrannyChordApp.cpp ****     Sample processed = ProcessFX(samp);
 5908              		.loc 14 527 38
 5909 0052 97ED077A 		vldr.32	s14, [r7, #28]
 5910 0056 D7ED087A 		vldr.32	s15, [r7, #32]
 5911 005a B0EE470A 		vmov.f32	s0, s14
 5912 005e F0EE670A 		vmov.f32	s1, s15
 5913 0062 F868     		ldr	r0, [r7, #12]
 5914 0064 FFF7FEFF 		bl	_ZN14GrannyChordApp9ProcessFXE6Sample
 5915 0068 B0EE407A 		vmov.f32	s14, s0
 5916 006c F0EE607A 		vmov.f32	s15, s1
 5917 0070 87ED057A 		vstr.32	s14, [r7, #20]
 5918 0074 C7ED067A 		vstr.32	s15, [r7, #24]
 528:GrannyChordApp.cpp ****     // limiter_.ProcessBlock(&samp.left, 1, 0.0f);
 529:GrannyChordApp.cpp ****     // limiter_.ProcessBlock(&samp.right, 1, 0.0f);
 530:GrannyChordApp.cpp ****   //   // if (counter%128000==0){
 531:GrannyChordApp.cpp ****   //   //   counter=0;
 532:GrannyChordApp.cpp ****   //   //   DebugPrint(pod_, "l: %f, r: %f", samp.left, samp.right);
 533:GrannyChordApp.cpp ****   //   // }
 534:GrannyChordApp.cpp ****     out[0][i] = processed.left;
 5919              		.loc 14 534 10
 5920 0078 BB68     		ldr	r3, [r7, #8]
 5921 007a 1A68     		ldr	r2, [r3]
 5922              		.loc 14 534 13
 5923 007c 7B6A     		ldr	r3, [r7, #36]
 5924 007e 9B00     		lsls	r3, r3, #2
 5925 0080 1344     		add	r3, r3, r2
 5926              		.loc 14 534 27
 5927 0082 7A69     		ldr	r2, [r7, #20]	@ float
 5928              		.loc 14 534 15
 5929 0084 1A60     		str	r2, [r3]	@ float
 535:GrannyChordApp.cpp ****     out[1][i] = processed.right;
 5930              		.loc 14 535 10
 5931 0086 BB68     		ldr	r3, [r7, #8]
 5932 0088 0433     		adds	r3, r3, #4
 5933 008a 1A68     		ldr	r2, [r3]
 5934              		.loc 14 535 13
 5935 008c 7B6A     		ldr	r3, [r7, #36]
 5936 008e 9B00     		lsls	r3, r3, #2
 5937 0090 1344     		add	r3, r3, r2
 5938              		.loc 14 535 27
 5939 0092 BA69     		ldr	r2, [r7, #24]	@ float
 5940              		.loc 14 535 15
 5941 0094 1A60     		str	r2, [r3]	@ float
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 133


 536:GrannyChordApp.cpp **** 
 537:GrannyChordApp.cpp ****     if (recording_out_ && sd_writer_.GetLengthSeconds()<MAX_REC_OUT_LEN){
 5942              		.loc 14 537 9
 5943 0096 FB68     		ldr	r3, [r7, #12]
 5944 0098 03F50043 		add	r3, r3, #32768
 5945 009c 93F8C036 		ldrb	r3, [r3, #1728]	@ zero_extendqisi2
 5946              		.loc 14 537 24
 5947 00a0 002B     		cmp	r3, #0
 5948 00a2 10D0     		beq	.L308
 5949              		.loc 14 537 54 discriminator 1
 5950 00a4 FB68     		ldr	r3, [r7, #12]
 5951 00a6 03F24443 		addw	r3, r3, #1092
 5952 00aa 1846     		mov	r0, r3
 5953 00ac FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
 5954 00b0 F0EE407A 		vmov.f32	s15, s0
 5955              		.loc 14 537 24 discriminator 1
 5956 00b4 9FED1D7A 		vldr.32	s14, .L315
 5957 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 5958 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5959 00c0 01D5     		bpl	.L308
 5960              		.loc 14 537 24 is_stmt 0 discriminator 3
 5961 00c2 0123     		movs	r3, #1
 5962 00c4 00E0     		b	.L310
 5963              	.L308:
 5964              		.loc 14 537 24 discriminator 4
 5965 00c6 0023     		movs	r3, #0
 5966              	.L310:
 5967              		.loc 14 537 5 is_stmt 1 discriminator 6
 5968 00c8 002B     		cmp	r3, #0
 5969 00ca 22D0     		beq	.L311
 538:GrannyChordApp.cpp ****       temp_interleaved_buf_[0]=out[0][i];
 5970              		.loc 14 538 37
 5971 00cc BB68     		ldr	r3, [r7, #8]
 5972 00ce 1A68     		ldr	r2, [r3]
 5973              		.loc 14 538 40
 5974 00d0 7B6A     		ldr	r3, [r7, #36]
 5975 00d2 9B00     		lsls	r3, r3, #2
 5976 00d4 1344     		add	r3, r3, r2
 5977 00d6 1A68     		ldr	r2, [r3]	@ float
 5978              		.loc 14 538 31
 5979 00d8 FB68     		ldr	r3, [r7, #12]
 5980 00da 03F50043 		add	r3, r3, #32768
 5981 00de 03F2CC63 		addw	r3, r3, #1740
 5982 00e2 1A60     		str	r2, [r3]	@ float
 539:GrannyChordApp.cpp ****       temp_interleaved_buf_[1]=out[1][i];
 5983              		.loc 14 539 37
 5984 00e4 BB68     		ldr	r3, [r7, #8]
 5985 00e6 0433     		adds	r3, r3, #4
 5986 00e8 1A68     		ldr	r2, [r3]
 5987              		.loc 14 539 40
 5988 00ea 7B6A     		ldr	r3, [r7, #36]
 5989 00ec 9B00     		lsls	r3, r3, #2
 5990 00ee 1344     		add	r3, r3, r2
 5991 00f0 1A68     		ldr	r2, [r3]	@ float
 5992              		.loc 14 539 31
 5993 00f2 FB68     		ldr	r3, [r7, #12]
 5994 00f4 03F50043 		add	r3, r3, #32768
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 134


 5995 00f8 03F5DA63 		add	r3, r3, #1744
 5996 00fc 1A60     		str	r2, [r3]	@ float
 540:GrannyChordApp.cpp ****       sd_writer_.Sample(temp_interleaved_buf_);
 5997              		.loc 14 540 24
 5998 00fe FB68     		ldr	r3, [r7, #12]
 5999 0100 03F24440 		addw	r0, r3, #1092
 6000              		.loc 14 540 25
 6001 0104 FA68     		ldr	r2, [r7, #12]
 6002 0106 48F2CC63 		movw	r3, #34508
 6003 010a 1344     		add	r3, r3, r2
 6004              		.loc 14 540 24
 6005 010c 1946     		mov	r1, r3
 6006 010e FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE6SampleEPKf
 6007              	.L311:
 541:GrannyChordApp.cpp ****     }
 542:GrannyChordApp.cpp ****   loadmeter.OnBlockEnd();
 6008              		.loc 14 542 23 discriminator 2
 6009 0112 FB68     		ldr	r3, [r7, #12]
 6010 0114 1846     		mov	r0, r3
 6011 0116 FFF7FEFF 		bl	_ZN5daisy12CpuLoadMeter10OnBlockEndEv
 6012              	.LBE27:
 522:GrannyChordApp.cpp ****   loadmeter.OnBlockStart();
 6013              		.loc 14 522 3 discriminator 2
 6014 011a 7B6A     		ldr	r3, [r7, #36]
 6015 011c 0133     		adds	r3, r3, #1
 6016 011e 7B62     		str	r3, [r7, #36]
 6017 0120 76E7     		b	.L312
 6018              	.L314:
 6019              	.LBE26:
 543:GrannyChordApp.cpp ****   }
 544:GrannyChordApp.cpp **** }
 6020              		.loc 14 544 1
 6021 0122 00BF     		nop
 6022 0124 2837     		adds	r7, r7, #40
 6023              		.cfi_def_cfa_offset 8
 6024 0126 BD46     		mov	sp, r7
 6025              		.cfi_def_cfa_register 13
 6026              		@ sp needed
 6027 0128 80BD     		pop	{r7, pc}
 6028              	.L316:
 6029 012a 00BF     		.align	2
 6030              	.L315:
 6031 012c 0000F042 		.word	1123024896
 6032              		.cfi_endproc
 6033              	.LFE4942:
 6035              		.section	.text._ZN14GrannyChordApp9ProcessFXE6Sample,"ax",%progbits
 6036              		.align	1
 6037              		.global	_ZN14GrannyChordApp9ProcessFXE6Sample
 6038              		.syntax unified
 6039              		.thumb
 6040              		.thumb_func
 6042              	_ZN14GrannyChordApp9ProcessFXE6Sample:
 6043              	.LFB4943:
 545:GrannyChordApp.cpp **** 
 546:GrannyChordApp.cpp **** Sample GrannyChordApp::ProcessFX(Sample in){
 6044              		.loc 14 546 44
 6045              		.cfi_startproc
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 135


 6046              		@ args = 0, pretend = 0, frame = 40
 6047              		@ frame_needed = 1, uses_anonymous_args = 0
 6048 0000 90B5     		push	{r4, r7, lr}
 6049              		.cfi_def_cfa_offset 12
 6050              		.cfi_offset 4, -12
 6051              		.cfi_offset 7, -8
 6052              		.cfi_offset 14, -4
 6053 0002 8DB0     		sub	sp, sp, #52
 6054              		.cfi_def_cfa_offset 64
 6055 0004 02AF     		add	r7, sp, #8
 6056              		.cfi_def_cfa 7, 56
 6057 0006 7861     		str	r0, [r7, #20]
 6058 0008 B0EE407A 		vmov.f32	s14, s0
 6059 000c F0EE607A 		vmov.f32	s15, s1
 6060 0010 87ED037A 		vstr.32	s14, [r7, #12]
 6061 0014 C7ED047A 		vstr.32	s15, [r7, #16]
 547:GrannyChordApp.cpp ****   Sample out;
 548:GrannyChordApp.cpp ****   /* hipass: remove rumble */
 549:GrannyChordApp.cpp ****   out.left = hipass_.Process(in.left);
 6062              		.loc 14 549 29
 6063 0018 7B69     		ldr	r3, [r7, #20]
 6064 001a 03F54573 		add	r3, r3, #788
 6065 001e D7ED037A 		vldr.32	s15, [r7, #12]
 6066 0022 B0EE670A 		vmov.f32	s0, s15
 6067 0026 1846     		mov	r0, r3
 6068 0028 FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 6069 002c F0EE407A 		vmov.f32	s15, s0
 6070              		.loc 14 549 12
 6071 0030 C7ED067A 		vstr.32	s15, [r7, #24]
 550:GrannyChordApp.cpp ****   out.right = hipass_.Process(in.right);
 6072              		.loc 14 550 30
 6073 0034 7B69     		ldr	r3, [r7, #20]
 6074 0036 03F54573 		add	r3, r3, #788
 6075 003a D7ED047A 		vldr.32	s15, [r7, #16]
 6076 003e B0EE670A 		vmov.f32	s0, s15
 6077 0042 1846     		mov	r0, r3
 6078 0044 FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 6079 0048 F0EE407A 		vmov.f32	s15, s0
 6080              		.loc 14 550 13
 6081 004c C7ED077A 		vstr.32	s15, [r7, #28]
 551:GrannyChordApp.cpp **** 
 552:GrannyChordApp.cpp ****   // /* apply compression to reduce gain changes */
 553:GrannyChordApp.cpp ****   // out.left = comp_.Process(out.left);
 554:GrannyChordApp.cpp ****   // out.right = comp_.Process(out.right);
 555:GrannyChordApp.cpp **** 
 556:GrannyChordApp.cpp ****   /* apply lowpass filter */
 557:GrannyChordApp.cpp ****   out.left = lowpass_moog_.Process(out.left);
 6082              		.loc 14 557 35
 6083 0050 7B69     		ldr	r3, [r7, #20]
 6084 0052 03F53473 		add	r3, r3, #720
 6085 0056 D7ED067A 		vldr.32	s15, [r7, #24]
 6086 005a B0EE670A 		vmov.f32	s0, s15
 6087 005e 1846     		mov	r0, r3
 6088 0060 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7ProcessEf
 6089 0064 F0EE407A 		vmov.f32	s15, s0
 6090              		.loc 14 557 12
 6091 0068 C7ED067A 		vstr.32	s15, [r7, #24]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 136


 558:GrannyChordApp.cpp ****   out.right = lowpass_moog_.Process(out.right);
 6092              		.loc 14 558 36
 6093 006c 7B69     		ldr	r3, [r7, #20]
 6094 006e 03F53473 		add	r3, r3, #720
 6095 0072 D7ED077A 		vldr.32	s15, [r7, #28]
 6096 0076 B0EE670A 		vmov.f32	s0, s15
 6097 007a 1846     		mov	r0, r3
 6098 007c FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7ProcessEf
 6099 0080 F0EE407A 		vmov.f32	s15, s0
 6100              		.loc 14 558 13
 6101 0084 C7ED077A 		vstr.32	s15, [r7, #28]
 559:GrannyChordApp.cpp **** 
 560:GrannyChordApp.cpp ****   /* apply stereo rotation */
 561:GrannyChordApp.cpp ****   out = rotator_.ProcessMix(out);
 6102              		.loc 14 561 32
 6103 0088 7B69     		ldr	r3, [r7, #20]
 6104 008a 03F54973 		add	r3, r3, #804
 6105 008e 97ED067A 		vldr.32	s14, [r7, #24]
 6106 0092 D7ED077A 		vldr.32	s15, [r7, #28]
 6107 0096 B0EE470A 		vmov.f32	s0, s14
 6108 009a F0EE670A 		vmov.f32	s1, s15
 6109 009e 1846     		mov	r0, r3
 6110 00a0 FFF7FEFF 		bl	_ZN13StereoRotator10ProcessMixE6Sample
 6111 00a4 B0EE407A 		vmov.f32	s14, s0
 6112 00a8 F0EE607A 		vmov.f32	s15, s1
 6113 00ac 87ED067A 		vstr.32	s14, [r7, #24]
 6114 00b0 C7ED077A 		vstr.32	s15, [r7, #28]
 562:GrannyChordApp.cpp **** 
 563:GrannyChordApp.cpp ****   /* apply reverb */
 564:GrannyChordApp.cpp ****   reverb_.ProcessMix(out.left, out.right, &out.left, &out.right);
 6115              		.loc 14 564 3
 6116 00b4 7B69     		ldr	r3, [r7, #20]
 6117 00b6 D3F8CC02 		ldr	r0, [r3, #716]
 6118              		.loc 14 564 21
 6119 00ba 07F11804 		add	r4, r7, #24
 6120 00be 07F11803 		add	r3, r7, #24
 6121 00c2 1A1D     		adds	r2, r3, #4
 6122 00c4 07F11801 		add	r1, r7, #24
 6123 00c8 07F11803 		add	r3, r7, #24
 6124 00cc 0433     		adds	r3, r3, #4
 6125 00ce 0093     		str	r3, [sp]
 6126 00d0 2346     		mov	r3, r4
 6127 00d2 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc10ProcessMixERKfS2_PfS3_
 565:GrannyChordApp.cpp **** 
 566:GrannyChordApp.cpp ****   out.left = hicut_.Process(out.left);
 6128              		.loc 14 566 28
 6129 00d6 7B69     		ldr	r3, [r7, #20]
 6130 00d8 03F54C73 		add	r3, r3, #816
 6131 00dc D7ED067A 		vldr.32	s15, [r7, #24]
 6132 00e0 B0EE670A 		vmov.f32	s0, s15
 6133 00e4 1846     		mov	r0, r3
 6134 00e6 FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 6135 00ea F0EE407A 		vmov.f32	s15, s0
 6136              		.loc 14 566 12
 6137 00ee C7ED067A 		vstr.32	s15, [r7, #24]
 567:GrannyChordApp.cpp ****   out.right = hicut_.Process(out.right);
 6138              		.loc 14 567 29
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 137


 6139 00f2 7B69     		ldr	r3, [r7, #20]
 6140 00f4 03F54C73 		add	r3, r3, #816
 6141 00f8 D7ED077A 		vldr.32	s15, [r7, #28]
 6142 00fc B0EE670A 		vmov.f32	s0, s15
 6143 0100 1846     		mov	r0, r3
 6144 0102 FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 6145 0106 F0EE407A 		vmov.f32	s15, s0
 6146              		.loc 14 567 13
 6147 010a C7ED077A 		vstr.32	s15, [r7, #28]
 568:GrannyChordApp.cpp ****   return out;
 6148              		.loc 14 568 10
 6149 010e 07F12003 		add	r3, r7, #32
 6150 0112 07F11802 		add	r2, r7, #24
 6151 0116 92E80300 		ldm	r2, {r0, r1}
 6152 011a 83E80300 		stm	r3, {r0, r1}
 6153 011e 3A6A     		ldr	r2, [r7, #32]	@ float
 6154 0120 7B6A     		ldr	r3, [r7, #36]	@ float
 6155 0122 07EE102A 		vmov	s14, r2
 6156 0126 07EE903A 		vmov	s15, r3
 569:GrannyChordApp.cpp **** }
 6157              		.loc 14 569 1
 6158 012a B0EE470A 		vmov.f32	s0, s14
 6159 012e F0EE670A 		vmov.f32	s1, s15
 6160 0132 2C37     		adds	r7, r7, #44
 6161              		.cfi_def_cfa_offset 12
 6162 0134 BD46     		mov	sp, r7
 6163              		.cfi_def_cfa_register 13
 6164              		@ sp needed
 6165 0136 90BD     		pop	{r4, r7, pc}
 6166              		.cfi_endproc
 6167              	.LFE4943:
 6169              		.section	.rodata
 6170              		.align	2
 6171              	.LC17:
 6172 0158 7265636F 		.ascii	"recording_%d\000"
 6172      7264696E 
 6172      675F2564 
 6172      00
 6173              		.section	.text._ZN14GrannyChordApp13RecordOutToSDEv,"ax",%progbits
 6174              		.align	1
 6175              		.global	_ZN14GrannyChordApp13RecordOutToSDEv
 6176              		.syntax unified
 6177              		.thumb
 6178              		.thumb_func
 6180              	_ZN14GrannyChordApp13RecordOutToSDEv:
 6181              	.LFB4944:
 570:GrannyChordApp.cpp **** 
 571:GrannyChordApp.cpp **** /// @brief Process audio from chord mode and mix to output buffer
 572:GrannyChordApp.cpp **** /// @param out Output audio buffer
 573:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 574:GrannyChordApp.cpp **** // void GrannyChordApp::ProcessChordMode(AudioHandle::OutputBuffer out, size_t size){
 575:GrannyChordApp.cpp **** //   // if (UserTriggeredChord()) {
 576:GrannyChordApp.cpp **** //   //   synth_.TriggerChord(out[0], out[1], size);
 577:GrannyChordApp.cpp **** //   // } else {
 578:GrannyChordApp.cpp **** //   //     std::memset(out[0], 0, size * sizeof(float));
 579:GrannyChordApp.cpp **** //   //     std::memset(out[1], 0, size * sizeof(float));
 580:GrannyChordApp.cpp **** //   // }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 138


 581:GrannyChordApp.cpp **** // }
 582:GrannyChordApp.cpp **** 
 583:GrannyChordApp.cpp **** /// @brief Record granular synth or chord output audio to SD card
 584:GrannyChordApp.cpp **** /// @param out Output audio buffer
 585:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 586:GrannyChordApp.cpp **** void GrannyChordApp::RecordOutToSD(){
 6182              		.loc 14 586 37
 6183              		.cfi_startproc
 6184              		@ args = 0, pretend = 0, frame = 40
 6185              		@ frame_needed = 1, uses_anonymous_args = 0
 6186 0000 80B5     		push	{r7, lr}
 6187              		.cfi_def_cfa_offset 8
 6188              		.cfi_offset 7, -8
 6189              		.cfi_offset 14, -4
 6190 0002 8AB0     		sub	sp, sp, #40
 6191              		.cfi_def_cfa_offset 48
 6192 0004 00AF     		add	r7, sp, #0
 6193              		.cfi_def_cfa_register 7
 6194 0006 7860     		str	r0, [r7, #4]
 587:GrannyChordApp.cpp ****   InitWavWriter();
 6195              		.loc 14 587 16
 6196 0008 7868     		ldr	r0, [r7, #4]
 6197 000a FFF7FEFF 		bl	_ZN14GrannyChordApp13InitWavWriterEv
 588:GrannyChordApp.cpp ****   char name[32];
 589:GrannyChordApp.cpp ****   sprintf(name,"recording_%d",recording_count_);
 6198              		.loc 14 589 10
 6199 000e 7B68     		ldr	r3, [r7, #4]
 6200 0010 03F50043 		add	r3, r3, #32768
 6201 0014 D3F8C426 		ldr	r2, [r3, #1732]
 6202 0018 07F10803 		add	r3, r7, #8
 6203 001c 1049     		ldr	r1, .L320
 6204 001e 1846     		mov	r0, r3
 6205 0020 FFF7FEFF 		bl	sprintf
 590:GrannyChordApp.cpp ****   recording_count_++;
 6206              		.loc 14 590 3
 6207 0024 7B68     		ldr	r3, [r7, #4]
 6208 0026 03F50043 		add	r3, r3, #32768
 6209 002a D3F8C436 		ldr	r3, [r3, #1732]
 6210              		.loc 14 590 19
 6211 002e 0133     		adds	r3, r3, #1
 6212 0030 7A68     		ldr	r2, [r7, #4]
 6213 0032 02F50042 		add	r2, r2, #32768
 6214 0036 C2F8C436 		str	r3, [r2, #1732]
 591:GrannyChordApp.cpp ****   sd_writer_.OpenFile(name);
 6215              		.loc 14 591 22
 6216 003a 7B68     		ldr	r3, [r7, #4]
 6217 003c 03F24443 		addw	r3, r3, #1092
 6218 0040 07F10802 		add	r2, r7, #8
 6219 0044 1146     		mov	r1, r2
 6220 0046 1846     		mov	r0, r3
 6221 0048 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE8OpenFileEPKc
 592:GrannyChordApp.cpp ****   recording_out_ = true;
 6222              		.loc 14 592 18
 6223 004c 7B68     		ldr	r3, [r7, #4]
 6224 004e 03F50043 		add	r3, r3, #32768
 6225 0052 0122     		movs	r2, #1
 6226 0054 83F8C026 		strb	r2, [r3, #1728]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 139


 593:GrannyChordApp.cpp **** }
 6227              		.loc 14 593 1
 6228 0058 00BF     		nop
 6229 005a 2837     		adds	r7, r7, #40
 6230              		.cfi_def_cfa_offset 8
 6231 005c BD46     		mov	sp, r7
 6232              		.cfi_def_cfa_register 13
 6233              		@ sp needed
 6234 005e 80BD     		pop	{r7, pc}
 6235              	.L321:
 6236              		.align	2
 6237              	.L320:
 6238 0060 58010000 		.word	.LC17
 6239              		.cfi_endproc
 6240              	.LFE4944:
 6242              		.section	.text._ZN14GrannyChordApp15FinishRecordingEv,"ax",%progbits
 6243              		.align	1
 6244              		.global	_ZN14GrannyChordApp15FinishRecordingEv
 6245              		.syntax unified
 6246              		.thumb
 6247              		.thumb_func
 6249              	_ZN14GrannyChordApp15FinishRecordingEv:
 6250              	.LFB4945:
 594:GrannyChordApp.cpp **** 
 595:GrannyChordApp.cpp **** /// @brief cleans up after recording to SD card is finished
 596:GrannyChordApp.cpp **** void GrannyChordApp::FinishRecording(){
 6251              		.loc 14 596 39
 6252              		.cfi_startproc
 6253              		@ args = 0, pretend = 0, frame = 8
 6254              		@ frame_needed = 1, uses_anonymous_args = 0
 6255 0000 80B5     		push	{r7, lr}
 6256              		.cfi_def_cfa_offset 8
 6257              		.cfi_offset 7, -8
 6258              		.cfi_offset 14, -4
 6259 0002 82B0     		sub	sp, sp, #8
 6260              		.cfi_def_cfa_offset 16
 6261 0004 00AF     		add	r7, sp, #0
 6262              		.cfi_def_cfa_register 7
 6263 0006 7860     		str	r0, [r7, #4]
 597:GrannyChordApp.cpp ****   sd_writer_.SaveFile();
 6264              		.loc 14 597 22
 6265 0008 7B68     		ldr	r3, [r7, #4]
 6266 000a 03F24443 		addw	r3, r3, #1092
 6267 000e 1846     		mov	r0, r3
 6268 0010 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE8SaveFileEv
 598:GrannyChordApp.cpp ****   recording_out_=false;
 6269              		.loc 14 598 17
 6270 0014 7B68     		ldr	r3, [r7, #4]
 6271 0016 03F50043 		add	r3, r3, #32768
 6272 001a 0022     		movs	r2, #0
 6273 001c 83F8C026 		strb	r2, [r3, #1728]
 599:GrannyChordApp.cpp **** }
 6274              		.loc 14 599 1
 6275 0020 00BF     		nop
 6276 0022 0837     		adds	r7, r7, #8
 6277              		.cfi_def_cfa_offset 8
 6278 0024 BD46     		mov	sp, r7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 140


 6279              		.cfi_def_cfa_register 13
 6280              		@ sp needed
 6281 0026 80BD     		pop	{r7, pc}
 6282              		.cfi_endproc
 6283              	.LFE4945:
 6285              		.section	.text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode,"ax",%progbits
 6286              		.align	1
 6287              		.global	_ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode
 6288              		.syntax unified
 6289              		.thumb
 6290              		.thumb_func
 6292              	_ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:
 6293              	.LFB4946:
 600:GrannyChordApp.cpp **** 
 601:GrannyChordApp.cpp **** /// @brief Updates synth parameters from hardware knob 1 input
 602:GrannyChordApp.cpp **** /// @param knob1_val float between 0-1 from knob input
 603:GrannyChordApp.cpp **** /// @param mode current synth mode that determines which parameters to update
 604:GrannyChordApp.cpp **** void GrannyChordApp::UpdateKnob1Params(float knob1_val, SynthMode mode){
 6294              		.loc 14 604 72
 6295              		.cfi_startproc
 6296              		@ args = 0, pretend = 0, frame = 16
 6297              		@ frame_needed = 1, uses_anonymous_args = 0
 6298 0000 80B5     		push	{r7, lr}
 6299              		.cfi_def_cfa_offset 8
 6300              		.cfi_offset 7, -8
 6301              		.cfi_offset 14, -4
 6302 0002 84B0     		sub	sp, sp, #16
 6303              		.cfi_def_cfa_offset 24
 6304 0004 00AF     		add	r7, sp, #0
 6305              		.cfi_def_cfa_register 7
 6306 0006 F860     		str	r0, [r7, #12]
 6307 0008 87ED020A 		vstr.32	s0, [r7, #8]
 6308 000c 7960     		str	r1, [r7, #4]
 605:GrannyChordApp.cpp ****   switch (mode){
 6309              		.loc 14 605 3
 6310 000e 7B68     		ldr	r3, [r7, #4]
 6311 0010 062B     		cmp	r3, #6
 6312 0012 68D8     		bhi	.L323
 6313 0014 01A2     		adr	r2, .L326
 6314 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6315 001a 00BF     		.p2align 2
 6316              	.L326:
 6317 001c 39000000 		.word	.L332+1
 6318 0020 4D000000 		.word	.L331+1
 6319 0024 61000000 		.word	.L330+1
 6320 0028 75000000 		.word	.L329+1
 6321 002c 89000000 		.word	.L328+1
 6322 0030 9F000000 		.word	.L327+1
 6323 0034 B3000000 		.word	.L325+1
 6324              		.p2align 1
 6325              	.L332:
 606:GrannyChordApp.cpp ****     case SynthMode::Size_Position:
 607:GrannyChordApp.cpp ****       synth_.SetGrainSize(knob1_val);
 6326              		.loc 14 607 26
 6327 0038 FB68     		ldr	r3, [r7, #12]
 6328 003a 2033     		adds	r3, r3, #32
 6329 003c D7ED027A 		vldr.32	s15, [r7, #8]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 141


 6330 0040 B0EE670A 		vmov.f32	s0, s15
 6331 0044 1846     		mov	r0, r3
 6332 0046 FFF7FEFF 		bl	_ZN13GranularSynth12SetGrainSizeEf
 608:GrannyChordApp.cpp ****       return;
 6333              		.loc 14 608 7
 6334 004a 4CE0     		b	.L323
 6335              	.L331:
 609:GrannyChordApp.cpp ****     case SynthMode::Pitch_ActiveGrains:
 610:GrannyChordApp.cpp ****       synth_.SetPitchRatio(knob1_val);
 6336              		.loc 14 610 27
 6337 004c FB68     		ldr	r3, [r7, #12]
 6338 004e 2033     		adds	r3, r3, #32
 6339 0050 D7ED027A 		vldr.32	s15, [r7, #8]
 6340 0054 B0EE670A 		vmov.f32	s0, s15
 6341 0058 1846     		mov	r0, r3
 6342 005a FFF7FEFF 		bl	_ZN13GranularSynth13SetPitchRatioEf
 611:GrannyChordApp.cpp ****       return;
 6343              		.loc 14 611 7
 6344 005e 42E0     		b	.L323
 6345              	.L330:
 612:GrannyChordApp.cpp ****     case SynthMode::Pan_Direction:
 613:GrannyChordApp.cpp ****       synth_.SetPan(knob1_val);
 6346              		.loc 14 613 20
 6347 0060 FB68     		ldr	r3, [r7, #12]
 6348 0062 2033     		adds	r3, r3, #32
 6349 0064 D7ED027A 		vldr.32	s15, [r7, #8]
 6350 0068 B0EE670A 		vmov.f32	s0, s15
 6351 006c 1846     		mov	r0, r3
 6352 006e FFF7FEFF 		bl	_ZN13GranularSynth6SetPanEf
 614:GrannyChordApp.cpp ****       return;
 6353              		.loc 14 614 7
 6354 0072 38E0     		b	.L323
 6355              	.L329:
 615:GrannyChordApp.cpp ****     case SynthMode::RndAmount_RndFreq:
 616:GrannyChordApp.cpp ****       synth_.SetRndAmount(knob1_val);
 6356              		.loc 14 616 26
 6357 0074 FB68     		ldr	r3, [r7, #12]
 6358 0076 2033     		adds	r3, r3, #32
 6359 0078 D7ED027A 		vldr.32	s15, [r7, #8]
 6360 007c B0EE670A 		vmov.f32	s0, s15
 6361 0080 1846     		mov	r0, r3
 6362 0082 FFF7FEFF 		bl	_ZN13GranularSynth12SetRndAmountEf
 617:GrannyChordApp.cpp ****       break;
 6363              		.loc 14 617 7
 6364 0086 2EE0     		b	.L323
 6365              	.L328:
 618:GrannyChordApp.cpp ****     case SynthMode::StereoRotate:
 619:GrannyChordApp.cpp ****       rotator_.SetFreq(knob1_val);
 6366              		.loc 14 619 23
 6367 0088 FB68     		ldr	r3, [r7, #12]
 6368 008a 03F54973 		add	r3, r3, #804
 6369 008e D7ED027A 		vldr.32	s15, [r7, #8]
 6370 0092 B0EE670A 		vmov.f32	s0, s15
 6371 0096 1846     		mov	r0, r3
 6372 0098 FFF7FEFF 		bl	_ZN13StereoRotator7SetFreqEf
 620:GrannyChordApp.cpp ****       return;
 6373              		.loc 14 620 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 142


 6374 009c 23E0     		b	.L323
 6375              	.L327:
 621:GrannyChordApp.cpp ****     case SynthMode::Reverb:
 622:GrannyChordApp.cpp ****        /* set reverb feedback ie tail length */
 623:GrannyChordApp.cpp ****       reverb_.SetFeedback(knob1_val);
 6376              		.loc 14 623 7
 6377 009e FB68     		ldr	r3, [r7, #12]
 6378 00a0 D3F8CC32 		ldr	r3, [r3, #716]
 6379              		.loc 14 623 26
 6380 00a4 07F10802 		add	r2, r7, #8
 6381 00a8 1146     		mov	r1, r2
 6382 00aa 1846     		mov	r0, r3
 6383 00ac FFF7FEFF 		bl	_ZN7daisysp8ReverbSc11SetFeedbackERKf
 624:GrannyChordApp.cpp ****       return;
 6384              		.loc 14 624 7
 6385 00b0 19E0     		b	.L323
 6386              	.L325:
 625:GrannyChordApp.cpp ****     case SynthMode::Filter:
 626:GrannyChordApp.cpp ****       /* map knob value to frequency range with an exponential curve */
 627:GrannyChordApp.cpp ****       knob1_val = fmap(knob1_val, LOPASS_LOWER_BOUND, LOPASS_UPPER_BOUND, daisysp::Mapping::EXP);
 6387              		.loc 14 627 23
 6388 00b2 D7ED027A 		vldr.32	s15, [r7, #8]
 6389 00b6 0120     		movs	r0, #1
 6390 00b8 9FED0C1A 		vldr.32	s2, .L333
 6391 00bc F3EE040A 		vmov.f32	s1, #2.0e+1
 6392 00c0 B0EE670A 		vmov.f32	s0, s15
 6393 00c4 FFF7FEFF 		bl	_ZN7daisysp4fmapEfffNS_7MappingE
 6394 00c8 F0EE407A 		vmov.f32	s15, s0
 6395              		.loc 14 627 17
 6396 00cc C7ED027A 		vstr.32	s15, [r7, #8]
 628:GrannyChordApp.cpp ****       /* set cutoff frequency of low pass moog filter */
 629:GrannyChordApp.cpp ****       lowpass_moog_.SetFreq(knob1_val);
 6397              		.loc 14 629 28
 6398 00d0 FB68     		ldr	r3, [r7, #12]
 6399 00d2 03F53473 		add	r3, r3, #720
 6400 00d6 D7ED027A 		vldr.32	s15, [r7, #8]
 6401 00da B0EE670A 		vmov.f32	s0, s15
 6402 00de 1846     		mov	r0, r3
 6403 00e0 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7SetFreqEf
 630:GrannyChordApp.cpp ****       return;
 6404              		.loc 14 630 7
 6405 00e4 00BF     		nop
 6406              	.L323:
 631:GrannyChordApp.cpp ****   }
 632:GrannyChordApp.cpp **** }
 6407              		.loc 14 632 1
 6408 00e6 1037     		adds	r7, r7, #16
 6409              		.cfi_def_cfa_offset 8
 6410 00e8 BD46     		mov	sp, r7
 6411              		.cfi_def_cfa_register 13
 6412              		@ sp needed
 6413 00ea 80BD     		pop	{r7, pc}
 6414              	.L334:
 6415              		.align	2
 6416              	.L333:
 6417 00ec 00A08C46 		.word	1183621120
 6418              		.cfi_endproc
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 143


 6419              	.LFE4946:
 6421              		.section	.text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode,"ax",%progbits
 6422              		.align	1
 6423              		.global	_ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode
 6424              		.syntax unified
 6425              		.thumb
 6426              		.thumb_func
 6428              	_ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:
 6429              	.LFB4947:
 633:GrannyChordApp.cpp **** 
 634:GrannyChordApp.cpp **** /// @brief Updates synth parameters from hardware knob 2 input
 635:GrannyChordApp.cpp **** /// @param knob1_val float between 0-1 from knob input
 636:GrannyChordApp.cpp **** /// @param mode current synth mode that determines which parameters to update
 637:GrannyChordApp.cpp **** void GrannyChordApp::UpdateKnob2Params(float knob2_val, SynthMode mode){
 6430              		.loc 14 637 72
 6431              		.cfi_startproc
 6432              		@ args = 0, pretend = 0, frame = 16
 6433              		@ frame_needed = 1, uses_anonymous_args = 0
 6434 0000 80B5     		push	{r7, lr}
 6435              		.cfi_def_cfa_offset 8
 6436              		.cfi_offset 7, -8
 6437              		.cfi_offset 14, -4
 6438 0002 84B0     		sub	sp, sp, #16
 6439              		.cfi_def_cfa_offset 24
 6440 0004 00AF     		add	r7, sp, #0
 6441              		.cfi_def_cfa_register 7
 6442 0006 F860     		str	r0, [r7, #12]
 6443 0008 87ED020A 		vstr.32	s0, [r7, #8]
 6444 000c 7960     		str	r1, [r7, #4]
 638:GrannyChordApp.cpp ****   switch (mode){
 6445              		.loc 14 638 3
 6446 000e 7B68     		ldr	r3, [r7, #4]
 6447 0010 062B     		cmp	r3, #6
 6448 0012 3FD8     		bhi	.L335
 6449 0014 01A2     		adr	r2, .L338
 6450 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6451 001a 00BF     		.p2align 2
 6452              	.L338:
 6453 001c 39000000 		.word	.L344+1
 6454 0020 95000000 		.word	.L335+1
 6455 0024 95000000 		.word	.L335+1
 6456 0028 95000000 		.word	.L335+1
 6457 002c 49000000 		.word	.L340+1
 6458 0030 5B000000 		.word	.L339+1
 6459 0034 6D000000 		.word	.L337+1
 6460              		.p2align 1
 6461              	.L344:
 639:GrannyChordApp.cpp ****     case SynthMode::Size_Position:
 640:GrannyChordApp.cpp ****       synth_.SetSpawnPos(knob2_val);
 6462              		.loc 14 640 25
 6463 0038 FB68     		ldr	r3, [r7, #12]
 6464 003a 2033     		adds	r3, r3, #32
 6465 003c 97ED020A 		vldr.32	s0, [r7, #8]
 6466 0040 1846     		mov	r0, r3
 6467 0042 FFF7FEFF 		bl	_ZN13GranularSynth11SetSpawnPosEf
 641:GrannyChordApp.cpp ****       return;
 6468              		.loc 14 641 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 144


 6469 0046 25E0     		b	.L335
 6470              	.L340:
 642:GrannyChordApp.cpp ****     case SynthMode::Pitch_ActiveGrains:
 643:GrannyChordApp.cpp ****       // synth_.SetActiveGrains(knob2_val);
 644:GrannyChordApp.cpp ****       // synth_.SetTargetActiveGrains(knob2_val);
 645:GrannyChordApp.cpp ****       return;
 646:GrannyChordApp.cpp ****     case SynthMode::Pan_Direction:
 647:GrannyChordApp.cpp ****       // synth_.SetDirection(knob2_val);
 648:GrannyChordApp.cpp ****       return;
 649:GrannyChordApp.cpp ****     case SynthMode::RndAmount_RndFreq:
 650:GrannyChordApp.cpp ****       // synth_.SetRndBias(knob2_val);
 651:GrannyChordApp.cpp ****       break;
 652:GrannyChordApp.cpp ****     case SynthMode::StereoRotate:
 653:GrannyChordApp.cpp ****       rotator_.SetMix(knob2_val);
 6471              		.loc 14 653 22
 6472 0048 FB68     		ldr	r3, [r7, #12]
 6473 004a 03F54973 		add	r3, r3, #804
 6474 004e 97ED020A 		vldr.32	s0, [r7, #8]
 6475 0052 1846     		mov	r0, r3
 6476 0054 FFF7FEFF 		bl	_ZN13StereoRotator6SetMixEf
 654:GrannyChordApp.cpp ****       return;
 6477              		.loc 14 654 7
 6478 0058 1CE0     		b	.L335
 6479              	.L339:
 655:GrannyChordApp.cpp ****     case SynthMode::Reverb:
 656:GrannyChordApp.cpp ****         reverb_.SetMix(knob2_val);
 6480              		.loc 14 656 9
 6481 005a FB68     		ldr	r3, [r7, #12]
 6482 005c D3F8CC32 		ldr	r3, [r3, #716]
 6483              		.loc 14 656 23
 6484 0060 97ED020A 		vldr.32	s0, [r7, #8]
 6485 0064 1846     		mov	r0, r3
 6486 0066 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc6SetMixEf
 657:GrannyChordApp.cpp ****         return;
 6487              		.loc 14 657 9
 6488 006a 13E0     		b	.L335
 6489              	.L337:
 658:GrannyChordApp.cpp ****     case SynthMode::Filter:
 659:GrannyChordApp.cpp ****       /* map knob value to frequency range with linear curve */
 660:GrannyChordApp.cpp ****       knob2_val = fmap(knob2_val, HIPASS_LOWER_BOUND, HIPASS_UPPER_BOUND, daisysp::Mapping::EXP);
 6490              		.loc 14 660 23
 6491 006c 0120     		movs	r0, #1
 6492 006e 9FED0B1A 		vldr.32	s2, .L345
 6493 0072 DFED0B0A 		vldr.32	s1, .L345+4
 6494 0076 97ED020A 		vldr.32	s0, [r7, #8]
 6495 007a FFF7FEFF 		bl	_ZN7daisysp4fmapEfffNS_7MappingE
 6496 007e 87ED020A 		vstr.32	s0, [r7, #8]
 661:GrannyChordApp.cpp ****       /* set cutoff frequency for high pass filter */
 662:GrannyChordApp.cpp ****       hipass_.SetFrequency(knob2_val);
 6497              		.loc 14 662 27
 6498 0082 FB68     		ldr	r3, [r7, #12]
 6499 0084 03F54573 		add	r3, r3, #788
 6500 0088 97ED020A 		vldr.32	s0, [r7, #8]
 6501 008c 1846     		mov	r0, r3
 6502 008e FFF7FEFF 		bl	_ZN7daisysp7OnePole12SetFrequencyEf
 663:GrannyChordApp.cpp ****       return;
 6503              		.loc 14 663 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 145


 6504 0092 00BF     		nop
 6505              	.L335:
 664:GrannyChordApp.cpp ****   }
 665:GrannyChordApp.cpp **** }
 6506              		.loc 14 665 1
 6507 0094 1037     		adds	r7, r7, #16
 6508              		.cfi_def_cfa_offset 8
 6509 0096 BD46     		mov	sp, r7
 6510              		.cfi_def_cfa_register 13
 6511              		@ sp needed
 6512 0098 80BD     		pop	{r7, pc}
 6513              	.L346:
 6514 009a 00BF     		.align	2
 6515              	.L345:
 6516 009c 0AD7233C 		.word	1008981770
 6517 00a0 17B7D139 		.word	970045207
 6518              		.cfi_endproc
 6519              	.LFE4947:
 6521              		.section	.text._ZN14GrannyChordApp15MapKnobDeadzoneEf,"axG",%progbits,_ZN14GrannyChordApp15MapKnob
 6522              		.align	1
 6523              		.weak	_ZN14GrannyChordApp15MapKnobDeadzoneEf
 6524              		.syntax unified
 6525              		.thumb
 6526              		.thumb_func
 6528              	_ZN14GrannyChordApp15MapKnobDeadzoneEf:
 6529              	.LFB4948:
 666:GrannyChordApp.cpp **** 
 667:GrannyChordApp.cpp **** 
 668:GrannyChordApp.cpp **** 
 669:GrannyChordApp.cpp **** /*
 670:GrannyChordApp.cpp **** 
 671:GrannyChordApp.cpp **** encoder for strum??? nice clicks 
 672:GrannyChordApp.cpp **** knob1 pitch? 
 673:GrannyChordApp.cpp **** knob2 position?
 674:GrannyChordApp.cpp **** buttons chords? 
 675:GrannyChordApp.cpp **** click encoder for granular stuff
 676:GrannyChordApp.cpp **** 
 677:GrannyChordApp.cpp **** */
 678:GrannyChordApp.cpp **** 
 679:GrannyChordApp.cpp **** /* knobs on the Pod have deadzones around 0 and 1 so we adjust for this */
 680:GrannyChordApp.cpp **** inline float GrannyChordApp::MapKnobDeadzone(float knob_val ){
 6530              		.loc 14 680 62
 6531              		.cfi_startproc
 6532              		@ args = 0, pretend = 0, frame = 8
 6533              		@ frame_needed = 1, uses_anonymous_args = 0
 6534              		@ link register save eliminated.
 6535 0000 80B4     		push	{r7}
 6536              		.cfi_def_cfa_offset 4
 6537              		.cfi_offset 7, -4
 6538 0002 83B0     		sub	sp, sp, #12
 6539              		.cfi_def_cfa_offset 16
 6540 0004 00AF     		add	r7, sp, #0
 6541              		.cfi_def_cfa_register 7
 6542 0006 7860     		str	r0, [r7, #4]
 6543 0008 87ED000A 		vstr.32	s0, [r7]
 681:GrannyChordApp.cpp ****   if (knob_val<=0.01f) return 0.0f;
 6544              		.loc 14 681 3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 146


 6545 000c D7ED007A 		vldr.32	s15, [r7]
 6546 0010 9FED0F7A 		vldr.32	s14, .L357
 6547 0014 F4EEC77A 		vcmpe.f32	s15, s14
 6548 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6549 001c 02D8     		bhi	.L355
 6550              		.loc 14 681 31 discriminator 1
 6551 001e 4FF00003 		mov	r3, #0
 6552 0022 0CE0     		b	.L350
 6553              	.L355:
 682:GrannyChordApp.cpp ****   if (knob_val>=0.99f) return 1.0f;
 6554              		.loc 14 682 3
 6555 0024 D7ED007A 		vldr.32	s15, [r7]
 6556 0028 9FED0A7A 		vldr.32	s14, .L357+4
 6557 002c F4EEC77A 		vcmpe.f32	s15, s14
 6558 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6559 0034 02DB     		blt	.L356
 6560              		.loc 14 682 31 discriminator 1
 6561 0036 4FF07E53 		mov	r3, #1065353216
 6562 003a 00E0     		b	.L350
 6563              	.L356:
 683:GrannyChordApp.cpp ****   return knob_val;
 6564              		.loc 14 683 10
 6565 003c 3B68     		ldr	r3, [r7]	@ float
 6566              	.L350:
 684:GrannyChordApp.cpp **** }
 6567              		.loc 14 684 1
 6568 003e 07EE903A 		vmov	s15, r3
 6569 0042 B0EE670A 		vmov.f32	s0, s15
 6570 0046 0C37     		adds	r7, r7, #12
 6571              		.cfi_def_cfa_offset 4
 6572 0048 BD46     		mov	sp, r7
 6573              		.cfi_def_cfa_register 13
 6574              		@ sp needed
 6575 004a 5DF8047B 		ldr	r7, [sp], #4
 6576              		.cfi_restore 7
 6577              		.cfi_def_cfa_offset 0
 6578 004e 7047     		bx	lr
 6579              	.L358:
 6580              		.align	2
 6581              	.L357:
 6582 0050 0AD7233C 		.word	1008981770
 6583 0054 A4707D3F 		.word	1065185444
 6584              		.cfi_endproc
 6585              	.LFE4948:
 6587              		.section	.rodata
 6588 0165 000000   		.align	2
 6589              	.LC18:
 6590 0168 53746174 		.ascii	"State now in: SelectFile\000"
 6590      65206E6F 
 6590      7720696E 
 6590      3A205365 
 6590      6C656374 
 6591 0181 000000   		.align	2
 6592              	.LC19:
 6593 0184 53746174 		.ascii	"State now in: RecordIn\000"
 6593      65206E6F 
 6593      7720696E 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 147


 6593      3A205265 
 6593      636F7264 
 6594 019b 00       		.align	2
 6595              	.LC20:
 6596 019c 53746174 		.ascii	"State now in: PlayWAV\000"
 6596      65206E6F 
 6596      7720696E 
 6596      3A20506C 
 6596      61795741 
 6597 01b2 0000     		.align	2
 6598              	.LC21:
 6599 01b4 53746174 		.ascii	"State now in: Synthesis\000"
 6599      65206E6F 
 6599      7720696E 
 6599      3A205379 
 6599      6E746865 
 6600              		.align	2
 6601              	.LC22:
 6602 01cc 53746174 		.ascii	"State now in: Error\000"
 6602      65206E6F 
 6602      7720696E 
 6602      3A204572 
 6602      726F7200 
 6603              		.section	.text._ZN14GrannyChordApp15DebugPrintStateE8AppState,"ax",%progbits
 6604              		.align	1
 6605              		.global	_ZN14GrannyChordApp15DebugPrintStateE8AppState
 6606              		.syntax unified
 6607              		.thumb
 6608              		.thumb_func
 6610              	_ZN14GrannyChordApp15DebugPrintStateE8AppState:
 6611              	.LFB4950:
 685:GrannyChordApp.cpp **** 
 686:GrannyChordApp.cpp **** inline bool GrannyChordApp::UpdateKnobPassThru(bool *knob_latched, float curr_knob_val, float prev_
 687:GrannyChordApp.cpp ****   if ((*knob_latched)){
 688:GrannyChordApp.cpp ****     if (fabs(curr_knob_val - prev_param)<0.001){
 689:GrannyChordApp.cpp ****       (*knob_latched) = false;
 690:GrannyChordApp.cpp ****       DebugPrint(pod_, "unlatched knob");
 691:GrannyChordApp.cpp ****       return true;
 692:GrannyChordApp.cpp ****     }
 693:GrannyChordApp.cpp ****     else return false;
 694:GrannyChordApp.cpp ****   }
 695:GrannyChordApp.cpp ****   else return true;
 696:GrannyChordApp.cpp **** }
 697:GrannyChordApp.cpp **** 
 698:GrannyChordApp.cpp **** 
 699:GrannyChordApp.cpp **** 
 700:GrannyChordApp.cpp **** void GrannyChordApp::DebugPrintState(AppState state){
 6612              		.loc 14 700 53
 6613              		.cfi_startproc
 6614              		@ args = 0, pretend = 0, frame = 8
 6615              		@ frame_needed = 1, uses_anonymous_args = 0
 6616 0000 80B5     		push	{r7, lr}
 6617              		.cfi_def_cfa_offset 8
 6618              		.cfi_offset 7, -8
 6619              		.cfi_offset 14, -4
 6620 0002 82B0     		sub	sp, sp, #8
 6621              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 148


 6622 0004 00AF     		add	r7, sp, #0
 6623              		.cfi_def_cfa_register 7
 6624 0006 7860     		str	r0, [r7, #4]
 6625 0008 3960     		str	r1, [r7]
 701:GrannyChordApp.cpp ****   switch(state){
 6626              		.loc 14 701 3
 6627 000a 3B68     		ldr	r3, [r7]
 6628 000c 032B     		cmp	r3, #3
 6629 000e 1BD8     		bhi	.L360
 6630 0010 01A2     		adr	r2, .L362
 6631 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6632 0016 00BF     		.p2align 2
 6633              	.L362:
 6634 0018 29000000 		.word	.L365+1
 6635 001c 39000000 		.word	.L364+1
 6636 0020 41000000 		.word	.L363+1
 6637 0024 31000000 		.word	.L361+1
 6638              		.p2align 1
 6639              	.L365:
 702:GrannyChordApp.cpp ****     case AppState::SelectFile:
 703:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: SelectFile");
 6640              		.loc 14 703 7
 6641 0028 0B48     		ldr	r0, .L367
 6642 002a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 704:GrannyChordApp.cpp ****       return;
 6643              		.loc 14 704 7
 6644 002e 0FE0     		b	.L359
 6645              	.L361:
 705:GrannyChordApp.cpp ****     case AppState::RecordIn:
 706:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: RecordIn");
 6646              		.loc 14 706 7
 6647 0030 0A48     		ldr	r0, .L367+4
 6648 0032 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 707:GrannyChordApp.cpp ****       return;
 6649              		.loc 14 707 7
 6650 0036 0BE0     		b	.L359
 6651              	.L364:
 708:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 709:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: PlayWAV");
 6652              		.loc 14 709 7
 6653 0038 0948     		ldr	r0, .L367+8
 6654 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 710:GrannyChordApp.cpp ****       return;
 6655              		.loc 14 710 7
 6656 003e 07E0     		b	.L359
 6657              	.L363:
 711:GrannyChordApp.cpp ****     case AppState::Synthesis:
 712:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Synthesis");
 6658              		.loc 14 712 7
 6659 0040 0848     		ldr	r0, .L367+12
 6660 0042 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 713:GrannyChordApp.cpp ****       return;
 6661              		.loc 14 713 7
 6662 0046 03E0     		b	.L359
 6663              	.L360:
 714:GrannyChordApp.cpp ****     // case AppState::ChordMode:
 715:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: ChordMode");
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 149


 716:GrannyChordApp.cpp ****     case AppState::Error:
 717:GrannyChordApp.cpp ****     default:
 718:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Error");
 6664              		.loc 14 718 7
 6665 0048 0748     		ldr	r0, .L367+16
 6666 004a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 719:GrannyChordApp.cpp ****       return;
 6667              		.loc 14 719 7
 6668 004e 00BF     		nop
 6669              	.L359:
 720:GrannyChordApp.cpp ****   }
 721:GrannyChordApp.cpp **** };
 6670              		.loc 14 721 1
 6671 0050 0837     		adds	r7, r7, #8
 6672              		.cfi_def_cfa_offset 8
 6673 0052 BD46     		mov	sp, r7
 6674              		.cfi_def_cfa_register 13
 6675              		@ sp needed
 6676 0054 80BD     		pop	{r7, pc}
 6677              	.L368:
 6678 0056 00BF     		.align	2
 6679              	.L367:
 6680 0058 68010000 		.word	.LC18
 6681 005c 84010000 		.word	.LC19
 6682 0060 9C010000 		.word	.LC20
 6683 0064 B4010000 		.word	.LC21
 6684 0068 CC010000 		.word	.LC22
 6685              		.cfi_endproc
 6686              	.LFE4950:
 6688              		.section	.rodata
 6689              		.align	2
 6690              	.LC23:
 6691 01e0 53746174 		.ascii	"State now in: SizePos\000"
 6691      65206E6F 
 6691      7720696E 
 6691      3A205369 
 6691      7A65506F 
 6692 01f6 0000     		.align	2
 6693              	.LC24:
 6694 01f8 53746174 		.ascii	"State now in: PitchGrains\000"
 6694      65206E6F 
 6694      7720696E 
 6694      3A205069 
 6694      74636847 
 6695 0212 0000     		.align	2
 6696              	.LC25:
 6697 0214 53746174 		.ascii	"State now in: PanDirection\000"
 6697      65206E6F 
 6697      7720696E 
 6697      3A205061 
 6697      6E446972 
 6698 022f 00       		.align	2
 6699              	.LC26:
 6700 0230 53746174 		.ascii	"State now in: RndAmt/Freq\000"
 6700      65206E6F 
 6700      7720696E 
 6700      3A20526E 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 150


 6700      64416D74 
 6701 024a 0000     		.align	2
 6702              	.LC27:
 6703 024c 53746174 		.ascii	"State now in: StereoRotate\000"
 6703      65206E6F 
 6703      7720696E 
 6703      3A205374 
 6703      6572656F 
 6704 0267 00       		.align	2
 6705              	.LC28:
 6706 0268 53746174 		.ascii	"State now in: Reverb\000"
 6706      65206E6F 
 6706      7720696E 
 6706      3A205265 
 6706      76657262 
 6707 027d 000000   		.align	2
 6708              	.LC29:
 6709 0280 53746174 		.ascii	"State now in: Filter\000"
 6709      65206E6F 
 6709      7720696E 
 6709      3A204669 
 6709      6C746572 
 6710              		.section	.text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode,"ax",%progbits
 6711              		.align	1
 6712              		.global	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode
 6713              		.syntax unified
 6714              		.thumb
 6715              		.thumb_func
 6717              	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode:
 6718              	.LFB4951:
 722:GrannyChordApp.cpp **** 
 723:GrannyChordApp.cpp **** void GrannyChordApp::DebugPrintMode(SynthMode mode){
 6719              		.loc 14 723 52
 6720              		.cfi_startproc
 6721              		@ args = 0, pretend = 0, frame = 8
 6722              		@ frame_needed = 1, uses_anonymous_args = 0
 6723 0000 80B5     		push	{r7, lr}
 6724              		.cfi_def_cfa_offset 8
 6725              		.cfi_offset 7, -8
 6726              		.cfi_offset 14, -4
 6727 0002 82B0     		sub	sp, sp, #8
 6728              		.cfi_def_cfa_offset 16
 6729 0004 00AF     		add	r7, sp, #0
 6730              		.cfi_def_cfa_register 7
 6731 0006 7860     		str	r0, [r7, #4]
 6732 0008 3960     		str	r1, [r7]
 724:GrannyChordApp.cpp ****   switch(mode){
 6733              		.loc 14 724 3
 6734 000a 3B68     		ldr	r3, [r7]
 6735 000c 062B     		cmp	r3, #6
 6736 000e 2DD8     		bhi	.L369
 6737 0010 01A2     		adr	r2, .L372
 6738 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6739 0016 00BF     		.p2align 2
 6740              	.L372:
 6741 0018 35000000 		.word	.L378+1
 6742 001c 3D000000 		.word	.L377+1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 151


 6743 0020 45000000 		.word	.L376+1
 6744 0024 4D000000 		.word	.L375+1
 6745 0028 55000000 		.word	.L374+1
 6746 002c 5D000000 		.word	.L373+1
 6747 0030 65000000 		.word	.L371+1
 6748              		.p2align 1
 6749              	.L378:
 725:GrannyChordApp.cpp ****     case SynthMode::Size_Position:
 726:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: SizePos");
 6750              		.loc 14 726 7
 6751 0034 0F48     		ldr	r0, .L379
 6752 0036 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 727:GrannyChordApp.cpp ****       return;
 6753              		.loc 14 727 7
 6754 003a 17E0     		b	.L369
 6755              	.L377:
 728:GrannyChordApp.cpp ****     case SynthMode::Pitch_ActiveGrains:
 729:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: PitchGrains");
 6756              		.loc 14 729 7
 6757 003c 0E48     		ldr	r0, .L379+4
 6758 003e FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 730:GrannyChordApp.cpp ****       return;
 6759              		.loc 14 730 7
 6760 0042 13E0     		b	.L369
 6761              	.L376:
 731:GrannyChordApp.cpp ****     case SynthMode::Pan_Direction:
 732:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: PanDirection");
 6762              		.loc 14 732 7
 6763 0044 0D48     		ldr	r0, .L379+8
 6764 0046 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 733:GrannyChordApp.cpp ****       return;
 6765              		.loc 14 733 7
 6766 004a 0FE0     		b	.L369
 6767              	.L375:
 734:GrannyChordApp.cpp ****     case SynthMode::RndAmount_RndFreq:
 735:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: RndAmt/Freq");
 6768              		.loc 14 735 7
 6769 004c 0C48     		ldr	r0, .L379+12
 6770 004e FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 736:GrannyChordApp.cpp ****       return;
 6771              		.loc 14 736 7
 6772 0052 0BE0     		b	.L369
 6773              	.L374:
 737:GrannyChordApp.cpp ****     case SynthMode::StereoRotate:
 738:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: StereoRotate");
 6774              		.loc 14 738 7
 6775 0054 0B48     		ldr	r0, .L379+16
 6776 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 739:GrannyChordApp.cpp ****       return;
 6777              		.loc 14 739 7
 6778 005a 07E0     		b	.L369
 6779              	.L373:
 740:GrannyChordApp.cpp ****     case SynthMode::Reverb:
 741:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Reverb");
 6780              		.loc 14 741 7
 6781 005c 0A48     		ldr	r0, .L379+20
 6782 005e FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 152


 742:GrannyChordApp.cpp ****       return;
 6783              		.loc 14 742 7
 6784 0062 03E0     		b	.L369
 6785              	.L371:
 743:GrannyChordApp.cpp ****     case SynthMode::Filter:
 744:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Filter");
 6786              		.loc 14 744 7
 6787 0064 0948     		ldr	r0, .L379+24
 6788 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 745:GrannyChordApp.cpp ****       return;
 6789              		.loc 14 745 7
 6790 006a 00BF     		nop
 6791              	.L369:
 746:GrannyChordApp.cpp ****   }
 747:GrannyChordApp.cpp **** };
 6792              		.loc 14 747 1
 6793 006c 0837     		adds	r7, r7, #8
 6794              		.cfi_def_cfa_offset 8
 6795 006e BD46     		mov	sp, r7
 6796              		.cfi_def_cfa_register 13
 6797              		@ sp needed
 6798 0070 80BD     		pop	{r7, pc}
 6799              	.L380:
 6800 0072 00BF     		.align	2
 6801              	.L379:
 6802 0074 E0010000 		.word	.LC23
 6803 0078 F8010000 		.word	.LC24
 6804 007c 14020000 		.word	.LC25
 6805 0080 30020000 		.word	.LC26
 6806 0084 4C020000 		.word	.LC27
 6807 0088 68020000 		.word	.LC28
 6808 008c 80020000 		.word	.LC29
 6809              		.cfi_endproc
 6810              	.LFE4951:
 6812              		.section	.text._ZN14GrannyChordApp11InitColoursEv,"ax",%progbits
 6813              		.align	1
 6814              		.global	_ZN14GrannyChordApp11InitColoursEv
 6815              		.syntax unified
 6816              		.thumb
 6817              		.thumb_func
 6819              	_ZN14GrannyChordApp11InitColoursEv:
 6820              	.LFB4952:
 748:GrannyChordApp.cpp **** 
 749:GrannyChordApp.cpp **** void GrannyChordApp::InitColours(){
 6821              		.loc 14 749 35
 6822              		.cfi_startproc
 6823              		@ args = 0, pretend = 0, frame = 8
 6824              		@ frame_needed = 1, uses_anonymous_args = 0
 6825 0000 80B5     		push	{r7, lr}
 6826              		.cfi_def_cfa_offset 8
 6827              		.cfi_offset 7, -8
 6828              		.cfi_offset 14, -4
 6829 0002 82B0     		sub	sp, sp, #8
 6830              		.cfi_def_cfa_offset 16
 6831 0004 00AF     		add	r7, sp, #0
 6832              		.cfi_def_cfa_register 7
 6833 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 153


 750:GrannyChordApp.cpp ****   colours.BLUE.Init(Color::PresetColor::BLUE);
 6834              		.loc 14 750 20
 6835 0008 7A68     		ldr	r2, [r7, #4]
 6836 000a 48F2D463 		movw	r3, #34516
 6837 000e 1344     		add	r3, r3, r2
 6838 0010 0221     		movs	r1, #2
 6839 0012 1846     		mov	r0, r3
 6840 0014 FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 751:GrannyChordApp.cpp ****   colours.GREEN.Init(Color::PresetColor::GREEN);
 6841              		.loc 14 751 21
 6842 0018 7A68     		ldr	r2, [r7, #4]
 6843 001a 48F2E063 		movw	r3, #34528
 6844 001e 1344     		add	r3, r3, r2
 6845 0020 0121     		movs	r1, #1
 6846 0022 1846     		mov	r0, r3
 6847 0024 FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 752:GrannyChordApp.cpp ****   colours.RED.Init(Color::PresetColor::RED);
 6848              		.loc 14 752 19
 6849 0028 7A68     		ldr	r2, [r7, #4]
 6850 002a 48F2EC63 		movw	r3, #34540
 6851 002e 1344     		add	r3, r3, r2
 6852 0030 0021     		movs	r1, #0
 6853 0032 1846     		mov	r0, r3
 6854 0034 FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 753:GrannyChordApp.cpp ****   colours.CYAN.Init(0,255,255);
 6855              		.loc 14 753 20
 6856 0038 7A68     		ldr	r2, [r7, #4]
 6857 003a 48F2F863 		movw	r3, #34552
 6858 003e 1344     		add	r3, r3, r2
 6859 0040 9FED1B1A 		vldr.32	s2, .L382
 6860 0044 DFED1A0A 		vldr.32	s1, .L382
 6861 0048 9FED1A0A 		vldr.32	s0, .L382+4
 6862 004c 1846     		mov	r0, r3
 6863 004e FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 754:GrannyChordApp.cpp ****   colours.PURPLE.Init(Color::PresetColor::PURPLE);
 6864              		.loc 14 754 22
 6865 0052 7A68     		ldr	r2, [r7, #4]
 6866 0054 48F20473 		movw	r3, #34564
 6867 0058 1344     		add	r3, r3, r2
 6868 005a 0421     		movs	r1, #4
 6869 005c 1846     		mov	r0, r3
 6870 005e FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 755:GrannyChordApp.cpp ****   colours.ORANGE.Init(Color::PresetColor::GOLD);
 6871              		.loc 14 755 22
 6872 0062 7A68     		ldr	r2, [r7, #4]
 6873 0064 48F21073 		movw	r3, #34576
 6874 0068 1344     		add	r3, r3, r2
 6875 006a 0621     		movs	r1, #6
 6876 006c 1846     		mov	r0, r3
 6877 006e FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 756:GrannyChordApp.cpp ****   colours.YELLOW.Init(255,255,0);
 6878              		.loc 14 756 22
 6879 0072 7A68     		ldr	r2, [r7, #4]
 6880 0074 48F21C73 		movw	r3, #34588
 6881 0078 1344     		add	r3, r3, r2
 6882 007a 9FED0E1A 		vldr.32	s2, .L382+4
 6883 007e DFED0C0A 		vldr.32	s1, .L382
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 154


 6884 0082 9FED0B0A 		vldr.32	s0, .L382
 6885 0086 1846     		mov	r0, r3
 6886 0088 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 757:GrannyChordApp.cpp ****   colours.PINK.Init(255,0,255);
 6887              		.loc 14 757 20
 6888 008c 7A68     		ldr	r2, [r7, #4]
 6889 008e 48F22873 		movw	r3, #34600
 6890 0092 1344     		add	r3, r3, r2
 6891 0094 9FED061A 		vldr.32	s2, .L382
 6892 0098 DFED060A 		vldr.32	s1, .L382+4
 6893 009c 9FED040A 		vldr.32	s0, .L382
 6894 00a0 1846     		mov	r0, r3
 6895 00a2 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 758:GrannyChordApp.cpp **** }
 6896              		.loc 14 758 1
 6897 00a6 00BF     		nop
 6898 00a8 0837     		adds	r7, r7, #8
 6899              		.cfi_def_cfa_offset 8
 6900 00aa BD46     		mov	sp, r7
 6901              		.cfi_def_cfa_register 13
 6902              		@ sp needed
 6903 00ac 80BD     		pop	{r7, pc}
 6904              	.L383:
 6905 00ae 00BF     		.align	2
 6906              	.L382:
 6907 00b0 00007F43 		.word	1132396544
 6908 00b4 00000000 		.word	0
 6909              		.cfi_endproc
 6910              	.LFE4952:
 6912              		.section	.text._ZN14GrannyChordApp14SetLedAppStateEv,"ax",%progbits
 6913              		.align	1
 6914              		.global	_ZN14GrannyChordApp14SetLedAppStateEv
 6915              		.syntax unified
 6916              		.thumb
 6917              		.thumb_func
 6919              	_ZN14GrannyChordApp14SetLedAppStateEv:
 6920              	.LFB4953:
 759:GrannyChordApp.cpp **** 
 760:GrannyChordApp.cpp **** /// @brief sets led colours based on app state
 761:GrannyChordApp.cpp **** void GrannyChordApp::SetLedAppState(){
 6921              		.loc 14 761 38
 6922              		.cfi_startproc
 6923              		@ args = 0, pretend = 0, frame = 104
 6924              		@ frame_needed = 1, uses_anonymous_args = 0
 6925 0000 90B5     		push	{r4, r7, lr}
 6926              		.cfi_def_cfa_offset 12
 6927              		.cfi_offset 4, -12
 6928              		.cfi_offset 7, -8
 6929              		.cfi_offset 14, -4
 6930 0002 9BB0     		sub	sp, sp, #108
 6931              		.cfi_def_cfa_offset 120
 6932 0004 00AF     		add	r7, sp, #0
 6933              		.cfi_def_cfa_register 7
 6934 0006 7860     		str	r0, [r7, #4]
 762:GrannyChordApp.cpp ****   switch(next_state_){
 6935              		.loc 14 762 10
 6936 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 155


 6937 000a D3F87832 		ldr	r3, [r3, #632]
 6938              		.loc 14 762 3
 6939 000e 052B     		cmp	r3, #5
 6940 0010 00F2E680 		bhi	.L395
 6941 0014 01A2     		adr	r2, .L387
 6942 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6943 001a 00BF     		.p2align 2
 6944              	.L387:
 6945 001c 35000000 		.word	.L392+1
 6946 0020 6B000000 		.word	.L391+1
 6947 0024 A1000000 		.word	.L390+1
 6948 0028 0B010000 		.word	.L389+1
 6949 002c 41010000 		.word	.L388+1
 6950 0030 77010000 		.word	.L386+1
 6951              		.p2align 1
 6952              	.L392:
 763:GrannyChordApp.cpp ****     case AppState::SelectFile:
 764:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.GREEN);
 6953              		.loc 14 764 7
 6954 0034 7B68     		ldr	r3, [r7, #4]
 6955 0036 DB69     		ldr	r3, [r3, #28]
 6956              		.loc 14 764 25
 6957 0038 03F1D804 		add	r4, r3, #216
 6958              		.loc 14 764 34
 6959 003c 7B68     		ldr	r3, [r7, #4]
 6960 003e 03F50043 		add	r3, r3, #32768
 6961 0042 1A46     		mov	r2, r3
 6962 0044 07F10803 		add	r3, r7, #8
 6963 0048 02F5DC62 		add	r2, r2, #1760
 6964 004c 07CA     		ldm	r2, {r0, r1, r2}
 6965 004e 83E80700 		stm	r3, {r0, r1, r2}
 6966              		.loc 14 764 25
 6967 0052 07F10803 		add	r3, r7, #8
 6968 0056 1946     		mov	r1, r3
 6969 0058 2046     		mov	r0, r4
 6970 005a FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6971              		.loc 14 764 34
 6972 005e 07F10803 		add	r3, r7, #8
 6973 0062 1846     		mov	r0, r3
 6974 0064 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 765:GrannyChordApp.cpp ****       break;
 6975              		.loc 14 765 7
 6976 0068 BBE0     		b	.L393
 6977              	.L391:
 766:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 767:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.CYAN);
 6978              		.loc 14 767 7
 6979 006a 7B68     		ldr	r3, [r7, #4]
 6980 006c DB69     		ldr	r3, [r3, #28]
 6981              		.loc 14 767 25
 6982 006e 03F1D804 		add	r4, r3, #216
 6983              		.loc 14 767 34
 6984 0072 7B68     		ldr	r3, [r7, #4]
 6985 0074 03F50043 		add	r3, r3, #32768
 6986 0078 1A46     		mov	r2, r3
 6987 007a 07F11403 		add	r3, r7, #20
 6988 007e 02F5DF62 		add	r2, r2, #1784
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 156


 6989 0082 07CA     		ldm	r2, {r0, r1, r2}
 6990 0084 83E80700 		stm	r3, {r0, r1, r2}
 6991              		.loc 14 767 25
 6992 0088 07F11403 		add	r3, r7, #20
 6993 008c 1946     		mov	r1, r3
 6994 008e 2046     		mov	r0, r4
 6995 0090 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6996              		.loc 14 767 34
 6997 0094 07F11403 		add	r3, r7, #20
 6998 0098 1846     		mov	r0, r3
 6999 009a FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 768:GrannyChordApp.cpp ****       break;
 7000              		.loc 14 768 7
 7001 009e A0E0     		b	.L393
 7002              	.L390:
 769:GrannyChordApp.cpp ****     case AppState::Synthesis:
 770:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.BLUE);
 7003              		.loc 14 770 7
 7004 00a0 7B68     		ldr	r3, [r7, #4]
 7005 00a2 DB69     		ldr	r3, [r3, #28]
 7006              		.loc 14 770 25
 7007 00a4 03F1D804 		add	r4, r3, #216
 7008              		.loc 14 770 34
 7009 00a8 7B68     		ldr	r3, [r7, #4]
 7010 00aa 03F50043 		add	r3, r3, #32768
 7011 00ae 1A46     		mov	r2, r3
 7012 00b0 07F12003 		add	r3, r7, #32
 7013 00b4 02F2D462 		addw	r2, r2, #1748
 7014 00b8 07CA     		ldm	r2, {r0, r1, r2}
 7015 00ba 83E80700 		stm	r3, {r0, r1, r2}
 7016              		.loc 14 770 25
 7017 00be 07F12003 		add	r3, r7, #32
 7018 00c2 1946     		mov	r1, r3
 7019 00c4 2046     		mov	r0, r4
 7020 00c6 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7021              		.loc 14 770 34
 7022 00ca 07F12003 		add	r3, r7, #32
 7023 00ce 1846     		mov	r0, r3
 7024 00d0 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 771:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.GREEN);
 7025              		.loc 14 771 7
 7026 00d4 7B68     		ldr	r3, [r7, #4]
 7027 00d6 DB69     		ldr	r3, [r3, #28]
 7028              		.loc 14 771 25
 7029 00d8 03F59674 		add	r4, r3, #300
 7030              		.loc 14 771 34
 7031 00dc 7B68     		ldr	r3, [r7, #4]
 7032 00de 03F50043 		add	r3, r3, #32768
 7033 00e2 1A46     		mov	r2, r3
 7034 00e4 07F12C03 		add	r3, r7, #44
 7035 00e8 02F5DC62 		add	r2, r2, #1760
 7036 00ec 07CA     		ldm	r2, {r0, r1, r2}
 7037 00ee 83E80700 		stm	r3, {r0, r1, r2}
 7038              		.loc 14 771 25
 7039 00f2 07F12C03 		add	r3, r7, #44
 7040 00f6 1946     		mov	r1, r3
 7041 00f8 2046     		mov	r0, r4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 157


 7042 00fa FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7043              		.loc 14 771 34
 7044 00fe 07F12C03 		add	r3, r7, #44
 7045 0102 1846     		mov	r0, r3
 7046 0104 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 772:GrannyChordApp.cpp ****       break;
 7047              		.loc 14 772 7
 7048 0108 6BE0     		b	.L393
 7049              	.L389:
 773:GrannyChordApp.cpp ****     case AppState::RecordIn:
 774:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.YELLOW);
 7050              		.loc 14 774 7
 7051 010a 7B68     		ldr	r3, [r7, #4]
 7052 010c DB69     		ldr	r3, [r3, #28]
 7053              		.loc 14 774 25
 7054 010e 03F1D804 		add	r4, r3, #216
 7055              		.loc 14 774 34
 7056 0112 7B68     		ldr	r3, [r7, #4]
 7057 0114 03F50043 		add	r3, r3, #32768
 7058 0118 1A46     		mov	r2, r3
 7059 011a 07F13803 		add	r3, r7, #56
 7060 011e 02F21C72 		addw	r2, r2, #1820
 7061 0122 07CA     		ldm	r2, {r0, r1, r2}
 7062 0124 83E80700 		stm	r3, {r0, r1, r2}
 7063              		.loc 14 774 25
 7064 0128 07F13803 		add	r3, r7, #56
 7065 012c 1946     		mov	r1, r3
 7066 012e 2046     		mov	r0, r4
 7067 0130 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7068              		.loc 14 774 34
 7069 0134 07F13803 		add	r3, r7, #56
 7070 0138 1846     		mov	r0, r3
 7071 013a FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 775:GrannyChordApp.cpp ****       break;
 7072              		.loc 14 775 7
 7073 013e 50E0     		b	.L393
 7074              	.L388:
 776:GrannyChordApp.cpp ****     case AppState::ChordMode:
 777:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.PURPLE);
 7075              		.loc 14 777 7
 7076 0140 7B68     		ldr	r3, [r7, #4]
 7077 0142 DB69     		ldr	r3, [r3, #28]
 7078              		.loc 14 777 25
 7079 0144 03F1D804 		add	r4, r3, #216
 7080              		.loc 14 777 34
 7081 0148 7B68     		ldr	r3, [r7, #4]
 7082 014a 03F50043 		add	r3, r3, #32768
 7083 014e 1A46     		mov	r2, r3
 7084 0150 07F14403 		add	r3, r7, #68
 7085 0154 02F20472 		addw	r2, r2, #1796
 7086 0158 07CA     		ldm	r2, {r0, r1, r2}
 7087 015a 83E80700 		stm	r3, {r0, r1, r2}
 7088              		.loc 14 777 25
 7089 015e 07F14403 		add	r3, r7, #68
 7090 0162 1946     		mov	r1, r3
 7091 0164 2046     		mov	r0, r4
 7092 0166 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 158


 7093              		.loc 14 777 34
 7094 016a 07F14403 		add	r3, r7, #68
 7095 016e 1846     		mov	r0, r3
 7096 0170 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 778:GrannyChordApp.cpp ****       break;
 7097              		.loc 14 778 7
 7098 0174 35E0     		b	.L393
 7099              	.L386:
 779:GrannyChordApp.cpp ****     case AppState::Error:
 780:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.RED);
 7100              		.loc 14 780 7
 7101 0176 7B68     		ldr	r3, [r7, #4]
 7102 0178 DB69     		ldr	r3, [r3, #28]
 7103              		.loc 14 780 25
 7104 017a 03F1D804 		add	r4, r3, #216
 7105              		.loc 14 780 34
 7106 017e 7B68     		ldr	r3, [r7, #4]
 7107 0180 03F50043 		add	r3, r3, #32768
 7108 0184 1A46     		mov	r2, r3
 7109 0186 07F15003 		add	r3, r7, #80
 7110 018a 02F2EC62 		addw	r2, r2, #1772
 7111 018e 07CA     		ldm	r2, {r0, r1, r2}
 7112 0190 83E80700 		stm	r3, {r0, r1, r2}
 7113              		.loc 14 780 25
 7114 0194 07F15003 		add	r3, r7, #80
 7115 0198 1946     		mov	r1, r3
 7116 019a 2046     		mov	r0, r4
 7117 019c FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7118              		.loc 14 780 34
 7119 01a0 07F15003 		add	r3, r7, #80
 7120 01a4 1846     		mov	r0, r3
 7121 01a6 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 781:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.RED);
 7122              		.loc 14 781 7
 7123 01aa 7B68     		ldr	r3, [r7, #4]
 7124 01ac DB69     		ldr	r3, [r3, #28]
 7125              		.loc 14 781 25
 7126 01ae 03F59674 		add	r4, r3, #300
 7127              		.loc 14 781 34
 7128 01b2 7B68     		ldr	r3, [r7, #4]
 7129 01b4 03F50043 		add	r3, r3, #32768
 7130 01b8 1A46     		mov	r2, r3
 7131 01ba 07F15C03 		add	r3, r7, #92
 7132 01be 02F2EC62 		addw	r2, r2, #1772
 7133 01c2 07CA     		ldm	r2, {r0, r1, r2}
 7134 01c4 83E80700 		stm	r3, {r0, r1, r2}
 7135              		.loc 14 781 25
 7136 01c8 07F15C03 		add	r3, r7, #92
 7137 01cc 1946     		mov	r1, r3
 7138 01ce 2046     		mov	r0, r4
 7139 01d0 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7140              		.loc 14 781 34
 7141 01d4 07F15C03 		add	r3, r7, #92
 7142 01d8 1846     		mov	r0, r3
 7143 01da FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 782:GrannyChordApp.cpp ****       break;
 7144              		.loc 14 782 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 159


 7145 01de 00E0     		b	.L393
 7146              	.L395:
 783:GrannyChordApp.cpp ****     default:
 784:GrannyChordApp.cpp ****       break;
 7147              		.loc 14 784 7
 7148 01e0 00BF     		nop
 7149              	.L393:
 785:GrannyChordApp.cpp ****   }
 786:GrannyChordApp.cpp ****   if (curr_state_ != AppState::Synthesis) pod_.led2.Set(0,0,0); /* turn off led2 */
 7150              		.loc 14 786 7
 7151 01e2 7B68     		ldr	r3, [r7, #4]
 7152 01e4 D3F87432 		ldr	r3, [r3, #628]
 7153              		.loc 14 786 3
 7154 01e8 022B     		cmp	r3, #2
 7155 01ea 0CD0     		beq	.L394
 7156              		.loc 14 786 43 discriminator 1
 7157 01ec 7B68     		ldr	r3, [r7, #4]
 7158 01ee DB69     		ldr	r3, [r3, #28]
 7159              		.loc 14 786 56 discriminator 1
 7160 01f0 03F59673 		add	r3, r3, #300
 7161 01f4 9FED081A 		vldr.32	s2, .L396
 7162 01f8 DFED070A 		vldr.32	s1, .L396
 7163 01fc 9FED060A 		vldr.32	s0, .L396
 7164 0200 1846     		mov	r0, r3
 7165 0202 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 7166              	.L394:
 787:GrannyChordApp.cpp ****   pod_.UpdateLeds();
 7167              		.loc 14 787 3
 7168 0206 7B68     		ldr	r3, [r7, #4]
 7169 0208 DB69     		ldr	r3, [r3, #28]
 7170              		.loc 14 787 18
 7171 020a 1846     		mov	r0, r3
 7172 020c FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 788:GrannyChordApp.cpp **** }
 7173              		.loc 14 788 1
 7174 0210 00BF     		nop
 7175 0212 6C37     		adds	r7, r7, #108
 7176              		.cfi_def_cfa_offset 12
 7177 0214 BD46     		mov	sp, r7
 7178              		.cfi_def_cfa_register 13
 7179              		@ sp needed
 7180 0216 90BD     		pop	{r4, r7, pc}
 7181              	.L397:
 7182              		.align	2
 7183              	.L396:
 7184 0218 00000000 		.word	0
 7185              		.cfi_endproc
 7186              	.LFE4953:
 7188              		.section	.text._ZN14GrannyChordApp15SetLedSynthModeEv,"ax",%progbits
 7189              		.align	1
 7190              		.global	_ZN14GrannyChordApp15SetLedSynthModeEv
 7191              		.syntax unified
 7192              		.thumb
 7193              		.thumb_func
 7195              	_ZN14GrannyChordApp15SetLedSynthModeEv:
 7196              	.LFB4954:
 789:GrannyChordApp.cpp **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 160


 790:GrannyChordApp.cpp **** void GrannyChordApp::SetLedSynthMode(){
 7197              		.loc 14 790 39
 7198              		.cfi_startproc
 7199              		@ args = 0, pretend = 0, frame = 120
 7200              		@ frame_needed = 1, uses_anonymous_args = 0
 7201 0000 90B5     		push	{r4, r7, lr}
 7202              		.cfi_def_cfa_offset 12
 7203              		.cfi_offset 4, -12
 7204              		.cfi_offset 7, -8
 7205              		.cfi_offset 14, -4
 7206 0002 9FB0     		sub	sp, sp, #124
 7207              		.cfi_def_cfa_offset 136
 7208 0004 00AF     		add	r7, sp, #0
 7209              		.cfi_def_cfa_register 7
 7210 0006 7860     		str	r0, [r7, #4]
 7211              	.LBB28:
 791:GrannyChordApp.cpp ****   if (curr_state_ == AppState::Synthesis){
 7212              		.loc 14 791 7
 7213 0008 7B68     		ldr	r3, [r7, #4]
 7214 000a D3F87432 		ldr	r3, [r3, #628]
 7215              		.loc 14 791 3
 7216 000e 022B     		cmp	r3, #2
 7217 0010 40F01281 		bne	.L399
 7218              	.LBB29:
 792:GrannyChordApp.cpp ****     switch(curr_synth_mode_){
 7219              		.loc 14 792 12
 7220 0014 7B68     		ldr	r3, [r7, #4]
 7221 0016 D3F87C32 		ldr	r3, [r3, #636]
 7222              		.loc 14 792 5
 7223 001a 062B     		cmp	r3, #6
 7224 001c 00F2CF80 		bhi	.L411
 7225 0020 01A2     		adr	r2, .L402
 7226 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7227 0026 00BF     		.p2align 2
 7228              	.L402:
 7229 0028 45000000 		.word	.L408+1
 7230 002c 7B000000 		.word	.L407+1
 7231 0030 B1000000 		.word	.L406+1
 7232 0034 E7000000 		.word	.L405+1
 7233 0038 1D010000 		.word	.L404+1
 7234 003c 53010000 		.word	.L403+1
 7235 0040 89010000 		.word	.L401+1
 7236              		.p2align 1
 7237              	.L408:
 793:GrannyChordApp.cpp ****       /* regular: led1 blue / cyan / orange / yellow */
 794:GrannyChordApp.cpp ****       /* FX: led2 blue / cyan / orange / yellow */
 795:GrannyChordApp.cpp ****       case SynthMode::Size_Position:
 796:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.BLUE);
 7238              		.loc 14 796 9
 7239 0044 7B68     		ldr	r3, [r7, #4]
 7240 0046 DB69     		ldr	r3, [r3, #28]
 7241              		.loc 14 796 27
 7242 0048 03F1D804 		add	r4, r3, #216
 7243              		.loc 14 796 36
 7244 004c 7B68     		ldr	r3, [r7, #4]
 7245 004e 03F50043 		add	r3, r3, #32768
 7246 0052 1A46     		mov	r2, r3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 161


 7247 0054 07F10803 		add	r3, r7, #8
 7248 0058 02F2D462 		addw	r2, r2, #1748
 7249 005c 07CA     		ldm	r2, {r0, r1, r2}
 7250 005e 83E80700 		stm	r3, {r0, r1, r2}
 7251              		.loc 14 796 27
 7252 0062 07F10803 		add	r3, r7, #8
 7253 0066 1946     		mov	r1, r3
 7254 0068 2046     		mov	r0, r4
 7255 006a FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7256              		.loc 14 796 36
 7257 006e 07F10803 		add	r3, r7, #8
 7258 0072 1846     		mov	r0, r3
 7259 0074 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 797:GrannyChordApp.cpp ****         break;
 7260              		.loc 14 797 9
 7261 0078 A2E0     		b	.L409
 7262              	.L407:
 798:GrannyChordApp.cpp ****       case SynthMode::Pitch_ActiveGrains:
 799:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.CYAN);
 7263              		.loc 14 799 9
 7264 007a 7B68     		ldr	r3, [r7, #4]
 7265 007c DB69     		ldr	r3, [r3, #28]
 7266              		.loc 14 799 27
 7267 007e 03F1D804 		add	r4, r3, #216
 7268              		.loc 14 799 36
 7269 0082 7B68     		ldr	r3, [r7, #4]
 7270 0084 03F50043 		add	r3, r3, #32768
 7271 0088 1A46     		mov	r2, r3
 7272 008a 07F11403 		add	r3, r7, #20
 7273 008e 02F5DF62 		add	r2, r2, #1784
 7274 0092 07CA     		ldm	r2, {r0, r1, r2}
 7275 0094 83E80700 		stm	r3, {r0, r1, r2}
 7276              		.loc 14 799 27
 7277 0098 07F11403 		add	r3, r7, #20
 7278 009c 1946     		mov	r1, r3
 7279 009e 2046     		mov	r0, r4
 7280 00a0 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7281              		.loc 14 799 36
 7282 00a4 07F11403 		add	r3, r7, #20
 7283 00a8 1846     		mov	r0, r3
 7284 00aa FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 800:GrannyChordApp.cpp ****         break;
 7285              		.loc 14 800 9
 7286 00ae 87E0     		b	.L409
 7287              	.L406:
 801:GrannyChordApp.cpp ****       case SynthMode::Pan_Direction:
 802:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.ORANGE);
 7288              		.loc 14 802 9
 7289 00b0 7B68     		ldr	r3, [r7, #4]
 7290 00b2 DB69     		ldr	r3, [r3, #28]
 7291              		.loc 14 802 27
 7292 00b4 03F1D804 		add	r4, r3, #216
 7293              		.loc 14 802 36
 7294 00b8 7B68     		ldr	r3, [r7, #4]
 7295 00ba 03F50043 		add	r3, r3, #32768
 7296 00be 1A46     		mov	r2, r3
 7297 00c0 07F12003 		add	r3, r7, #32
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 162


 7298 00c4 02F5E262 		add	r2, r2, #1808
 7299 00c8 07CA     		ldm	r2, {r0, r1, r2}
 7300 00ca 83E80700 		stm	r3, {r0, r1, r2}
 7301              		.loc 14 802 27
 7302 00ce 07F12003 		add	r3, r7, #32
 7303 00d2 1946     		mov	r1, r3
 7304 00d4 2046     		mov	r0, r4
 7305 00d6 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7306              		.loc 14 802 36
 7307 00da 07F12003 		add	r3, r7, #32
 7308 00de 1846     		mov	r0, r3
 7309 00e0 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 803:GrannyChordApp.cpp ****         break;
 7310              		.loc 14 803 9
 7311 00e4 6CE0     		b	.L409
 7312              	.L405:
 804:GrannyChordApp.cpp ****       case SynthMode::RndAmount_RndFreq:
 805:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.YELLOW);
 7313              		.loc 14 805 9
 7314 00e6 7B68     		ldr	r3, [r7, #4]
 7315 00e8 DB69     		ldr	r3, [r3, #28]
 7316              		.loc 14 805 27
 7317 00ea 03F1D804 		add	r4, r3, #216
 7318              		.loc 14 805 36
 7319 00ee 7B68     		ldr	r3, [r7, #4]
 7320 00f0 03F50043 		add	r3, r3, #32768
 7321 00f4 1A46     		mov	r2, r3
 7322 00f6 07F12C03 		add	r3, r7, #44
 7323 00fa 02F21C72 		addw	r2, r2, #1820
 7324 00fe 07CA     		ldm	r2, {r0, r1, r2}
 7325 0100 83E80700 		stm	r3, {r0, r1, r2}
 7326              		.loc 14 805 27
 7327 0104 07F12C03 		add	r3, r7, #44
 7328 0108 1946     		mov	r1, r3
 7329 010a 2046     		mov	r0, r4
 7330 010c FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7331              		.loc 14 805 36
 7332 0110 07F12C03 		add	r3, r7, #44
 7333 0114 1846     		mov	r0, r3
 7334 0116 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 806:GrannyChordApp.cpp ****         break;
 7335              		.loc 14 806 9
 7336 011a 51E0     		b	.L409
 7337              	.L404:
 807:GrannyChordApp.cpp ****       case SynthMode::StereoRotate:
 808:GrannyChordApp.cpp ****         pod_.led2.SetColor(colours.BLUE);
 7338              		.loc 14 808 9
 7339 011c 7B68     		ldr	r3, [r7, #4]
 7340 011e DB69     		ldr	r3, [r3, #28]
 7341              		.loc 14 808 27
 7342 0120 03F59674 		add	r4, r3, #300
 7343              		.loc 14 808 36
 7344 0124 7B68     		ldr	r3, [r7, #4]
 7345 0126 03F50043 		add	r3, r3, #32768
 7346 012a 1A46     		mov	r2, r3
 7347 012c 07F13803 		add	r3, r7, #56
 7348 0130 02F2D462 		addw	r2, r2, #1748
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 163


 7349 0134 07CA     		ldm	r2, {r0, r1, r2}
 7350 0136 83E80700 		stm	r3, {r0, r1, r2}
 7351              		.loc 14 808 27
 7352 013a 07F13803 		add	r3, r7, #56
 7353 013e 1946     		mov	r1, r3
 7354 0140 2046     		mov	r0, r4
 7355 0142 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7356              		.loc 14 808 36
 7357 0146 07F13803 		add	r3, r7, #56
 7358 014a 1846     		mov	r0, r3
 7359 014c FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 809:GrannyChordApp.cpp ****         break;
 7360              		.loc 14 809 9
 7361 0150 36E0     		b	.L409
 7362              	.L403:
 810:GrannyChordApp.cpp ****       case SynthMode::Reverb:
 811:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.CYAN);
 7363              		.loc 14 811 7
 7364 0152 7B68     		ldr	r3, [r7, #4]
 7365 0154 DB69     		ldr	r3, [r3, #28]
 7366              		.loc 14 811 25
 7367 0156 03F59674 		add	r4, r3, #300
 7368              		.loc 14 811 34
 7369 015a 7B68     		ldr	r3, [r7, #4]
 7370 015c 03F50043 		add	r3, r3, #32768
 7371 0160 1A46     		mov	r2, r3
 7372 0162 07F14403 		add	r3, r7, #68
 7373 0166 02F5DF62 		add	r2, r2, #1784
 7374 016a 07CA     		ldm	r2, {r0, r1, r2}
 7375 016c 83E80700 		stm	r3, {r0, r1, r2}
 7376              		.loc 14 811 25
 7377 0170 07F14403 		add	r3, r7, #68
 7378 0174 1946     		mov	r1, r3
 7379 0176 2046     		mov	r0, r4
 7380 0178 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7381              		.loc 14 811 34
 7382 017c 07F14403 		add	r3, r7, #68
 7383 0180 1846     		mov	r0, r3
 7384 0182 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 812:GrannyChordApp.cpp ****         break;
 7385              		.loc 14 812 9
 7386 0186 1BE0     		b	.L409
 7387              	.L401:
 813:GrannyChordApp.cpp ****       case SynthMode::Filter:
 814:GrannyChordApp.cpp ****         pod_.led2.SetColor(colours.ORANGE);
 7388              		.loc 14 814 9
 7389 0188 7B68     		ldr	r3, [r7, #4]
 7390 018a DB69     		ldr	r3, [r3, #28]
 7391              		.loc 14 814 27
 7392 018c 03F59674 		add	r4, r3, #300
 7393              		.loc 14 814 36
 7394 0190 7B68     		ldr	r3, [r7, #4]
 7395 0192 03F50043 		add	r3, r3, #32768
 7396 0196 1A46     		mov	r2, r3
 7397 0198 07F15003 		add	r3, r7, #80
 7398 019c 02F5E262 		add	r2, r2, #1808
 7399 01a0 07CA     		ldm	r2, {r0, r1, r2}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 164


 7400 01a2 83E80700 		stm	r3, {r0, r1, r2}
 7401              		.loc 14 814 27
 7402 01a6 07F15003 		add	r3, r7, #80
 7403 01aa 1946     		mov	r1, r3
 7404 01ac 2046     		mov	r0, r4
 7405 01ae FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7406              		.loc 14 814 36
 7407 01b2 07F15003 		add	r3, r7, #80
 7408 01b6 1846     		mov	r0, r3
 7409 01b8 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 815:GrannyChordApp.cpp ****         break;
 7410              		.loc 14 815 9
 7411 01bc 00E0     		b	.L409
 7412              	.L411:
 816:GrannyChordApp.cpp ****       default:
 817:GrannyChordApp.cpp ****         break;
 7413              		.loc 14 817 9
 7414 01be 00BF     		nop
 7415              	.L409:
 818:GrannyChordApp.cpp ****     }
 819:GrannyChordApp.cpp ****     int mode_idx = static_cast<int>(curr_synth_mode_);
 7416              		.loc 14 819 9
 7417 01c0 7B68     		ldr	r3, [r7, #4]
 7418 01c2 D3F87C32 		ldr	r3, [r3, #636]
 7419 01c6 7B67     		str	r3, [r7, #116]
 820:GrannyChordApp.cpp ****     if (mode_idx < 4) {
 7420              		.loc 14 820 5
 7421 01c8 7B6F     		ldr	r3, [r7, #116]
 7422 01ca 032B     		cmp	r3, #3
 7423 01cc 1ADC     		bgt	.L410
 821:GrannyChordApp.cpp ****       /* led2 green in regular mode */
 822:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.GREEN);
 7424              		.loc 14 822 7
 7425 01ce 7B68     		ldr	r3, [r7, #4]
 7426 01d0 DB69     		ldr	r3, [r3, #28]
 7427              		.loc 14 822 25
 7428 01d2 03F59674 		add	r4, r3, #300
 7429              		.loc 14 822 34
 7430 01d6 7B68     		ldr	r3, [r7, #4]
 7431 01d8 03F50043 		add	r3, r3, #32768
 7432 01dc 1A46     		mov	r2, r3
 7433 01de 07F15C03 		add	r3, r7, #92
 7434 01e2 02F5DC62 		add	r2, r2, #1760
 7435 01e6 07CA     		ldm	r2, {r0, r1, r2}
 7436 01e8 83E80700 		stm	r3, {r0, r1, r2}
 7437              		.loc 14 822 25
 7438 01ec 07F15C03 		add	r3, r7, #92
 7439 01f0 1946     		mov	r1, r3
 7440 01f2 2046     		mov	r0, r4
 7441 01f4 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7442              		.loc 14 822 34
 7443 01f8 07F15C03 		add	r3, r7, #92
 7444 01fc 1846     		mov	r0, r3
 7445 01fe FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 7446 0202 19E0     		b	.L399
 7447              	.L410:
 823:GrannyChordApp.cpp ****     }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 165


 824:GrannyChordApp.cpp ****     else{
 825:GrannyChordApp.cpp ****       /* led1 pink in FX Mode */
 826:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.YELLOW);
 7448              		.loc 14 826 7
 7449 0204 7B68     		ldr	r3, [r7, #4]
 7450 0206 DB69     		ldr	r3, [r3, #28]
 7451              		.loc 14 826 25
 7452 0208 03F1D804 		add	r4, r3, #216
 7453              		.loc 14 826 34
 7454 020c 7B68     		ldr	r3, [r7, #4]
 7455 020e 03F50043 		add	r3, r3, #32768
 7456 0212 1A46     		mov	r2, r3
 7457 0214 07F16803 		add	r3, r7, #104
 7458 0218 02F21C72 		addw	r2, r2, #1820
 7459 021c 07CA     		ldm	r2, {r0, r1, r2}
 7460 021e 83E80700 		stm	r3, {r0, r1, r2}
 7461              		.loc 14 826 25
 7462 0222 07F16803 		add	r3, r7, #104
 7463 0226 1946     		mov	r1, r3
 7464 0228 2046     		mov	r0, r4
 7465 022a FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7466              		.loc 14 826 34
 7467 022e 07F16803 		add	r3, r7, #104
 7468 0232 1846     		mov	r0, r3
 7469 0234 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 7470              	.L399:
 7471              	.LBE29:
 7472              	.LBE28:
 827:GrannyChordApp.cpp ****     }
 828:GrannyChordApp.cpp ****   }
 829:GrannyChordApp.cpp ****   pod_.UpdateLeds();
 7473              		.loc 14 829 3
 7474 0238 7B68     		ldr	r3, [r7, #4]
 7475 023a DB69     		ldr	r3, [r3, #28]
 7476              		.loc 14 829 18
 7477 023c 1846     		mov	r0, r3
 7478 023e FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 830:GrannyChordApp.cpp **** }...
 7479              		.loc 14 830 1
 7480 0242 00BF     		nop
 7481 0244 7C37     		adds	r7, r7, #124
 7482              		.cfi_def_cfa_offset 12
 7483 0246 BD46     		mov	sp, r7
 7484              		.cfi_def_cfa_register 13
 7485              		@ sp needed
 7486 0248 90BD     		pop	{r4, r7, pc}
 7487              		.cfi_endproc
 7488              	.LFE4954:
 7490 024a 00BF     		.section	.text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9Prin
 7491              		.align	1
 7492              		.weak	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7493              		.syntax unified
 7494              		.thumb
 7495              		.thumb_func
 7497              	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:
 7498              	.LFB5281:
 7499              		.file 16 "../libDaisy/src/daisy_seed.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 166


   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  23:../libDaisy/src/daisy_seed.h **** 
  24:../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../libDaisy/src/daisy_seed.h ****      */
  27:../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../libDaisy/src/daisy_seed.h **** 
  29:../libDaisy/src/daisy_seed.h ****     /** 
  30:../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../libDaisy/src/daisy_seed.h **** 
  34:../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../libDaisy/src/daisy_seed.h ****     */
  38:../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../libDaisy/src/daisy_seed.h **** 
  40:../libDaisy/src/daisy_seed.h ****     /** 
  41:../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../libDaisy/src/daisy_seed.h ****     */
  43:../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../libDaisy/src/daisy_seed.h **** 
  45:../libDaisy/src/daisy_seed.h ****     /** 
  46:../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../libDaisy/src/daisy_seed.h ****     */
  49:../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../libDaisy/src/daisy_seed.h **** 
  51:../libDaisy/src/daisy_seed.h ****     /** 
  52:../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../libDaisy/src/daisy_seed.h ****     */
  55:../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../libDaisy/src/daisy_seed.h **** 
  57:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 167


  58:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../libDaisy/src/daisy_seed.h ****     */
  61:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../libDaisy/src/daisy_seed.h **** 
  63:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../libDaisy/src/daisy_seed.h ****     */
  68:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../libDaisy/src/daisy_seed.h **** 
  70:../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../libDaisy/src/daisy_seed.h ****      */
  72:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../libDaisy/src/daisy_seed.h **** 
  74:../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../libDaisy/src/daisy_seed.h ****      */
  76:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../libDaisy/src/daisy_seed.h **** 
  78:../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../libDaisy/src/daisy_seed.h **** 
  81:../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../libDaisy/src/daisy_seed.h ****      */
  84:../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../libDaisy/src/daisy_seed.h **** 
  86:../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../libDaisy/src/daisy_seed.h ****      */
  88:../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../libDaisy/src/daisy_seed.h **** 
  90:../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../libDaisy/src/daisy_seed.h ****      */
  92:../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../libDaisy/src/daisy_seed.h **** 
  94:../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../libDaisy/src/daisy_seed.h **** 
  97:../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../libDaisy/src/daisy_seed.h **** 
 100:../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../libDaisy/src/daisy_seed.h ****      */
 105:../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../libDaisy/src/daisy_seed.h **** 
 107:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../libDaisy/src/daisy_seed.h ****      */
 109:../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../libDaisy/src/daisy_seed.h **** 
 111:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../libDaisy/src/daisy_seed.h ****      */
 113:../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../libDaisy/src/daisy_seed.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 168


 115:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../libDaisy/src/daisy_seed.h ****      */
 117:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../libDaisy/src/daisy_seed.h ****     {
 120:../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../libDaisy/src/daisy_seed.h ****     }
 122:../libDaisy/src/daisy_seed.h **** 
 123:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../libDaisy/src/daisy_seed.h ****     */
 125:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 7500              		.loc 16 126 17
 7501              		.cfi_startproc
 7502              		@ args = 0, pretend = 0, frame = 8
 7503              		@ frame_needed = 1, uses_anonymous_args = 0
 7504 0000 80B5     		push	{r7, lr}
 7505              		.cfi_def_cfa_offset 8
 7506              		.cfi_offset 7, -8
 7507              		.cfi_offset 14, -4
 7508 0002 82B0     		sub	sp, sp, #8
 7509              		.cfi_def_cfa_offset 16
 7510 0004 00AF     		add	r7, sp, #0
 7511              		.cfi_def_cfa_register 7
 7512 0006 7860     		str	r0, [r7, #4]
 127:../libDaisy/src/daisy_seed.h ****     {
 128:../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 7513              		.loc 16 128 23
 7514 0008 7868     		ldr	r0, [r7, #4]
 7515 000a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 129:../libDaisy/src/daisy_seed.h ****     }
 7516              		.loc 16 129 5
 7517 000e 00BF     		nop
 7518 0010 0837     		adds	r7, r7, #8
 7519              		.cfi_def_cfa_offset 8
 7520 0012 BD46     		mov	sp, r7
 7521              		.cfi_def_cfa_register 13
 7522              		@ sp needed
 7523 0014 80BD     		pop	{r7, pc}
 7524              		.cfi_endproc
 7525              	.LFE5281:
 7527              		.section	.text._ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_
 7528              		.align	1
 7529              		.weak	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__value
 7530              		.syntax unified
 7531              		.thumb
 7532              		.thumb_func
 7534              	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__ty
 7535              	.LFB5282:
 7536              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 169


   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** /** @file include/cmath
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  as macros in C).
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  */
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include_next <math.h>
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef div
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef acos
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef asin
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan2
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ceil
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cos
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cosh
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef exp
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fabs
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef floor
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fmod
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 170


  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef frexp
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ldexp
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log10
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef modf
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef pow
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sin
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sinh
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sqrt
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tan
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tanh
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** extern "C++"
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::acos;
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(float __x)
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(long double __x)
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::asin;
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(float __x)
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(long double __x)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     asin(_Tp __x)
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 171


 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(float __x)
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(long double __x)
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan2;
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ceil;
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(float __x)
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 172


 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cos;
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(float __x)
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(long double __x)
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cosh;
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(float __x)
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(long double __x)
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::exp;
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(float __x)
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(long double __x)
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 173


 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fabs;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(float __x)
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(long double __x)
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fabs(_Tp __x)
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_fabs(__x); }
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::floor;
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(float __x)
 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorf(__x); }
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(long double __x)
 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorl(__x); }
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     floor(_Tp __x)
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_floor(__x); }
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fmod;
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(float __x, float __y)
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(long double __x, long double __y)
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 174


 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::frexp;
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(float __x, int* __exp)
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(long double __x, int* __exp)
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ldexp;
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(float __x, int __exp)
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(long double __x, int __exp)
 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log;
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(float __x)
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logf(__x); }
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(long double __x)
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logl(__x); }
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 175


 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log(_Tp __x)
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log(__x); }
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log10;
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(float __x)
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10f(__x); }
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(long double __x)
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10l(__x); }
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log10(_Tp __x)
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log10(__x); }
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::modf;
 373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(float __x, float* __iptr)
 377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 380:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 383:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 384:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::pow;
 385:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 386:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, float __y)
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 391:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, long double __y)
 393:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 395:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #if __cplusplus < 201103L
 396:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline double
 399:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(double __x, int __i)
 400:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 402:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 403:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, int __n)
 404:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 406:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 176


 407:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, int __n)
 408:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 410:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 411:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 412:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 413:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     pow(_Tp __x, _Up __y)
 7537              		.loc 17 415 5
 7538              		.cfi_startproc
 7539              		@ args = 0, pretend = 0, frame = 8
 7540              		@ frame_needed = 1, uses_anonymous_args = 0
 7541 0000 80B5     		push	{r7, lr}
 7542              		.cfi_def_cfa_offset 8
 7543              		.cfi_offset 7, -8
 7544              		.cfi_offset 14, -4
 7545 0002 82B0     		sub	sp, sp, #8
 7546              		.cfi_def_cfa_offset 16
 7547 0004 00AF     		add	r7, sp, #0
 7548              		.cfi_def_cfa_register 7
 7549 0006 7860     		str	r0, [r7, #4]
 7550 0008 3960     		str	r1, [r7]
 416:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 417:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return pow(__type(__x), __type(__y));
 7551              		.loc 17 418 17
 7552 000a 7B68     		ldr	r3, [r7, #4]
 7553 000c 07EE903A 		vmov	s15, r3	@ int
 7554 0010 B8EEE77B 		vcvt.f64.s32	d7, s15
 7555 0014 3B68     		ldr	r3, [r7]
 7556 0016 06EE903A 		vmov	s13, r3	@ int
 7557 001a B8EEE66B 		vcvt.f64.s32	d6, s13
 7558 001e B0EE461B 		vmov.f64	d1, d6
 7559 0022 B0EE470B 		vmov.f64	d0, d7
 7560 0026 FFF7FEFF 		bl	pow
 7561 002a B0EE407B 		vmov.f64	d7, d0
 419:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 7562              		.loc 17 419 5
 7563 002e B0EE470B 		vmov.f64	d0, d7
 7564 0032 0837     		adds	r7, r7, #8
 7565              		.cfi_def_cfa_offset 8
 7566 0034 BD46     		mov	sp, r7
 7567              		.cfi_def_cfa_register 13
 7568              		@ sp needed
 7569 0036 80BD     		pop	{r7, pc}
 7570              		.cfi_endproc
 7571              	.LFE5282:
 7573              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9P
 7574              		.align	1
 7575              		.weak	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
 7576              		.syntax unified
 7577              		.thumb
 7578              		.thumb_func
 7580              	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_:
 7581              	.LFB5283:
 126:../libDaisy/src/daisy_seed.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 177


 7582              		.loc 16 126 17
 7583              		.cfi_startproc
 7584              		@ args = 0, pretend = 0, frame = 16
 7585              		@ frame_needed = 1, uses_anonymous_args = 0
 7586 0000 80B5     		push	{r7, lr}
 7587              		.cfi_def_cfa_offset 8
 7588              		.cfi_offset 7, -8
 7589              		.cfi_offset 14, -4
 7590 0002 84B0     		sub	sp, sp, #16
 7591              		.cfi_def_cfa_offset 24
 7592 0004 00AF     		add	r7, sp, #0
 7593              		.cfi_def_cfa_register 7
 7594 0006 F860     		str	r0, [r7, #12]
 7595 0008 7A60     		str	r2, [r7, #4]
 7596 000a 3B60     		str	r3, [r7]
 7597 000c 0B46     		mov	r3, r1
 7598 000e FB72     		strb	r3, [r7, #11]
 128:../libDaisy/src/daisy_seed.h ****     }
 7599              		.loc 16 128 23
 7600 0010 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 7601 0012 3B68     		ldr	r3, [r7]
 7602 0014 7A68     		ldr	r2, [r7, #4]
 7603 0016 F868     		ldr	r0, [r7, #12]
 7604 0018 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 7605              		.loc 16 129 5
 7606 001c 00BF     		nop
 7607 001e 1037     		adds	r7, r7, #16
 7608              		.cfi_def_cfa_offset 8
 7609 0020 BD46     		mov	sp, r7
 7610              		.cfi_def_cfa_register 13
 7611              		@ sp needed
 7612 0022 80BD     		pop	{r7, pc}
 7613              		.cfi_endproc
 7614              	.LFE5283:
 7616              		.section	.text._ZN5daisy9WavWriterILj16384EE5WriteEv,"axG",%progbits,_ZN5daisy9WavWriterILj16384EE
 7617              		.align	1
 7618              		.weak	_ZN5daisy9WavWriterILj16384EE5WriteEv
 7619              		.syntax unified
 7620              		.thumb
 7621              		.thumb_func
 7623              	_ZN5daisy9WavWriterILj16384EE5WriteEv:
 7624              	.LFB5284:
 7625              		.file 18 "../libDaisy/src/util/WavWriter.h"
   1:../libDaisy/src/util/WavWriter.h **** #pragma once
   2:../libDaisy/src/util/WavWriter.h **** #pragma once
   3:../libDaisy/src/util/WavWriter.h **** #include "fatfs.h"
   4:../libDaisy/src/util/WavWriter.h **** 
   5:../libDaisy/src/util/WavWriter.h **** namespace daisy
   6:../libDaisy/src/util/WavWriter.h **** {
   7:../libDaisy/src/util/WavWriter.h **** /** Audio Recording Module
   8:../libDaisy/src/util/WavWriter.h ****  ** 
   9:../libDaisy/src/util/WavWriter.h ****  ** Record audio into a working buffer that is gradually written to a WAV file on an SD Card. 
  10:../libDaisy/src/util/WavWriter.h ****  **
  11:../libDaisy/src/util/WavWriter.h ****  ** Recordings are made with floating point input, and will be converted to the 
  12:../libDaisy/src/util/WavWriter.h ****  ** specified bits per sample internally 
  13:../libDaisy/src/util/WavWriter.h ****  **
  14:../libDaisy/src/util/WavWriter.h ****  ** For now only 16-bit and 32-bit (signed int) formats are supported
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 178


  15:../libDaisy/src/util/WavWriter.h ****  ** f32 and s24 formats will be added next
  16:../libDaisy/src/util/WavWriter.h ****  **
  17:../libDaisy/src/util/WavWriter.h ****  ** The transfer size determines the amount of internal memory used, and can have an
  18:../libDaisy/src/util/WavWriter.h ****  ** effect on the performance of the streaming behavior of the WavWriter.
  19:../libDaisy/src/util/WavWriter.h ****  ** Memory use can be calculated as: (2 * transfer_size) bytes
  20:../libDaisy/src/util/WavWriter.h ****  ** Performance optimal with sizes: 16384, 32768
  21:../libDaisy/src/util/WavWriter.h ****  ** 
  22:../libDaisy/src/util/WavWriter.h ****  ** To use:
  23:../libDaisy/src/util/WavWriter.h ****  ** 1. Create a WavWriter<size> object (e.g. WavWriter<32768> writer)
  24:../libDaisy/src/util/WavWriter.h ****  ** 2. Configure the settings as desired by creating a WavWriter<32768>::Config struct and setting 
  25:../libDaisy/src/util/WavWriter.h ****  ** 3. Initialize the object with the configuration struct.
  26:../libDaisy/src/util/WavWriter.h ****  ** 4. Open a new file for writing with: writer.OpenFile("FileName.wav")
  27:../libDaisy/src/util/WavWriter.h ****  ** 5. Write to it within your audio callback using: writer.Sample(value)
  28:../libDaisy/src/util/WavWriter.h ****  ** 6. Fill the Wav File on the SD Card with data from your main loop by running: writer.Write()
  29:../libDaisy/src/util/WavWriter.h ****  ** 7. When finished with the recording finalize, and close the file with: writer.SaveFile();
  30:../libDaisy/src/util/WavWriter.h ****  ** 
  31:../libDaisy/src/util/WavWriter.h ****  ** */
  32:../libDaisy/src/util/WavWriter.h **** template <size_t transfer_size>
  33:../libDaisy/src/util/WavWriter.h **** class WavWriter
  34:../libDaisy/src/util/WavWriter.h **** {
  35:../libDaisy/src/util/WavWriter.h ****   public:
  36:../libDaisy/src/util/WavWriter.h ****     WavWriter() {}
  37:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
  38:../libDaisy/src/util/WavWriter.h **** 
  39:../libDaisy/src/util/WavWriter.h ****     /** Return values for write related functions */
  40:../libDaisy/src/util/WavWriter.h ****     enum class Result
  41:../libDaisy/src/util/WavWriter.h ****     {
  42:../libDaisy/src/util/WavWriter.h ****         OK,
  43:../libDaisy/src/util/WavWriter.h ****         ERROR,
  44:../libDaisy/src/util/WavWriter.h ****     };
  45:../libDaisy/src/util/WavWriter.h **** 
  46:../libDaisy/src/util/WavWriter.h ****     /** Configuration structure for the wave writer.
  47:../libDaisy/src/util/WavWriter.h **** 	 ** */
  48:../libDaisy/src/util/WavWriter.h ****     struct Config
  49:../libDaisy/src/util/WavWriter.h ****     {
  50:../libDaisy/src/util/WavWriter.h ****         float   samplerate;
  51:../libDaisy/src/util/WavWriter.h ****         int32_t channels;
  52:../libDaisy/src/util/WavWriter.h ****         int32_t bitspersample;
  53:../libDaisy/src/util/WavWriter.h ****     };
  54:../libDaisy/src/util/WavWriter.h **** 
  55:../libDaisy/src/util/WavWriter.h ****     /** State of the internal Writing mechanism. 
  56:../libDaisy/src/util/WavWriter.h **** 	 ** When the buffer is a certain amount full one section will write its contents
  57:../libDaisy/src/util/WavWriter.h **** 	 ** while the other is still being written to. This is performed circularly
  58:../libDaisy/src/util/WavWriter.h **** 	 ** so that audio will be uninterrupted during writing. */
  59:../libDaisy/src/util/WavWriter.h ****     enum class BufferState
  60:../libDaisy/src/util/WavWriter.h ****     {
  61:../libDaisy/src/util/WavWriter.h ****         IDLE,
  62:../libDaisy/src/util/WavWriter.h ****         FLUSH0,
  63:../libDaisy/src/util/WavWriter.h ****         FLUSH1,
  64:../libDaisy/src/util/WavWriter.h ****     };
  65:../libDaisy/src/util/WavWriter.h **** 
  66:../libDaisy/src/util/WavWriter.h ****     /**  Initializes the WavFile header, and prepares the object for recording. */
  67:../libDaisy/src/util/WavWriter.h ****     void Init(const Config &cfg)
  68:../libDaisy/src/util/WavWriter.h ****     {
  69:../libDaisy/src/util/WavWriter.h ****         cfg_       = cfg;
  70:../libDaisy/src/util/WavWriter.h ****         num_samps_ = 0;
  71:../libDaisy/src/util/WavWriter.h ****         // Prep the wav header according to config.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 179


  72:../libDaisy/src/util/WavWriter.h ****         // Certain things (i.e. Size, etc. will have to wait until the finalization of the file, or
  73:../libDaisy/src/util/WavWriter.h ****         wavheader_.ChunkId       = kWavFileChunkId;     /** "RIFF" */
  74:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileFormat    = kWavFileWaveId;      /** "WAVE" */
  75:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1ID   = kWavFileSubChunk1Id; /** "fmt " */
  76:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1Size = 16;                  // for PCM
  77:../libDaisy/src/util/WavWriter.h ****         wavheader_.AudioFormat   = WAVE_FORMAT_PCM;
  78:../libDaisy/src/util/WavWriter.h ****         wavheader_.NbrChannels   = cfg.channels;
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.SampleRate    = static_cast<int>(cfg.samplerate);
  80:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BlockAlign    = cfg_.channels * cfg_.bitspersample / 8;
  82:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
  83:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk2ID   = kWavFileSubChunk2Id; /** "data" */
  84:../libDaisy/src/util/WavWriter.h ****         /** Also calcs SubChunk2Size */
  85:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileSize = CalcFileSize();
  86:../libDaisy/src/util/WavWriter.h ****         // This is calculated as part of the subchunk size
  87:../libDaisy/src/util/WavWriter.h ****     }
  88:../libDaisy/src/util/WavWriter.h **** 
  89:../libDaisy/src/util/WavWriter.h ****     /** Records the current sample into the working buffer,
  90:../libDaisy/src/util/WavWriter.h ****      ** queues writes to media when necessary. 
  91:../libDaisy/src/util/WavWriter.h ****      ** 
  92:../libDaisy/src/util/WavWriter.h ****      ** \param in should be a pointer to an array of samples */
  93:../libDaisy/src/util/WavWriter.h ****     void Sample(const float *in)
  94:../libDaisy/src/util/WavWriter.h ****     {
  95:../libDaisy/src/util/WavWriter.h ****         for(int32_t i = 0; i < cfg_.channels; i++)
  96:../libDaisy/src/util/WavWriter.h ****         {
  97:../libDaisy/src/util/WavWriter.h ****             switch(cfg_.bitspersample)
  98:../libDaisy/src/util/WavWriter.h ****             {
  99:../libDaisy/src/util/WavWriter.h ****                 case 16:
 100:../libDaisy/src/util/WavWriter.h ****                 {
 101:../libDaisy/src/util/WavWriter.h ****                     int16_t *tp;
 102:../libDaisy/src/util/WavWriter.h ****                     tp            = (int16_t *)transfer_buff;
 103:../libDaisy/src/util/WavWriter.h ****                     tp[wptr_ + i] = f2s16(in[i]);
 104:../libDaisy/src/util/WavWriter.h ****                 }
 105:../libDaisy/src/util/WavWriter.h ****                 break;
 106:../libDaisy/src/util/WavWriter.h ****                 case 32: transfer_buff[wptr_ + i] = f2s32(in[i]); break;
 107:../libDaisy/src/util/WavWriter.h ****                 default: break;
 108:../libDaisy/src/util/WavWriter.h ****             }
 109:../libDaisy/src/util/WavWriter.h ****         }
 110:../libDaisy/src/util/WavWriter.h ****         num_samps_++;
 111:../libDaisy/src/util/WavWriter.h ****         wptr_ += cfg_.channels;
 112:../libDaisy/src/util/WavWriter.h ****         size_t cap_point
 113:../libDaisy/src/util/WavWriter.h ****             = cfg_.bitspersample == 16 ? kTransferSamps * 2 : kTransferSamps;
 114:../libDaisy/src/util/WavWriter.h ****         if(wptr_ == cap_point)
 115:../libDaisy/src/util/WavWriter.h ****         {
 116:../libDaisy/src/util/WavWriter.h ****             bstate_ = BufferState::FLUSH0;
 117:../libDaisy/src/util/WavWriter.h ****         }
 118:../libDaisy/src/util/WavWriter.h ****         if(wptr_ >= cap_point * 2)
 119:../libDaisy/src/util/WavWriter.h ****         {
 120:../libDaisy/src/util/WavWriter.h ****             wptr_   = 0;
 121:../libDaisy/src/util/WavWriter.h ****             bstate_ = BufferState::FLUSH1;
 122:../libDaisy/src/util/WavWriter.h ****         }
 123:../libDaisy/src/util/WavWriter.h ****     }
 124:../libDaisy/src/util/WavWriter.h **** 
 125:../libDaisy/src/util/WavWriter.h ****     /** Check buffer state and write */
 126:../libDaisy/src/util/WavWriter.h ****     void Write()
 7626              		.loc 18 126 10
 7627              		.cfi_startproc
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 180


 7628              		@ args = 0, pretend = 0, frame = 16
 7629              		@ frame_needed = 1, uses_anonymous_args = 0
 7630 0000 80B5     		push	{r7, lr}
 7631              		.cfi_def_cfa_offset 8
 7632              		.cfi_offset 7, -8
 7633              		.cfi_offset 14, -4
 7634 0002 84B0     		sub	sp, sp, #16
 7635              		.cfi_def_cfa_offset 24
 7636 0004 00AF     		add	r7, sp, #0
 7637              		.cfi_def_cfa_register 7
 7638 0006 7860     		str	r0, [r7, #4]
 7639              	.LBB30:
 127:../libDaisy/src/util/WavWriter.h ****     {
 128:../libDaisy/src/util/WavWriter.h ****         if(bstate_ != BufferState::IDLE && IsRecording())
 7640              		.loc 18 128 12
 7641 0008 7B68     		ldr	r3, [r7, #4]
 7642 000a 03F50043 		add	r3, r3, #32768
 7643 000e 1B6C     		ldr	r3, [r3, #64]
 7644              		.loc 18 128 41
 7645 0010 002B     		cmp	r3, #0
 7646 0012 07D0     		beq	.L417
 7647              		.loc 18 128 55 discriminator 1
 7648 0014 7868     		ldr	r0, [r7, #4]
 7649 0016 FFF7FEFF 		bl	_ZNK5daisy9WavWriterILj16384EE11IsRecordingEv
 7650 001a 0346     		mov	r3, r0
 7651              		.loc 18 128 41 discriminator 1
 7652 001c 002B     		cmp	r3, #0
 7653 001e 01D0     		beq	.L417
 7654              		.loc 18 128 41 is_stmt 0 discriminator 3
 7655 0020 0123     		movs	r3, #1
 7656 0022 00E0     		b	.L418
 7657              	.L417:
 7658              		.loc 18 128 41 discriminator 4
 7659 0024 0023     		movs	r3, #0
 7660              	.L418:
 7661              		.loc 18 128 9 is_stmt 1 discriminator 6
 7662 0026 002B     		cmp	r3, #0
 7663 0028 21D0     		beq	.L422
 7664              	.LBB31:
 129:../libDaisy/src/util/WavWriter.h ****         {
 130:../libDaisy/src/util/WavWriter.h ****             uint32_t     offset;
 131:../libDaisy/src/util/WavWriter.h ****             unsigned int bw = 0;
 7665              		.loc 18 131 26
 7666 002a 0023     		movs	r3, #0
 7667 002c BB60     		str	r3, [r7, #8]
 132:../libDaisy/src/util/WavWriter.h ****             //offset          = bstate_ == BufferState::FLUSH0 ? 0 : transfer_size;
 133:../libDaisy/src/util/WavWriter.h ****             offset  = bstate_ == BufferState::FLUSH0 ? 0 : kTransferSamps;
 7668              		.loc 18 133 23
 7669 002e 7B68     		ldr	r3, [r7, #4]
 7670 0030 03F50043 		add	r3, r3, #32768
 7671 0034 1B6C     		ldr	r3, [r3, #64]
 7672              		.loc 18 133 54
 7673 0036 012B     		cmp	r3, #1
 7674 0038 01D1     		bne	.L420
 7675              		.loc 18 133 54 is_stmt 0 discriminator 1
 7676 003a 0023     		movs	r3, #0
 7677 003c 01E0     		b	.L421
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 181


 7678              	.L420:
 7679              		.loc 18 133 54 discriminator 2
 7680 003e 4FF48053 		mov	r3, #4096
 7681              	.L421:
 7682              		.loc 18 133 21 is_stmt 1 discriminator 4
 7683 0042 FB60     		str	r3, [r7, #12]
 134:../libDaisy/src/util/WavWriter.h ****             bstate_ = BufferState::IDLE;
 7684              		.loc 18 134 21 discriminator 4
 7685 0044 7B68     		ldr	r3, [r7, #4]
 7686 0046 03F50043 		add	r3, r3, #32768
 7687 004a 1A46     		mov	r2, r3
 7688 004c 0023     		movs	r3, #0
 7689 004e 1364     		str	r3, [r2, #64]
 135:../libDaisy/src/util/WavWriter.h ****             f_write(&fp_, &transfer_buff[offset], transfer_size, &bw);
 7690              		.loc 18 135 20 discriminator 4
 7691 0050 7B68     		ldr	r3, [r7, #4]
 7692 0052 48F24800 		movw	r0, #32840
 7693 0056 1844     		add	r0, r0, r3
 7694              		.loc 18 135 41 discriminator 4
 7695 0058 FB68     		ldr	r3, [r7, #12]
 7696 005a 1033     		adds	r3, r3, #16
 7697 005c 9B00     		lsls	r3, r3, #2
 7698 005e 7A68     		ldr	r2, [r7, #4]
 7699 0060 D118     		adds	r1, r2, r3
 7700              		.loc 18 135 20 discriminator 4
 7701 0062 07F10803 		add	r3, r7, #8
 7702 0066 4FF48042 		mov	r2, #16384
 7703 006a FFF7FEFF 		bl	f_write
 7704              	.L422:
 7705              	.LBE31:
 7706              	.LBE30:
 136:../libDaisy/src/util/WavWriter.h ****         }
 137:../libDaisy/src/util/WavWriter.h ****     }
 7707              		.loc 18 137 5
 7708 006e 00BF     		nop
 7709 0070 1037     		adds	r7, r7, #16
 7710              		.cfi_def_cfa_offset 8
 7711 0072 BD46     		mov	sp, r7
 7712              		.cfi_def_cfa_register 13
 7713              		@ sp needed
 7714 0074 80BD     		pop	{r7, pc}
 7715              		.cfi_endproc
 7716              	.LFE5284:
 7718              		.section	.text._ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv,"axG",%progbits,_ZN5daisy9WavWrit
 7719              		.align	1
 7720              		.weak	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
 7721              		.syntax unified
 7722              		.thumb
 7723              		.thumb_func
 7725              	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv:
 7726              	.LFB5285:
 138:../libDaisy/src/util/WavWriter.h **** 
 139:../libDaisy/src/util/WavWriter.h ****     /** Finalizes the writing of the WAV file.
 140:../libDaisy/src/util/WavWriter.h **** 	 ** This overwrites the WAV Header with the correct
 141:../libDaisy/src/util/WavWriter.h **** 	 ** final size, and closes the fptr. */
 142:../libDaisy/src/util/WavWriter.h ****     void SaveFile()
 143:../libDaisy/src/util/WavWriter.h ****     {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 182


 144:../libDaisy/src/util/WavWriter.h ****         unsigned int bw = 0;
 145:../libDaisy/src/util/WavWriter.h ****         recording_      = false;
 146:../libDaisy/src/util/WavWriter.h ****         // We _should_ flush whatever's left in the transfer buff
 147:../libDaisy/src/util/WavWriter.h ****         // TODO: that.
 148:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileSize = CalcFileSize();
 149:../libDaisy/src/util/WavWriter.h ****         f_lseek(&fp_, 0);
 150:../libDaisy/src/util/WavWriter.h ****         f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw);
 151:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 152:../libDaisy/src/util/WavWriter.h ****     }
 153:../libDaisy/src/util/WavWriter.h **** 
 154:../libDaisy/src/util/WavWriter.h ****     /** Opens a file for writing. Writes the initial WAV Header, and gets ready for stream-based re
 155:../libDaisy/src/util/WavWriter.h ****     void OpenFile(const char *name)
 156:../libDaisy/src/util/WavWriter.h ****     {
 157:../libDaisy/src/util/WavWriter.h ****         if(f_open(&fp_, name, FA_WRITE | FA_CREATE_ALWAYS) == FR_OK)
 158:../libDaisy/src/util/WavWriter.h ****         {
 159:../libDaisy/src/util/WavWriter.h ****             unsigned int bw = 0;
 160:../libDaisy/src/util/WavWriter.h ****             if(f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw) == FR_OK)
 161:../libDaisy/src/util/WavWriter.h ****             {
 162:../libDaisy/src/util/WavWriter.h ****                 recording_ = true;
 163:../libDaisy/src/util/WavWriter.h ****                 num_samps_ = 0;
 164:../libDaisy/src/util/WavWriter.h ****             }
 165:../libDaisy/src/util/WavWriter.h ****         }
 166:../libDaisy/src/util/WavWriter.h ****     }
 167:../libDaisy/src/util/WavWriter.h **** 
 168:../libDaisy/src/util/WavWriter.h ****     /** Returns whether recording is currently active or not. */
 169:../libDaisy/src/util/WavWriter.h ****     inline bool IsRecording() const { return recording_; }
 170:../libDaisy/src/util/WavWriter.h **** 
 171:../libDaisy/src/util/WavWriter.h ****     /** Returns the current length in samples of the recording. */
 172:../libDaisy/src/util/WavWriter.h ****     inline uint32_t GetLengthSamps() { return num_samps_; }
 173:../libDaisy/src/util/WavWriter.h **** 
 174:../libDaisy/src/util/WavWriter.h ****     /** Returns the current length of the recording in seconds. */
 175:../libDaisy/src/util/WavWriter.h ****     inline float GetLengthSeconds()
 7727              		.loc 18 175 18
 7728              		.cfi_startproc
 7729              		@ args = 0, pretend = 0, frame = 8
 7730              		@ frame_needed = 1, uses_anonymous_args = 0
 7731              		@ link register save eliminated.
 7732 0000 80B4     		push	{r7}
 7733              		.cfi_def_cfa_offset 4
 7734              		.cfi_offset 7, -4
 7735 0002 83B0     		sub	sp, sp, #12
 7736              		.cfi_def_cfa_offset 16
 7737 0004 00AF     		add	r7, sp, #0
 7738              		.cfi_def_cfa_register 7
 7739 0006 7860     		str	r0, [r7, #4]
 176:../libDaisy/src/util/WavWriter.h ****     {
 177:../libDaisy/src/util/WavWriter.h ****         return (float)num_samps_ / (float)cfg_.samplerate;
 7740              		.loc 18 177 23
 7741 0008 7B68     		ldr	r3, [r7, #4]
 7742 000a DB6A     		ldr	r3, [r3, #44]
 7743              		.loc 18 177 16
 7744 000c 07EE903A 		vmov	s15, r3	@ int
 7745 0010 B8EE677A 		vcvt.f32.u32	s14, s15
 7746              		.loc 18 177 48
 7747 0014 7B68     		ldr	r3, [r7, #4]
 7748 0016 D3ED0D7A 		vldr.32	s15, [r3, #52]
 7749 001a C7EE276A 		vdiv.f32	s13, s14, s15
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 183


 7750 001e F0EE667A 		vmov.f32	s15, s13
 178:../libDaisy/src/util/WavWriter.h ****     }
 7751              		.loc 18 178 5
 7752 0022 B0EE670A 		vmov.f32	s0, s15
 7753 0026 0C37     		adds	r7, r7, #12
 7754              		.cfi_def_cfa_offset 4
 7755 0028 BD46     		mov	sp, r7
 7756              		.cfi_def_cfa_register 13
 7757              		@ sp needed
 7758 002a 5DF8047B 		ldr	r7, [sp], #4
 7759              		.cfi_restore 7
 7760              		.cfi_def_cfa_offset 0
 7761 002e 7047     		bx	lr
 7762              		.cfi_endproc
 7763              	.LFE5285:
 7765              		.section	.text._ZN5daisy9WavWriterILj16384EE8SaveFileEv,"axG",%progbits,_ZN5daisy9WavWriterILj1638
 7766              		.align	1
 7767              		.weak	_ZN5daisy9WavWriterILj16384EE8SaveFileEv
 7768              		.syntax unified
 7769              		.thumb
 7770              		.thumb_func
 7772              	_ZN5daisy9WavWriterILj16384EE8SaveFileEv:
 7773              	.LFB5286:
 142:../libDaisy/src/util/WavWriter.h ****     {
 7774              		.loc 18 142 10
 7775              		.cfi_startproc
 7776              		@ args = 0, pretend = 0, frame = 16
 7777              		@ frame_needed = 1, uses_anonymous_args = 0
 7778 0000 80B5     		push	{r7, lr}
 7779              		.cfi_def_cfa_offset 8
 7780              		.cfi_offset 7, -8
 7781              		.cfi_offset 14, -4
 7782 0002 84B0     		sub	sp, sp, #16
 7783              		.cfi_def_cfa_offset 24
 7784 0004 00AF     		add	r7, sp, #0
 7785              		.cfi_def_cfa_register 7
 7786 0006 7860     		str	r0, [r7, #4]
 144:../libDaisy/src/util/WavWriter.h ****         recording_      = false;
 7787              		.loc 18 144 22
 7788 0008 0023     		movs	r3, #0
 7789 000a FB60     		str	r3, [r7, #12]
 145:../libDaisy/src/util/WavWriter.h ****         // We _should_ flush whatever's left in the transfer buff
 7790              		.loc 18 145 25
 7791 000c 7B68     		ldr	r3, [r7, #4]
 7792 000e 03F50043 		add	r3, r3, #32768
 7793 0012 0022     		movs	r2, #0
 7794 0014 83F84420 		strb	r2, [r3, #68]
 148:../libDaisy/src/util/WavWriter.h ****         f_lseek(&fp_, 0);
 7795              		.loc 18 148 43
 7796 0018 7868     		ldr	r0, [r7, #4]
 7797 001a FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
 7798 001e 0246     		mov	r2, r0
 148:../libDaisy/src/util/WavWriter.h ****         f_lseek(&fp_, 0);
 7799              		.loc 18 148 29
 7800 0020 7B68     		ldr	r3, [r7, #4]
 7801 0022 5A60     		str	r2, [r3, #4]
 149:../libDaisy/src/util/WavWriter.h ****         f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw);
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 184


 7802              		.loc 18 149 16
 7803 0024 7A68     		ldr	r2, [r7, #4]
 7804 0026 48F24803 		movw	r3, #32840
 7805 002a 1344     		add	r3, r3, r2
 7806 002c 0021     		movs	r1, #0
 7807 002e 1846     		mov	r0, r3
 7808 0030 FFF7FEFF 		bl	f_lseek
 150:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 7809              		.loc 18 150 16
 7810 0034 7B68     		ldr	r3, [r7, #4]
 7811 0036 48F24800 		movw	r0, #32840
 7812 003a 1844     		add	r0, r0, r3
 150:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 7813              		.loc 18 150 24
 7814 003c 7968     		ldr	r1, [r7, #4]
 150:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 7815              		.loc 18 150 16
 7816 003e 07F10C03 		add	r3, r7, #12
 7817 0042 2C22     		movs	r2, #44
 7818 0044 FFF7FEFF 		bl	f_write
 151:../libDaisy/src/util/WavWriter.h ****     }
 7819              		.loc 18 151 16
 7820 0048 7A68     		ldr	r2, [r7, #4]
 7821 004a 48F24803 		movw	r3, #32840
 7822 004e 1344     		add	r3, r3, r2
 7823 0050 1846     		mov	r0, r3
 7824 0052 FFF7FEFF 		bl	f_close
 152:../libDaisy/src/util/WavWriter.h **** 
 7825              		.loc 18 152 5
 7826 0056 00BF     		nop
 7827 0058 1037     		adds	r7, r7, #16
 7828              		.cfi_def_cfa_offset 8
 7829 005a BD46     		mov	sp, r7
 7830              		.cfi_def_cfa_register 13
 7831              		@ sp needed
 7832 005c 80BD     		pop	{r7, pc}
 7833              		.cfi_endproc
 7834              	.LFE5286:
 7836              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9P
 7837              		.align	1
 7838              		.weak	_ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_
 7839              		.syntax unified
 7840              		.thumb
 7841              		.thumb_func
 7843              	_ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_:
 7844              	.LFB5287:
 126:../libDaisy/src/daisy_seed.h ****     {
 7845              		.loc 16 126 17
 7846              		.cfi_startproc
 7847              		@ args = 0, pretend = 0, frame = 16
 7848              		@ frame_needed = 1, uses_anonymous_args = 0
 7849 0000 80B5     		push	{r7, lr}
 7850              		.cfi_def_cfa_offset 8
 7851              		.cfi_offset 7, -8
 7852              		.cfi_offset 14, -4
 7853 0002 84B0     		sub	sp, sp, #16
 7854              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 185


 7855 0004 00AF     		add	r7, sp, #0
 7856              		.cfi_def_cfa_register 7
 7857 0006 F860     		str	r0, [r7, #12]
 7858 0008 B960     		str	r1, [r7, #8]
 7859 000a 7A60     		str	r2, [r7, #4]
 128:../libDaisy/src/daisy_seed.h ****     }
 7860              		.loc 16 128 23
 7861 000c 7A68     		ldr	r2, [r7, #4]
 7862 000e B968     		ldr	r1, [r7, #8]
 7863 0010 F868     		ldr	r0, [r7, #12]
 7864 0012 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 7865              		.loc 16 129 5
 7866 0016 00BF     		nop
 7867 0018 1037     		adds	r7, r7, #16
 7868              		.cfi_def_cfa_offset 8
 7869 001a BD46     		mov	sp, r7
 7870              		.cfi_def_cfa_register 13
 7871              		@ sp needed
 7872 001c 80BD     		pop	{r7, pc}
 7873              		.cfi_endproc
 7874              	.LFE5287:
 7876              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9Pri
 7877              		.align	1
 7878              		.weak	_ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_
 7879              		.syntax unified
 7880              		.thumb
 7881              		.thumb_func
 7883              	_ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_:
 7884              	.LFB5288:
 126:../libDaisy/src/daisy_seed.h ****     {
 7885              		.loc 16 126 17
 7886              		.cfi_startproc
 7887              		@ args = 0, pretend = 0, frame = 8
 7888              		@ frame_needed = 1, uses_anonymous_args = 0
 7889 0000 80B5     		push	{r7, lr}
 7890              		.cfi_def_cfa_offset 8
 7891              		.cfi_offset 7, -8
 7892              		.cfi_offset 14, -4
 7893 0002 82B0     		sub	sp, sp, #8
 7894              		.cfi_def_cfa_offset 16
 7895 0004 00AF     		add	r7, sp, #0
 7896              		.cfi_def_cfa_register 7
 7897 0006 7860     		str	r0, [r7, #4]
 7898 0008 3960     		str	r1, [r7]
 128:../libDaisy/src/daisy_seed.h ****     }
 7899              		.loc 16 128 23
 7900 000a 3968     		ldr	r1, [r7]
 7901 000c 7868     		ldr	r0, [r7, #4]
 7902 000e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 7903              		.loc 16 129 5
 7904 0012 00BF     		nop
 7905 0014 0837     		adds	r7, r7, #8
 7906              		.cfi_def_cfa_offset 8
 7907 0016 BD46     		mov	sp, r7
 7908              		.cfi_def_cfa_register 13
 7909              		@ sp needed
 7910 0018 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 186


 7911              		.cfi_endproc
 7912              	.LFE5288:
 7914              		.section	.text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE,"axG",%progbits,_ZN5daisy9WavWrit
 7915              		.align	1
 7916              		.weak	_ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE
 7917              		.syntax unified
 7918              		.thumb
 7919              		.thumb_func
 7921              	_ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:
 7922              	.LFB5289:
  67:../libDaisy/src/util/WavWriter.h ****     {
 7923              		.loc 18 67 10
 7924              		.cfi_startproc
 7925              		@ args = 0, pretend = 0, frame = 8
 7926              		@ frame_needed = 1, uses_anonymous_args = 0
 7927 0000 80B5     		push	{r7, lr}
 7928              		.cfi_def_cfa_offset 8
 7929              		.cfi_offset 7, -8
 7930              		.cfi_offset 14, -4
 7931 0002 82B0     		sub	sp, sp, #8
 7932              		.cfi_def_cfa_offset 16
 7933 0004 00AF     		add	r7, sp, #0
 7934              		.cfi_def_cfa_register 7
 7935 0006 7860     		str	r0, [r7, #4]
 7936 0008 3960     		str	r1, [r7]
  69:../libDaisy/src/util/WavWriter.h ****         num_samps_ = 0;
 7937              		.loc 18 69 9
 7938 000a 7B68     		ldr	r3, [r7, #4]
 7939 000c 3A68     		ldr	r2, [r7]
 7940 000e 3433     		adds	r3, r3, #52
 7941 0010 07CA     		ldm	r2, {r0, r1, r2}
 7942 0012 83E80700 		stm	r3, {r0, r1, r2}
  70:../libDaisy/src/util/WavWriter.h ****         // Prep the wav header according to config.
 7943              		.loc 18 70 20
 7944 0016 7B68     		ldr	r3, [r7, #4]
 7945 0018 0022     		movs	r2, #0
 7946 001a DA62     		str	r2, [r3, #44]
  73:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileFormat    = kWavFileWaveId;      /** "WAVE" */
 7947              		.loc 18 73 34
 7948 001c 7B68     		ldr	r3, [r7, #4]
 7949 001e 204A     		ldr	r2, .L430
 7950 0020 1A60     		str	r2, [r3]
  74:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1ID   = kWavFileSubChunk1Id; /** "fmt " */
 7951              		.loc 18 74 34
 7952 0022 7B68     		ldr	r3, [r7, #4]
 7953 0024 1F4A     		ldr	r2, .L430+4
 7954 0026 9A60     		str	r2, [r3, #8]
  75:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1Size = 16;                  // for PCM
 7955              		.loc 18 75 34
 7956 0028 7B68     		ldr	r3, [r7, #4]
 7957 002a 1F4A     		ldr	r2, .L430+8
 7958 002c DA60     		str	r2, [r3, #12]
  76:../libDaisy/src/util/WavWriter.h ****         wavheader_.AudioFormat   = WAVE_FORMAT_PCM;
 7959              		.loc 18 76 34
 7960 002e 7B68     		ldr	r3, [r7, #4]
 7961 0030 1022     		movs	r2, #16
 7962 0032 1A61     		str	r2, [r3, #16]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 187


  77:../libDaisy/src/util/WavWriter.h ****         wavheader_.NbrChannels   = cfg.channels;
 7963              		.loc 18 77 34
 7964 0034 7B68     		ldr	r3, [r7, #4]
 7965 0036 0122     		movs	r2, #1
 7966 0038 9A82     		strh	r2, [r3, #20]	@ movhi
  78:../libDaisy/src/util/WavWriter.h ****         wavheader_.SampleRate    = static_cast<int>(cfg.samplerate);
 7967              		.loc 18 78 40
 7968 003a 3B68     		ldr	r3, [r7]
 7969 003c 5B68     		ldr	r3, [r3, #4]
  78:../libDaisy/src/util/WavWriter.h ****         wavheader_.SampleRate    = static_cast<int>(cfg.samplerate);
 7970              		.loc 18 78 34
 7971 003e 9AB2     		uxth	r2, r3
 7972 0040 7B68     		ldr	r3, [r7, #4]
 7973 0042 DA82     		strh	r2, [r3, #22]	@ movhi
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
 7974              		.loc 18 79 57
 7975 0044 3B68     		ldr	r3, [r7]
 7976 0046 D3ED007A 		vldr.32	s15, [r3]
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
 7977              		.loc 18 79 36
 7978 004a FDEEE77A 		vcvt.s32.f32	s15, s15
 7979 004e 17EE902A 		vmov	r2, s15	@ int
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
 7980              		.loc 18 79 34
 7981 0052 7B68     		ldr	r3, [r7, #4]
 7982 0054 9A61     		str	r2, [r3, #24]
  80:../libDaisy/src/util/WavWriter.h ****         wavheader_.BlockAlign    = cfg_.channels * cfg_.bitspersample / 8;
 7983              		.loc 18 80 48
 7984 0056 7868     		ldr	r0, [r7, #4]
 7985 0058 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE12CalcByteRateEv
 7986 005c 0246     		mov	r2, r0
  80:../libDaisy/src/util/WavWriter.h ****         wavheader_.BlockAlign    = cfg_.channels * cfg_.bitspersample / 8;
 7987              		.loc 18 80 34
 7988 005e 7B68     		ldr	r3, [r7, #4]
 7989 0060 DA61     		str	r2, [r3, #28]
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7990              		.loc 18 81 41
 7991 0062 7B68     		ldr	r3, [r7, #4]
 7992 0064 9B6B     		ldr	r3, [r3, #56]
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7993              		.loc 18 81 57
 7994 0066 7A68     		ldr	r2, [r7, #4]
 7995 0068 D26B     		ldr	r2, [r2, #60]
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7996              		.loc 18 81 50
 7997 006a 02FB03F3 		mul	r3, r2, r3
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7998              		.loc 18 81 71
 7999 006e 002B     		cmp	r3, #0
 8000 0070 00DA     		bge	.L429
 8001 0072 0733     		adds	r3, r3, #7
 8002              	.L429:
 8003 0074 DB10     		asrs	r3, r3, #3
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 8004              		.loc 18 81 34
 8005 0076 9AB2     		uxth	r2, r3
 8006 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 188


 8007 007a 1A84     		strh	r2, [r3, #32]	@ movhi
  82:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk2ID   = kWavFileSubChunk2Id; /** "data" */
 8008              		.loc 18 82 41
 8009 007c 7B68     		ldr	r3, [r7, #4]
 8010 007e DB6B     		ldr	r3, [r3, #60]
  82:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk2ID   = kWavFileSubChunk2Id; /** "data" */
 8011              		.loc 18 82 34
 8012 0080 9AB2     		uxth	r2, r3
 8013 0082 7B68     		ldr	r3, [r7, #4]
 8014 0084 5A84     		strh	r2, [r3, #34]	@ movhi
  83:../libDaisy/src/util/WavWriter.h ****         /** Also calcs SubChunk2Size */
 8015              		.loc 18 83 34
 8016 0086 7B68     		ldr	r3, [r7, #4]
 8017 0088 084A     		ldr	r2, .L430+12
 8018 008a 5A62     		str	r2, [r3, #36]
  85:../libDaisy/src/util/WavWriter.h ****         // This is calculated as part of the subchunk size
 8019              		.loc 18 85 43
 8020 008c 7868     		ldr	r0, [r7, #4]
 8021 008e FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
 8022 0092 0246     		mov	r2, r0
  85:../libDaisy/src/util/WavWriter.h ****         // This is calculated as part of the subchunk size
 8023              		.loc 18 85 29
 8024 0094 7B68     		ldr	r3, [r7, #4]
 8025 0096 5A60     		str	r2, [r3, #4]
  87:../libDaisy/src/util/WavWriter.h **** 
 8026              		.loc 18 87 5
 8027 0098 00BF     		nop
 8028 009a 0837     		adds	r7, r7, #8
 8029              		.cfi_def_cfa_offset 8
 8030 009c BD46     		mov	sp, r7
 8031              		.cfi_def_cfa_register 13
 8032              		@ sp needed
 8033 009e 80BD     		pop	{r7, pc}
 8034              	.L431:
 8035              		.align	2
 8036              	.L430:
 8037 00a0 52494646 		.word	1179011410
 8038 00a4 57415645 		.word	1163280727
 8039 00a8 666D7420 		.word	544501094
 8040 00ac 64617461 		.word	1635017060
 8041              		.cfi_endproc
 8042              	.LFE5289:
 8044              		.section	.text._ZN5daisy9WavWriterILj16384EE6SampleEPKf,"axG",%progbits,_ZN5daisy9WavWriterILj1638
 8045              		.align	1
 8046              		.weak	_ZN5daisy9WavWriterILj16384EE6SampleEPKf
 8047              		.syntax unified
 8048              		.thumb
 8049              		.thumb_func
 8051              	_ZN5daisy9WavWriterILj16384EE6SampleEPKf:
 8052              	.LFB5290:
  93:../libDaisy/src/util/WavWriter.h ****     {
 8053              		.loc 18 93 10
 8054              		.cfi_startproc
 8055              		@ args = 0, pretend = 0, frame = 32
 8056              		@ frame_needed = 1, uses_anonymous_args = 0
 8057              		@ link register save eliminated.
 8058 0000 80B4     		push	{r7}
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 189


 8059              		.cfi_def_cfa_offset 4
 8060              		.cfi_offset 7, -4
 8061 0002 89B0     		sub	sp, sp, #36
 8062              		.cfi_def_cfa_offset 40
 8063 0004 00AF     		add	r7, sp, #0
 8064              		.cfi_def_cfa_register 7
 8065 0006 7860     		str	r0, [r7, #4]
 8066 0008 3960     		str	r1, [r7]
 8067              	.LBB32:
  95:../libDaisy/src/util/WavWriter.h ****         {
 8068              		.loc 18 95 21
 8069 000a 0023     		movs	r3, #0
 8070 000c FB61     		str	r3, [r7, #28]
 8071              	.L452:
  95:../libDaisy/src/util/WavWriter.h ****         {
 8072              		.loc 18 95 37 discriminator 1
 8073 000e 7B68     		ldr	r3, [r7, #4]
 8074 0010 9B6B     		ldr	r3, [r3, #56]
  95:../libDaisy/src/util/WavWriter.h ****         {
 8075              		.loc 18 95 30 discriminator 1
 8076 0012 FA69     		ldr	r2, [r7, #28]
 8077 0014 9A42     		cmp	r2, r3
 8078 0016 74DA     		bge	.L433
 8079              	.LBB33:
 8080              	.LBB34:
  97:../libDaisy/src/util/WavWriter.h ****             {
 8081              		.loc 18 97 25
 8082 0018 7B68     		ldr	r3, [r7, #4]
 8083 001a DB6B     		ldr	r3, [r3, #60]
  97:../libDaisy/src/util/WavWriter.h ****             {
 8084              		.loc 18 97 13
 8085 001c 102B     		cmp	r3, #16
 8086 001e 02D0     		beq	.L434
 8087 0020 202B     		cmp	r3, #32
 8088 0022 37D0     		beq	.L435
 8089              	.LBB35:
 107:../libDaisy/src/util/WavWriter.h ****             }
 8090              		.loc 18 107 26
 8091 0024 69E0     		b	.L444
 8092              	.L434:
 8093              	.LBB36:
 102:../libDaisy/src/util/WavWriter.h ****                     tp[wptr_ + i] = f2s16(in[i]);
 8094              		.loc 18 102 35
 8095 0026 7B68     		ldr	r3, [r7, #4]
 8096 0028 4033     		adds	r3, r3, #64
 8097 002a BB61     		str	r3, [r7, #24]
 103:../libDaisy/src/util/WavWriter.h ****                 }
 8098              		.loc 18 103 46
 8099 002c FB69     		ldr	r3, [r7, #28]
 103:../libDaisy/src/util/WavWriter.h ****                 }
 8100              		.loc 18 103 47
 8101 002e 9B00     		lsls	r3, r3, #2
 8102 0030 3A68     		ldr	r2, [r7]
 8103 0032 1344     		add	r3, r3, r2
 103:../libDaisy/src/util/WavWriter.h ****                 }
 8104              		.loc 18 103 42
 8105 0034 1B68     		ldr	r3, [r3]	@ float
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 190


 103:../libDaisy/src/util/WavWriter.h ****                 }
 8106              		.loc 18 103 24
 8107 0036 7A68     		ldr	r2, [r7, #4]
 8108 0038 116B     		ldr	r1, [r2, #48]
 103:../libDaisy/src/util/WavWriter.h ****                 }
 8109              		.loc 18 103 32
 8110 003a FA69     		ldr	r2, [r7, #28]
 103:../libDaisy/src/util/WavWriter.h ****                 }
 8111              		.loc 18 103 30
 8112 003c 0A44     		add	r2, r2, r1
 103:../libDaisy/src/util/WavWriter.h ****                 }
 8113              		.loc 18 103 33
 8114 003e 5200     		lsls	r2, r2, #1
 8115 0040 B969     		ldr	r1, [r7, #24]
 8116 0042 0A44     		add	r2, r2, r1
 8117 0044 3B61     		str	r3, [r7, #16]	@ float
 8118              	.LBB37:
 8119              	.LBB38:
 123:../libDaisy/src/daisy_core.h **** }
 124:../libDaisy/src/daisy_core.h **** 
 125:../libDaisy/src/daisy_core.h **** /**
 126:../libDaisy/src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../libDaisy/src/daisy_core.h **** */
 128:../libDaisy/src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../libDaisy/src/daisy_core.h **** {
 130:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 8120              		.loc 15 130 22
 8121 0046 D7ED047A 		vldr.32	s15, [r7, #16]
 8122 004a 9FED497A 		vldr.32	s14, .L466
 8123 004e F4EEC77A 		vcmpe.f32	s15, s14
 8124 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8125 0056 01D8     		bhi	.L461
 8126 0058 464B     		ldr	r3, .L466+4
 8127 005a 00E0     		b	.L439
 8128              	.L461:
 8129 005c 3B69     		ldr	r3, [r7, #16]	@ float
 8130              	.L439:
 8131              		.loc 15 130 7
 8132 005e 3B61     		str	r3, [r7, #16]	@ float
 131:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 8133              		.loc 15 131 22
 8134 0060 D7ED047A 		vldr.32	s15, [r7, #16]
 8135 0064 9FED447A 		vldr.32	s14, .L466+8
 8136 0068 F4EEC77A 		vcmpe.f32	s15, s14
 8137 006c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8138 0070 01DB     		blt	.L462
 8139 0072 424B     		ldr	r3, .L466+12
 8140 0074 00E0     		b	.L442
 8141              	.L462:
 8142 0076 3B69     		ldr	r3, [r7, #16]	@ float
 8143              	.L442:
 8144              		.loc 15 131 7
 8145 0078 3B61     		str	r3, [r7, #16]	@ float
 132:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 8146              		.loc 15 132 24
 8147 007a D7ED047A 		vldr.32	s15, [r7, #16]
 8148 007e 9FED407A 		vldr.32	s14, .L466+16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 191


 8149 0082 67EE877A 		vmul.f32	s15, s15, s14
 8150              		.loc 15 132 12
 8151 0086 FDEEE77A 		vcvt.s32.f32	s15, s15
 8152              		.loc 15 132 37
 8153 008a 17EE903A 		vmov	r3, s15	@ int
 8154 008e 1BB2     		sxth	r3, r3
 8155              	.LBE38:
 8156              	.LBE37:
 103:../libDaisy/src/util/WavWriter.h ****                 }
 8157              		.loc 18 103 35
 8158 0090 1380     		strh	r3, [r2]	@ movhi
 8159              	.LBE36:
 105:../libDaisy/src/util/WavWriter.h ****                 case 32: transfer_buff[wptr_ + i] = f2s32(in[i]); break;
 8160              		.loc 18 105 17
 8161 0092 32E0     		b	.L444
 8162              	.L435:
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8163              		.loc 18 106 62
 8164 0094 FB69     		ldr	r3, [r7, #28]
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8165              		.loc 18 106 63
 8166 0096 9B00     		lsls	r3, r3, #2
 8167 0098 3A68     		ldr	r2, [r7]
 8168 009a 1344     		add	r3, r3, r2
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8169              		.loc 18 106 58
 8170 009c 1B68     		ldr	r3, [r3]	@ float
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8171              		.loc 18 106 40
 8172 009e 7A68     		ldr	r2, [r7, #4]
 8173 00a0 116B     		ldr	r1, [r2, #48]
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8174              		.loc 18 106 48
 8175 00a2 FA69     		ldr	r2, [r7, #28]
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8176              		.loc 18 106 46
 8177 00a4 0A44     		add	r2, r2, r1
 8178 00a6 FB60     		str	r3, [r7, #12]	@ float
 8179              	.LBB39:
 8180              	.LBB40:
 133:../libDaisy/src/daisy_core.h **** }
 134:../libDaisy/src/daisy_core.h **** 
 135:../libDaisy/src/daisy_core.h **** /**
 136:../libDaisy/src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../libDaisy/src/daisy_core.h ****  */
 138:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../libDaisy/src/daisy_core.h **** {
 140:../libDaisy/src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../libDaisy/src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../libDaisy/src/daisy_core.h **** }
 143:../libDaisy/src/daisy_core.h **** /**
 144:../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../libDaisy/src/daisy_core.h ****  */
 146:../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../libDaisy/src/daisy_core.h **** {
 148:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 192


 150:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../libDaisy/src/daisy_core.h **** }
 152:../libDaisy/src/daisy_core.h **** 
 153:../libDaisy/src/daisy_core.h **** /**
 154:../libDaisy/src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../libDaisy/src/daisy_core.h ****  */
 156:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../libDaisy/src/daisy_core.h **** {
 158:../libDaisy/src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../libDaisy/src/daisy_core.h **** }
 160:../libDaisy/src/daisy_core.h **** /**
 161:../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../libDaisy/src/daisy_core.h ****  */
 163:../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../libDaisy/src/daisy_core.h **** {
 165:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 8181              		.loc 15 165 22
 8182 00a8 D7ED037A 		vldr.32	s15, [r7, #12]
 8183 00ac 9FED307A 		vldr.32	s14, .L466
 8184 00b0 F4EEC77A 		vcmpe.f32	s15, s14
 8185 00b4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8186 00b8 01D8     		bhi	.L463
 8187 00ba 2E4B     		ldr	r3, .L466+4
 8188 00bc 00E0     		b	.L447
 8189              	.L463:
 8190 00be FB68     		ldr	r3, [r7, #12]	@ float
 8191              	.L447:
 8192              		.loc 15 165 7
 8193 00c0 FB60     		str	r3, [r7, #12]	@ float
 166:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 8194              		.loc 15 166 22
 8195 00c2 D7ED037A 		vldr.32	s15, [r7, #12]
 8196 00c6 9FED2C7A 		vldr.32	s14, .L466+8
 8197 00ca F4EEC77A 		vcmpe.f32	s15, s14
 8198 00ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8199 00d2 01DB     		blt	.L464
 8200 00d4 294B     		ldr	r3, .L466+12
 8201 00d6 00E0     		b	.L450
 8202              	.L464:
 8203 00d8 FB68     		ldr	r3, [r7, #12]	@ float
 8204              	.L450:
 8205              		.loc 15 166 7
 8206 00da FB60     		str	r3, [r7, #12]	@ float
 167:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 8207              		.loc 15 167 24
 8208 00dc D7ED037A 		vldr.32	s15, [r7, #12]
 8209 00e0 9FED287A 		vldr.32	s14, .L466+20
 8210 00e4 67EE877A 		vmul.f32	s15, s15, s14
 8211              		.loc 15 167 37
 8212 00e8 FDEEE77A 		vcvt.s32.f32	s15, s15
 8213 00ec 17EE901A 		vmov	r1, s15	@ int
 8214              	.LBE40:
 8215              	.LBE39:
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8216              		.loc 18 106 51
 8217 00f0 7B68     		ldr	r3, [r7, #4]
 8218 00f2 1032     		adds	r2, r2, #16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 193


 8219 00f4 43F82210 		str	r1, [r3, r2, lsl #2]
 106:../libDaisy/src/util/WavWriter.h ****                 default: break;
 8220              		.loc 18 106 67
 8221 00f8 00BF     		nop
 8222              	.L444:
 8223              	.LBE35:
 8224              	.LBE34:
 8225              	.LBE33:
  95:../libDaisy/src/util/WavWriter.h ****         {
 8226              		.loc 18 95 9 discriminator 2
 8227 00fa FB69     		ldr	r3, [r7, #28]
 8228 00fc 0133     		adds	r3, r3, #1
 8229 00fe FB61     		str	r3, [r7, #28]
 8230 0100 85E7     		b	.L452
 8231              	.L433:
 8232              	.LBE32:
 110:../libDaisy/src/util/WavWriter.h ****         wptr_ += cfg_.channels;
 8233              		.loc 18 110 9
 8234 0102 7B68     		ldr	r3, [r7, #4]
 8235 0104 DB6A     		ldr	r3, [r3, #44]
 8236 0106 5A1C     		adds	r2, r3, #1
 8237 0108 7B68     		ldr	r3, [r7, #4]
 8238 010a DA62     		str	r2, [r3, #44]
 111:../libDaisy/src/util/WavWriter.h ****         size_t cap_point
 8239              		.loc 18 111 15
 8240 010c 7B68     		ldr	r3, [r7, #4]
 8241 010e 1B6B     		ldr	r3, [r3, #48]
 111:../libDaisy/src/util/WavWriter.h ****         size_t cap_point
 8242              		.loc 18 111 23
 8243 0110 7A68     		ldr	r2, [r7, #4]
 8244 0112 926B     		ldr	r2, [r2, #56]
 111:../libDaisy/src/util/WavWriter.h ****         size_t cap_point
 8245              		.loc 18 111 15
 8246 0114 1A44     		add	r2, r2, r3
 8247 0116 7B68     		ldr	r3, [r7, #4]
 8248 0118 1A63     		str	r2, [r3, #48]
 113:../libDaisy/src/util/WavWriter.h ****         if(wptr_ == cap_point)
 8249              		.loc 18 113 20
 8250 011a 7B68     		ldr	r3, [r7, #4]
 8251 011c DB6B     		ldr	r3, [r3, #60]
 113:../libDaisy/src/util/WavWriter.h ****         if(wptr_ == cap_point)
 8252              		.loc 18 113 40
 8253 011e 102B     		cmp	r3, #16
 8254 0120 02D1     		bne	.L453
 113:../libDaisy/src/util/WavWriter.h ****         if(wptr_ == cap_point)
 8255              		.loc 18 113 40 is_stmt 0 discriminator 1
 8256 0122 4FF40053 		mov	r3, #8192
 8257 0126 01E0     		b	.L454
 8258              	.L453:
 113:../libDaisy/src/util/WavWriter.h ****         if(wptr_ == cap_point)
 8259              		.loc 18 113 40 discriminator 2
 8260 0128 4FF48053 		mov	r3, #4096
 8261              	.L454:
 112:../libDaisy/src/util/WavWriter.h ****             = cfg_.bitspersample == 16 ? kTransferSamps * 2 : kTransferSamps;
 8262              		.loc 18 112 16 is_stmt 1
 8263 012c 7B61     		str	r3, [r7, #20]
 114:../libDaisy/src/util/WavWriter.h ****         {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 194


 8264              		.loc 18 114 12
 8265 012e 7B68     		ldr	r3, [r7, #4]
 8266 0130 1B6B     		ldr	r3, [r3, #48]
 114:../libDaisy/src/util/WavWriter.h ****         {
 8267              		.loc 18 114 9
 8268 0132 7A69     		ldr	r2, [r7, #20]
 8269 0134 9A42     		cmp	r2, r3
 8270 0136 05D1     		bne	.L455
 116:../libDaisy/src/util/WavWriter.h ****         }
 8271              		.loc 18 116 21
 8272 0138 7B68     		ldr	r3, [r7, #4]
 8273 013a 03F50043 		add	r3, r3, #32768
 8274 013e 1A46     		mov	r2, r3
 8275 0140 0123     		movs	r3, #1
 8276 0142 1364     		str	r3, [r2, #64]
 8277              	.L455:
 118:../libDaisy/src/util/WavWriter.h ****         {
 8278              		.loc 18 118 12
 8279 0144 7B68     		ldr	r3, [r7, #4]
 8280 0146 1A6B     		ldr	r2, [r3, #48]
 118:../libDaisy/src/util/WavWriter.h ****         {
 8281              		.loc 18 118 31
 8282 0148 7B69     		ldr	r3, [r7, #20]
 8283 014a 5B00     		lsls	r3, r3, #1
 118:../libDaisy/src/util/WavWriter.h ****         {
 8284              		.loc 18 118 9
 8285 014c 9A42     		cmp	r2, r3
 8286 014e 08D3     		bcc	.L465
 120:../libDaisy/src/util/WavWriter.h ****             bstate_ = BufferState::FLUSH1;
 8287              		.loc 18 120 21
 8288 0150 7B68     		ldr	r3, [r7, #4]
 8289 0152 0022     		movs	r2, #0
 8290 0154 1A63     		str	r2, [r3, #48]
 121:../libDaisy/src/util/WavWriter.h ****         }
 8291              		.loc 18 121 21
 8292 0156 7B68     		ldr	r3, [r7, #4]
 8293 0158 03F50043 		add	r3, r3, #32768
 8294 015c 1A46     		mov	r2, r3
 8295 015e 0223     		movs	r3, #2
 8296 0160 1364     		str	r3, [r2, #64]
 8297              	.L465:
 123:../libDaisy/src/util/WavWriter.h **** 
 8298              		.loc 18 123 5
 8299 0162 00BF     		nop
 8300 0164 2437     		adds	r7, r7, #36
 8301              		.cfi_def_cfa_offset 4
 8302 0166 BD46     		mov	sp, r7
 8303              		.cfi_def_cfa_register 13
 8304              		@ sp needed
 8305 0168 5DF8047B 		ldr	r7, [sp], #4
 8306              		.cfi_restore 7
 8307              		.cfi_def_cfa_offset 0
 8308 016c 7047     		bx	lr
 8309              	.L467:
 8310 016e 00BF     		.align	2
 8311              	.L466:
 8312 0170 04FF7FBF 		.word	-1082130684
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 195


 8313 0174 04FF7FBF 		.word	-1082130684
 8314 0178 04FF7F3F 		.word	1065352964
 8315 017c 04FF7F3F 		.word	1065352964
 8316 0180 00FEFF46 		.word	1191181824
 8317 0184 0000004F 		.word	1325400064
 8318              		.cfi_endproc
 8319              	.LFE5290:
 8321              		.section	.text._ZN5daisy9WavWriterILj16384EE8OpenFileEPKc,"axG",%progbits,_ZN5daisy9WavWriterILj16
 8322              		.align	1
 8323              		.weak	_ZN5daisy9WavWriterILj16384EE8OpenFileEPKc
 8324              		.syntax unified
 8325              		.thumb
 8326              		.thumb_func
 8328              	_ZN5daisy9WavWriterILj16384EE8OpenFileEPKc:
 8329              	.LFB5291:
 155:../libDaisy/src/util/WavWriter.h ****     {
 8330              		.loc 18 155 10
 8331              		.cfi_startproc
 8332              		@ args = 0, pretend = 0, frame = 16
 8333              		@ frame_needed = 1, uses_anonymous_args = 0
 8334 0000 80B5     		push	{r7, lr}
 8335              		.cfi_def_cfa_offset 8
 8336              		.cfi_offset 7, -8
 8337              		.cfi_offset 14, -4
 8338 0002 84B0     		sub	sp, sp, #16
 8339              		.cfi_def_cfa_offset 24
 8340 0004 00AF     		add	r7, sp, #0
 8341              		.cfi_def_cfa_register 7
 8342 0006 7860     		str	r0, [r7, #4]
 8343 0008 3960     		str	r1, [r7]
 8344              	.LBB41:
 157:../libDaisy/src/util/WavWriter.h ****         {
 8345              		.loc 18 157 18
 8346 000a 7A68     		ldr	r2, [r7, #4]
 8347 000c 48F24803 		movw	r3, #32840
 8348 0010 1344     		add	r3, r3, r2
 8349 0012 0A22     		movs	r2, #10
 8350 0014 3968     		ldr	r1, [r7]
 8351 0016 1846     		mov	r0, r3
 8352 0018 FFF7FEFF 		bl	f_open
 8353 001c 0346     		mov	r3, r0
 157:../libDaisy/src/util/WavWriter.h ****         {
 8354              		.loc 18 157 60
 8355 001e 002B     		cmp	r3, #0
 8356 0020 0CBF     		ite	eq
 8357 0022 0123     		moveq	r3, #1
 8358 0024 0023     		movne	r3, #0
 8359 0026 DBB2     		uxtb	r3, r3
 157:../libDaisy/src/util/WavWriter.h ****         {
 8360              		.loc 18 157 9
 8361 0028 002B     		cmp	r3, #0
 8362 002a 1CD0     		beq	.L471
 8363              	.LBB42:
 159:../libDaisy/src/util/WavWriter.h ****             if(f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw) == FR_OK)
 8364              		.loc 18 159 26
 8365 002c 0023     		movs	r3, #0
 8366 002e FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 196


 160:../libDaisy/src/util/WavWriter.h ****             {
 8367              		.loc 18 160 23
 8368 0030 7B68     		ldr	r3, [r7, #4]
 8369 0032 48F24800 		movw	r0, #32840
 8370 0036 1844     		add	r0, r0, r3
 160:../libDaisy/src/util/WavWriter.h ****             {
 8371              		.loc 18 160 31
 8372 0038 7968     		ldr	r1, [r7, #4]
 160:../libDaisy/src/util/WavWriter.h ****             {
 8373              		.loc 18 160 23
 8374 003a 07F10C03 		add	r3, r7, #12
 8375 003e 2C22     		movs	r2, #44
 8376 0040 FFF7FEFF 		bl	f_write
 8377 0044 0346     		mov	r3, r0
 160:../libDaisy/src/util/WavWriter.h ****             {
 8378              		.loc 18 160 68
 8379 0046 002B     		cmp	r3, #0
 8380 0048 0CBF     		ite	eq
 8381 004a 0123     		moveq	r3, #1
 8382 004c 0023     		movne	r3, #0
 8383 004e DBB2     		uxtb	r3, r3
 160:../libDaisy/src/util/WavWriter.h ****             {
 8384              		.loc 18 160 13
 8385 0050 002B     		cmp	r3, #0
 8386 0052 08D0     		beq	.L471
 162:../libDaisy/src/util/WavWriter.h ****                 num_samps_ = 0;
 8387              		.loc 18 162 28
 8388 0054 7B68     		ldr	r3, [r7, #4]
 8389 0056 03F50043 		add	r3, r3, #32768
 8390 005a 0122     		movs	r2, #1
 8391 005c 83F84420 		strb	r2, [r3, #68]
 163:../libDaisy/src/util/WavWriter.h ****             }
 8392              		.loc 18 163 28
 8393 0060 7B68     		ldr	r3, [r7, #4]
 8394 0062 0022     		movs	r2, #0
 8395 0064 DA62     		str	r2, [r3, #44]
 8396              	.L471:
 8397              	.LBE42:
 8398              	.LBE41:
 166:../libDaisy/src/util/WavWriter.h **** 
 8399              		.loc 18 166 5
 8400 0066 00BF     		nop
 8401 0068 1037     		adds	r7, r7, #16
 8402              		.cfi_def_cfa_offset 8
 8403 006a BD46     		mov	sp, r7
 8404              		.cfi_def_cfa_register 13
 8405              		@ sp needed
 8406 006c 80BD     		pop	{r7, pc}
 8407              		.cfi_endproc
 8408              	.LFE5291:
 8410              		.section	.text._ZNK5daisy9WavWriterILj16384EE11IsRecordingEv,"axG",%progbits,_ZNK5daisy9WavWriterI
 8411              		.align	1
 8412              		.weak	_ZNK5daisy9WavWriterILj16384EE11IsRecordingEv
 8413              		.syntax unified
 8414              		.thumb
 8415              		.thumb_func
 8417              	_ZNK5daisy9WavWriterILj16384EE11IsRecordingEv:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 197


 8418              	.LFB5416:
 169:../libDaisy/src/util/WavWriter.h **** 
 8419              		.loc 18 169 17
 8420              		.cfi_startproc
 8421              		@ args = 0, pretend = 0, frame = 8
 8422              		@ frame_needed = 1, uses_anonymous_args = 0
 8423              		@ link register save eliminated.
 8424 0000 80B4     		push	{r7}
 8425              		.cfi_def_cfa_offset 4
 8426              		.cfi_offset 7, -4
 8427 0002 83B0     		sub	sp, sp, #12
 8428              		.cfi_def_cfa_offset 16
 8429 0004 00AF     		add	r7, sp, #0
 8430              		.cfi_def_cfa_register 7
 8431 0006 7860     		str	r0, [r7, #4]
 169:../libDaisy/src/util/WavWriter.h **** 
 8432              		.loc 18 169 46
 8433 0008 7B68     		ldr	r3, [r7, #4]
 8434 000a 03F50043 		add	r3, r3, #32768
 8435 000e 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 169:../libDaisy/src/util/WavWriter.h **** 
 8436              		.loc 18 169 58
 8437 0012 1846     		mov	r0, r3
 8438 0014 0C37     		adds	r7, r7, #12
 8439              		.cfi_def_cfa_offset 4
 8440 0016 BD46     		mov	sp, r7
 8441              		.cfi_def_cfa_register 13
 8442              		@ sp needed
 8443 0018 5DF8047B 		ldr	r7, [sp], #4
 8444              		.cfi_restore 7
 8445              		.cfi_def_cfa_offset 0
 8446 001c 7047     		bx	lr
 8447              		.cfi_endproc
 8448              	.LFE5416:
 8450              		.section	.text._ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv,"axG",%progbits,_ZN5daisy9WavWriterIL
 8451              		.align	1
 8452              		.weak	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
 8453              		.syntax unified
 8454              		.thumb
 8455              		.thumb_func
 8457              	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv:
 8458              	.LFB5417:
 179:../libDaisy/src/util/WavWriter.h **** 
 180:../libDaisy/src/util/WavWriter.h ****   private:
 181:../libDaisy/src/util/WavWriter.h ****     /** Calculate the file size based on current recording */
 182:../libDaisy/src/util/WavWriter.h ****     inline uint32_t CalcFileSize()
 8459              		.loc 18 182 21
 8460              		.cfi_startproc
 8461              		@ args = 0, pretend = 0, frame = 8
 8462              		@ frame_needed = 1, uses_anonymous_args = 0
 8463              		@ link register save eliminated.
 8464 0000 80B4     		push	{r7}
 8465              		.cfi_def_cfa_offset 4
 8466              		.cfi_offset 7, -4
 8467 0002 83B0     		sub	sp, sp, #12
 8468              		.cfi_def_cfa_offset 16
 8469 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 198


 8470              		.cfi_def_cfa_register 7
 8471 0006 7860     		str	r0, [r7, #4]
 183:../libDaisy/src/util/WavWriter.h ****     {
 184:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubCHunk2Size
 185:../libDaisy/src/util/WavWriter.h ****             = num_samps_ * cfg_.channels * cfg_.bitspersample / 8;
 8472              		.loc 18 185 15
 8473 0008 7B68     		ldr	r3, [r7, #4]
 8474 000a DB6A     		ldr	r3, [r3, #44]
 8475              		.loc 18 185 33
 8476 000c 7A68     		ldr	r2, [r7, #4]
 8477 000e 926B     		ldr	r2, [r2, #56]
 8478              		.loc 18 185 26
 8479 0010 02FB03F3 		mul	r3, r2, r3
 8480              		.loc 18 185 49
 8481 0014 7A68     		ldr	r2, [r7, #4]
 8482 0016 D26B     		ldr	r2, [r2, #60]
 8483              		.loc 18 185 42
 8484 0018 02FB03F3 		mul	r3, r2, r3
 8485              		.loc 18 185 63
 8486 001c DA08     		lsrs	r2, r3, #3
 8487              		.loc 18 185 13
 8488 001e 7B68     		ldr	r3, [r7, #4]
 8489 0020 9A62     		str	r2, [r3, #40]
 186:../libDaisy/src/util/WavWriter.h ****         return 36 + wavheader_.SubCHunk2Size;
 8490              		.loc 18 186 32
 8491 0022 7B68     		ldr	r3, [r7, #4]
 8492 0024 9B6A     		ldr	r3, [r3, #40]
 8493 0026 2433     		adds	r3, r3, #36
 187:../libDaisy/src/util/WavWriter.h ****     }
 8494              		.loc 18 187 5
 8495 0028 1846     		mov	r0, r3
 8496 002a 0C37     		adds	r7, r7, #12
 8497              		.cfi_def_cfa_offset 4
 8498 002c BD46     		mov	sp, r7
 8499              		.cfi_def_cfa_register 13
 8500              		@ sp needed
 8501 002e 5DF8047B 		ldr	r7, [sp], #4
 8502              		.cfi_restore 7
 8503              		.cfi_def_cfa_offset 0
 8504 0032 7047     		bx	lr
 8505              		.cfi_endproc
 8506              	.LFE5417:
 8508              		.section	.text._ZN5daisy9WavWriterILj16384EE12CalcByteRateEv,"axG",%progbits,_ZN5daisy9WavWriterIL
 8509              		.align	1
 8510              		.weak	_ZN5daisy9WavWriterILj16384EE12CalcByteRateEv
 8511              		.syntax unified
 8512              		.thumb
 8513              		.thumb_func
 8515              	_ZN5daisy9WavWriterILj16384EE12CalcByteRateEv:
 8516              	.LFB5418:
 188:../libDaisy/src/util/WavWriter.h **** 
 189:../libDaisy/src/util/WavWriter.h ****     /** Compute the byte rate given the user settings. */
 190:../libDaisy/src/util/WavWriter.h ****     inline uint32_t CalcByteRate()
 8517              		.loc 18 190 21
 8518              		.cfi_startproc
 8519              		@ args = 0, pretend = 0, frame = 8
 8520              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 199


 8521              		@ link register save eliminated.
 8522 0000 80B4     		push	{r7}
 8523              		.cfi_def_cfa_offset 4
 8524              		.cfi_offset 7, -4
 8525 0002 83B0     		sub	sp, sp, #12
 8526              		.cfi_def_cfa_offset 16
 8527 0004 00AF     		add	r7, sp, #0
 8528              		.cfi_def_cfa_register 7
 8529 0006 7860     		str	r0, [r7, #4]
 191:../libDaisy/src/util/WavWriter.h ****     {
 192:../libDaisy/src/util/WavWriter.h ****         return cfg_.samplerate * cfg_.channels * cfg_.bitspersample / 8;
 8530              		.loc 18 192 21
 8531 0008 7B68     		ldr	r3, [r7, #4]
 8532 000a 93ED0D7A 		vldr.32	s14, [r3, #52]
 8533              		.loc 18 192 39
 8534 000e 7B68     		ldr	r3, [r7, #4]
 8535 0010 9B6B     		ldr	r3, [r3, #56]
 8536              		.loc 18 192 32
 8537 0012 07EE903A 		vmov	s15, r3	@ int
 8538 0016 F8EEE77A 		vcvt.f32.s32	s15, s15
 8539 001a 27EE277A 		vmul.f32	s14, s14, s15
 8540              		.loc 18 192 55
 8541 001e 7B68     		ldr	r3, [r7, #4]
 8542 0020 DB6B     		ldr	r3, [r3, #60]
 8543              		.loc 18 192 48
 8544 0022 07EE903A 		vmov	s15, r3	@ int
 8545 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 8546 002a 27EE277A 		vmul.f32	s14, s14, s15
 8547              		.loc 18 192 69
 8548 002e F2EE006A 		vmov.f32	s13, #8.0e+0
 8549 0032 C7EE267A 		vdiv.f32	s15, s14, s13
 8550              		.loc 18 192 71
 8551 0036 FCEEE77A 		vcvt.u32.f32	s15, s15
 8552 003a 17EE903A 		vmov	r3, s15	@ int
 193:../libDaisy/src/util/WavWriter.h ****     }
 8553              		.loc 18 193 5
 8554 003e 1846     		mov	r0, r3
 8555 0040 0C37     		adds	r7, r7, #12
 8556              		.cfi_def_cfa_offset 4
 8557 0042 BD46     		mov	sp, r7
 8558              		.cfi_def_cfa_register 13
 8559              		@ sp needed
 8560 0044 5DF8047B 		ldr	r7, [sp], #4
 8561              		.cfi_restore 7
 8562              		.cfi_def_cfa_offset 0
 8563 0048 7047     		bx	lr
 8564              		.cfi_endproc
 8565              	.LFE5418:
 8567              		.text
 8568              	.Letext0:
 8569              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 8570              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 8571              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 8572              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 8573              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/cpp_type_traits.
 8574              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 8575              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 200


 8576              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 8577              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 8578              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 8579              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 8580              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 8581              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 8582              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 8583              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 8584              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 8585              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 8586              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 8587              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 8588              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 8589              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 8590              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 8591              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/type_traits.h"
 8592              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 8593              		.file 43 "<built-in>"
 8594              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 8595              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 8596              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 8597              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 8598              		.file 48 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 8599              		.file 49 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 8600              		.file 50 "../libDaisy/src/per/tim.h"
 8601              		.file 51 "../libDaisy/src/sys/system.h"
 8602              		.file 52 "../libDaisy/src/per/qspi.h"
 8603              		.file 53 "../libDaisy/src/per/dac.h"
 8604              		.file 54 "../libDaisy/src/per/sai.h"
 8605              		.file 55 "../libDaisy/src/hid/audio.h"
 8606              		.file 56 "../libDaisy/src/per/adc.h"
 8607              		.file 57 "../libDaisy/src/per/uart.h"
 8608              		.file 58 "../libDaisy/src/hid/MidiEvent.h"
 8609              		.file 59 "../libDaisy/src/hid/midi_parser.h"
 8610              		.file 60 "../libDaisy/src/hid/usb.h"
 8611              		.file 61 "../libDaisy/src/hid/midi.h"
 8612              		.file 62 "../libDaisy/src/util/FIFO.h"
 8613              		.file 63 "../libDaisy/src/hid/ctrl.h"
 8614              		.file 64 "../libDaisy/src/hid/logger_impl.h"
 8615              		.file 65 "../libDaisy/src/per/sdmmc.h"
 8616              		.file 66 "../libDaisy/src/util/wav_format.h"
 8617              		.file 67 "../libDaisy/src/hid/led.h"
 8618              		.file 68 "../libDaisy/src/hid/rgb_led.h"
 8619              		.file 69 "../libDaisy/src/dev/max11300.h"
 8620              		.file 70 "../libDaisy/src/sys/fatfs.h"
 8621              		.file 71 "../libDaisy/src/hid/logger.h"
 8622              		.file 72 "../libDaisy/src/daisy_pod.h"
 8623              		.file 73 "../libDaisy/src/per/gpio.h"
 8624              		.file 74 "../libDaisy/src/dev/sdram.h"
 8625              		.file 75 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 8626              		.file 76 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 8627              		.file 77 "../libDaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 8628              		.file 78 "../libDaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 8629              		.file 79 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 8630              		.file 80 "../DaisySP/Source/Control/adenv.h"
 8631              		.file 81 "../DaisySP/Source/Dynamics/limiter.h"
 8632              		.file 82 "../DaisySP/Source/Utility/smooth_random.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 201


 8633              		.file 83 "../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h"
 8634              		.file 84 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 8635              		.file 85 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/time.h"
 8636              		.file 86 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 8637              		.file 87 "../DaisySP/Source/Effects/../../../src/sample.h"
 8638              		.file 88 "../libDaisy/src/dev/sr_595.h"
 8639              		.file 89 "GrainPhasor.h"
 8640              		.file 90 "Grain.h"
 8641              		.file 91 "GranularSynth.h"
 8642              		.file 92 "AppState.h"
 8643              		.file 93 "GrannyChordApp.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 202


DEFINED SYMBOLS
                            *ABS*:0000000000000000 GrannyChordApp.cpp
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:19     .text._ZSt3absf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:25     .text._ZSt3absf:0000000000000000 _ZSt3absf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:59     .rodata._ZStL19piecewise_construct:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:62     .rodata._ZStL19piecewise_construct:0000000000000000 _ZStL19piecewise_construct
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:65     .text._ZNK5daisy6Switch11FallingEdgeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:71     .text._ZNK5daisy6Switch11FallingEdgeEv:0000000000000000 _ZNK5daisy6Switch11FallingEdgeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:122    .text._ZNK5daisy6Switch7PressedEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:128    .text._ZNK5daisy6Switch7PressedEv:0000000000000000 _ZNK5daisy6Switch7PressedEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:167    .text._ZNK5daisy6Switch10TimeHeldMsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:173    .text._ZNK5daisy6Switch10TimeHeldMsEv:0000000000000000 _ZNK5daisy6Switch10TimeHeldMsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:222    .text._ZNK5daisy6Switch10TimeHeldMsEv:000000000000003c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:227    .text._ZNK5daisy7Encoder9IncrementEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:233    .text._ZNK5daisy7Encoder9IncrementEv:0000000000000000 _ZNK5daisy7Encoder9IncrementEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:279    .text._ZNK5daisy7Encoder11FallingEdgeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:285    .text._ZNK5daisy7Encoder11FallingEdgeEv:0000000000000000 _ZNK5daisy7Encoder11FallingEdgeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:318    .text._ZNK5daisy7Encoder10TimeHeldMsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:324    .text._ZNK5daisy7Encoder10TimeHeldMsEv:0000000000000000 _ZNK5daisy7Encoder10TimeHeldMsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:357    .rodata._ZN5daisyL15kWavFileChunkIdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:360    .rodata._ZN5daisyL15kWavFileChunkIdE:0000000000000000 _ZN5daisyL15kWavFileChunkIdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:363    .rodata._ZN5daisyL14kWavFileWaveIdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:366    .rodata._ZN5daisyL14kWavFileWaveIdE:0000000000000000 _ZN5daisyL14kWavFileWaveIdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:369    .rodata._ZN5daisyL19kWavFileSubChunk1IdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:372    .rodata._ZN5daisyL19kWavFileSubChunk1IdE:0000000000000000 _ZN5daisyL19kWavFileSubChunk1IdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:375    .rodata._ZN5daisyL19kWavFileSubChunk2IdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:378    .rodata._ZN5daisyL19kWavFileSubChunk2IdE:0000000000000000 _ZN5daisyL19kWavFileSubChunk2IdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:381    .text._ZN5daisy5ColorD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:387    .text._ZN5daisy5ColorD2Ev:0000000000000000 _ZN5daisy5ColorD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:387    .text._ZN5daisy5ColorD2Ev:0000000000000000 _ZN5daisy5ColorD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:421    .rodata._ZL19kMaxSr595DaisyChain:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:424    .rodata._ZL19kMaxSr595DaisyChain:0000000000000000 _ZL19kMaxSr595DaisyChain
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:427    .text._ZN5daisy12CpuLoadMeter12OnBlockStartEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:433    .text._ZN5daisy12CpuLoadMeter12OnBlockStartEv:0000000000000000 _ZN5daisy12CpuLoadMeter12OnBlockStartEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:467    .text._ZN5daisy12CpuLoadMeter10OnBlockEndEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:473    .text._ZN5daisy12CpuLoadMeter10OnBlockEndEv:0000000000000000 _ZN5daisy12CpuLoadMeter10OnBlockEndEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:598    .text._ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:604    .text._ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv:0000000000000000 _ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:638    .text._ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:644    .text._ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv:0000000000000000 _ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:678    .text._ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:684    .text._ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv:0000000000000000 _ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:718    .rodata._ZN5daisy4seedL2D0E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:721    .rodata._ZN5daisy4seedL2D0E:0000000000000000 _ZN5daisy4seedL2D0E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:725    .rodata._ZN5daisy4seedL2D1E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:728    .rodata._ZN5daisy4seedL2D1E:0000000000000000 _ZN5daisy4seedL2D1E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:732    .rodata._ZN5daisy4seedL2D2E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:735    .rodata._ZN5daisy4seedL2D2E:0000000000000000 _ZN5daisy4seedL2D2E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:739    .rodata._ZN5daisy4seedL2D3E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:742    .rodata._ZN5daisy4seedL2D3E:0000000000000000 _ZN5daisy4seedL2D3E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:746    .rodata._ZN5daisy4seedL2D4E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:749    .rodata._ZN5daisy4seedL2D4E:0000000000000000 _ZN5daisy4seedL2D4E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:753    .rodata._ZN5daisy4seedL2D5E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:756    .rodata._ZN5daisy4seedL2D5E:0000000000000000 _ZN5daisy4seedL2D5E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:760    .rodata._ZN5daisy4seedL2D6E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:763    .rodata._ZN5daisy4seedL2D6E:0000000000000000 _ZN5daisy4seedL2D6E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:767    .rodata._ZN5daisy4seedL2D7E:0000000000000000 $d
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 203


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:770    .rodata._ZN5daisy4seedL2D7E:0000000000000000 _ZN5daisy4seedL2D7E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:774    .rodata._ZN5daisy4seedL2D8E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:777    .rodata._ZN5daisy4seedL2D8E:0000000000000000 _ZN5daisy4seedL2D8E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:781    .rodata._ZN5daisy4seedL2D9E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:784    .rodata._ZN5daisy4seedL2D9E:0000000000000000 _ZN5daisy4seedL2D9E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:788    .rodata._ZN5daisy4seedL3D10E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:791    .rodata._ZN5daisy4seedL3D10E:0000000000000000 _ZN5daisy4seedL3D10E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:795    .rodata._ZN5daisy4seedL3D11E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:798    .rodata._ZN5daisy4seedL3D11E:0000000000000000 _ZN5daisy4seedL3D11E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:802    .rodata._ZN5daisy4seedL3D12E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:805    .rodata._ZN5daisy4seedL3D12E:0000000000000000 _ZN5daisy4seedL3D12E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:809    .rodata._ZN5daisy4seedL3D13E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:812    .rodata._ZN5daisy4seedL3D13E:0000000000000000 _ZN5daisy4seedL3D13E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:816    .rodata._ZN5daisy4seedL3D14E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:819    .rodata._ZN5daisy4seedL3D14E:0000000000000000 _ZN5daisy4seedL3D14E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:823    .rodata._ZN5daisy4seedL3D15E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:826    .rodata._ZN5daisy4seedL3D15E:0000000000000000 _ZN5daisy4seedL3D15E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:830    .rodata._ZN5daisy4seedL3D16E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:833    .rodata._ZN5daisy4seedL3D16E:0000000000000000 _ZN5daisy4seedL3D16E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:837    .rodata._ZN5daisy4seedL3D17E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:840    .rodata._ZN5daisy4seedL3D17E:0000000000000000 _ZN5daisy4seedL3D17E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:844    .rodata._ZN5daisy4seedL3D18E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:847    .rodata._ZN5daisy4seedL3D18E:0000000000000000 _ZN5daisy4seedL3D18E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:851    .rodata._ZN5daisy4seedL3D19E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:854    .rodata._ZN5daisy4seedL3D19E:0000000000000000 _ZN5daisy4seedL3D19E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:858    .rodata._ZN5daisy4seedL3D20E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:861    .rodata._ZN5daisy4seedL3D20E:0000000000000000 _ZN5daisy4seedL3D20E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:865    .rodata._ZN5daisy4seedL3D21E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:868    .rodata._ZN5daisy4seedL3D21E:0000000000000000 _ZN5daisy4seedL3D21E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:872    .rodata._ZN5daisy4seedL3D22E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:875    .rodata._ZN5daisy4seedL3D22E:0000000000000000 _ZN5daisy4seedL3D22E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:879    .rodata._ZN5daisy4seedL3D23E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:882    .rodata._ZN5daisy4seedL3D23E:0000000000000000 _ZN5daisy4seedL3D23E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:886    .rodata._ZN5daisy4seedL3D24E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:889    .rodata._ZN5daisy4seedL3D24E:0000000000000000 _ZN5daisy4seedL3D24E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:893    .rodata._ZN5daisy4seedL3D25E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:896    .rodata._ZN5daisy4seedL3D25E:0000000000000000 _ZN5daisy4seedL3D25E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:899    .rodata._ZN5daisy4seedL3D26E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:902    .rodata._ZN5daisy4seedL3D26E:0000000000000000 _ZN5daisy4seedL3D26E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:906    .rodata._ZN5daisy4seedL3D27E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:909    .rodata._ZN5daisy4seedL3D27E:0000000000000000 _ZN5daisy4seedL3D27E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:913    .rodata._ZN5daisy4seedL3D28E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:916    .rodata._ZN5daisy4seedL3D28E:0000000000000000 _ZN5daisy4seedL3D28E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:920    .rodata._ZN5daisy4seedL3D29E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:923    .rodata._ZN5daisy4seedL3D29E:0000000000000000 _ZN5daisy4seedL3D29E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:927    .rodata._ZN5daisy4seedL3D30E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:930    .rodata._ZN5daisy4seedL3D30E:0000000000000000 _ZN5daisy4seedL3D30E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:934    .rodata._ZN5daisy4seedL2A0E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:937    .rodata._ZN5daisy4seedL2A0E:0000000000000000 _ZN5daisy4seedL2A0E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:941    .rodata._ZN5daisy4seedL2A1E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:944    .rodata._ZN5daisy4seedL2A1E:0000000000000000 _ZN5daisy4seedL2A1E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:948    .rodata._ZN5daisy4seedL2A2E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:951    .rodata._ZN5daisy4seedL2A2E:0000000000000000 _ZN5daisy4seedL2A2E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:955    .rodata._ZN5daisy4seedL2A3E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:958    .rodata._ZN5daisy4seedL2A3E:0000000000000000 _ZN5daisy4seedL2A3E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:962    .rodata._ZN5daisy4seedL2A4E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:965    .rodata._ZN5daisy4seedL2A4E:0000000000000000 _ZN5daisy4seedL2A4E
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 204


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:969    .rodata._ZN5daisy4seedL2A5E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:972    .rodata._ZN5daisy4seedL2A5E:0000000000000000 _ZN5daisy4seedL2A5E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:976    .rodata._ZN5daisy4seedL2A6E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:979    .rodata._ZN5daisy4seedL2A6E:0000000000000000 _ZN5daisy4seedL2A6E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:983    .rodata._ZN5daisy4seedL2A7E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:986    .rodata._ZN5daisy4seedL2A7E:0000000000000000 _ZN5daisy4seedL2A7E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:990    .rodata._ZN5daisy4seedL2A8E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:993    .rodata._ZN5daisy4seedL2A8E:0000000000000000 _ZN5daisy4seedL2A8E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:997    .rodata._ZN5daisy4seedL2A9E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1000   .rodata._ZN5daisy4seedL2A9E:0000000000000000 _ZN5daisy4seedL2A9E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1004   .rodata._ZN5daisy4seedL3A10E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1007   .rodata._ZN5daisy4seedL3A10E:0000000000000000 _ZN5daisy4seedL3A10E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1010   .rodata._ZN5daisy4seedL3A11E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1013   .rodata._ZN5daisy4seedL3A11E:0000000000000000 _ZN5daisy4seedL3A11E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1017   .rodata._ZN5daisy4seedL3D31E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1020   .rodata._ZN5daisy4seedL3D31E:0000000000000000 _ZN5daisy4seedL3D31E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1024   .rodata._ZN5daisy4seedL3D32E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1027   .rodata._ZN5daisy4seedL3D32E:0000000000000000 _ZN5daisy4seedL3D32E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1031   .rodata._ZN5daisy4seedL3A12E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1034   .rodata._ZN5daisy4seedL3A12E:0000000000000000 _ZN5daisy4seedL3A12E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1038   .rodata._ZN5daisy4seedL3A13E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1041   .rodata._ZN5daisy4seedL3A13E:0000000000000000 _ZN5daisy4seedL3A13E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1045   .text._ZL20__gthread_key_deletei:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1050   .text._ZL20__gthread_key_deletei:0000000000000000 _ZL20__gthread_key_deletei
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1083   .rodata._ZN7daisyspL9kRandFracE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1086   .rodata._ZN7daisyspL9kRandFracE:0000000000000000 _ZN7daisyspL9kRandFracE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1089   .rodata._ZN7daisyspL11kOneTwelfthE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1092   .rodata._ZN7daisyspL11kOneTwelfthE:0000000000000000 _ZN7daisyspL11kOneTwelfthE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1095   .text._ZN7daisysp4fmaxEff:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1101   .text._ZN7daisysp4fmaxEff:0000000000000000 _ZN7daisysp4fmaxEff
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1146   .text._ZN7daisysp4fminEff:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1152   .text._ZN7daisysp4fminEff:0000000000000000 _ZN7daisysp4fminEff
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1196   .text._ZN7daisysp6fclampEfff:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1202   .text._ZN7daisysp6fclampEfff:0000000000000000 _ZN7daisysp6fclampEfff
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1240   .text._ZN7daisysp4fmapEfffNS_7MappingE:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1246   .text._ZN7daisysp4fmapEfffNS_7MappingE:0000000000000000 _ZN7daisysp4fmapEfffNS_7MappingE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1359   .text._ZN7daisysp7OnePole4InitEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1365   .text._ZN7daisysp7OnePole4InitEv:0000000000000000 _ZN7daisysp7OnePole4InitEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1406   .text._ZN7daisysp7OnePole5ResetEv:0000000000000000 _ZN7daisysp7OnePole5ResetEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1400   .text._ZN7daisysp7OnePole5ResetEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1440   .text._ZN7daisysp7OnePole12SetFrequencyEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1446   .text._ZN7daisysp7OnePole12SetFrequencyEf:0000000000000000 _ZN7daisysp7OnePole12SetFrequencyEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1510   .text._ZN7daisysp7OnePole12SetFrequencyEf:0000000000000068 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1517   .text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1523   .text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:0000000000000000 _ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1559   .text._ZN7daisysp7OnePole7ProcessEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1565   .text._ZN7daisysp7OnePole7ProcessEf:0000000000000000 _ZN7daisysp7OnePole7ProcessEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1650   .text._ZN7daisysp7OnePole7ProcessEf:000000000000008c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1655   .text._ZN7daisysp8ReverbSc6SetMixEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1661   .text._ZN7daisysp8ReverbSc6SetMixEf:0000000000000000 _ZN7daisysp8ReverbSc6SetMixEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1699   .text._ZN7daisysp8ReverbSc11SetFeedbackERKf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1705   .text._ZN7daisysp8ReverbSc11SetFeedbackERKf:0000000000000000 _ZN7daisysp8ReverbSc11SetFeedbackERKf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1742   .text._ZN7daisysp10MoogLadder7SetFreqEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1748   .text._ZN7daisysp10MoogLadder7SetFreqEf:0000000000000000 _ZN7daisysp10MoogLadder7SetFreqEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1784   .text._ZN7daisysp10MoogLadder6SetResEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1790   .text._ZN7daisysp10MoogLadder6SetResEf:0000000000000000 _ZN7daisysp10MoogLadder6SetResEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1825   .rodata._ZL11SAMPLE_RATE:0000000000000000 $d
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 205


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1828   .rodata._ZL11SAMPLE_RATE:0000000000000000 _ZL11SAMPLE_RATE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1831   .rodata._ZL17SAMPLE_RATE_FLOAT:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1834   .rodata._ZL17SAMPLE_RATE_FLOAT:0000000000000000 _ZL17SAMPLE_RATE_FLOAT
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1837   .rodata._ZL9BIT_DEPTH:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1840   .rodata._ZL9BIT_DEPTH:0000000000000000 _ZL9BIT_DEPTH
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1843   .rodata._ZL10DELAY_TIME:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1846   .rodata._ZL10DELAY_TIME:0000000000000000 _ZL10DELAY_TIME
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1849   .rodata._ZL15MAX_REC_OUT_LEN:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1852   .rodata._ZL15MAX_REC_OUT_LEN:0000000000000000 _ZL15MAX_REC_OUT_LEN
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1855   .rodata._ZL17CHNL_BUF_SIZE_ABS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1858   .rodata._ZL17CHNL_BUF_SIZE_ABS:0000000000000000 _ZL17CHNL_BUF_SIZE_ABS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1861   .rodata._ZL19CHNL_BUF_SIZE_SAMPS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1864   .rodata._ZL19CHNL_BUF_SIZE_SAMPS:0000000000000000 _ZL19CHNL_BUF_SIZE_SAMPS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1867   .rodata._ZL12BUF_CHUNK_SZ:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1870   .rodata._ZL12BUF_CHUNK_SZ:0000000000000000 _ZL12BUF_CHUNK_SZ
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1873   .rodata._ZL9MAX_FILES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1876   .rodata._ZL9MAX_FILES:0000000000000000 _ZL9MAX_FILES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1879   .rodata._ZL13MAX_FNAME_LEN:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1882   .rodata._ZL13MAX_FNAME_LEN:0000000000000000 _ZL13MAX_FNAME_LEN
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1885   .rodata._ZL10MIN_GRAINS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1888   .rodata._ZL10MIN_GRAINS:0000000000000000 _ZL10MIN_GRAINS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1891   .rodata._ZL10MAX_GRAINS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1894   .rodata._ZL10MAX_GRAINS:0000000000000000 _ZL10MAX_GRAINS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1897   .rodata._ZL25GRAIN_INCREASE_SMOOTHNESS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1900   .rodata._ZL25GRAIN_INCREASE_SMOOTHNESS:0000000000000000 _ZL25GRAIN_INCREASE_SMOOTHNESS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1903   .rodata._ZL15NUM_SYNTH_MODES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1906   .rodata._ZL15NUM_SYNTH_MODES:0000000000000000 _ZL15NUM_SYNTH_MODES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1909   .rodata._ZL22PARAM_CHANGE_THRESHOLD:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1912   .rodata._ZL22PARAM_CHANGE_THRESHOLD:0000000000000000 _ZL22PARAM_CHANGE_THRESHOLD
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1915   .rodata._ZL17MIN_GRAIN_SIZE_MS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1918   .rodata._ZL17MIN_GRAIN_SIZE_MS:0000000000000000 _ZL17MIN_GRAIN_SIZE_MS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1921   .rodata._ZL17MAX_GRAIN_SIZE_MS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1924   .rodata._ZL17MAX_GRAIN_SIZE_MS:0000000000000000 _ZL17MAX_GRAIN_SIZE_MS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1927   .rodata._ZL22MIN_GRAIN_SIZE_SAMPLES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1930   .rodata._ZL22MIN_GRAIN_SIZE_SAMPLES:0000000000000000 _ZL22MIN_GRAIN_SIZE_SAMPLES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1933   .rodata._ZL22MAX_GRAIN_SIZE_SAMPLES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1936   .rodata._ZL22MAX_GRAIN_SIZE_SAMPLES:0000000000000000 _ZL22MAX_GRAIN_SIZE_SAMPLES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1939   .rodata._ZL9MIN_PITCH:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1942   .rodata._ZL9MIN_PITCH:0000000000000000 _ZL9MIN_PITCH
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1945   .rodata._ZL9MAX_PITCH:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1948   .rodata._ZL9MAX_PITCH:0000000000000000 _ZL9MAX_PITCH
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1951   .rodata._ZL14DEBOUNCE_DELAY:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1954   .rodata._ZL14DEBOUNCE_DELAY:0000000000000000 _ZL14DEBOUNCE_DELAY
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1957   .rodata._ZL15LONG_PRESS_TIME:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1960   .rodata._ZL15LONG_PRESS_TIME:0000000000000000 _ZL15LONG_PRESS_TIME
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1963   .rodata._ZL18HIPASS_LOWER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1966   .rodata._ZL18HIPASS_LOWER_BOUND:0000000000000000 _ZL18HIPASS_LOWER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1969   .rodata._ZL18HIPASS_UPPER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1972   .rodata._ZL18HIPASS_UPPER_BOUND:0000000000000000 _ZL18HIPASS_UPPER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1975   .rodata._ZL18LOPASS_LOWER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1978   .rodata._ZL18LOPASS_LOWER_BOUND:0000000000000000 _ZL18LOPASS_LOWER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1981   .rodata._ZL18LOPASS_UPPER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1984   .rodata._ZL18LOPASS_UPPER_BOUND:0000000000000000 _ZL18LOPASS_UPPER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1987   .rodata._ZL10HICUT_FREQ:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1990   .rodata._ZL10HICUT_FREQ:0000000000000000 _ZL10HICUT_FREQ
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1993   .text._ZL7SeedRngv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:1998   .text._ZL7SeedRngv:0000000000000000 _ZL7SeedRngv
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 206


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2025   .text._ZL7SeedRngv:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2030   .rodata._ZL6halfpi:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2033   .rodata._ZL6halfpi:0000000000000000 _ZL6halfpi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2036   .text._ZL7FastCosf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2041   .text._ZL7FastCosf:0000000000000000 _ZL7FastCosf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2096   .text._ZL7FastCosf:0000000000000054 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2106   .text._ZL7FastSinf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2111   .text._ZL7FastSinf:0000000000000000 _ZL7FastSinf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2144   .text._ZL7FastSinf:000000000000002c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2149   .text._ZL22NormaliseRotationAnglef:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2154   .text._ZL22NormaliseRotationAnglef:0000000000000000 _ZL22NormaliseRotationAnglef
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2225   .text._ZL22NormaliseRotationAnglef:0000000000000080 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2235   .text._ZNK16AudioFileManager20GetSamplesPerChannelEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2241   .text._ZNK16AudioFileManager20GetSamplesPerChannelEv:0000000000000000 _ZNK16AudioFileManager20GetSamplesPerChannelEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2281   .text._ZNK16AudioFileManager14GetNumChannelsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2287   .text._ZNK16AudioFileManager14GetNumChannelsEv:0000000000000000 _ZNK16AudioFileManager14GetNumChannelsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2321   .text._ZNK16AudioFileManager12GetFileCountEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2327   .text._ZNK16AudioFileManager12GetFileCountEv:0000000000000000 _ZNK16AudioFileManager12GetFileCountEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2361   .text._ZNK16AudioFileManager7GetNameEtPc:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2367   .text._ZNK16AudioFileManager7GetNameEtPc:0000000000000000 _ZNK16AudioFileManager7GetNameEtPc
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2409   .text._ZN13StereoRotator7SetFreqEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2415   .text._ZN13StereoRotator7SetFreqEf:0000000000000000 _ZN13StereoRotator7SetFreqEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2453   .text._ZN13StereoRotator7SetFreqEf:0000000000000030 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2458   .text._ZN13StereoRotator7ProcessE6Sample:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2464   .text._ZN13StereoRotator7ProcessE6Sample:0000000000000000 _ZN13StereoRotator7ProcessE6Sample
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2572   .text._ZN13StereoRotator7ProcessE6Sample:00000000000000f0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2580   .text._ZN13StereoRotator10ProcessMixE6Sample:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2586   .text._ZN13StereoRotator10ProcessMixE6Sample:0000000000000000 _ZN13StereoRotator10ProcessMixE6Sample
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2680   .text._ZN13StereoRotator6SetMixEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2686   .text._ZN13StereoRotator6SetMixEf:0000000000000000 _ZN13StereoRotator6SetMixEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2725   .bss._ZN14GrannyChordApp9instance_E:0000000000000000 _ZN14GrannyChordApp9instance_E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2722   .bss._ZN14GrannyChordApp9instance_E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2728   .rodata:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2732   .text._ZN14GrannyChordApp4InitEPsS0_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2738   .text._ZN14GrannyChordApp4InitEPsS0_:0000000000000000 _ZN14GrannyChordApp4InitEPsS0_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4813   .text._ZN14GrannyChordApp11InitFileMgrEv:0000000000000000 _ZN14GrannyChordApp11InitFileMgrEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7497   .text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5175   .text._ZN14GrannyChordApp6InitFXEv:0000000000000000 _ZN14GrannyChordApp6InitFXEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5274   .text._ZN14GrannyChordApp17InitPrevParamValsEv:0000000000000000 _ZN14GrannyChordApp17InitPrevParamValsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6819   .text._ZN14GrannyChordApp11InitColoursEv:0000000000000000 _ZN14GrannyChordApp11InitColoursEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6919   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000000 _ZN14GrannyChordApp14SetLedAppStateEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2866   .text._ZN14GrannyChordApp4InitEPsS0_:00000000000000d0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2884   .text._ZN14GrannyChordApp12PrintCPULoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:2890   .text._ZN14GrannyChordApp12PrintCPULoadEv:0000000000000000 _ZN14GrannyChordApp12PrintCPULoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7534   .text._ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:0000000000000000 _ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7580   .text._ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3106   .text._ZN14GrannyChordApp12PrintCPULoadEv:0000000000000218 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3119   .text._ZN14GrannyChordApp3RunEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3125   .text._ZN14GrannyChordApp3RunEv:0000000000000000 _ZN14GrannyChordApp3RunEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7623   .text._ZN5daisy9WavWriterILj16384EE5WriteEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE5WriteEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7725   .text._ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7772   .text._ZN5daisy9WavWriterILj16384EE8SaveFileEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE8SaveFileEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3250   .text._ZN14GrannyChordApp8UpdateUIEv:0000000000000000 _ZN14GrannyChordApp8UpdateUIEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4540   .text._ZN14GrannyChordApp17UpdateSynthParamsEv:0000000000000000 _ZN14GrannyChordApp17UpdateSynthParamsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3232   .text._ZN14GrannyChordApp3RunEv:00000000000000c8 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3244   .text._ZN14GrannyChordApp8UpdateUIEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3734   .text._ZN14GrannyChordApp22HandleEncoderLongPressEv:0000000000000000 _ZN14GrannyChordApp22HandleEncoderLongPressEv
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 207


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3655   .text._ZN14GrannyChordApp20HandleEncoderPressedEv:0000000000000000 _ZN14GrannyChordApp20HandleEncoderPressedEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3831   .text._ZN14GrannyChordApp22ButtonLongPressHandlerEv:0000000000000000 _ZN14GrannyChordApp22ButtonLongPressHandlerEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3963   .text._ZN14GrannyChordApp13ButtonHandlerEv:0000000000000000 _ZN14GrannyChordApp13ButtonHandlerEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3589   .text._ZN14GrannyChordApp22HandleEncoderIncrementEi:0000000000000000 _ZN14GrannyChordApp22HandleEncoderIncrementEi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6610   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000000 _ZN14GrannyChordApp15DebugPrintStateE8AppState
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3474   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000000 _ZN14GrannyChordApp17HandleStateChangeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3454   .text._ZN14GrannyChordApp8UpdateUIEv:0000000000000148 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3468   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3499   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3505   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000030 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5061   .text._ZN14GrannyChordApp12InitRecordInEv:0000000000000000 _ZN14GrannyChordApp12InitRecordInEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4964   .text._ZN14GrannyChordApp12InitPlaybackEv:0000000000000000 _ZN14GrannyChordApp12InitPlaybackEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4887   .text._ZN14GrannyChordApp9InitSynthEv:0000000000000000 _ZN14GrannyChordApp9InitSynthEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3577   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000094 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3583   .text._ZN14GrannyChordApp22HandleEncoderIncrementEi:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4195   .text._ZN14GrannyChordApp19HandleFileSelectionEl:0000000000000000 _ZN14GrannyChordApp19HandleFileSelectionEl
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3649   .text._ZN14GrannyChordApp20HandleEncoderPressedEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3728   .text._ZN14GrannyChordApp22HandleEncoderLongPressEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3825   .text._ZN14GrannyChordApp22ButtonLongPressHandlerEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4098   .text._ZN14GrannyChordApp22HandleButton1LongPressEv:0000000000000000 _ZN14GrannyChordApp22HandleButton1LongPressEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3951   .text._ZN14GrannyChordApp22ButtonLongPressHandlerEv:00000000000000b8 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:3957   .text._ZN14GrannyChordApp13ButtonHandlerEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4026   .text._ZN14GrannyChordApp13HandleButton1Ev:0000000000000000 _ZN14GrannyChordApp13HandleButton1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4062   .text._ZN14GrannyChordApp13HandleButton2Ev:0000000000000000 _ZN14GrannyChordApp13HandleButton2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4020   .text._ZN14GrannyChordApp13HandleButton1Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4286   .text._ZN14GrannyChordApp13NextSynthModeEv:0000000000000000 _ZN14GrannyChordApp13NextSynthModeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4056   .text._ZN14GrannyChordApp13HandleButton2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4415   .text._ZN14GrannyChordApp13PrevSynthModeEv:0000000000000000 _ZN14GrannyChordApp13PrevSynthModeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4092   .text._ZN14GrannyChordApp22HandleButton1LongPressEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7195   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000000 _ZN14GrannyChordApp15SetLedSynthModeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4149   .text._ZN14GrannyChordApp22HandleButton2LongPressEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4155   .text._ZN14GrannyChordApp22HandleButton2LongPressEv:0000000000000000 _ZN14GrannyChordApp22HandleButton2LongPressEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4189   .text._ZN14GrannyChordApp19HandleFileSelectionEl:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7843   .text._ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4271   .text._ZN14GrannyChordApp19HandleFileSelectionEl:0000000000000074 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4280   .text._ZN14GrannyChordApp13NextSynthModeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6717   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000000 _ZN14GrannyChordApp14DebugPrintModeE9SynthMode
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4400   .text._ZN14GrannyChordApp13NextSynthModeEv:00000000000000b4 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4409   .text._ZN14GrannyChordApp13PrevSynthModeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4529   .text._ZN14GrannyChordApp13PrevSynthModeEv:00000000000000b4 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4534   .text._ZN14GrannyChordApp17UpdateSynthParamsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6528   .text._ZN14GrannyChordApp15MapKnobDeadzoneEf:0000000000000000 _ZN14GrannyChordApp15MapKnobDeadzoneEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6292   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000000 _ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6428   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:0000000000000000 _ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4807   .text._ZN14GrannyChordApp11InitFileMgrEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4881   .text._ZN14GrannyChordApp9InitSynthEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7883   .text._ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4946   .text._ZN14GrannyChordApp9InitSynthEv:0000000000000058 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:4958   .text._ZN14GrannyChordApp12InitPlaybackEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5048   .text._ZN14GrannyChordApp12InitPlaybackEv:000000000000007c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5371   .text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:0000000000000000 _ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5055   .text._ZN14GrannyChordApp12InitRecordInEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5110   .text._ZN14GrannyChordApp13InitWavWriterEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5116   .text._ZN14GrannyChordApp13InitWavWriterEv:0000000000000000 _ZN14GrannyChordApp13InitWavWriterEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7921   .text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:0000000000000000 _ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5164   .text._ZN14GrannyChordApp13InitWavWriterEv:000000000000003c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5169   .text._ZN14GrannyChordApp6InitFXEv:0000000000000000 $t
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 208


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5260   .text._ZN14GrannyChordApp6InitFXEv:00000000000000a4 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5268   .text._ZN14GrannyChordApp17InitPrevParamValsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5360   .text._ZN14GrannyChordApp17InitPrevParamValsEv:0000000000000070 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5365   .text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5421   .text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:0000000000000000 _ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5406   .text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:0000000000000024 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5415   .text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5535   .text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:0000000000000000 _ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5858   .text._ZN14GrannyChordApp16ProcessSynthesisEPPfj:0000000000000000 _ZN14GrannyChordApp16ProcessSynthesisEPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5523   .text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:0000000000000084 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5529   .text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5680   .text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:00000000000000dc $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5685   .text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5691   .text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:0000000000000000 _ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5846   .text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:00000000000000ec $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:5852   .text._ZN14GrannyChordApp16ProcessSynthesisEPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6042   .text._ZN14GrannyChordApp9ProcessFXE6Sample:0000000000000000 _ZN14GrannyChordApp9ProcessFXE6Sample
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8051   .text._ZN5daisy9WavWriterILj16384EE6SampleEPKf:0000000000000000 _ZN5daisy9WavWriterILj16384EE6SampleEPKf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6031   .text._ZN14GrannyChordApp16ProcessSynthesisEPPfj:000000000000012c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6036   .text._ZN14GrannyChordApp9ProcessFXE6Sample:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6174   .text._ZN14GrannyChordApp13RecordOutToSDEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6180   .text._ZN14GrannyChordApp13RecordOutToSDEv:0000000000000000 _ZN14GrannyChordApp13RecordOutToSDEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8328   .text._ZN5daisy9WavWriterILj16384EE8OpenFileEPKc:0000000000000000 _ZN5daisy9WavWriterILj16384EE8OpenFileEPKc
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6238   .text._ZN14GrannyChordApp13RecordOutToSDEv:0000000000000060 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6243   .text._ZN14GrannyChordApp15FinishRecordingEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6249   .text._ZN14GrannyChordApp15FinishRecordingEv:0000000000000000 _ZN14GrannyChordApp15FinishRecordingEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6286   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6317   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:000000000000001c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6324   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000038 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6417   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:00000000000000ec $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6422   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6453   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:000000000000001c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6460   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:0000000000000038 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6516   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:000000000000009c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6522   .text._ZN14GrannyChordApp15MapKnobDeadzoneEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6582   .text._ZN14GrannyChordApp15MapKnobDeadzoneEf:0000000000000050 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6604   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6634   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6638   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000028 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6680   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000058 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6711   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6741   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6748   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000034 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6802   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000074 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6813   .text._ZN14GrannyChordApp11InitColoursEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6907   .text._ZN14GrannyChordApp11InitColoursEv:00000000000000b0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6913   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6945   .text._ZN14GrannyChordApp14SetLedAppStateEv:000000000000001c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:6951   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000034 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7184   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000218 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7189   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7229   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000028 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7236   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000044 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7491   .text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7528   .text._ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7574   .text._ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7617   .text._ZN5daisy9WavWriterILj16384EE5WriteEv:0000000000000000 $t
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 209


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8417   .text._ZNK5daisy9WavWriterILj16384EE11IsRecordingEv:0000000000000000 _ZNK5daisy9WavWriterILj16384EE11IsRecordingEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7719   .text._ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7766   .text._ZN5daisy9WavWriterILj16384EE8SaveFileEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8457   .text._ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7837   .text._ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7877   .text._ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:7915   .text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8515   .text._ZN5daisy9WavWriterILj16384EE12CalcByteRateEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE12CalcByteRateEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8037   .text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:00000000000000a0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8045   .text._ZN5daisy9WavWriterILj16384EE6SampleEPKf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8312   .text._ZN5daisy9WavWriterILj16384EE6SampleEPKf:0000000000000170 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8322   .text._ZN5daisy9WavWriterILj16384EE8OpenFileEPKc:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8411   .text._ZNK5daisy9WavWriterILj16384EE11IsRecordingEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8451   .text._ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s:8509   .text._ZN5daisy9WavWriterILj16384EE12CalcByteRateEv:0000000000000000 $t
                           .group:0000000000000000 _ZN5daisy5ColorD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6System6GetNowEv
_ZN5daisy6System7GetTickEv
log10f
powf
tanf
time
rng_state
strcpy
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6RgbLed6SetRedEf
_ZN5daisy8DaisyPod10UpdateLedsEv
_ZN13GranularSynth4InitEPsS0_j
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod9StopAudioEv
_ZN5daisy7Encoder8DebounceEv
_ZN5daisy6Switch8DebounceEv
_ZN5daisy13AnalogControl7ProcessEv
_ZN16AudioFileManager10SetBuffersEPsS0_
_ZN16AudioFileManager4InitEv
_ZN16AudioFileManager12ScanWavFilesEv
_ZN16AudioFileManager8LoadFileEt
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
memset
_ZN7daisysp7Limiter4InitEv
_ZN7daisysp8ReverbSc4InitEf
_ZN7daisysp10MoogLadder4InitEf
_ZN13GranularSynth13ProcessGrainsEv
_ZN7daisysp10MoogLadder7ProcessEf
_ZN7daisysp8ReverbSc10ProcessMixERKfS2_PfS3_
sprintf
_ZN13GranularSynth12SetGrainSizeEf
_ZN13GranularSynth13SetPitchRatioEf
_ZN13GranularSynth6SetPanEf
_ZN13GranularSynth12SetRndAmountEf
_ZN13GranularSynth11SetSpawnPosEf
_ZN5daisy5Color4InitENS0_11PresetColorE
_ZN5daisy5Color4InitEfff
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//cctZTUqb.s 			page 210


_ZN5daisy6RgbLed8SetColorENS_5ColorE
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
pow
f_write
f_lseek
f_close
f_open

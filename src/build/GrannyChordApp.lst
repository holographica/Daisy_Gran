ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"GrannyChordApp.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZSt3absf,"axG",%progbits,_ZSt3absf,comdat
  19              		.align	1
  20              		.weak	_ZSt3absf
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZSt3absf:
  26              	.LFB141:
  27              		.file 1 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  */
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 2


  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #pragma GCC system_header
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** # include_next <math.h>
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #endif
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #undef abs
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** extern "C++"
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** {
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** {
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   using ::abs;
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline long
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #endif
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline long long
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #endif
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(double __x)
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(float __x)
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
  28              		.loc 1 76 3
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 3


  40 0006 87ED010A 		vstr.32	s0, [r7, #4]
  41              		.loc 1 76 31
  42 000a D7ED017A 		vldr.32	s15, [r7, #4]
  43 000e F0EEE77A 		vabs.f32	s15, s15
  44              		.loc 1 76 34
  45 0012 B0EE670A 		vmov.f32	s0, s15
  46 0016 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0018 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 001a 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 001e 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE141:
  58              		.section	.text._ZSt4fabsf,"axG",%progbits,_ZSt4fabsf,comdat
  59              		.align	1
  60              		.weak	_ZSt4fabsf
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	_ZSt4fabsf:
  66              	.LFB167:
  67              		.file 2 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** /** @file include/cmath
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 4


  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  as macros in C).
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  */
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include_next <math.h>
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef div
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef acos
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef asin
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan2
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ceil
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cos
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cosh
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef exp
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fabs
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef floor
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fmod
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef frexp
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ldexp
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log10
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef modf
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef pow
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sin
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sinh
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sqrt
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tan
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tanh
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** extern "C++"
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::acos;
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(float __x)
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 5


  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(long double __x)
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::asin;
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(float __x)
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(long double __x)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     asin(_Tp __x)
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(float __x)
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(long double __x)
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan2;
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 6


 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ceil;
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(float __x)
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cos;
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(float __x)
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(long double __x)
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cosh;
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 7


 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(float __x)
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(long double __x)
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::exp;
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(float __x)
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(long double __x)
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fabs;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(float __x)
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
  68              		.loc 2 242 3
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 7, -4
  76 0002 83B0     		sub	sp, sp, #12
  77              		.cfi_def_cfa_offset 16
  78 0004 00AF     		add	r7, sp, #0
  79              		.cfi_def_cfa_register 7
  80 0006 87ED010A 		vstr.32	s0, [r7, #4]
  81              		.loc 2 242 31
  82 000a D7ED017A 		vldr.32	s15, [r7, #4]
  83 000e F0EEE77A 		vabs.f32	s15, s15
  84              		.loc 2 242 34
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 8


  85 0012 B0EE670A 		vmov.f32	s0, s15
  86 0016 0C37     		adds	r7, r7, #12
  87              		.cfi_def_cfa_offset 4
  88 0018 BD46     		mov	sp, r7
  89              		.cfi_def_cfa_register 13
  90              		@ sp needed
  91 001a 5DF8047B 		ldr	r7, [sp], #4
  92              		.cfi_restore 7
  93              		.cfi_def_cfa_offset 0
  94 001e 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE167:
  98              		.section	.rodata._ZStL19piecewise_construct,"a"
  99              		.align	2
 102              	_ZStL19piecewise_construct:
 103 0000 00       		.space	1
 104              		.section	.text._ZNK5daisy6Switch10RisingEdgeEv,"axG",%progbits,_ZNK5daisy6Switch10RisingEdgeEv,com
 105              		.align	1
 106              		.weak	_ZNK5daisy6Switch10RisingEdgeEv
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	_ZNK5daisy6Switch10RisingEdgeEv:
 112              	.LFB1642:
 113              		.file 3 "../libDaisy/src/hid/switch.h"
   1:../libDaisy/src/hid/switch.h **** #pragma once
   2:../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libDaisy/src/hid/switch.h **** 
   8:../libDaisy/src/hid/switch.h **** namespace daisy
   9:../libDaisy/src/hid/switch.h **** {
  10:../libDaisy/src/hid/switch.h **** /** 
  11:../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../libDaisy/src/hid/switch.h **** */
  17:../libDaisy/src/hid/switch.h **** class Switch
  18:../libDaisy/src/hid/switch.h **** {
  19:../libDaisy/src/hid/switch.h ****   public:
  20:../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libDaisy/src/hid/switch.h ****     enum Type
  22:../libDaisy/src/hid/switch.h ****     {
  23:../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libDaisy/src/hid/switch.h ****     };
  26:../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libDaisy/src/hid/switch.h ****     enum Polarity
  28:../libDaisy/src/hid/switch.h ****     {
  29:../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libDaisy/src/hid/switch.h ****     };
  32:../libDaisy/src/hid/switch.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 9


  33:../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libDaisy/src/hid/switch.h ****     enum Pull
  35:../libDaisy/src/hid/switch.h ****     {
  36:../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libDaisy/src/hid/switch.h ****     };
  40:../libDaisy/src/hid/switch.h **** 
  41:../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../libDaisy/src/hid/switch.h ****     ~Switch() {}
  43:../libDaisy/src/hid/switch.h **** 
  44:../libDaisy/src/hid/switch.h ****     /** 
  45:../libDaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../libDaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../libDaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../libDaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../libDaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../libDaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../libDaisy/src/hid/switch.h ****     */
  52:../libDaisy/src/hid/switch.h ****     void
  53:../libDaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../libDaisy/src/hid/switch.h **** 
  55:../libDaisy/src/hid/switch.h ****     /**
  56:../libDaisy/src/hid/switch.h ****        Simplified Init.
  57:../libDaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../libDaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../libDaisy/src/hid/switch.h ****     */
  60:../libDaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../libDaisy/src/hid/switch.h **** 
  62:../libDaisy/src/hid/switch.h ****     /** 
  63:../libDaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../libDaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../libDaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../libDaisy/src/hid/switch.h ****     */
  67:../libDaisy/src/hid/switch.h ****     void Debounce();
  68:../libDaisy/src/hid/switch.h **** 
  69:../libDaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../libDaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 114              		.loc 3 70 17
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 8
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 80B4     		push	{r7}
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 7, -4
 122 0002 83B0     		sub	sp, sp, #12
 123              		.cfi_def_cfa_offset 16
 124 0004 00AF     		add	r7, sp, #0
 125              		.cfi_def_cfa_register 7
 126 0006 7860     		str	r0, [r7, #4]
 127              		.loc 3 70 45
 128 0008 7B68     		ldr	r3, [r7, #4]
 129 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 130              		.loc 3 70 54
 131 000c 002B     		cmp	r3, #0
 132 000e 07D0     		beq	.L6
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 10


 133              		.loc 3 70 56 discriminator 1
 134 0010 7B68     		ldr	r3, [r7, #4]
 135 0012 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 136              		.loc 3 70 54 discriminator 1
 137 0014 7F2B     		cmp	r3, #127
 138 0016 0CBF     		ite	eq
 139 0018 0123     		moveq	r3, #1
 140 001a 0023     		movne	r3, #0
 141 001c DBB2     		uxtb	r3, r3
 142 001e 00E0     		b	.L7
 143              	.L6:
 144              		.loc 3 70 54 is_stmt 0 discriminator 2
 145 0020 0023     		movs	r3, #0
 146              	.L7:
 147              		.loc 3 70 80 is_stmt 1 discriminator 4
 148 0022 1846     		mov	r0, r3
 149 0024 0C37     		adds	r7, r7, #12
 150              		.cfi_def_cfa_offset 4
 151 0026 BD46     		mov	sp, r7
 152              		.cfi_def_cfa_register 13
 153              		@ sp needed
 154 0028 5DF8047B 		ldr	r7, [sp], #4
 155              		.cfi_restore 7
 156              		.cfi_def_cfa_offset 0
 157 002c 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE1642:
 161              		.section	.text._ZNK5daisy6Switch11FallingEdgeEv,"axG",%progbits,_ZNK5daisy6Switch11FallingEdgeEv,c
 162              		.align	1
 163              		.weak	_ZNK5daisy6Switch11FallingEdgeEv
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	_ZNK5daisy6Switch11FallingEdgeEv:
 169              	.LFB1643:
  71:../libDaisy/src/hid/switch.h **** 
  72:../libDaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  73:../libDaisy/src/hid/switch.h ****     inline bool FallingEdge() const
 170              		.loc 3 73 17
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 8
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 80B4     		push	{r7}
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 83B0     		sub	sp, sp, #12
 179              		.cfi_def_cfa_offset 16
 180 0004 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 182 0006 7860     		str	r0, [r7, #4]
  74:../libDaisy/src/hid/switch.h ****     {
  75:../libDaisy/src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
 183              		.loc 3 75 16
 184 0008 7B68     		ldr	r3, [r7, #4]
 185 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 186              		.loc 3 75 25
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 11


 187 000c 002B     		cmp	r3, #0
 188 000e 07D0     		beq	.L10
 189              		.loc 3 75 27 discriminator 1
 190 0010 7B68     		ldr	r3, [r7, #4]
 191 0012 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 192              		.loc 3 75 25 discriminator 1
 193 0014 802B     		cmp	r3, #128
 194 0016 0CBF     		ite	eq
 195 0018 0123     		moveq	r3, #1
 196 001a 0023     		movne	r3, #0
 197 001c DBB2     		uxtb	r3, r3
 198 001e 00E0     		b	.L11
 199              	.L10:
 200              		.loc 3 75 25 is_stmt 0 discriminator 2
 201 0020 0023     		movs	r3, #0
 202              	.L11:
  76:../libDaisy/src/hid/switch.h ****     }
 203              		.loc 3 76 5 is_stmt 1 discriminator 4
 204 0022 1846     		mov	r0, r3
 205 0024 0C37     		adds	r7, r7, #12
 206              		.cfi_def_cfa_offset 4
 207 0026 BD46     		mov	sp, r7
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 0028 5DF8047B 		ldr	r7, [sp], #4
 211              		.cfi_restore 7
 212              		.cfi_def_cfa_offset 0
 213 002c 7047     		bx	lr
 214              		.cfi_endproc
 215              	.LFE1643:
 217              		.section	.text._ZNK5daisy6Switch7PressedEv,"axG",%progbits,_ZNK5daisy6Switch7PressedEv,comdat
 218              		.align	1
 219              		.weak	_ZNK5daisy6Switch7PressedEv
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	_ZNK5daisy6Switch7PressedEv:
 225              	.LFB1644:
  77:../libDaisy/src/hid/switch.h **** 
  78:../libDaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../libDaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 226              		.loc 3 79 17
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 80B4     		push	{r7}
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 7, -4
 234 0002 83B0     		sub	sp, sp, #12
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 238 0006 7860     		str	r0, [r7, #4]
 239              		.loc 3 79 42
 240 0008 7B68     		ldr	r3, [r7, #4]
 241 000a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 12


 242              		.loc 3 79 52
 243 000c FF2B     		cmp	r3, #255
 244 000e 0CBF     		ite	eq
 245 0010 0123     		moveq	r3, #1
 246 0012 0023     		movne	r3, #0
 247 0014 DBB2     		uxtb	r3, r3
 248              		.loc 3 79 58
 249 0016 1846     		mov	r0, r3
 250 0018 0C37     		adds	r7, r7, #12
 251              		.cfi_def_cfa_offset 4
 252 001a BD46     		mov	sp, r7
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 001c 5DF8047B 		ldr	r7, [sp], #4
 256              		.cfi_restore 7
 257              		.cfi_def_cfa_offset 0
 258 0020 7047     		bx	lr
 259              		.cfi_endproc
 260              	.LFE1644:
 262              		.section	.text._ZNK5daisy6Switch10TimeHeldMsEv,"axG",%progbits,_ZNK5daisy6Switch10TimeHeldMsEv,com
 263              		.align	1
 264              		.weak	_ZNK5daisy6Switch10TimeHeldMsEv
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	_ZNK5daisy6Switch10TimeHeldMsEv:
 270              	.LFB1646:
  80:../libDaisy/src/hid/switch.h **** 
  81:../libDaisy/src/hid/switch.h ****     /** \return true if the button is held down, without debouncing */
  82:../libDaisy/src/hid/switch.h ****     inline bool RawState()
  83:../libDaisy/src/hid/switch.h ****     {
  84:../libDaisy/src/hid/switch.h ****         return flip_ ? !dsy_gpio_read(&hw_gpio_) : dsy_gpio_read(&hw_gpio_);
  85:../libDaisy/src/hid/switch.h ****     }
  86:../libDaisy/src/hid/switch.h **** 
  87:../libDaisy/src/hid/switch.h ****     /** \return the time in milliseconds that the button has been held (or toggle has been on) */
  88:../libDaisy/src/hid/switch.h ****     inline float TimeHeldMs() const
 271              		.loc 3 88 18
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275 0000 80B5     		push	{r7, lr}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 82B0     		sub	sp, sp, #8
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
  89:../libDaisy/src/hid/switch.h ****     {
  90:../libDaisy/src/hid/switch.h ****         return Pressed() ? System::GetNow() - rising_edge_time_ : 0;
 284              		.loc 3 90 23
 285 0008 7868     		ldr	r0, [r7, #4]
 286 000a FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 287 000e 0346     		mov	r3, r0
 288              		.loc 3 90 26
 289 0010 002B     		cmp	r3, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 13


 290 0012 0BD0     		beq	.L16
 291              		.loc 3 90 42 discriminator 1
 292 0014 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 293 0018 07EE900A 		vmov	s15, r0	@ int
 294              		.loc 3 90 45 discriminator 1
 295 001c B8EE677A 		vcvt.f32.u32	s14, s15
 296              		.loc 3 90 47 discriminator 1
 297 0020 7B68     		ldr	r3, [r7, #4]
 298 0022 D3ED037A 		vldr.32	s15, [r3, #12]
 299              		.loc 3 90 26 discriminator 1
 300 0026 77EE677A 		vsub.f32	s15, s14, s15
 301              		.loc 3 90 67 discriminator 1
 302 002a 01E0     		b	.L18
 303              	.L16:
 304              		.loc 3 90 26 discriminator 2
 305 002c DFED037A 		vldr.32	s15, .L19
 306              	.L18:
  91:../libDaisy/src/hid/switch.h ****     }
 307              		.loc 3 91 5 discriminator 5
 308 0030 B0EE670A 		vmov.f32	s0, s15
 309 0034 0837     		adds	r7, r7, #8
 310              		.cfi_def_cfa_offset 8
 311 0036 BD46     		mov	sp, r7
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 0038 80BD     		pop	{r7, pc}
 315              	.L20:
 316 003a 00BF     		.align	2
 317              	.L19:
 318 003c 00000000 		.word	0
 319              		.cfi_endproc
 320              	.LFE1646:
 322              		.section	.text._ZNK5daisy7Encoder9IncrementEv,"axG",%progbits,_ZNK5daisy7Encoder9IncrementEv,comda
 323              		.align	1
 324              		.weak	_ZNK5daisy7Encoder9IncrementEv
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	_ZNK5daisy7Encoder9IncrementEv:
 330              	.LFB1654:
 331              		.file 4 "../libDaisy/src/hid/encoder.h"
   1:../libDaisy/src/hid/encoder.h **** #pragma once
   2:../libDaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../libDaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../libDaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../libDaisy/src/hid/encoder.h **** 
   8:../libDaisy/src/hid/encoder.h **** namespace daisy
   9:../libDaisy/src/hid/encoder.h **** {
  10:../libDaisy/src/hid/encoder.h **** /** 
  11:../libDaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../libDaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../libDaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/encoder.h ****     @date December 2019
  15:../libDaisy/src/hid/encoder.h ****     @ingroup controls
  16:../libDaisy/src/hid/encoder.h **** */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 14


  17:../libDaisy/src/hid/encoder.h **** class Encoder
  18:../libDaisy/src/hid/encoder.h **** {
  19:../libDaisy/src/hid/encoder.h ****   public:
  20:../libDaisy/src/hid/encoder.h ****     Encoder() {}
  21:../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
  22:../libDaisy/src/hid/encoder.h **** 
  23:../libDaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../libDaisy/src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../libDaisy/src/hid/encoder.h ****      */
  26:../libDaisy/src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../libDaisy/src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../libDaisy/src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../libDaisy/src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../libDaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../libDaisy/src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../libDaisy/src/hid/encoder.h ****      */
  33:../libDaisy/src/hid/encoder.h ****     void Debounce();
  34:../libDaisy/src/hid/encoder.h **** 
  35:../libDaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../libDaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 332              		.loc 4 36 20
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 0000 80B4     		push	{r7}
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 83B0     		sub	sp, sp, #12
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 345              		.loc 4 36 47
 346 0008 7B68     		ldr	r3, [r7, #4]
 347 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 348              		.loc 4 36 56
 349 000c 002B     		cmp	r3, #0
 350 000e 02D0     		beq	.L22
 351              		.loc 4 36 56 is_stmt 0 discriminator 1
 352 0010 7B68     		ldr	r3, [r7, #4]
 353 0012 5B6A     		ldr	r3, [r3, #36]
 354              		.loc 4 36 65 is_stmt 1 discriminator 1
 355 0014 00E0     		b	.L24
 356              	.L22:
 357              		.loc 4 36 56 discriminator 2
 358 0016 0023     		movs	r3, #0
 359              	.L24:
 360              		.loc 4 36 68 discriminator 5
 361 0018 1846     		mov	r0, r3
 362 001a 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 4
 364 001c BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 001e 5DF8047B 		ldr	r7, [sp], #4
 368              		.cfi_restore 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 15


 369              		.cfi_def_cfa_offset 0
 370 0022 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE1654:
 374              		.section	.text._ZNK5daisy7Encoder11FallingEdgeEv,"axG",%progbits,_ZNK5daisy7Encoder11FallingEdgeEv
 375              		.align	1
 376              		.weak	_ZNK5daisy7Encoder11FallingEdgeEv
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 381              	_ZNK5daisy7Encoder11FallingEdgeEv:
 382              	.LFB1656:
  37:../libDaisy/src/hid/encoder.h **** 
  38:../libDaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../libDaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
  40:../libDaisy/src/hid/encoder.h **** 
  41:../libDaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just released. */
  42:../libDaisy/src/hid/encoder.h ****     inline bool FallingEdge() const { return sw_.FallingEdge(); }
 383              		.loc 4 42 17
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 80B5     		push	{r7, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 7860     		str	r0, [r7, #4]
 396              		.loc 4 42 61
 397 0008 7B68     		ldr	r3, [r7, #4]
 398 000a 0833     		adds	r3, r3, #8
 399 000c 1846     		mov	r0, r3
 400 000e FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 401 0012 0346     		mov	r3, r0
 402              		.loc 4 42 65
 403 0014 1846     		mov	r0, r3
 404 0016 0837     		adds	r7, r7, #8
 405              		.cfi_def_cfa_offset 8
 406 0018 BD46     		mov	sp, r7
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 001a 80BD     		pop	{r7, pc}
 410              		.cfi_endproc
 411              	.LFE1656:
 413              		.section	.text._ZNK5daisy7Encoder10TimeHeldMsEv,"axG",%progbits,_ZNK5daisy7Encoder10TimeHeldMsEv,c
 414              		.align	1
 415              		.weak	_ZNK5daisy7Encoder10TimeHeldMsEv
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	_ZNK5daisy7Encoder10TimeHeldMsEv:
 421              	.LFB1658:
  43:../libDaisy/src/hid/encoder.h **** 
  44:../libDaisy/src/hid/encoder.h ****     /** Returns true while the encoder is held down.*/
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 16


  45:../libDaisy/src/hid/encoder.h ****     inline bool Pressed() const { return sw_.Pressed(); }
  46:../libDaisy/src/hid/encoder.h **** 
  47:../libDaisy/src/hid/encoder.h ****     /** Returns the time in milliseconds that the encoder has been held down. */
  48:../libDaisy/src/hid/encoder.h ****     inline float TimeHeldMs() const { return sw_.TimeHeldMs(); }
 422              		.loc 4 48 18
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 82B0     		sub	sp, sp, #8
 431              		.cfi_def_cfa_offset 16
 432 0004 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 434 0006 7860     		str	r0, [r7, #4]
 435              		.loc 4 48 60
 436 0008 7B68     		ldr	r3, [r7, #4]
 437 000a 0833     		adds	r3, r3, #8
 438 000c 1846     		mov	r0, r3
 439 000e FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 440 0012 F0EE407A 		vmov.f32	s15, s0
 441              		.loc 4 48 64
 442 0016 B0EE670A 		vmov.f32	s0, s15
 443 001a 0837     		adds	r7, r7, #8
 444              		.cfi_def_cfa_offset 8
 445 001c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 001e 80BD     		pop	{r7, pc}
 449              		.cfi_endproc
 450              	.LFE1658:
 452              		.section	.rodata._ZN5daisyL15kWavFileChunkIdE,"a"
 453              		.align	2
 456              	_ZN5daisyL15kWavFileChunkIdE:
 457 0000 52494646 		.word	1179011410
 458              		.section	.rodata._ZN5daisyL14kWavFileWaveIdE,"a"
 459              		.align	2
 462              	_ZN5daisyL14kWavFileWaveIdE:
 463 0000 57415645 		.word	1163280727
 464              		.section	.rodata._ZN5daisyL19kWavFileSubChunk1IdE,"a"
 465              		.align	2
 468              	_ZN5daisyL19kWavFileSubChunk1IdE:
 469 0000 666D7420 		.word	544501094
 470              		.section	.rodata._ZN5daisyL19kWavFileSubChunk2IdE,"a"
 471              		.align	2
 474              	_ZN5daisyL19kWavFileSubChunk2IdE:
 475 0000 64617461 		.word	1635017060
 476              		.section	.text._ZN5daisy5ColorD2Ev,"axG",%progbits,_ZN5daisy5ColorD5Ev,comdat
 477              		.align	1
 478              		.weak	_ZN5daisy5ColorD2Ev
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	_ZN5daisy5ColorD2Ev:
 484              	.LFB1852:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 17


 485              		.file 5 "../libDaisy/src/util/color.h"
   1:../libDaisy/src/util/color.h **** /* 
   2:../libDaisy/src/util/color.h **** TODO:
   3:../libDaisy/src/util/color.h **** - Add Blend(), Scale(), etc.
   4:../libDaisy/src/util/color.h **** - I'd also like to change the way the Color names are accessed.
   5:../libDaisy/src/util/color.h **** */
   6:../libDaisy/src/util/color.h **** /**        I'd like for it to be easy and not `Color::PresetColor::Foo`
   7:../libDaisy/src/util/color.h **** */
   8:../libDaisy/src/util/color.h **** /** - There's no way to change a color once its been created (without unintuitively reiniting it).
   9:../libDaisy/src/util/color.h **** */
  10:../libDaisy/src/util/color.h **** #pragma once
  11:../libDaisy/src/util/color.h **** #ifndef DSY_COLOR_H
  12:../libDaisy/src/util/color.h **** #define DSY_COLOR_H
  13:../libDaisy/src/util/color.h **** #include <stdint.h>
  14:../libDaisy/src/util/color.h **** 
  15:../libDaisy/src/util/color.h **** 
  16:../libDaisy/src/util/color.h **** namespace daisy
  17:../libDaisy/src/util/color.h **** {
  18:../libDaisy/src/util/color.h **** /** @addtogroup utility
  19:../libDaisy/src/util/color.h ****     @{
  20:../libDaisy/src/util/color.h **** */
  21:../libDaisy/src/util/color.h **** 
  22:../libDaisy/src/util/color.h **** /** Class for handling simple colors */
  23:../libDaisy/src/util/color.h **** class Color
  24:../libDaisy/src/util/color.h **** {
  25:../libDaisy/src/util/color.h ****   public:
  26:../libDaisy/src/util/color.h ****     Color() {}
  27:../libDaisy/src/util/color.h ****     ~Color() {}
 486              		.loc 5 27 5
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 8
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491 0000 80B4     		push	{r7}
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 83B0     		sub	sp, sp, #12
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 498 0006 7860     		str	r0, [r7, #4]
 499              		.loc 5 27 15
 500 0008 7B68     		ldr	r3, [r7, #4]
 501 000a 1846     		mov	r0, r3
 502 000c 0C37     		adds	r7, r7, #12
 503              		.cfi_def_cfa_offset 4
 504 000e BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0010 5DF8047B 		ldr	r7, [sp], #4
 508              		.cfi_restore 7
 509              		.cfi_def_cfa_offset 0
 510 0014 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE1852:
 514              		.weak	_ZN5daisy5ColorD1Ev
 515              		.thumb_set _ZN5daisy5ColorD1Ev,_ZN5daisy5ColorD2Ev
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 18


 516              		.section	.rodata._ZL19kMaxSr595DaisyChain,"a"
 517              		.align	2
 520              	_ZL19kMaxSr595DaisyChain:
 521 0000 10000000 		.word	16
 522              		.section	.text._ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv,"axG",%progbits,_ZNK5daisy12CpuLoadMeter1
 523              		.align	1
 524              		.weak	_ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 529              	_ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv:
 530              	.LFB2503:
 531              		.file 6 "../libDaisy/src/util/CpuLoadMeter.h"
   1:../libDaisy/src/util/CpuLoadMeter.h **** #pragma once
   2:../libDaisy/src/util/CpuLoadMeter.h **** 
   3:../libDaisy/src/util/CpuLoadMeter.h **** #include "sys/system.h"
   4:../libDaisy/src/util/CpuLoadMeter.h **** #include <cmath>
   5:../libDaisy/src/util/CpuLoadMeter.h **** 
   6:../libDaisy/src/util/CpuLoadMeter.h **** namespace daisy
   7:../libDaisy/src/util/CpuLoadMeter.h **** {
   8:../libDaisy/src/util/CpuLoadMeter.h **** /** @brief CPU load metering
   9:../libDaisy/src/util/CpuLoadMeter.h ****  *  @author jelliesen
  10:../libDaisy/src/util/CpuLoadMeter.h ****  *  @addtogroup utility
  11:../libDaisy/src/util/CpuLoadMeter.h ****  * 
  12:../libDaisy/src/util/CpuLoadMeter.h ****  *  To measure the CPU load of your audio processing, create a CpuLoadMeter
  13:../libDaisy/src/util/CpuLoadMeter.h ****  *  and initialize it with your block size and sample rate.
  14:../libDaisy/src/util/CpuLoadMeter.h ****  *  Then at the beginning of the audio callback, call `OnBlockStart()`, 
  15:../libDaisy/src/util/CpuLoadMeter.h ****  *  and at the end of the audio callback, call `OnBlockEnd()`.
  16:../libDaisy/src/util/CpuLoadMeter.h ****  *  You can then read out the minimum, maximum and average CPU load.
  17:../libDaisy/src/util/CpuLoadMeter.h ****  */
  18:../libDaisy/src/util/CpuLoadMeter.h **** class CpuLoadMeter
  19:../libDaisy/src/util/CpuLoadMeter.h **** {
  20:../libDaisy/src/util/CpuLoadMeter.h ****   public:
  21:../libDaisy/src/util/CpuLoadMeter.h ****     CpuLoadMeter(){};
  22:../libDaisy/src/util/CpuLoadMeter.h **** 
  23:../libDaisy/src/util/CpuLoadMeter.h ****     /** Initializes the CpuLoadMeter for a particular sample rate and block size.
  24:../libDaisy/src/util/CpuLoadMeter.h ****      *  @param sampleRateInHz           The sample rate in Hz
  25:../libDaisy/src/util/CpuLoadMeter.h ****      *  @param blockSizeInSamples       The block size in samples
  26:../libDaisy/src/util/CpuLoadMeter.h ****      *  @param smoothingFilterCutoffHz  The cutoff frequency of the smoothing filter that's used to
  27:../libDaisy/src/util/CpuLoadMeter.h ****      *                                  create the average CPU load reading.
  28:../libDaisy/src/util/CpuLoadMeter.h ****      */
  29:../libDaisy/src/util/CpuLoadMeter.h ****     void Init(float sampleRateInHz,
  30:../libDaisy/src/util/CpuLoadMeter.h ****               int   blockSizeInSamples,
  31:../libDaisy/src/util/CpuLoadMeter.h ****               float smoothingFilterCutoffHz = 1.0f)
  32:../libDaisy/src/util/CpuLoadMeter.h ****     {
  33:../libDaisy/src/util/CpuLoadMeter.h ****         const auto secPerBlock = float(blockSizeInSamples) / sampleRateInHz;
  34:../libDaisy/src/util/CpuLoadMeter.h ****         const auto ticksPerS   = float(System::GetTickFreq());
  35:../libDaisy/src/util/CpuLoadMeter.h ****         ticksPerBlockInv_      = 1.0f / (ticksPerS * secPerBlock);
  36:../libDaisy/src/util/CpuLoadMeter.h **** 
  37:../libDaisy/src/util/CpuLoadMeter.h ****         // update filter coefficient for smoothing filter (1pole lowpass)
  38:../libDaisy/src/util/CpuLoadMeter.h ****         const auto blockRateInHz = sampleRateInHz / float(blockSizeInSamples);
  39:../libDaisy/src/util/CpuLoadMeter.h ****         const auto cutoffNormalized
  40:../libDaisy/src/util/CpuLoadMeter.h ****             = smoothingFilterCutoffHz * 2.0f * 3.141592653f / blockRateInHz;
  41:../libDaisy/src/util/CpuLoadMeter.h ****         // according to
  42:../libDaisy/src/util/CpuLoadMeter.h ****         // https://en.wikipedia.org/wiki/Low-pass_filter#Simple_infinite_impulse_response_filter
  43:../libDaisy/src/util/CpuLoadMeter.h ****         smoothingConstant_ = cutoffNormalized / (cutoffNormalized + 1.0f);
  44:../libDaisy/src/util/CpuLoadMeter.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 19


  45:../libDaisy/src/util/CpuLoadMeter.h ****         Reset();
  46:../libDaisy/src/util/CpuLoadMeter.h ****     }
  47:../libDaisy/src/util/CpuLoadMeter.h **** 
  48:../libDaisy/src/util/CpuLoadMeter.h ****     /** Call this at the beginning of your audio callback */
  49:../libDaisy/src/util/CpuLoadMeter.h ****     void OnBlockStart() { currentBlockStartTicks_ = System::GetTick(); }
  50:../libDaisy/src/util/CpuLoadMeter.h **** 
  51:../libDaisy/src/util/CpuLoadMeter.h ****     /** Call this at the end of your audio callback */
  52:../libDaisy/src/util/CpuLoadMeter.h ****     void OnBlockEnd()
  53:../libDaisy/src/util/CpuLoadMeter.h ****     {
  54:../libDaisy/src/util/CpuLoadMeter.h ****         const auto end         = System::GetTick();
  55:../libDaisy/src/util/CpuLoadMeter.h ****         const auto ticksPassed = end - currentBlockStartTicks_;
  56:../libDaisy/src/util/CpuLoadMeter.h ****         const auto currentBlockLoad
  57:../libDaisy/src/util/CpuLoadMeter.h ****             = float(ticksPassed) * ticksPerBlockInv_; // usPassed / usPerBlock
  58:../libDaisy/src/util/CpuLoadMeter.h **** 
  59:../libDaisy/src/util/CpuLoadMeter.h ****         if(firstCycle_)
  60:../libDaisy/src/util/CpuLoadMeter.h ****         {
  61:../libDaisy/src/util/CpuLoadMeter.h ****             max_ = min_ = avg_ = currentBlockLoad;
  62:../libDaisy/src/util/CpuLoadMeter.h ****             firstCycle_        = false;
  63:../libDaisy/src/util/CpuLoadMeter.h ****         }
  64:../libDaisy/src/util/CpuLoadMeter.h ****         else
  65:../libDaisy/src/util/CpuLoadMeter.h ****         {
  66:../libDaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad > max_)
  67:../libDaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
  68:../libDaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad < min_)
  69:../libDaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
  70:../libDaisy/src/util/CpuLoadMeter.h **** 
  71:../libDaisy/src/util/CpuLoadMeter.h ****             avg_ = smoothingConstant_ * currentBlockLoad
  72:../libDaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
  73:../libDaisy/src/util/CpuLoadMeter.h ****         }
  74:../libDaisy/src/util/CpuLoadMeter.h ****     }
  75:../libDaisy/src/util/CpuLoadMeter.h **** 
  76:../libDaisy/src/util/CpuLoadMeter.h ****     /** Returns the smoothed average CPU load in the range 0..1 */
  77:../libDaisy/src/util/CpuLoadMeter.h ****     float GetAvgCpuLoad() const { return avg_; }
 532              		.loc 6 77 11
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537 0000 80B4     		push	{r7}
 538              		.cfi_def_cfa_offset 4
 539              		.cfi_offset 7, -4
 540 0002 83B0     		sub	sp, sp, #12
 541              		.cfi_def_cfa_offset 16
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 7860     		str	r0, [r7, #4]
 545              		.loc 6 77 42
 546 0008 7B68     		ldr	r3, [r7, #4]
 547 000a 5B69     		ldr	r3, [r3, #20]	@ float
 548 000c 07EE903A 		vmov	s15, r3
 549              		.loc 6 77 48
 550 0010 B0EE670A 		vmov.f32	s0, s15
 551 0014 0C37     		adds	r7, r7, #12
 552              		.cfi_def_cfa_offset 4
 553 0016 BD46     		mov	sp, r7
 554              		.cfi_def_cfa_register 13
 555              		@ sp needed
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 20


 556 0018 5DF8047B 		ldr	r7, [sp], #4
 557              		.cfi_restore 7
 558              		.cfi_def_cfa_offset 0
 559 001c 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE2503:
 563              		.section	.text._ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv,"axG",%progbits,_ZNK5daisy12CpuLoadMeter1
 564              		.align	1
 565              		.weak	_ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	_ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv:
 571              	.LFB2504:
  78:../libDaisy/src/util/CpuLoadMeter.h ****     /** Returns the minimun CPU load observed since the last call to Reset(). */
  79:../libDaisy/src/util/CpuLoadMeter.h ****     float GetMinCpuLoad() const { return min_; }
 572              		.loc 6 79 11
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 8
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              		.cfi_def_cfa_offset 4
 579              		.cfi_offset 7, -4
 580 0002 83B0     		sub	sp, sp, #12
 581              		.cfi_def_cfa_offset 16
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 584 0006 7860     		str	r0, [r7, #4]
 585              		.loc 6 79 42
 586 0008 7B68     		ldr	r3, [r7, #4]
 587 000a DB68     		ldr	r3, [r3, #12]	@ float
 588 000c 07EE903A 		vmov	s15, r3
 589              		.loc 6 79 48
 590 0010 B0EE670A 		vmov.f32	s0, s15
 591 0014 0C37     		adds	r7, r7, #12
 592              		.cfi_def_cfa_offset 4
 593 0016 BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 0018 5DF8047B 		ldr	r7, [sp], #4
 597              		.cfi_restore 7
 598              		.cfi_def_cfa_offset 0
 599 001c 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE2504:
 603              		.section	.text._ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv,"axG",%progbits,_ZNK5daisy12CpuLoadMeter1
 604              		.align	1
 605              		.weak	_ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	_ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv:
 611              	.LFB2505:
  80:../libDaisy/src/util/CpuLoadMeter.h ****     /** Returns the maximum CPU load observed since the last call to Reset(). */
  81:../libDaisy/src/util/CpuLoadMeter.h ****     float GetMaxCpuLoad() const { return max_; }
 612              		.loc 6 81 11
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 21


 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617 0000 80B4     		push	{r7}
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 7, -4
 620 0002 83B0     		sub	sp, sp, #12
 621              		.cfi_def_cfa_offset 16
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 7860     		str	r0, [r7, #4]
 625              		.loc 6 81 42
 626 0008 7B68     		ldr	r3, [r7, #4]
 627 000a 1B69     		ldr	r3, [r3, #16]	@ float
 628 000c 07EE903A 		vmov	s15, r3
 629              		.loc 6 81 48
 630 0010 B0EE670A 		vmov.f32	s0, s15
 631 0014 0C37     		adds	r7, r7, #12
 632              		.cfi_def_cfa_offset 4
 633 0016 BD46     		mov	sp, r7
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed
 636 0018 5DF8047B 		ldr	r7, [sp], #4
 637              		.cfi_restore 7
 638              		.cfi_def_cfa_offset 0
 639 001c 7047     		bx	lr
 640              		.cfi_endproc
 641              	.LFE2505:
 643              		.section	.rodata._ZN5daisy4seedL2D0E,"a"
 644              		.align	2
 647              	_ZN5daisy4seedL2D0E:
 648 0000 01       		.byte	1
 649 0001 0C       		.byte	12
 650              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 651              		.align	2
 654              	_ZN5daisy4seedL2D1E:
 655 0000 02       		.byte	2
 656 0001 0B       		.byte	11
 657              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 658              		.align	2
 661              	_ZN5daisy4seedL2D2E:
 662 0000 02       		.byte	2
 663 0001 0A       		.byte	10
 664              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 665              		.align	2
 668              	_ZN5daisy4seedL2D3E:
 669 0000 02       		.byte	2
 670 0001 09       		.byte	9
 671              		.section	.rodata._ZN5daisy4seedL2D4E,"a"
 672              		.align	2
 675              	_ZN5daisy4seedL2D4E:
 676 0000 02       		.byte	2
 677 0001 08       		.byte	8
 678              		.section	.rodata._ZN5daisy4seedL2D5E,"a"
 679              		.align	2
 682              	_ZN5daisy4seedL2D5E:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 22


 683 0000 03       		.byte	3
 684 0001 02       		.byte	2
 685              		.section	.rodata._ZN5daisy4seedL2D6E,"a"
 686              		.align	2
 689              	_ZN5daisy4seedL2D6E:
 690 0000 02       		.byte	2
 691 0001 0C       		.byte	12
 692              		.section	.rodata._ZN5daisy4seedL2D7E,"a"
 693              		.align	2
 696              	_ZN5daisy4seedL2D7E:
 697 0000 06       		.byte	6
 698 0001 0A       		.byte	10
 699              		.section	.rodata._ZN5daisy4seedL2D8E,"a"
 700              		.align	2
 703              	_ZN5daisy4seedL2D8E:
 704 0000 06       		.byte	6
 705 0001 0B       		.byte	11
 706              		.section	.rodata._ZN5daisy4seedL2D9E,"a"
 707              		.align	2
 710              	_ZN5daisy4seedL2D9E:
 711 0000 01       		.byte	1
 712 0001 04       		.byte	4
 713              		.section	.rodata._ZN5daisy4seedL3D10E,"a"
 714              		.align	2
 717              	_ZN5daisy4seedL3D10E:
 718 0000 01       		.byte	1
 719 0001 05       		.byte	5
 720              		.section	.rodata._ZN5daisy4seedL3D11E,"a"
 721              		.align	2
 724              	_ZN5daisy4seedL3D11E:
 725 0000 01       		.byte	1
 726 0001 08       		.byte	8
 727              		.section	.rodata._ZN5daisy4seedL3D12E,"a"
 728              		.align	2
 731              	_ZN5daisy4seedL3D12E:
 732 0000 01       		.byte	1
 733 0001 09       		.byte	9
 734              		.section	.rodata._ZN5daisy4seedL3D13E,"a"
 735              		.align	2
 738              	_ZN5daisy4seedL3D13E:
 739 0000 01       		.byte	1
 740 0001 06       		.byte	6
 741              		.section	.rodata._ZN5daisy4seedL3D14E,"a"
 742              		.align	2
 745              	_ZN5daisy4seedL3D14E:
 746 0000 01       		.byte	1
 747 0001 07       		.byte	7
 748              		.section	.rodata._ZN5daisy4seedL3D15E,"a"
 749              		.align	2
 752              	_ZN5daisy4seedL3D15E:
 753 0000 02       		.byte	2
 754 0001 00       		.byte	0
 755              		.section	.rodata._ZN5daisy4seedL3D16E,"a"
 756              		.align	2
 759              	_ZN5daisy4seedL3D16E:
 760 0000 00       		.byte	0
 761 0001 03       		.byte	3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 23


 762              		.section	.rodata._ZN5daisy4seedL3D17E,"a"
 763              		.align	2
 766              	_ZN5daisy4seedL3D17E:
 767 0000 01       		.byte	1
 768 0001 01       		.byte	1
 769              		.section	.rodata._ZN5daisy4seedL3D18E,"a"
 770              		.align	2
 773              	_ZN5daisy4seedL3D18E:
 774 0000 00       		.byte	0
 775 0001 07       		.byte	7
 776              		.section	.rodata._ZN5daisy4seedL3D19E,"a"
 777              		.align	2
 780              	_ZN5daisy4seedL3D19E:
 781 0000 00       		.byte	0
 782 0001 06       		.byte	6
 783              		.section	.rodata._ZN5daisy4seedL3D20E,"a"
 784              		.align	2
 787              	_ZN5daisy4seedL3D20E:
 788 0000 02       		.byte	2
 789 0001 01       		.byte	1
 790              		.section	.rodata._ZN5daisy4seedL3D21E,"a"
 791              		.align	2
 794              	_ZN5daisy4seedL3D21E:
 795 0000 02       		.byte	2
 796 0001 04       		.byte	4
 797              		.section	.rodata._ZN5daisy4seedL3D22E,"a"
 798              		.align	2
 801              	_ZN5daisy4seedL3D22E:
 802 0000 00       		.byte	0
 803 0001 05       		.byte	5
 804              		.section	.rodata._ZN5daisy4seedL3D23E,"a"
 805              		.align	2
 808              	_ZN5daisy4seedL3D23E:
 809 0000 00       		.byte	0
 810 0001 04       		.byte	4
 811              		.section	.rodata._ZN5daisy4seedL3D24E,"a"
 812              		.align	2
 815              	_ZN5daisy4seedL3D24E:
 816 0000 00       		.byte	0
 817 0001 01       		.byte	1
 818              		.section	.rodata._ZN5daisy4seedL3D25E,"a"
 819              		.align	2
 822              	_ZN5daisy4seedL3D25E:
 823 0000 0000     		.space	2
 824              		.section	.rodata._ZN5daisy4seedL3D26E,"a"
 825              		.align	2
 828              	_ZN5daisy4seedL3D26E:
 829 0000 03       		.byte	3
 830 0001 0B       		.byte	11
 831              		.section	.rodata._ZN5daisy4seedL3D27E,"a"
 832              		.align	2
 835              	_ZN5daisy4seedL3D27E:
 836 0000 06       		.byte	6
 837 0001 09       		.byte	9
 838              		.section	.rodata._ZN5daisy4seedL3D28E,"a"
 839              		.align	2
 842              	_ZN5daisy4seedL3D28E:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 24


 843 0000 00       		.byte	0
 844 0001 02       		.byte	2
 845              		.section	.rodata._ZN5daisy4seedL3D29E,"a"
 846              		.align	2
 849              	_ZN5daisy4seedL3D29E:
 850 0000 01       		.byte	1
 851 0001 0E       		.byte	14
 852              		.section	.rodata._ZN5daisy4seedL3D30E,"a"
 853              		.align	2
 856              	_ZN5daisy4seedL3D30E:
 857 0000 01       		.byte	1
 858 0001 0F       		.byte	15
 859              		.section	.rodata._ZN5daisy4seedL2A0E,"a"
 860              		.align	2
 863              	_ZN5daisy4seedL2A0E:
 864 0000 02       		.byte	2
 865 0001 00       		.byte	0
 866              		.section	.rodata._ZN5daisy4seedL2A1E,"a"
 867              		.align	2
 870              	_ZN5daisy4seedL2A1E:
 871 0000 00       		.byte	0
 872 0001 03       		.byte	3
 873              		.section	.rodata._ZN5daisy4seedL2A2E,"a"
 874              		.align	2
 877              	_ZN5daisy4seedL2A2E:
 878 0000 01       		.byte	1
 879 0001 01       		.byte	1
 880              		.section	.rodata._ZN5daisy4seedL2A3E,"a"
 881              		.align	2
 884              	_ZN5daisy4seedL2A3E:
 885 0000 00       		.byte	0
 886 0001 07       		.byte	7
 887              		.section	.rodata._ZN5daisy4seedL2A4E,"a"
 888              		.align	2
 891              	_ZN5daisy4seedL2A4E:
 892 0000 00       		.byte	0
 893 0001 06       		.byte	6
 894              		.section	.rodata._ZN5daisy4seedL2A5E,"a"
 895              		.align	2
 898              	_ZN5daisy4seedL2A5E:
 899 0000 02       		.byte	2
 900 0001 01       		.byte	1
 901              		.section	.rodata._ZN5daisy4seedL2A6E,"a"
 902              		.align	2
 905              	_ZN5daisy4seedL2A6E:
 906 0000 02       		.byte	2
 907 0001 04       		.byte	4
 908              		.section	.rodata._ZN5daisy4seedL2A7E,"a"
 909              		.align	2
 912              	_ZN5daisy4seedL2A7E:
 913 0000 00       		.byte	0
 914 0001 05       		.byte	5
 915              		.section	.rodata._ZN5daisy4seedL2A8E,"a"
 916              		.align	2
 919              	_ZN5daisy4seedL2A8E:
 920 0000 00       		.byte	0
 921 0001 04       		.byte	4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 25


 922              		.section	.rodata._ZN5daisy4seedL2A9E,"a"
 923              		.align	2
 926              	_ZN5daisy4seedL2A9E:
 927 0000 00       		.byte	0
 928 0001 01       		.byte	1
 929              		.section	.rodata._ZN5daisy4seedL3A10E,"a"
 930              		.align	2
 933              	_ZN5daisy4seedL3A10E:
 934 0000 0000     		.space	2
 935              		.section	.rodata._ZN5daisy4seedL3A11E,"a"
 936              		.align	2
 939              	_ZN5daisy4seedL3A11E:
 940 0000 00       		.byte	0
 941 0001 02       		.byte	2
 942              		.section	.rodata._ZN5daisy4seedL3D31E,"a"
 943              		.align	2
 946              	_ZN5daisy4seedL3D31E:
 947 0000 02       		.byte	2
 948 0001 02       		.byte	2
 949              		.section	.rodata._ZN5daisy4seedL3D32E,"a"
 950              		.align	2
 953              	_ZN5daisy4seedL3D32E:
 954 0000 02       		.byte	2
 955 0001 03       		.byte	3
 956              		.section	.rodata._ZN5daisy4seedL3A12E,"a"
 957              		.align	2
 960              	_ZN5daisy4seedL3A12E:
 961 0000 02       		.byte	2
 962 0001 02       		.byte	2
 963              		.section	.rodata._ZN5daisy4seedL3A13E,"a"
 964              		.align	2
 967              	_ZN5daisy4seedL3A13E:
 968 0000 02       		.byte	2
 969 0001 03       		.byte	3
 970              		.section	.text._ZL20__gthread_key_deletei,"ax",%progbits
 971              		.align	1
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 976              	_ZL20__gthread_key_deletei:
 977              	.LFB2854:
 978              		.file 7 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Compile this one with gcc.  */
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** This file is part of GCC.
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** version.
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** for more details.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 26


  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_key_t;
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_once_t;
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_mutex_t;
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx) do {} while (0)
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((__unused__))
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #ifdef _LIBOBJC
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Thread local storage for a single thread */
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static void *thread_local_storage = NULL;
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend initialization functions */
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Initialize the threads subsystem.  */
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Close the threads subsystem.  */
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend thread functions */
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Create a new thread of execution.  */
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline objc_thread_t
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 27


  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return NULL;
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Set the current thread's priority.  */
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Return the current thread's priority.  */
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Yield our process time to another thread.  */
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline void
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_yield (void)
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return;
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Terminate the current thread.  */
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_exit (void)
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support available */
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* Should we really exit the program */
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return -1;
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline objc_thread_t
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_id (void)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* No thread support, use 1.  */
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return (objc_thread_t) 1;
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   thread_local_storage = value;
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline void *
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return thread_local_storage;
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 28


 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend mutex functions */
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Allocate a mutex.  */
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Deallocate a mutex.  */
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Grab a lock on a mutex.  */
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Unlock the mutex */
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Backend condition mutex functions */
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Allocate a condition.  */
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Deallocate a condition.  */
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Wait on the condition */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 29


 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** #else /* _LIBOBJC */
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_active_p (void)
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** 
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** static int _GLIBCXX_UNUSED
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** {
 979              		.loc 7 230 1
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 8
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 984 0000 80B4     		push	{r7}
 985              		.cfi_def_cfa_offset 4
 986              		.cfi_offset 7, -4
 987 0002 83B0     		sub	sp, sp, #12
 988              		.cfi_def_cfa_offset 16
 989 0004 00AF     		add	r7, sp, #0
 990              		.cfi_def_cfa_register 7
 991 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 30


 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h ****   return 0;
 992              		.loc 7 231 10
 993 0008 0023     		movs	r3, #0
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h **** }
 994              		.loc 7 232 1
 995 000a 1846     		mov	r0, r3
 996 000c 0C37     		adds	r7, r7, #12
 997              		.cfi_def_cfa_offset 4
 998 000e BD46     		mov	sp, r7
 999              		.cfi_def_cfa_register 13
 1000              		@ sp needed
 1001 0010 5DF8047B 		ldr	r7, [sp], #4
 1002              		.cfi_restore 7
 1003              		.cfi_def_cfa_offset 0
 1004 0014 7047     		bx	lr
 1005              		.cfi_endproc
 1006              	.LFE2854:
 1008              		.section	.rodata._ZN7daisyspL9kRandFracE,"a"
 1009              		.align	2
 1012              	_ZN7daisyspL9kRandFracE:
 1013 0000 00000030 		.word	805306368
 1014              		.section	.rodata._ZN7daisyspL11kOneTwelfthE,"a"
 1015              		.align	2
 1018              	_ZN7daisyspL11kOneTwelfthE:
 1019 0000 ABAAAA3D 		.word	1034594987
 1020              		.section	.text._ZN7daisysp4fmaxEff,"axG",%progbits,_ZN7daisysp4fmaxEff,comdat
 1021              		.align	1
 1022              		.weak	_ZN7daisysp4fmaxEff
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1027              	_ZN7daisysp4fmaxEff:
 1028              	.LFB4218:
 1029              		.file 8 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /*
   2:../DaisySP/Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Utility/dsp.h **** 
   4:../DaisySP/Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Utility/dsp.h **** */
   8:../DaisySP/Source/Utility/dsp.h **** 
   9:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../DaisySP/Source/Utility/dsp.h **** */
  11:../DaisySP/Source/Utility/dsp.h **** #pragma once
  12:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
  15:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
  16:../DaisySP/Source/Utility/dsp.h **** #include <random>
  17:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  18:../DaisySP/Source/Utility/dsp.h **** 
  19:../DaisySP/Source/Utility/dsp.h **** /** PIs
  20:../DaisySP/Source/Utility/dsp.h **** */
  21:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 31


  24:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  30:../DaisySP/Source/Utility/dsp.h **** {
  31:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../DaisySP/Source/Utility/dsp.h **** 
  34:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../DaisySP/Source/Utility/dsp.h **** 
  37:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  39:../DaisySP/Source/Utility/dsp.h **** */
  40:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../DaisySP/Source/Utility/dsp.h **** {
 1030              		.loc 8 41 1
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 16
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 80B4     		push	{r7}
 1036              		.cfi_def_cfa_offset 4
 1037              		.cfi_offset 7, -4
 1038 0002 85B0     		sub	sp, sp, #20
 1039              		.cfi_def_cfa_offset 24
 1040 0004 00AF     		add	r7, sp, #0
 1041              		.cfi_def_cfa_register 7
 1042 0006 87ED010A 		vstr.32	s0, [r7, #4]
 1043 000a C7ED000A 		vstr.32	s1, [r7]
  42:../DaisySP/Source/Utility/dsp.h ****     float r;
  43:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  44:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 1044              		.loc 8 44 5
 1045 000e D7ED017A 		vldr.32	s15, [r7, #4]
 1046 0012 97ED007A 		vldr.32	s14, [r7]
 1047              		.syntax unified
 1048              	@ 44 "../DaisySP/Source/Utility/dsp.h" 1
 1049 0016 C7FE877A 		vmaxnm.f32 s15, s15, s14
 1050              	@ 0 "" 2
 1051              		.thumb
 1052              		.syntax unified
 1053 001a C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Utility/dsp.h **** #else
  46:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  48:../DaisySP/Source/Utility/dsp.h ****     return r;
 1054              		.loc 8 48 12
 1055 001e FB68     		ldr	r3, [r7, #12]	@ float
 1056 0020 07EE903A 		vmov	s15, r3
  49:../DaisySP/Source/Utility/dsp.h **** }
 1057              		.loc 8 49 1
 1058 0024 B0EE670A 		vmov.f32	s0, s15
 1059 0028 1437     		adds	r7, r7, #20
 1060              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 32


 1061 002a BD46     		mov	sp, r7
 1062              		.cfi_def_cfa_register 13
 1063              		@ sp needed
 1064 002c 5DF8047B 		ldr	r7, [sp], #4
 1065              		.cfi_restore 7
 1066              		.cfi_def_cfa_offset 0
 1067 0030 7047     		bx	lr
 1068              		.cfi_endproc
 1069              	.LFE4218:
 1071              		.section	.text._ZN7daisysp4fminEff,"axG",%progbits,_ZN7daisysp4fminEff,comdat
 1072              		.align	1
 1073              		.weak	_ZN7daisysp4fminEff
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1078              	_ZN7daisysp4fminEff:
 1079              	.LFB4219:
  50:../DaisySP/Source/Utility/dsp.h **** 
  51:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../DaisySP/Source/Utility/dsp.h **** {
 1080              		.loc 8 52 1
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 16
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084              		@ link register save eliminated.
 1085 0000 80B4     		push	{r7}
 1086              		.cfi_def_cfa_offset 4
 1087              		.cfi_offset 7, -4
 1088 0002 85B0     		sub	sp, sp, #20
 1089              		.cfi_def_cfa_offset 24
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 87ED010A 		vstr.32	s0, [r7, #4]
 1093 000a C7ED000A 		vstr.32	s1, [r7]
  53:../DaisySP/Source/Utility/dsp.h ****     float r;
  54:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  55:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 1094              		.loc 8 55 5
 1095 000e D7ED017A 		vldr.32	s15, [r7, #4]
 1096 0012 97ED007A 		vldr.32	s14, [r7]
 1097              		.syntax unified
 1098              	@ 55 "../DaisySP/Source/Utility/dsp.h" 1
 1099 0016 C7FEC77A 		vminnm.f32 s15, s15, s14
 1100              	@ 0 "" 2
 1101              		.thumb
 1102              		.syntax unified
 1103 001a C7ED037A 		vstr.32	s15, [r7, #12]
  56:../DaisySP/Source/Utility/dsp.h **** #else
  57:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  59:../DaisySP/Source/Utility/dsp.h ****     return r;
 1104              		.loc 8 59 12
 1105 001e FB68     		ldr	r3, [r7, #12]	@ float
 1106 0020 07EE903A 		vmov	s15, r3
  60:../DaisySP/Source/Utility/dsp.h **** }
 1107              		.loc 8 60 1
 1108 0024 B0EE670A 		vmov.f32	s0, s15
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 33


 1109 0028 1437     		adds	r7, r7, #20
 1110              		.cfi_def_cfa_offset 4
 1111 002a BD46     		mov	sp, r7
 1112              		.cfi_def_cfa_register 13
 1113              		@ sp needed
 1114 002c 5DF8047B 		ldr	r7, [sp], #4
 1115              		.cfi_restore 7
 1116              		.cfi_def_cfa_offset 0
 1117 0030 7047     		bx	lr
 1118              		.cfi_endproc
 1119              	.LFE4219:
 1121              		.section	.text._ZN7daisysp6fclampEfff,"axG",%progbits,_ZN7daisysp6fclampEfff,comdat
 1122              		.align	1
 1123              		.weak	_ZN7daisysp6fclampEfff
 1124              		.syntax unified
 1125              		.thumb
 1126              		.thumb_func
 1128              	_ZN7daisysp6fclampEfff:
 1129              	.LFB4220:
  61:../DaisySP/Source/Utility/dsp.h **** 
  62:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  63:../DaisySP/Source/Utility/dsp.h **** */
  64:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:../DaisySP/Source/Utility/dsp.h **** {
 1130              		.loc 8 65 1
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 16
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 84B0     		sub	sp, sp, #16
 1139              		.cfi_def_cfa_offset 24
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 87ED030A 		vstr.32	s0, [r7, #12]
 1143 000a C7ED020A 		vstr.32	s1, [r7, #8]
 1144 000e 87ED011A 		vstr.32	s2, [r7, #4]
  66:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
 1145              		.loc 8 66 16
 1146 0012 D7ED020A 		vldr.32	s1, [r7, #8]
 1147 0016 97ED030A 		vldr.32	s0, [r7, #12]
 1148 001a FFF7FEFF 		bl	_ZN7daisysp4fmaxEff
 1149 001e F0EE407A 		vmov.f32	s15, s0
 1150 0022 D7ED010A 		vldr.32	s1, [r7, #4]
 1151 0026 B0EE670A 		vmov.f32	s0, s15
 1152 002a FFF7FEFF 		bl	_ZN7daisysp4fminEff
 1153 002e F0EE407A 		vmov.f32	s15, s0
  67:../DaisySP/Source/Utility/dsp.h **** }
 1154              		.loc 8 67 1
 1155 0032 B0EE670A 		vmov.f32	s0, s15
 1156 0036 1037     		adds	r7, r7, #16
 1157              		.cfi_def_cfa_offset 8
 1158 0038 BD46     		mov	sp, r7
 1159              		.cfi_def_cfa_register 13
 1160              		@ sp needed
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 34


 1161 003a 80BD     		pop	{r7, pc}
 1162              		.cfi_endproc
 1163              	.LFE4220:
 1165              		.section	.text._ZN7daisysp4fmapEfffNS_7MappingE,"axG",%progbits,_ZN7daisysp4fmapEfffNS_7MappingE,c
 1166              		.align	1
 1167              		.weak	_ZN7daisysp4fmapEfffNS_7MappingE
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1172              	_ZN7daisysp4fmapEfffNS_7MappingE:
 1173              	.LFB4229:
  68:../DaisySP/Source/Utility/dsp.h **** 
  69:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:../DaisySP/Source/Utility/dsp.h **** These are approximations
  72:../DaisySP/Source/Utility/dsp.h **** */
  73:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  74:../DaisySP/Source/Utility/dsp.h **** {
  75:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  76:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  78:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  80:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  81:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  82:../DaisySP/Source/Utility/dsp.h ****     return f;
  83:../DaisySP/Source/Utility/dsp.h **** }
  84:../DaisySP/Source/Utility/dsp.h **** 
  85:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:../DaisySP/Source/Utility/dsp.h **** {
  87:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  88:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  90:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:../DaisySP/Source/Utility/dsp.h ****     l >>= (n - 1);
  92:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  93:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  94:../DaisySP/Source/Utility/dsp.h ****     return f;
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:../DaisySP/Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:../DaisySP/Source/Utility/dsp.h ****  */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     return x - static_cast<int>(x);
 103:../DaisySP/Source/Utility/dsp.h **** }
 104:../DaisySP/Source/Utility/dsp.h **** 
 105:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
 107:../DaisySP/Source/Utility/dsp.h **** */
 108:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
 109:../DaisySP/Source/Utility/dsp.h **** {
 110:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:../DaisySP/Source/Utility/dsp.h **** }
 112:../DaisySP/Source/Utility/dsp.h **** 
 113:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 35


 114:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:../DaisySP/Source/Utility/dsp.h **** */
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     float frac;
 119:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 120:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 123:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 125:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 126:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 127:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 129:../DaisySP/Source/Utility/dsp.h ****     return (f);
 130:../DaisySP/Source/Utility/dsp.h **** }
 131:../DaisySP/Source/Utility/dsp.h **** 
 132:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 133:../DaisySP/Source/Utility/dsp.h **** {
 134:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:../DaisySP/Source/Utility/dsp.h **** }
 136:../DaisySP/Source/Utility/dsp.h **** 
 137:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 138:../DaisySP/Source/Utility/dsp.h **** */
 139:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 140:../DaisySP/Source/Utility/dsp.h **** {
 141:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 142:../DaisySP/Source/Utility/dsp.h **** }
 143:../DaisySP/Source/Utility/dsp.h **** 
 144:../DaisySP/Source/Utility/dsp.h **** 
 145:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 146:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 147:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 148:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 149:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 150:../DaisySP/Source/Utility/dsp.h **** */
 151:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 152:../DaisySP/Source/Utility/dsp.h **** {
 153:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 154:../DaisySP/Source/Utility/dsp.h **** }
 155:../DaisySP/Source/Utility/dsp.h **** 
 156:../DaisySP/Source/Utility/dsp.h **** /** Curves to use with the fmap function */
 157:../DaisySP/Source/Utility/dsp.h **** enum class Mapping
 158:../DaisySP/Source/Utility/dsp.h **** {
 159:../DaisySP/Source/Utility/dsp.h ****     LINEAR,
 160:../DaisySP/Source/Utility/dsp.h ****     EXP,
 161:../DaisySP/Source/Utility/dsp.h ****     LOG,
 162:../DaisySP/Source/Utility/dsp.h **** };
 163:../DaisySP/Source/Utility/dsp.h **** 
 164:../DaisySP/Source/Utility/dsp.h **** /** Maps a float between a specified range, using a specified curve.
 165:../DaisySP/Source/Utility/dsp.h ****  *
 166:../DaisySP/Source/Utility/dsp.h ****  *  \param in a value between 0 to 1 that will be mapped to the new range.
 167:../DaisySP/Source/Utility/dsp.h ****  *  \param min the new minimum value
 168:../DaisySP/Source/Utility/dsp.h ****  *  \param max the new maxmimum value
 169:../DaisySP/Source/Utility/dsp.h ****  *  \param curve a Mapping Value to adjust the response curve of the transformation
 170:../DaisySP/Source/Utility/dsp.h ****  *               defaults to Linear. @see Mapping
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 36


 171:../DaisySP/Source/Utility/dsp.h ****  *
 172:../DaisySP/Source/Utility/dsp.h ****  *  When using the log curve min and max, must be greater than zero.
 173:../DaisySP/Source/Utility/dsp.h ****  *
 174:../DaisySP/Source/Utility/dsp.h ****  *  \retval returns the transformed float within the new range.
 175:../DaisySP/Source/Utility/dsp.h **** */
 176:../DaisySP/Source/Utility/dsp.h **** inline float
 177:../DaisySP/Source/Utility/dsp.h **** fmap(float in, float min, float max, Mapping curve = Mapping::LINEAR)
 178:../DaisySP/Source/Utility/dsp.h **** {
 1174              		.loc 8 178 1
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 24
 1177              		@ frame_needed = 1, uses_anonymous_args = 0
 1178 0000 80B5     		push	{r7, lr}
 1179              		.cfi_def_cfa_offset 8
 1180              		.cfi_offset 7, -8
 1181              		.cfi_offset 14, -4
 1182 0002 86B0     		sub	sp, sp, #24
 1183              		.cfi_def_cfa_offset 32
 1184 0004 00AF     		add	r7, sp, #0
 1185              		.cfi_def_cfa_register 7
 1186 0006 87ED030A 		vstr.32	s0, [r7, #12]
 1187 000a C7ED020A 		vstr.32	s1, [r7, #8]
 1188 000e 87ED011A 		vstr.32	s2, [r7, #4]
 1189 0012 3860     		str	r0, [r7]
 1190              	.LBB7:
 179:../DaisySP/Source/Utility/dsp.h ****     switch(curve)
 1191              		.loc 8 179 5
 1192 0014 3B68     		ldr	r3, [r7]
 1193 0016 012B     		cmp	r3, #1
 1194 0018 03D0     		beq	.L46
 1195 001a 3B68     		ldr	r3, [r7]
 1196 001c 022B     		cmp	r3, #2
 1197 001e 1BD0     		beq	.L47
 1198 0020 49E0     		b	.L50
 1199              	.L46:
 1200              	.LBB8:
 180:../DaisySP/Source/Utility/dsp.h ****     {
 181:../DaisySP/Source/Utility/dsp.h ****         case Mapping::EXP:
 182:../DaisySP/Source/Utility/dsp.h ****             return fclamp(min + (in * in) * (max - min), min, max);
 1201              		.loc 8 182 37
 1202 0022 D7ED037A 		vldr.32	s15, [r7, #12]
 1203 0026 27EEA77A 		vmul.f32	s14, s15, s15
 1204              		.loc 8 182 50
 1205 002a D7ED016A 		vldr.32	s13, [r7, #4]
 1206 002e D7ED027A 		vldr.32	s15, [r7, #8]
 1207 0032 76EEE77A 		vsub.f32	s15, s13, s15
 1208              		.loc 8 182 43
 1209 0036 27EE277A 		vmul.f32	s14, s14, s15
 1210              		.loc 8 182 26
 1211 003a D7ED027A 		vldr.32	s15, [r7, #8]
 1212 003e 77EE277A 		vadd.f32	s15, s14, s15
 1213 0042 97ED011A 		vldr.32	s2, [r7, #4]
 1214 0046 D7ED020A 		vldr.32	s1, [r7, #8]
 1215 004a B0EE670A 		vmov.f32	s0, s15
 1216 004e FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 1217 0052 F0EE407A 		vmov.f32	s15, s0
 1218              		.loc 8 182 66
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 37


 1219 0056 47E0     		b	.L49
 1220              	.L47:
 1221              	.LBB9:
 183:../DaisySP/Source/Utility/dsp.h ****         case Mapping::LOG:
 184:../DaisySP/Source/Utility/dsp.h ****         {
 185:../DaisySP/Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 1222              		.loc 8 185 41
 1223 0058 97ED017A 		vldr.32	s14, [r7, #4]
 1224 005c D7ED027A 		vldr.32	s15, [r7, #8]
 1225 0060 C7EE276A 		vdiv.f32	s13, s14, s15
 1226 0064 B0EE660A 		vmov.f32	s0, s13
 1227 0068 FFF7FEFF 		bl	log10f
 1228 006c B0EE407A 		vmov.f32	s14, s0
 1229              		.loc 8 185 51
 1230 0070 F7EE006A 		vmov.f32	s13, #1.0e+0
 1231 0074 C6EE877A 		vdiv.f32	s15, s13, s14
 1232 0078 C7ED057A 		vstr.32	s15, [r7, #20]
 186:../DaisySP/Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 1233              		.loc 8 186 37
 1234 007c 97ED037A 		vldr.32	s14, [r7, #12]
 1235 0080 D7ED057A 		vldr.32	s15, [r7, #20]
 1236 0084 C7EE276A 		vdiv.f32	s13, s14, s15
 1237 0088 F0EE660A 		vmov.f32	s1, s13
 1238 008c B2EE040A 		vmov.f32	s0, #1.0e+1
 1239 0090 FFF7FEFF 		bl	powf
 1240 0094 B0EE407A 		vmov.f32	s14, s0
 1241              		.loc 8 186 26
 1242 0098 D7ED027A 		vldr.32	s15, [r7, #8]
 1243 009c 67EE277A 		vmul.f32	s15, s14, s15
 1244 00a0 97ED011A 		vldr.32	s2, [r7, #4]
 1245 00a4 D7ED020A 		vldr.32	s1, [r7, #8]
 1246 00a8 B0EE670A 		vmov.f32	s0, s15
 1247 00ac FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 1248 00b0 F0EE407A 		vmov.f32	s15, s0
 1249              		.loc 8 186 59
 1250 00b4 18E0     		b	.L49
 1251              	.L50:
 1252              	.LBE9:
 187:../DaisySP/Source/Utility/dsp.h ****         }
 188:../DaisySP/Source/Utility/dsp.h ****         case Mapping::LINEAR:
 189:../DaisySP/Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 1253              		.loc 8 189 48
 1254 00b6 97ED017A 		vldr.32	s14, [r7, #4]
 1255 00ba D7ED027A 		vldr.32	s15, [r7, #8]
 1256 00be 37EE677A 		vsub.f32	s14, s14, s15
 1257              		.loc 8 189 41
 1258 00c2 D7ED037A 		vldr.32	s15, [r7, #12]
 1259 00c6 27EE277A 		vmul.f32	s14, s14, s15
 1260              		.loc 8 189 31
 1261 00ca D7ED027A 		vldr.32	s15, [r7, #8]
 1262 00ce 77EE277A 		vadd.f32	s15, s14, s15
 1263 00d2 97ED011A 		vldr.32	s2, [r7, #4]
 1264 00d6 D7ED020A 		vldr.32	s1, [r7, #8]
 1265 00da B0EE670A 		vmov.f32	s0, s15
 1266 00de FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 1267 00e2 F0EE407A 		vmov.f32	s15, s0
 1268              		.loc 8 189 64
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 38


 1269 00e6 00BF     		nop
 1270              	.L49:
 1271              	.LBE8:
 1272              	.LBE7:
 190:../DaisySP/Source/Utility/dsp.h ****     }
 191:../DaisySP/Source/Utility/dsp.h **** }
 1273              		.loc 8 191 1
 1274 00e8 B0EE670A 		vmov.f32	s0, s15
 1275 00ec 1837     		adds	r7, r7, #24
 1276              		.cfi_def_cfa_offset 8
 1277 00ee BD46     		mov	sp, r7
 1278              		.cfi_def_cfa_register 13
 1279              		@ sp needed
 1280 00f0 80BD     		pop	{r7, pc}
 1281              		.cfi_endproc
 1282              	.LFE4229:
 1284              		.section	.text._ZN7daisysp7OnePole4InitEv,"axG",%progbits,_ZN7daisysp7OnePole4InitEv,comdat
 1285              		.align	1
 1286              		.weak	_ZN7daisysp7OnePole4InitEv
 1287              		.syntax unified
 1288              		.thumb
 1289              		.thumb_func
 1291              	_ZN7daisysp7OnePole4InitEv:
 1292              	.LFB4460:
 1293              		.file 9 "../DaisySP/Source/Filters/onepole.h"
   1:../DaisySP/Source/Filters/onepole.h **** /*
   2:../DaisySP/Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../DaisySP/Source/Filters/onepole.h **** 
   4:../DaisySP/Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../DaisySP/Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../DaisySP/Source/Filters/onepole.h **** */
   8:../DaisySP/Source/Filters/onepole.h **** 
   9:../DaisySP/Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../DaisySP/Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../DaisySP/Source/Filters/onepole.h **** 
  12:../DaisySP/Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../DaisySP/Source/Filters/onepole.h **** #include <cmath>
  14:../DaisySP/Source/Filters/onepole.h **** #include <algorithm>
  15:../DaisySP/Source/Filters/onepole.h **** 
  16:../DaisySP/Source/Filters/onepole.h **** namespace daisysp
  17:../DaisySP/Source/Filters/onepole.h **** {
  18:../DaisySP/Source/Filters/onepole.h **** /**         
  19:../DaisySP/Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../DaisySP/Source/Filters/onepole.h ****     @author beserge
  21:../DaisySP/Source/Filters/onepole.h ****     @date Dec 2023 
  22:../DaisySP/Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../DaisySP/Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../DaisySP/Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../DaisySP/Source/Filters/onepole.h **** */
  26:../DaisySP/Source/Filters/onepole.h **** class OnePole
  27:../DaisySP/Source/Filters/onepole.h **** {
  28:../DaisySP/Source/Filters/onepole.h ****   public:
  29:../DaisySP/Source/Filters/onepole.h ****     OnePole() {}
  30:../DaisySP/Source/Filters/onepole.h ****     ~OnePole() {}
  31:../DaisySP/Source/Filters/onepole.h **** 
  32:../DaisySP/Source/Filters/onepole.h ****     /**
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 39


  33:../DaisySP/Source/Filters/onepole.h ****      * @brief Operational modes of the filter
  34:../DaisySP/Source/Filters/onepole.h ****      * - LOW_PASS = cuts out high frequency sound, lets low frequency sound pass through
  35:../DaisySP/Source/Filters/onepole.h ****      * - HIGH_PASS = cuts out low frequency sound, lets high frequency sound pass through
  36:../DaisySP/Source/Filters/onepole.h ****      */
  37:../DaisySP/Source/Filters/onepole.h ****     enum FilterMode
  38:../DaisySP/Source/Filters/onepole.h ****     {
  39:../DaisySP/Source/Filters/onepole.h ****         FILTER_MODE_LOW_PASS,
  40:../DaisySP/Source/Filters/onepole.h ****         FILTER_MODE_HIGH_PASS
  41:../DaisySP/Source/Filters/onepole.h ****     };
  42:../DaisySP/Source/Filters/onepole.h **** 
  43:../DaisySP/Source/Filters/onepole.h ****     /** Initializes the module */
  44:../DaisySP/Source/Filters/onepole.h ****     void Init()
 1294              		.loc 9 44 10
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 8
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 0000 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 82B0     		sub	sp, sp, #8
 1303              		.cfi_def_cfa_offset 16
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 1306 0006 7860     		str	r0, [r7, #4]
  45:../DaisySP/Source/Filters/onepole.h ****     {
  46:../DaisySP/Source/Filters/onepole.h ****         Reset();
 1307              		.loc 9 46 14
 1308 0008 7868     		ldr	r0, [r7, #4]
 1309 000a FFF7FEFF 		bl	_ZN7daisysp7OnePole5ResetEv
  47:../DaisySP/Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
 1310              		.loc 9 47 15
 1311 000e 7B68     		ldr	r3, [r7, #4]
 1312 0010 0022     		movs	r2, #0
 1313 0012 1A73     		strb	r2, [r3, #12]
  48:../DaisySP/Source/Filters/onepole.h ****     }
 1314              		.loc 9 48 5
 1315 0014 00BF     		nop
 1316 0016 0837     		adds	r7, r7, #8
 1317              		.cfi_def_cfa_offset 8
 1318 0018 BD46     		mov	sp, r7
 1319              		.cfi_def_cfa_register 13
 1320              		@ sp needed
 1321 001a 80BD     		pop	{r7, pc}
 1322              		.cfi_endproc
 1323              	.LFE4460:
 1325              		.section	.text._ZN7daisysp7OnePole5ResetEv,"axG",%progbits,_ZN7daisysp7OnePole5ResetEv,comdat
 1326              		.align	1
 1327              		.weak	_ZN7daisysp7OnePole5ResetEv
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1332              	_ZN7daisysp7OnePole5ResetEv:
 1333              	.LFB4461:
  49:../DaisySP/Source/Filters/onepole.h **** 
  50:../DaisySP/Source/Filters/onepole.h ****     /** Reset the module to its default state */
  51:../DaisySP/Source/Filters/onepole.h ****     inline void Reset() { state_ = 0.0f; }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 40


 1334              		.loc 9 51 17
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 8
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 1339 0000 80B4     		push	{r7}
 1340              		.cfi_def_cfa_offset 4
 1341              		.cfi_offset 7, -4
 1342 0002 83B0     		sub	sp, sp, #12
 1343              		.cfi_def_cfa_offset 16
 1344 0004 00AF     		add	r7, sp, #0
 1345              		.cfi_def_cfa_register 7
 1346 0006 7860     		str	r0, [r7, #4]
 1347              		.loc 9 51 34
 1348 0008 7B68     		ldr	r3, [r7, #4]
 1349 000a 4FF00002 		mov	r2, #0
 1350 000e 9A60     		str	r2, [r3, #8]	@ float
 1351              		.loc 9 51 42
 1352 0010 00BF     		nop
 1353 0012 0C37     		adds	r7, r7, #12
 1354              		.cfi_def_cfa_offset 4
 1355 0014 BD46     		mov	sp, r7
 1356              		.cfi_def_cfa_register 13
 1357              		@ sp needed
 1358 0016 5DF8047B 		ldr	r7, [sp], #4
 1359              		.cfi_restore 7
 1360              		.cfi_def_cfa_offset 0
 1361 001a 7047     		bx	lr
 1362              		.cfi_endproc
 1363              	.LFE4461:
 1365              		.section	.text._ZN7daisysp7OnePole12SetFrequencyEf,"axG",%progbits,_ZN7daisysp7OnePole12SetFrequen
 1366              		.align	1
 1367              		.weak	_ZN7daisysp7OnePole12SetFrequencyEf
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1372              	_ZN7daisysp7OnePole12SetFrequencyEf:
 1373              	.LFB4462:
  52:../DaisySP/Source/Filters/onepole.h **** 
  53:../DaisySP/Source/Filters/onepole.h ****     /** Set the filter cutoff frequency
  54:../DaisySP/Source/Filters/onepole.h ****     *   \param freq Cutoff frequency. Valid range from 0 to .497f
  55:../DaisySP/Source/Filters/onepole.h ****     */
  56:../DaisySP/Source/Filters/onepole.h ****     inline void SetFrequency(float freq)
 1374              		.loc 9 56 17
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 8
 1377              		@ frame_needed = 1, uses_anonymous_args = 0
 1378 0000 80B5     		push	{r7, lr}
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 82B0     		sub	sp, sp, #8
 1383              		.cfi_def_cfa_offset 16
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 7860     		str	r0, [r7, #4]
 1387 0008 87ED000A 		vstr.32	s0, [r7]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 41


  57:../DaisySP/Source/Filters/onepole.h ****     {
  58:../DaisySP/Source/Filters/onepole.h ****         // Clip coefficient to about 100.
  59:../DaisySP/Source/Filters/onepole.h ****         freq = freq < 0.497f ? freq : 0.497f;
 1388              		.loc 9 59 30
 1389 000c D7ED007A 		vldr.32	s15, [r7]
 1390 0010 9FED157A 		vldr.32	s14, .L59
 1391 0014 F4EEC77A 		vcmpe.f32	s15, s14
 1392 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1393 001c 01D5     		bpl	.L58
 1394              		.loc 9 59 30 is_stmt 0 discriminator 1
 1395 001e 3B68     		ldr	r3, [r7]	@ float
 1396 0020 00E0     		b	.L56
 1397              	.L58:
 1398              		.loc 9 59 30 discriminator 2
 1399 0022 124B     		ldr	r3, .L59+4
 1400              	.L56:
 1401              		.loc 9 59 14 is_stmt 1 discriminator 4
 1402 0024 3B60     		str	r3, [r7]	@ float
  60:../DaisySP/Source/Filters/onepole.h **** 
  61:../DaisySP/Source/Filters/onepole.h ****         g_  = tanf(PI_F * freq);
 1403              		.loc 9 61 19 discriminator 4
 1404 0026 D7ED007A 		vldr.32	s15, [r7]
 1405 002a 9FED117A 		vldr.32	s14, .L59+8
 1406 002e 67EE877A 		vmul.f32	s15, s15, s14
 1407 0032 B0EE670A 		vmov.f32	s0, s15
 1408 0036 FFF7FEFF 		bl	tanf
 1409 003a F0EE407A 		vmov.f32	s15, s0
 1410              		.loc 9 61 13 discriminator 4
 1411 003e 7B68     		ldr	r3, [r7, #4]
 1412 0040 C3ED007A 		vstr.32	s15, [r3]
  62:../DaisySP/Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1413              		.loc 9 62 28 discriminator 4
 1414 0044 7B68     		ldr	r3, [r7, #4]
 1415 0046 D3ED007A 		vldr.32	s15, [r3]
 1416              		.loc 9 62 26 discriminator 4
 1417 004a B7EE007A 		vmov.f32	s14, #1.0e+0
 1418 004e 37EE877A 		vadd.f32	s14, s15, s14
 1419              		.loc 9 62 19 discriminator 4
 1420 0052 F7EE006A 		vmov.f32	s13, #1.0e+0
 1421 0056 C6EE877A 		vdiv.f32	s15, s13, s14
 1422              		.loc 9 62 13 discriminator 4
 1423 005a 7B68     		ldr	r3, [r7, #4]
 1424 005c C3ED017A 		vstr.32	s15, [r3, #4]
  63:../DaisySP/Source/Filters/onepole.h ****     }
 1425              		.loc 9 63 5 discriminator 4
 1426 0060 00BF     		nop
 1427 0062 0837     		adds	r7, r7, #8
 1428              		.cfi_def_cfa_offset 8
 1429 0064 BD46     		mov	sp, r7
 1430              		.cfi_def_cfa_register 13
 1431              		@ sp needed
 1432 0066 80BD     		pop	{r7, pc}
 1433              	.L60:
 1434              		.align	2
 1435              	.L59:
 1436 0068 C976FE3E 		.word	1056863945
 1437 006c C976FE3E 		.word	1056863945
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 42


 1438 0070 DB0F4940 		.word	1078530011
 1439              		.cfi_endproc
 1440              	.LFE4462:
 1442              		.section	.text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE,"axG",%progbits,_ZN7daisysp7On
 1443              		.align	1
 1444              		.weak	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1449              	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:
 1450              	.LFB4463:
  64:../DaisySP/Source/Filters/onepole.h **** 
  65:../DaisySP/Source/Filters/onepole.h ****     /** Set the filter mode
  66:../DaisySP/Source/Filters/onepole.h ****     *   \param mode Filter mode. Can be lowpass or highpass
  67:../DaisySP/Source/Filters/onepole.h ****     */
  68:../DaisySP/Source/Filters/onepole.h ****     inline void SetFilterMode(FilterMode mode) { mode_ = mode; }
 1451              		.loc 9 68 17
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 8
 1454              		@ frame_needed = 1, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
 1456 0000 80B4     		push	{r7}
 1457              		.cfi_def_cfa_offset 4
 1458              		.cfi_offset 7, -4
 1459 0002 83B0     		sub	sp, sp, #12
 1460              		.cfi_def_cfa_offset 16
 1461 0004 00AF     		add	r7, sp, #0
 1462              		.cfi_def_cfa_register 7
 1463 0006 7860     		str	r0, [r7, #4]
 1464 0008 0B46     		mov	r3, r1
 1465 000a FB70     		strb	r3, [r7, #3]
 1466              		.loc 9 68 56
 1467 000c 7B68     		ldr	r3, [r7, #4]
 1468 000e FA78     		ldrb	r2, [r7, #3]
 1469 0010 1A73     		strb	r2, [r3, #12]
 1470              		.loc 9 68 64
 1471 0012 00BF     		nop
 1472 0014 0C37     		adds	r7, r7, #12
 1473              		.cfi_def_cfa_offset 4
 1474 0016 BD46     		mov	sp, r7
 1475              		.cfi_def_cfa_register 13
 1476              		@ sp needed
 1477 0018 5DF8047B 		ldr	r7, [sp], #4
 1478              		.cfi_restore 7
 1479              		.cfi_def_cfa_offset 0
 1480 001c 7047     		bx	lr
 1481              		.cfi_endproc
 1482              	.LFE4463:
 1484              		.section	.text._ZN7daisysp7OnePole7ProcessEf,"axG",%progbits,_ZN7daisysp7OnePole7ProcessEf,comdat
 1485              		.align	1
 1486              		.weak	_ZN7daisysp7OnePole7ProcessEf
 1487              		.syntax unified
 1488              		.thumb
 1489              		.thumb_func
 1491              	_ZN7daisysp7OnePole7ProcessEf:
 1492              	.LFB4464:
  69:../DaisySP/Source/Filters/onepole.h **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 43


  70:../DaisySP/Source/Filters/onepole.h ****     /** Process audio through the filter
  71:../DaisySP/Source/Filters/onepole.h ****     *   \param in The next sample to be processed
  72:../DaisySP/Source/Filters/onepole.h ****     */
  73:../DaisySP/Source/Filters/onepole.h ****     inline float Process(float in)
 1493              		.loc 9 73 18
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 16
 1496              		@ frame_needed = 1, uses_anonymous_args = 0
 1497              		@ link register save eliminated.
 1498 0000 80B4     		push	{r7}
 1499              		.cfi_def_cfa_offset 4
 1500              		.cfi_offset 7, -4
 1501 0002 85B0     		sub	sp, sp, #20
 1502              		.cfi_def_cfa_offset 24
 1503 0004 00AF     		add	r7, sp, #0
 1504              		.cfi_def_cfa_register 7
 1505 0006 7860     		str	r0, [r7, #4]
 1506 0008 87ED000A 		vstr.32	s0, [r7]
  74:../DaisySP/Source/Filters/onepole.h ****     {
  75:../DaisySP/Source/Filters/onepole.h ****         float lp;
  76:../DaisySP/Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 1507              		.loc 9 76 19
 1508 000c 7B68     		ldr	r3, [r7, #4]
 1509 000e 93ED007A 		vldr.32	s14, [r3]
 1510              		.loc 9 76 22
 1511 0012 D7ED007A 		vldr.32	s15, [r7]
 1512 0016 27EE277A 		vmul.f32	s14, s14, s15
 1513              		.loc 9 76 29
 1514 001a 7B68     		ldr	r3, [r7, #4]
 1515 001c D3ED027A 		vldr.32	s15, [r3, #8]
 1516              		.loc 9 76 27
 1517 0020 37EE277A 		vadd.f32	s14, s14, s15
 1518              		.loc 9 76 39
 1519 0024 7B68     		ldr	r3, [r7, #4]
 1520 0026 D3ED017A 		vldr.32	s15, [r3, #4]
 1521              		.loc 9 76 16
 1522 002a 67EE277A 		vmul.f32	s15, s14, s15
 1523 002e C7ED037A 		vstr.32	s15, [r7, #12]
  77:../DaisySP/Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 1524              		.loc 9 77 18
 1525 0032 7B68     		ldr	r3, [r7, #4]
 1526 0034 93ED007A 		vldr.32	s14, [r3]
 1527              		.loc 9 77 27
 1528 0038 D7ED006A 		vldr.32	s13, [r7]
 1529 003c D7ED037A 		vldr.32	s15, [r7, #12]
 1530 0040 76EEE77A 		vsub.f32	s15, s13, s15
 1531              		.loc 9 77 21
 1532 0044 27EE277A 		vmul.f32	s14, s14, s15
 1533              		.loc 9 77 33
 1534 0048 D7ED037A 		vldr.32	s15, [r7, #12]
 1535 004c 77EE277A 		vadd.f32	s15, s14, s15
 1536              		.loc 9 77 16
 1537 0050 7B68     		ldr	r3, [r7, #4]
 1538 0052 C3ED027A 		vstr.32	s15, [r3, #8]
  78:../DaisySP/Source/Filters/onepole.h **** 
  79:../DaisySP/Source/Filters/onepole.h ****         switch(mode_)
 1539              		.loc 9 79 16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 44


 1540 0056 7B68     		ldr	r3, [r7, #4]
 1541 0058 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1542              		.loc 9 79 9
 1543 005a 002B     		cmp	r3, #0
 1544 005c 02D0     		beq	.L63
 1545 005e 012B     		cmp	r3, #1
 1546 0060 03D0     		beq	.L64
 1547 0062 09E0     		b	.L67
 1548              	.L63:
  80:../DaisySP/Source/Filters/onepole.h ****         {
  81:../DaisySP/Source/Filters/onepole.h ****             case FILTER_MODE_LOW_PASS: return lp;
 1549              		.loc 9 81 47
 1550 0064 D7ED037A 		vldr.32	s15, [r7, #12]
 1551 0068 08E0     		b	.L66
 1552              	.L64:
  82:../DaisySP/Source/Filters/onepole.h ****             case FILTER_MODE_HIGH_PASS: return in - lp;
 1553              		.loc 9 82 53
 1554 006a 97ED007A 		vldr.32	s14, [r7]
 1555 006e D7ED037A 		vldr.32	s15, [r7, #12]
 1556 0072 77EE677A 		vsub.f32	s15, s14, s15
 1557 0076 01E0     		b	.L66
 1558              	.L67:
  83:../DaisySP/Source/Filters/onepole.h ****         }
  84:../DaisySP/Source/Filters/onepole.h **** 
  85:../DaisySP/Source/Filters/onepole.h ****         return 0.0f;
 1559              		.loc 9 85 16
 1560 0078 DFED047A 		vldr.32	s15, .L68
 1561              	.L66:
  86:../DaisySP/Source/Filters/onepole.h ****     }
 1562              		.loc 9 86 5
 1563 007c B0EE670A 		vmov.f32	s0, s15
 1564 0080 1437     		adds	r7, r7, #20
 1565              		.cfi_def_cfa_offset 4
 1566 0082 BD46     		mov	sp, r7
 1567              		.cfi_def_cfa_register 13
 1568              		@ sp needed
 1569 0084 5DF8047B 		ldr	r7, [sp], #4
 1570              		.cfi_restore 7
 1571              		.cfi_def_cfa_offset 0
 1572 0088 7047     		bx	lr
 1573              	.L69:
 1574 008a 00BF     		.align	2
 1575              	.L68:
 1576 008c 00000000 		.word	0
 1577              		.cfi_endproc
 1578              	.LFE4464:
 1580              		.section	.text._ZN7daisysp8ReverbSc6SetMixEf,"axG",%progbits,_ZN7daisysp8ReverbSc6SetMixEf,comdat
 1581              		.align	1
 1582              		.weak	_ZN7daisysp8ReverbSc6SetMixEf
 1583              		.syntax unified
 1584              		.thumb
 1585              		.thumb_func
 1587              	_ZN7daisysp8ReverbSc6SetMixEf:
 1588              	.LFB4746:
 1589              		.file 10 "../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Copyright (c) 2023 Electrosmith, Corp, Sean Costello, Istvan Varga, Paul Batchelor
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 45


   3:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** // #define DSY_REVERBSC_MAX_SIZE 49468
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** */
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** typedef struct
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
  31:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** } ReverbScDl;
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** /** Stereo Reverb */
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** class ReverbSc
  36:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** {
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****   public:
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ReverbSc() {}
  39:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
  40:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /** Initializes the reverb module, and sets the sample_rate at which the Process function will 
  41:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****         Returns 0 if all good, or 1 if it runs out of delay times exceed maximum allowed.
  42:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     */
  43:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int Init(float sample_rate);
  44:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  45:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /** Process the input through the reverb, and updates values of out1, and out2 with the new pro
  46:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     */
  47:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     int Process(const float &in1, const float &in2, float *out1, float *out2);
  48:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h **** 
  49:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /* process using a simple wet/dry mix */
  50:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     void ProcessMix(const float &in1, const float &in2, float *out1, float *out2);
  51:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     void SetMix(float mix) { wet_mix_ = mix; }
 1590              		.loc 10 51 10
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 8
 1593              		@ frame_needed = 1, uses_anonymous_args = 0
 1594              		@ link register save eliminated.
 1595 0000 80B4     		push	{r7}
 1596              		.cfi_def_cfa_offset 4
 1597              		.cfi_offset 7, -4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 46


 1598 0002 83B0     		sub	sp, sp, #12
 1599              		.cfi_def_cfa_offset 16
 1600 0004 00AF     		add	r7, sp, #0
 1601              		.cfi_def_cfa_register 7
 1602 0006 7860     		str	r0, [r7, #4]
 1603 0008 87ED000A 		vstr.32	s0, [r7]
 1604              		.loc 10 51 39
 1605 000c 7B68     		ldr	r3, [r7, #4]
 1606 000e 03F5C023 		add	r3, r3, #393216
 1607 0012 03F64433 		addw	r3, r3, #2884
 1608 0016 3A68     		ldr	r2, [r7]	@ float
 1609 0018 1A60     		str	r2, [r3]	@ float
 1610              		.loc 10 51 46
 1611 001a 00BF     		nop
 1612 001c 0C37     		adds	r7, r7, #12
 1613              		.cfi_def_cfa_offset 4
 1614 001e BD46     		mov	sp, r7
 1615              		.cfi_def_cfa_register 13
 1616              		@ sp needed
 1617 0020 5DF8047B 		ldr	r7, [sp], #4
 1618              		.cfi_restore 7
 1619              		.cfi_def_cfa_offset 0
 1620 0024 7047     		bx	lr
 1621              		.cfi_endproc
 1622              	.LFE4746:
 1624              		.section	.text._ZN7daisysp8ReverbSc11SetFeedbackERKf,"axG",%progbits,_ZN7daisysp8ReverbSc11SetFeed
 1625              		.align	1
 1626              		.weak	_ZN7daisysp8ReverbSc11SetFeedbackERKf
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1631              	_ZN7daisysp8ReverbSc11SetFeedbackERKf:
 1632              	.LFB4747:
  52:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     /** controls the reverb time. reverb tail becomes infinite when set to 1.0
  53:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****         \param fb - sets reverb time. range: 0.0 to 1.0
  54:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     */
  55:../DaisySP/Source/../DaisySP-LGPL/Source/Effects/reverbsc.h ****     inline void SetFeedback(const float &fb) { feedback_ = fb; }
 1633              		.loc 10 55 17
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 8
 1636              		@ frame_needed = 1, uses_anonymous_args = 0
 1637              		@ link register save eliminated.
 1638 0000 80B4     		push	{r7}
 1639              		.cfi_def_cfa_offset 4
 1640              		.cfi_offset 7, -4
 1641 0002 83B0     		sub	sp, sp, #12
 1642              		.cfi_def_cfa_offset 16
 1643 0004 00AF     		add	r7, sp, #0
 1644              		.cfi_def_cfa_register 7
 1645 0006 7860     		str	r0, [r7, #4]
 1646 0008 3960     		str	r1, [r7]
 1647              		.loc 10 55 60
 1648 000a 3B68     		ldr	r3, [r7]
 1649 000c 1A68     		ldr	r2, [r3]	@ float
 1650              		.loc 10 55 58
 1651 000e 7B68     		ldr	r3, [r7, #4]
 1652 0010 1A60     		str	r2, [r3]	@ float
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 47


 1653              		.loc 10 55 64
 1654 0012 00BF     		nop
 1655 0014 0C37     		adds	r7, r7, #12
 1656              		.cfi_def_cfa_offset 4
 1657 0016 BD46     		mov	sp, r7
 1658              		.cfi_def_cfa_register 13
 1659              		@ sp needed
 1660 0018 5DF8047B 		ldr	r7, [sp], #4
 1661              		.cfi_restore 7
 1662              		.cfi_def_cfa_offset 0
 1663 001c 7047     		bx	lr
 1664              		.cfi_endproc
 1665              	.LFE4747:
 1667              		.section	.text._ZN7daisysp10MoogLadder7SetFreqEf,"axG",%progbits,_ZN7daisysp10MoogLadder7SetFreqEf
 1668              		.align	1
 1669              		.weak	_ZN7daisysp10MoogLadder7SetFreqEf
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1674              	_ZN7daisysp10MoogLadder7SetFreqEf:
 1675              	.LFB4794:
 1676              		.file 11 "../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h"
   1:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /*
   2:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Copyright (c) 2023 Electrosmith, Corp, Victor Lazzarini, John ffitch (fast tanh), Bob Moog
   3:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   4:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** Use of this source code is governed by the LGPL V2.1
   5:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** license that can be found in the LICENSE file or at
   6:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** https://opensource.org/license/lgpl-2-1/
   7:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** */
   8:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
   9:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #pragma once
  10:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifndef DSY_MOOGLADDER_H
  11:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #define DSY_MOOGLADDER_H
  12:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  13:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #include <stdint.h>
  14:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** #ifdef __cplusplus
  15:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  16:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** namespace daisysp
  17:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  18:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** /** Moog ladder filter module*/
  19:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** class MoogLadder
  20:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** {
  21:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****   public:
  22:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     MoogLadder() {}
  23:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     ~MoogLadder() {}
  24:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** Initializes the MoogLadder module.
  25:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         sample_rate - The sample rate of the audio engine being run. 
  26:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  27:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     void Init(float sample_rate);
  28:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  29:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  30:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** Processes the lowpass filter
  31:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  32:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     float Process(float in);
  33:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h **** 
  34:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** 
  35:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         Sets the cutoff frequency or half-way point of the filter.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 48


  36:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         Arguments
  37:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         - freq - frequency value in Hz. Range: Any positive value.
  38:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  39:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     inline void SetFreq(float freq) { freq_ = freq; }
 1677              		.loc 11 39 17
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 8
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681              		@ link register save eliminated.
 1682 0000 80B4     		push	{r7}
 1683              		.cfi_def_cfa_offset 4
 1684              		.cfi_offset 7, -4
 1685 0002 83B0     		sub	sp, sp, #12
 1686              		.cfi_def_cfa_offset 16
 1687 0004 00AF     		add	r7, sp, #0
 1688              		.cfi_def_cfa_register 7
 1689 0006 7860     		str	r0, [r7, #4]
 1690 0008 87ED000A 		vstr.32	s0, [r7]
 1691              		.loc 11 39 45
 1692 000c 7B68     		ldr	r3, [r7, #4]
 1693 000e 3A68     		ldr	r2, [r7]	@ float
 1694 0010 9A60     		str	r2, [r3, #8]	@ float
 1695              		.loc 11 39 53
 1696 0012 00BF     		nop
 1697 0014 0C37     		adds	r7, r7, #12
 1698              		.cfi_def_cfa_offset 4
 1699 0016 BD46     		mov	sp, r7
 1700              		.cfi_def_cfa_register 13
 1701              		@ sp needed
 1702 0018 5DF8047B 		ldr	r7, [sp], #4
 1703              		.cfi_restore 7
 1704              		.cfi_def_cfa_offset 0
 1705 001c 7047     		bx	lr
 1706              		.cfi_endproc
 1707              	.LFE4794:
 1709              		.section	.text._ZN7daisysp10MoogLadder6SetResEf,"axG",%progbits,_ZN7daisysp10MoogLadder6SetResEf,c
 1710              		.align	1
 1711              		.weak	_ZN7daisysp10MoogLadder6SetResEf
 1712              		.syntax unified
 1713              		.thumb
 1714              		.thumb_func
 1716              	_ZN7daisysp10MoogLadder6SetResEf:
 1717              	.LFB4795:
  40:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     /** 
  41:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****         Sets the resonance of the filter.
  42:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     */
  43:../DaisySP/Source/../DaisySP-LGPL/Source/Filters/moogladder.h ****     inline void SetRes(float res) { res_ = res; }
 1718              		.loc 11 43 17
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 8
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723 0000 80B4     		push	{r7}
 1724              		.cfi_def_cfa_offset 4
 1725              		.cfi_offset 7, -4
 1726 0002 83B0     		sub	sp, sp, #12
 1727              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 49


 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 1730 0006 7860     		str	r0, [r7, #4]
 1731 0008 87ED000A 		vstr.32	s0, [r7]
 1732              		.loc 11 43 42
 1733 000c 7B68     		ldr	r3, [r7, #4]
 1734 000e 3A68     		ldr	r2, [r7]	@ float
 1735 0010 5A60     		str	r2, [r3, #4]	@ float
 1736              		.loc 11 43 49
 1737 0012 00BF     		nop
 1738 0014 0C37     		adds	r7, r7, #12
 1739              		.cfi_def_cfa_offset 4
 1740 0016 BD46     		mov	sp, r7
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 0018 5DF8047B 		ldr	r7, [sp], #4
 1744              		.cfi_restore 7
 1745              		.cfi_def_cfa_offset 0
 1746 001c 7047     		bx	lr
 1747              		.cfi_endproc
 1748              	.LFE4795:
 1750              		.section	.rodata._ZL11SAMPLE_RATE,"a"
 1751              		.align	2
 1754              	_ZL11SAMPLE_RATE:
 1755 0000 80BB0000 		.word	48000
 1756              		.section	.rodata._ZL17SAMPLE_RATE_FLOAT,"a"
 1757              		.align	2
 1760              	_ZL17SAMPLE_RATE_FLOAT:
 1761 0000 00803B47 		.word	1195081728
 1762              		.section	.rodata._ZL9BIT_DEPTH,"a"
 1763              		.align	2
 1766              	_ZL9BIT_DEPTH:
 1767 0000 10000000 		.word	16
 1768              		.section	.rodata._ZL10DELAY_TIME,"a"
 1769              		.align	2
 1772              	_ZL10DELAY_TIME:
 1773 0000 00770100 		.word	96000
 1774              		.section	.rodata._ZL15MAX_REC_OUT_LEN,"a"
 1775              		.align	2
 1778              	_ZL15MAX_REC_OUT_LEN:
 1779 0000 78000000 		.word	120
 1780              		.section	.rodata._ZL17CHNL_BUF_SIZE_ABS,"a"
 1781              		.align	2
 1784              	_ZL17CHNL_BUF_SIZE_ABS:
 1785 0000 00000001 		.word	16777216
 1786              		.section	.rodata._ZL19CHNL_BUF_SIZE_SAMPS,"a"
 1787              		.align	2
 1790              	_ZL19CHNL_BUF_SIZE_SAMPS:
 1791 0000 00008000 		.word	8388608
 1792              		.section	.rodata._ZL12BUF_CHUNK_SZ,"a"
 1793              		.align	2
 1796              	_ZL12BUF_CHUNK_SZ:
 1797 0000 00400000 		.word	16384
 1798              		.section	.rodata._ZL9MAX_FILES,"a"
 1799              		.align	1
 1802              	_ZL9MAX_FILES:
 1803 0000 2000     		.short	32
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 50


 1804              		.section	.rodata._ZL13MAX_FNAME_LEN,"a"
 1805              		.align	1
 1808              	_ZL13MAX_FNAME_LEN:
 1809 0000 8000     		.short	128
 1810              		.section	.rodata._ZL10MIN_GRAINS,"a"
 1811              		.align	2
 1814              	_ZL10MIN_GRAINS:
 1815 0000 01000000 		.word	1
 1816              		.section	.rodata._ZL10MAX_GRAINS,"a"
 1817              		.align	2
 1820              	_ZL10MAX_GRAINS:
 1821 0000 0A000000 		.word	10
 1822              		.section	.rodata._ZL25GRAIN_INCREASE_SMOOTHNESS,"a"
 1823              		.align	2
 1826              	_ZL25GRAIN_INCREASE_SMOOTHNESS:
 1827 0000 A4707D3F 		.word	1065185444
 1828              		.section	.rodata._ZL15NUM_SYNTH_MODES,"a"
 1829              		.align	2
 1832              	_ZL15NUM_SYNTH_MODES:
 1833 0000 08000000 		.word	8
 1834              		.section	.rodata._ZL22PARAM_CHANGE_THRESHOLD,"a"
 1835              		.align	2
 1838              	_ZL22PARAM_CHANGE_THRESHOLD:
 1839 0000 0AD7233C 		.word	1008981770
 1840              		.section	.rodata._ZL17MIN_GRAIN_SIZE_MS,"a"
 1841              		.align	2
 1844              	_ZL17MIN_GRAIN_SIZE_MS:
 1845 0000 0000C842 		.word	1120403456
 1846              		.section	.rodata._ZL17MAX_GRAIN_SIZE_MS,"a"
 1847              		.align	2
 1850              	_ZL17MAX_GRAIN_SIZE_MS:
 1851 0000 00803B45 		.word	1161527296
 1852              		.section	.rodata._ZL22MIN_GRAIN_SIZE_SAMPLES,"a"
 1853              		.align	2
 1856              	_ZL22MIN_GRAIN_SIZE_SAMPLES:
 1857 0000 C0120000 		.word	4800
 1858              		.section	.rodata._ZL22MAX_GRAIN_SIZE_SAMPLES,"a"
 1859              		.align	2
 1862              	_ZL22MAX_GRAIN_SIZE_SAMPLES:
 1863 0000 80320200 		.word	144000
 1864              		.section	.rodata._ZL9MIN_PITCH,"a"
 1865              		.align	2
 1868              	_ZL9MIN_PITCH:
 1869 0000 0000003F 		.word	1056964608
 1870              		.section	.rodata._ZL9MAX_PITCH,"a"
 1871              		.align	2
 1874              	_ZL9MAX_PITCH:
 1875 0000 00004040 		.word	1077936128
 1876              		.section	.rodata._ZL14DEBOUNCE_DELAY,"a"
 1877              		.align	2
 1880              	_ZL14DEBOUNCE_DELAY:
 1881 0000 32000000 		.word	50
 1882              		.section	.rodata._ZL15LONG_PRESS_TIME,"a"
 1883              		.align	2
 1886              	_ZL15LONG_PRESS_TIME:
 1887 0000 E8030000 		.word	1000
 1888              		.section	.rodata._ZL18HIPASS_LOWER_BOUND,"a"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 51


 1889              		.align	2
 1892              	_ZL18HIPASS_LOWER_BOUND:
 1893 0000 17B7D139 		.word	970045207
 1894              		.section	.rodata._ZL18HIPASS_UPPER_BOUND,"a"
 1895              		.align	2
 1898              	_ZL18HIPASS_UPPER_BOUND:
 1899 0000 0AD7233C 		.word	1008981770
 1900              		.section	.rodata._ZL18LOPASS_LOWER_BOUND,"a"
 1901              		.align	2
 1904              	_ZL18LOPASS_LOWER_BOUND:
 1905 0000 0000A041 		.word	1101004800
 1906              		.section	.rodata._ZL18LOPASS_UPPER_BOUND,"a"
 1907              		.align	2
 1910              	_ZL18LOPASS_UPPER_BOUND:
 1911 0000 00A08C46 		.word	1183621120
 1912              		.section	.rodata._ZL10HICUT_FREQ,"a"
 1913              		.align	2
 1916              	_ZL10HICUT_FREQ:
 1917 0000 0000B03E 		.word	1051721728
 1918              		.section	.text._ZL7SeedRngv,"ax",%progbits
 1919              		.align	1
 1920              		.syntax unified
 1921              		.thumb
 1922              		.thumb_func
 1924              	_ZL7SeedRngv:
 1925              	.LFB4850:
 1926              		.file 12 "constants_utils.h"
   1:constants_utils.h **** #pragma once
   2:constants_utils.h **** #include "stddef.h"
   3:constants_utils.h **** #include <time.h>
   4:constants_utils.h **** 
   5:constants_utils.h **** /* audio constants */
   6:constants_utils.h **** constexpr int SAMPLE_RATE = 48000;
   7:constants_utils.h **** constexpr float SAMPLE_RATE_FLOAT = 48000.f;
   8:constants_utils.h **** constexpr int BIT_DEPTH = 16;
   9:constants_utils.h **** 
  10:constants_utils.h **** /* delay line buffer size (2s @ 48kHz) */
  11:constants_utils.h **** constexpr size_t DELAY_TIME = 96000;
  12:constants_utils.h **** 
  13:constants_utils.h **** /* maximum length of recording to SD card */
  14:constants_utils.h **** constexpr size_t MAX_REC_OUT_LEN = 120;
  15:constants_utils.h **** 
  16:constants_utils.h **** /* 16mb - max size of one stereo channel to be loaded into buffers */
  17:constants_utils.h **** constexpr size_t CHNL_BUF_SIZE_ABS = 16*1024*1024;
  18:constants_utils.h **** /* above is absolute size - each sample needs an int16 (2 bytes) so we do (abs_size)/2 */
  19:constants_utils.h **** constexpr size_t CHNL_BUF_SIZE_SAMPS = 8*1024*1024;
  20:constants_utils.h **** 
  21:constants_utils.h **** /* chunk size for reading audio into temporary buffer */
  22:constants_utils.h **** const size_t BUF_CHUNK_SZ = 16384;
  23:constants_utils.h **** 
  24:constants_utils.h **** /* file reading constants*/
  25:constants_utils.h **** static const uint16_t MAX_FILES = 32;                      
  26:constants_utils.h **** static const uint16_t MAX_FNAME_LEN = 128;
  27:constants_utils.h **** 
  28:constants_utils.h **** /* granular synth parameter constants */
  29:constants_utils.h **** constexpr int MIN_GRAINS = 1;
  30:constants_utils.h **** constexpr int MAX_GRAINS = 10;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 52


  31:constants_utils.h **** constexpr float GRAIN_INCREASE_SMOOTHNESS = 0.99f;
  32:constants_utils.h **** static constexpr int NUM_SYNTH_MODES = 8;
  33:constants_utils.h **** constexpr float PARAM_CHANGE_THRESHOLD = 0.01f;
  34:constants_utils.h **** constexpr float MIN_GRAIN_SIZE_MS = 100.0f;
  35:constants_utils.h **** constexpr float MAX_GRAIN_SIZE_MS = 3000.0f;
  36:constants_utils.h **** constexpr size_t MIN_GRAIN_SIZE_SAMPLES = 4800; /* 100ms at 48kHz */
  37:constants_utils.h **** constexpr size_t MAX_GRAIN_SIZE_SAMPLES = 144000; /* 3s at 48kHz */
  38:constants_utils.h **** constexpr float MIN_PITCH = 0.5f;
  39:constants_utils.h **** constexpr float MAX_PITCH = 3.0f;
  40:constants_utils.h **** 
  41:constants_utils.h **** 
  42:constants_utils.h **** /* button event constants */
  43:constants_utils.h **** const unsigned long DEBOUNCE_DELAY = 50; 
  44:constants_utils.h **** const unsigned long LONG_PRESS_TIME = 1000;
  45:constants_utils.h **** 
  46:constants_utils.h **** /* hipass filter frequency range */
  47:constants_utils.h **** const float HIPASS_LOWER_BOUND = 0.0004f;
  48:constants_utils.h **** const float HIPASS_UPPER_BOUND = 0.01f;
  49:constants_utils.h **** 
  50:constants_utils.h **** /* lowpass filter frequency range */
  51:constants_utils.h **** const float LOPASS_LOWER_BOUND = 20.0f;
  52:constants_utils.h **** const float LOPASS_UPPER_BOUND = 18000.0f;
  53:constants_utils.h **** 
  54:constants_utils.h **** // const float HICUT_FREQ = 0.3125f; /* 15000Hz @ 48kHz sample rate */
  55:constants_utils.h **** const float HICUT_FREQ = 0.34375; /* 16500Hz @ 48kHz sample rate */
  56:constants_utils.h **** 
  57:constants_utils.h **** /* random number generator variables and helper functions */
  58:constants_utils.h **** extern uint32_t rng_state;
  59:constants_utils.h **** static inline void SeedRng(){
 1927              		.loc 12 59 29
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 1, uses_anonymous_args = 0
 1931 0000 80B5     		push	{r7, lr}
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 7, -8
 1934              		.cfi_offset 14, -4
 1935 0002 00AF     		add	r7, sp, #0
 1936              		.cfi_def_cfa_register 7
  60:constants_utils.h ****   rng_state = static_cast<uint32_t>(time(nullptr));
 1937              		.loc 12 60 41
 1938 0004 0020     		movs	r0, #0
 1939 0006 FFF7FEFF 		bl	time
 1940 000a 0246     		mov	r2, r0
 1941 000c 0B46     		mov	r3, r1
 1942              		.loc 12 60 13
 1943 000e 024B     		ldr	r3, .L75
 1944 0010 1A60     		str	r2, [r3]
  61:constants_utils.h **** }
 1945              		.loc 12 61 1
 1946 0012 00BF     		nop
 1947 0014 80BD     		pop	{r7, pc}
 1948              	.L76:
 1949 0016 00BF     		.align	2
 1950              	.L75:
 1951 0018 00000000 		.word	rng_state
 1952              		.cfi_endproc
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 53


 1953              	.LFE4850:
 1955              		.section	.rodata._ZL6halfpi,"a"
 1956              		.align	2
 1959              	_ZL6halfpi:
 1960 0000 DB0FC93F 		.word	1070141403
 1961              		.section	.text._ZN13GranularSynth6GetPanEv,"axG",%progbits,_ZN13GranularSynth6GetPanEv,comdat
 1962              		.align	1
 1963              		.weak	_ZN13GranularSynth6GetPanEv
 1964              		.syntax unified
 1965              		.thumb
 1966              		.thumb_func
 1968              	_ZN13GranularSynth6GetPanEv:
 1969              	.LFB4877:
 1970              		.file 13 "GranularSynth.h"
   1:GranularSynth.h **** #pragma once
   2:GranularSynth.h **** 
   3:GranularSynth.h **** #include "Grain.h"
   4:GranularSynth.h **** #include "daisy_pod.h"
   5:GranularSynth.h **** #include "debug_print.h"
   6:GranularSynth.h **** #include <vector>
   7:GranularSynth.h **** 
   8:GranularSynth.h **** class GranularSynth{
   9:GranularSynth.h ****   public:
  10:GranularSynth.h ****     // GranularSynth(DaisyPod& pod) 
  11:GranularSynth.h ****     GranularSynth(DaisyPod& pod, SmoothRandomGenerator* rng) 
  12:GranularSynth.h ****       : pod_(pod), left_buf_(nullptr), right_buf_(nullptr), audio_len_(0),
  13:GranularSynth.h ****         grains_(), rng_(rng){}
  14:GranularSynth.h ****         // grains_(){}
  15:GranularSynth.h **** 
  16:GranularSynth.h ****     void Init(int16_t *left, int16_t *right, size_t audio_len);
  17:GranularSynth.h ****     void Reset(size_t len);
  18:GranularSynth.h ****     void InitParams();
  19:GranularSynth.h ****     void UpdateGrainParams();
  20:GranularSynth.h ****     void TriggerGrain();
  21:GranularSynth.h ****     Sample ProcessGrains();
  22:GranularSynth.h **** 
  23:GranularSynth.h ****     void SetPan(float pan);    
  24:GranularSynth.h ****     void SetGrainSize(float knob_val);
  25:GranularSynth.h ****     void SetSpawnPos(float knob_val);
  26:GranularSynth.h ****     void SetTargetActiveGrains(float knob_val);
  27:GranularSynth.h ****     void UpdateActiveGrains();
  28:GranularSynth.h ****     size_t GetActiveGrains();
  29:GranularSynth.h ****     void SetPitchRatio(float ratio);
  30:GranularSynth.h ****     void SetDirection(float direction);
  31:GranularSynth.h **** 
  32:GranularSynth.h ****     void SetRndAmount(float amount);
  33:GranularSynth.h ****     void SetRndBias(float bias);
  34:GranularSynth.h ****     // void SetRndRefreshFreq(float freq);
  35:GranularSynth.h ****     float GetRnd();
  36:GranularSynth.h ****     float GetRndBias(float rnd);
  37:GranularSynth.h **** 
  38:GranularSynth.h ****     /* used to set chorus pan */
  39:GranularSynth.h ****     float GetPan(){ return pan_; }
 1971              		.loc 13 39 11
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 8
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 54


 1975              		@ link register save eliminated.
 1976 0000 80B4     		push	{r7}
 1977              		.cfi_def_cfa_offset 4
 1978              		.cfi_offset 7, -4
 1979 0002 83B0     		sub	sp, sp, #12
 1980              		.cfi_def_cfa_offset 16
 1981 0004 00AF     		add	r7, sp, #0
 1982              		.cfi_def_cfa_register 7
 1983 0006 7860     		str	r0, [r7, #4]
 1984              		.loc 13 39 28
 1985 0008 7B68     		ldr	r3, [r7, #4]
 1986 000a D3F83C32 		ldr	r3, [r3, #572]	@ float
 1987 000e 07EE903A 		vmov	s15, r3
 1988              		.loc 13 39 34
 1989 0012 B0EE670A 		vmov.f32	s0, s15
 1990 0016 0C37     		adds	r7, r7, #12
 1991              		.cfi_def_cfa_offset 4
 1992 0018 BD46     		mov	sp, r7
 1993              		.cfi_def_cfa_register 13
 1994              		@ sp needed
 1995 001a 5DF8047B 		ldr	r7, [sp], #4
 1996              		.cfi_restore 7
 1997              		.cfi_def_cfa_offset 0
 1998 001e 7047     		bx	lr
 1999              		.cfi_endproc
 2000              	.LFE4877:
 2002              		.section	.text._ZNK16AudioFileManager20GetSamplesPerChannelEv,"axG",%progbits,_ZNK16AudioFileManag
 2003              		.align	1
 2004              		.weak	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2009              	_ZNK16AudioFileManager20GetSamplesPerChannelEv:
 2010              	.LFB4887:
 2011              		.file 14 "AudioFileManager.h"
   1:AudioFileManager.h **** #pragma once
   2:AudioFileManager.h **** #include <stdio.h>
   3:AudioFileManager.h **** #include <stdint.h>
   4:AudioFileManager.h **** #include <vector>
   5:AudioFileManager.h **** #include "daisy_pod.h"
   6:AudioFileManager.h **** #include "constants_utils.h"
   7:AudioFileManager.h **** #include "debug_print.h"
   8:AudioFileManager.h **** 
   9:AudioFileManager.h **** using namespace daisy; 
  10:AudioFileManager.h **** 
  11:AudioFileManager.h **** class AudioFileManager {
  12:AudioFileManager.h ****   public:
  13:AudioFileManager.h ****     AudioFileManager(SdmmcHandler &sd, FatFSInterface &fsi, DaisyPod &pod, FIL *file)
  14:AudioFileManager.h ****       : sd_(sd), fsi_(fsi), pod_(pod), curr_file_(file), 
  15:AudioFileManager.h ****         left_buf_(nullptr), right_buf_(nullptr) {};
  16:AudioFileManager.h ****     
  17:AudioFileManager.h ****     bool Init();
  18:AudioFileManager.h ****     bool ScanWavFiles();
  19:AudioFileManager.h ****     void SetBuffers(int16_t *left, int16_t *right);
  20:AudioFileManager.h ****     bool LoadFile(uint16_t file_idx);
  21:AudioFileManager.h ****     
  22:AudioFileManager.h ****     bool CloseFile();
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 55


  23:AudioFileManager.h ****     bool GetWavHeader(FIL *file);
  24:AudioFileManager.h **** 
  25:AudioFileManager.h ****     int16_t* GetLeftBuffer() const { return left_buf_; }
  26:AudioFileManager.h ****     int16_t* GetRightBuffer() const { return right_buf_; }
  27:AudioFileManager.h ****     size_t GetSamplesPerChannel() const { return header_.total_samples / header_.channels; }
 2012              		.loc 14 27 12
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 8
 2015              		@ frame_needed = 1, uses_anonymous_args = 0
 2016              		@ link register save eliminated.
 2017 0000 80B4     		push	{r7}
 2018              		.cfi_def_cfa_offset 4
 2019              		.cfi_offset 7, -4
 2020 0002 83B0     		sub	sp, sp, #12
 2021              		.cfi_def_cfa_offset 16
 2022 0004 00AF     		add	r7, sp, #0
 2023              		.cfi_def_cfa_register 7
 2024 0006 7860     		str	r0, [r7, #4]
 2025              		.loc 14 27 58
 2026 0008 7B68     		ldr	r3, [r7, #4]
 2027 000a 03F58053 		add	r3, r3, #4096
 2028 000e DB6A     		ldr	r3, [r3, #44]
 2029              		.loc 14 27 82
 2030 0010 7A68     		ldr	r2, [r7, #4]
 2031 0012 02F58052 		add	r2, r2, #4096
 2032 0016 B2F92820 		ldrsh	r2, [r2, #40]
 2033 001a B3FBF2F3 		udiv	r3, r3, r2
 2034              		.loc 14 27 92
 2035 001e 1846     		mov	r0, r3
 2036 0020 0C37     		adds	r7, r7, #12
 2037              		.cfi_def_cfa_offset 4
 2038 0022 BD46     		mov	sp, r7
 2039              		.cfi_def_cfa_register 13
 2040              		@ sp needed
 2041 0024 5DF8047B 		ldr	r7, [sp], #4
 2042              		.cfi_restore 7
 2043              		.cfi_def_cfa_offset 0
 2044 0028 7047     		bx	lr
 2045              		.cfi_endproc
 2046              	.LFE4887:
 2048              		.section	.text._ZNK16AudioFileManager14GetNumChannelsEv,"axG",%progbits,_ZNK16AudioFileManager14Ge
 2049              		.align	1
 2050              		.weak	_ZNK16AudioFileManager14GetNumChannelsEv
 2051              		.syntax unified
 2052              		.thumb
 2053              		.thumb_func
 2055              	_ZNK16AudioFileManager14GetNumChannelsEv:
 2056              	.LFB4889:
  28:AudioFileManager.h ****     size_t GetTotalSamples() const { return header_.total_samples; }
  29:AudioFileManager.h ****     int16_t GetNumChannels() const { return header_.channels; }
 2057              		.loc 14 29 13
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 8
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061              		@ link register save eliminated.
 2062 0000 80B4     		push	{r7}
 2063              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 56


 2064              		.cfi_offset 7, -4
 2065 0002 83B0     		sub	sp, sp, #12
 2066              		.cfi_def_cfa_offset 16
 2067 0004 00AF     		add	r7, sp, #0
 2068              		.cfi_def_cfa_register 7
 2069 0006 7860     		str	r0, [r7, #4]
 2070              		.loc 14 29 53
 2071 0008 7B68     		ldr	r3, [r7, #4]
 2072 000a 03F58053 		add	r3, r3, #4096
 2073 000e B3F92830 		ldrsh	r3, [r3, #40]
 2074              		.loc 14 29 63
 2075 0012 1846     		mov	r0, r3
 2076 0014 0C37     		adds	r7, r7, #12
 2077              		.cfi_def_cfa_offset 4
 2078 0016 BD46     		mov	sp, r7
 2079              		.cfi_def_cfa_register 13
 2080              		@ sp needed
 2081 0018 5DF8047B 		ldr	r7, [sp], #4
 2082              		.cfi_restore 7
 2083              		.cfi_def_cfa_offset 0
 2084 001c 7047     		bx	lr
 2085              		.cfi_endproc
 2086              	.LFE4889:
 2088              		.section	.text._ZNK16AudioFileManager12GetFileCountEv,"axG",%progbits,_ZNK16AudioFileManager12GetF
 2089              		.align	1
 2090              		.weak	_ZNK16AudioFileManager12GetFileCountEv
 2091              		.syntax unified
 2092              		.thumb
 2093              		.thumb_func
 2095              	_ZNK16AudioFileManager12GetFileCountEv:
 2096              	.LFB4890:
  30:AudioFileManager.h ****     uint16_t GetFileCount() const { return file_count_; }
 2097              		.loc 14 30 14
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 8
 2100              		@ frame_needed = 1, uses_anonymous_args = 0
 2101              		@ link register save eliminated.
 2102 0000 80B4     		push	{r7}
 2103              		.cfi_def_cfa_offset 4
 2104              		.cfi_offset 7, -4
 2105 0002 83B0     		sub	sp, sp, #12
 2106              		.cfi_def_cfa_offset 16
 2107 0004 00AF     		add	r7, sp, #0
 2108              		.cfi_def_cfa_register 7
 2109 0006 7860     		str	r0, [r7, #4]
 2110              		.loc 14 30 44
 2111 0008 7B68     		ldr	r3, [r7, #4]
 2112 000a 03F58053 		add	r3, r3, #4096
 2113 000e DB8B     		ldrh	r3, [r3, #30]
 2114              		.loc 14 30 57
 2115 0010 1846     		mov	r0, r3
 2116 0012 0C37     		adds	r7, r7, #12
 2117              		.cfi_def_cfa_offset 4
 2118 0014 BD46     		mov	sp, r7
 2119              		.cfi_def_cfa_register 13
 2120              		@ sp needed
 2121 0016 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 57


 2122              		.cfi_restore 7
 2123              		.cfi_def_cfa_offset 0
 2124 001a 7047     		bx	lr
 2125              		.cfi_endproc
 2126              	.LFE4890:
 2128              		.section	.text._ZNK16AudioFileManager7GetNameEtPc,"axG",%progbits,_ZNK16AudioFileManager7GetNameEt
 2129              		.align	1
 2130              		.weak	_ZNK16AudioFileManager7GetNameEtPc
 2131              		.syntax unified
 2132              		.thumb
 2133              		.thumb_func
 2135              	_ZNK16AudioFileManager7GetNameEtPc:
 2136              	.LFB4891:
  31:AudioFileManager.h ****     void GetName(uint16_t idx, char* name) const { strcpy(name, names_[idx]); }
 2137              		.loc 14 31 10
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 16
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141 0000 80B5     		push	{r7, lr}
 2142              		.cfi_def_cfa_offset 8
 2143              		.cfi_offset 7, -8
 2144              		.cfi_offset 14, -4
 2145 0002 84B0     		sub	sp, sp, #16
 2146              		.cfi_def_cfa_offset 24
 2147 0004 00AF     		add	r7, sp, #0
 2148              		.cfi_def_cfa_register 7
 2149 0006 F860     		str	r0, [r7, #12]
 2150 0008 0B46     		mov	r3, r1
 2151 000a 7A60     		str	r2, [r7, #4]
 2152 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 2153              		.loc 14 31 72
 2154 000e 7B89     		ldrh	r3, [r7, #10]
 2155              		.loc 14 31 75
 2156 0010 DB01     		lsls	r3, r3, #7
 2157 0012 1833     		adds	r3, r3, #24
 2158 0014 FA68     		ldr	r2, [r7, #12]
 2159 0016 1344     		add	r3, r3, r2
 2160 0018 0433     		adds	r3, r3, #4
 2161              		.loc 14 31 58
 2162 001a 1946     		mov	r1, r3
 2163 001c 7868     		ldr	r0, [r7, #4]
 2164 001e FFF7FEFF 		bl	strcpy
 2165              		.loc 14 31 79
 2166 0022 00BF     		nop
 2167 0024 1037     		adds	r7, r7, #16
 2168              		.cfi_def_cfa_offset 8
 2169 0026 BD46     		mov	sp, r7
 2170              		.cfi_def_cfa_register 13
 2171              		@ sp needed
 2172 0028 80BD     		pop	{r7, pc}
 2173              		.cfi_endproc
 2174              	.LFE4891:
 2176              		.section	.text._ZN13StereoRotator7SetFreqEf,"axG",%progbits,_ZN13StereoRotator7SetFreqEf,comdat
 2177              		.align	1
 2178              		.weak	_ZN13StereoRotator7SetFreqEf
 2179              		.syntax unified
 2180              		.thumb
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 58


 2181              		.thumb_func
 2183              	_ZN13StereoRotator7SetFreqEf:
 2184              	.LFB4895:
 2185              		.file 15 "StereoRotator.h"
   1:StereoRotator.h **** #include <cmath>
   2:StereoRotator.h **** 
   3:StereoRotator.h **** class StereoRotator{
   4:StereoRotator.h ****   public:
   5:StereoRotator.h ****     StereoRotator(){}
   6:StereoRotator.h **** 
   7:StereoRotator.h ****     void SetFreq(float freq){
 2186              		.loc 15 7 10
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 8
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0000 80B5     		push	{r7, lr}
 2191              		.cfi_def_cfa_offset 8
 2192              		.cfi_offset 7, -8
 2193              		.cfi_offset 14, -4
 2194 0002 82B0     		sub	sp, sp, #8
 2195              		.cfi_def_cfa_offset 16
 2196 0004 00AF     		add	r7, sp, #0
 2197              		.cfi_def_cfa_register 7
 2198 0006 7860     		str	r0, [r7, #4]
 2199 0008 87ED000A 		vstr.32	s0, [r7]
   8:StereoRotator.h ****       /* map to 0.01Hz to 1.0Hz - don't want it too fast */
   9:StereoRotator.h ****       freq_ = fmap(freq, 0.01f, 0.5f, daisysp::Mapping::EXP);
 2200              		.loc 15 9 19
 2201 000c 0120     		movs	r0, #1
 2202 000e B6EE001A 		vmov.f32	s2, #5.0e-1
 2203 0012 DFED070A 		vldr.32	s1, .L87
 2204 0016 97ED000A 		vldr.32	s0, [r7]
 2205 001a FFF7FEFF 		bl	_ZN7daisysp4fmapEfffNS_7MappingE
 2206 001e F0EE407A 		vmov.f32	s15, s0
 2207              		.loc 15 9 13
 2208 0022 7B68     		ldr	r3, [r7, #4]
 2209 0024 C3ED017A 		vstr.32	s15, [r3, #4]
  10:StereoRotator.h ****     }
 2210              		.loc 15 10 5
 2211 0028 00BF     		nop
 2212 002a 0837     		adds	r7, r7, #8
 2213              		.cfi_def_cfa_offset 8
 2214 002c BD46     		mov	sp, r7
 2215              		.cfi_def_cfa_register 13
 2216              		@ sp needed
 2217 002e 80BD     		pop	{r7, pc}
 2218              	.L88:
 2219              		.align	2
 2220              	.L87:
 2221 0030 0AD7233C 		.word	1008981770
 2222              		.cfi_endproc
 2223              	.LFE4895:
 2225              		.section	.text._ZN13StereoRotator6SetMixEf,"axG",%progbits,_ZN13StereoRotator6SetMixEf,comdat
 2226              		.align	1
 2227              		.weak	_ZN13StereoRotator6SetMixEf
 2228              		.syntax unified
 2229              		.thumb
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 59


 2230              		.thumb_func
 2232              	_ZN13StereoRotator6SetMixEf:
 2233              	.LFB4898:
  11:StereoRotator.h **** 
  12:StereoRotator.h ****     Sample Process(Sample in){
  13:StereoRotator.h ****       /* increment the rotation in the stereo field */
  14:StereoRotator.h ****       rotation_  += (2*M_PI*freq_)/SAMPLE_RATE_FLOAT;
  15:StereoRotator.h ****       /* normalise angle to keep within bounds of +- pi for accurate-ish(?) results */
  16:StereoRotator.h ****       rotation_ = NormaliseRotationAngle(rotation_);
  17:StereoRotator.h **** 
  18:StereoRotator.h ****       Sample out;
  19:StereoRotator.h ****       /* from https://en.wikipedia.org/wiki/Rotation_matrix:
  20:StereoRotator.h ****         treat left as x coord, right as y coord to rotate around centre
  21:StereoRotator.h ****       */
  22:StereoRotator.h ****       float cos_rotation = FastCos(rotation_);
  23:StereoRotator.h ****       float sin_rotation = FastSin(rotation_);
  24:StereoRotator.h ****       out.left = (in.left*cos_rotation) - (in.right*sin_rotation);
  25:StereoRotator.h ****       out.right =(in.left*sin_rotation) - (in.right*cos_rotation);
  26:StereoRotator.h ****       return out;
  27:StereoRotator.h ****     }
  28:StereoRotator.h **** 
  29:StereoRotator.h ****     /* process the input then mix by the wet/dry amount controlled by knob */
  30:StereoRotator.h ****     Sample ProcessMix(Sample in){
  31:StereoRotator.h ****       Sample out;
  32:StereoRotator.h ****       Sample processed = Process(in);
  33:StereoRotator.h ****       out.left = wet_mix_*processed.left + ((1.0f-wet_mix_)*in.left);
  34:StereoRotator.h ****       out.right = wet_mix_*processed.right + ((1.0f-wet_mix_)*in.right);
  35:StereoRotator.h ****       return out;
  36:StereoRotator.h ****     }
  37:StereoRotator.h **** 
  38:StereoRotator.h ****     void SetMix(float mix) { wet_mix_ = mix; }
 2234              		.loc 15 38 10
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 8
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
 2239 0000 80B4     		push	{r7}
 2240              		.cfi_def_cfa_offset 4
 2241              		.cfi_offset 7, -4
 2242 0002 83B0     		sub	sp, sp, #12
 2243              		.cfi_def_cfa_offset 16
 2244 0004 00AF     		add	r7, sp, #0
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
 2247 0008 87ED000A 		vstr.32	s0, [r7]
 2248              		.loc 15 38 39
 2249 000c 7B68     		ldr	r3, [r7, #4]
 2250 000e 3A68     		ldr	r2, [r7]	@ float
 2251 0010 9A60     		str	r2, [r3, #8]	@ float
 2252              		.loc 15 38 46
 2253 0012 00BF     		nop
 2254 0014 0C37     		adds	r7, r7, #12
 2255              		.cfi_def_cfa_offset 4
 2256 0016 BD46     		mov	sp, r7
 2257              		.cfi_def_cfa_register 13
 2258              		@ sp needed
 2259 0018 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 60


 2260              		.cfi_restore 7
 2261              		.cfi_def_cfa_offset 0
 2262 001c 7047     		bx	lr
 2263              		.cfi_endproc
 2264              	.LFE4898:
 2266              		.global	_ZN14GrannyChordApp9instance_E
 2267              		.section	.bss._ZN14GrannyChordApp9instance_E,"aw",%nobits
 2268              		.align	2
 2271              	_ZN14GrannyChordApp9instance_E:
 2272 0000 00000000 		.space	4
 2273              		.section	.rodata
 2274              		.align	2
 2275              	.LC0:
 2276 0000 46696C65 		.ascii	"File manager failed to init\000"
 2276      206D616E 
 2276      61676572 
 2276      20666169 
 2276      6C656420 
 2277              		.section	.text._ZN14GrannyChordApp4InitEPsS0_,"ax",%progbits
 2278              		.align	1
 2279              		.global	_ZN14GrannyChordApp4InitEPsS0_
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2284              	_ZN14GrannyChordApp4InitEPsS0_:
 2285              	.LFB4911:
 2286              		.file 16 "GrannyChordApp.cpp"
   1:GrannyChordApp.cpp **** #ifdef DEBUG_MODE // TODO: remove
   2:GrannyChordApp.cpp **** #pragma message("Debug mode is ON")
   3:GrannyChordApp.cpp **** #else
   4:GrannyChordApp.cpp **** #pragma message("Debug mode is OFF")
   5:GrannyChordApp.cpp **** #endif
   6:GrannyChordApp.cpp **** 
   7:GrannyChordApp.cpp **** #include "GrannyChordApp.h"
   8:GrannyChordApp.cpp **** 
   9:GrannyChordApp.cpp **** /* this is required for AudioCallback as it needs a static object */
  10:GrannyChordApp.cpp **** GrannyChordApp* GrannyChordApp::instance_ = nullptr;
  11:GrannyChordApp.cpp **** 
  12:GrannyChordApp.cpp **** /// @brief Initialises app state and members and goes through app startup process
  13:GrannyChordApp.cpp **** /// @param left Left channel audio data buffer
  14:GrannyChordApp.cpp **** /// @param right Right channel audio data buffer
  15:GrannyChordApp.cpp **** void GrannyChordApp::Init(int16_t *left, int16_t *right){
 2287              		.loc 16 15 57
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 16
 2290              		@ frame_needed = 1, uses_anonymous_args = 0
 2291 0000 80B5     		push	{r7, lr}
 2292              		.cfi_def_cfa_offset 8
 2293              		.cfi_offset 7, -8
 2294              		.cfi_offset 14, -4
 2295 0002 84B0     		sub	sp, sp, #16
 2296              		.cfi_def_cfa_offset 24
 2297 0004 00AF     		add	r7, sp, #0
 2298              		.cfi_def_cfa_register 7
 2299 0006 F860     		str	r0, [r7, #12]
 2300 0008 B960     		str	r1, [r7, #8]
 2301 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 61


  16:GrannyChordApp.cpp ****   left_buf_ = left, right_buf_ = right;
 2302              		.loc 16 16 13
 2303 000c FB68     		ldr	r3, [r7, #12]
 2304 000e BA68     		ldr	r2, [r7, #8]
 2305 0010 C3F84423 		str	r2, [r3, #836]
 2306              		.loc 16 16 32
 2307 0014 FB68     		ldr	r3, [r7, #12]
 2308 0016 7A68     		ldr	r2, [r7, #4]
 2309 0018 C3F84823 		str	r2, [r3, #840]
  17:GrannyChordApp.cpp ****   pod_.SetAudioBlockSize(2);
 2310              		.loc 16 17 3
 2311 001c FB68     		ldr	r3, [r7, #12]
 2312 001e DB69     		ldr	r3, [r3, #28]
 2313              		.loc 16 17 25
 2314 0020 0221     		movs	r1, #2
 2315 0022 1846     		mov	r0, r3
 2316 0024 FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
  18:GrannyChordApp.cpp ****   pod_.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 2317              		.loc 16 18 3
 2318 0028 FB68     		ldr	r3, [r7, #12]
 2319 002a DB69     		ldr	r3, [r3, #28]
 2320              		.loc 16 18 26
 2321 002c 0321     		movs	r1, #3
 2322 002e 1846     		mov	r0, r3
 2323 0030 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
  19:GrannyChordApp.cpp ****   curr_state_ = AppState::SelectFile;
 2324              		.loc 16 19 15
 2325 0034 FB68     		ldr	r3, [r7, #12]
 2326 0036 0022     		movs	r2, #0
 2327 0038 C3F87422 		str	r2, [r3, #628]
  20:GrannyChordApp.cpp ****   // SetupTimer();
  21:GrannyChordApp.cpp ****   if (!InitFileMgr()){
 2328              		.loc 16 21 19
 2329 003c F868     		ldr	r0, [r7, #12]
 2330 003e FFF7FEFF 		bl	_ZN14GrannyChordApp11InitFileMgrEv
 2331 0042 0346     		mov	r3, r0
 2332              		.loc 16 21 7
 2333 0044 83F00103 		eor	r3, r3, #1
 2334 0048 DBB2     		uxtb	r3, r3
 2335              		.loc 16 21 3
 2336 004a 002B     		cmp	r3, #0
 2337 004c 19D0     		beq	.L91
  22:GrannyChordApp.cpp ****     DebugPrint(pod_,"File manager failed to init");
 2338              		.loc 16 22 5
 2339 004e 2048     		ldr	r0, .L93
 2340 0050 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
  23:GrannyChordApp.cpp ****     pod_.led1.SetRed(1);
 2341              		.loc 16 23 5
 2342 0054 FB68     		ldr	r3, [r7, #12]
 2343 0056 DB69     		ldr	r3, [r3, #28]
 2344              		.loc 16 23 21
 2345 0058 D833     		adds	r3, r3, #216
 2346 005a B7EE000A 		vmov.f32	s0, #1.0e+0
 2347 005e 1846     		mov	r0, r3
 2348 0060 FFF7FEFF 		bl	_ZN5daisy6RgbLed6SetRedEf
  24:GrannyChordApp.cpp ****     pod_.led2.SetRed(1);
 2349              		.loc 16 24 5
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 62


 2350 0064 FB68     		ldr	r3, [r7, #12]
 2351 0066 DB69     		ldr	r3, [r3, #28]
 2352              		.loc 16 24 21
 2353 0068 03F59673 		add	r3, r3, #300
 2354 006c B7EE000A 		vmov.f32	s0, #1.0e+0
 2355 0070 1846     		mov	r0, r3
 2356 0072 FFF7FEFF 		bl	_ZN5daisy6RgbLed6SetRedEf
  25:GrannyChordApp.cpp ****     pod_.UpdateLeds();
 2357              		.loc 16 25 5
 2358 0076 FB68     		ldr	r3, [r7, #12]
 2359 0078 DB69     		ldr	r3, [r3, #28]
 2360              		.loc 16 25 20
 2361 007a 1846     		mov	r0, r3
 2362 007c FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
  26:GrannyChordApp.cpp ****     return;
 2363              		.loc 16 26 5
 2364 0080 23E0     		b	.L90
 2365              	.L91:
  27:GrannyChordApp.cpp ****   }
  28:GrannyChordApp.cpp ****   // loadmeter.Init(pod_.AudioSampleRate(), pod_.AudioBlockSize());
  29:GrannyChordApp.cpp ****   InitFX();
 2366              		.loc 16 29 9
 2367 0082 F868     		ldr	r0, [r7, #12]
 2368 0084 FFF7FEFF 		bl	_ZN14GrannyChordApp6InitFXEv
  30:GrannyChordApp.cpp ****   InitPrevParamVals();
 2369              		.loc 16 30 20
 2370 0088 F868     		ldr	r0, [r7, #12]
 2371 008a FFF7FEFF 		bl	_ZN14GrannyChordApp17InitPrevParamValsEv
  31:GrannyChordApp.cpp ****   InitColours();
 2372              		.loc 16 31 14
 2373 008e F868     		ldr	r0, [r7, #12]
 2374 0090 FFF7FEFF 		bl	_ZN14GrannyChordApp11InitColoursEv
  32:GrannyChordApp.cpp ****   SetLedAppState();
 2375              		.loc 16 32 17
 2376 0094 F868     		ldr	r0, [r7, #12]
 2377 0096 FFF7FEFF 		bl	_ZN14GrannyChordApp14SetLedAppStateEv
  33:GrannyChordApp.cpp ****   pod_.UpdateLeds();
 2378              		.loc 16 33 3
 2379 009a FB68     		ldr	r3, [r7, #12]
 2380 009c DB69     		ldr	r3, [r3, #28]
 2381              		.loc 16 33 18
 2382 009e 1846     		mov	r0, r3
 2383 00a0 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
  34:GrannyChordApp.cpp ****   SeedRng();
 2384              		.loc 16 34 10
 2385 00a4 FFF7FEFF 		bl	_ZL7SeedRngv
  35:GrannyChordApp.cpp ****   synth_.Init(left_buf_, right_buf_, 0);
 2386              		.loc 16 35 14
 2387 00a8 FB68     		ldr	r3, [r7, #12]
 2388 00aa 03F12000 		add	r0, r3, #32
 2389 00ae FB68     		ldr	r3, [r7, #12]
 2390 00b0 D3F84413 		ldr	r1, [r3, #836]
 2391 00b4 FB68     		ldr	r3, [r7, #12]
 2392 00b6 D3F84823 		ldr	r2, [r3, #840]
 2393 00ba 0023     		movs	r3, #0
 2394 00bc FFF7FEFF 		bl	_ZN13GranularSynth4InitEPsS0_j
  36:GrannyChordApp.cpp ****   pod_.StartAdc();
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 63


 2395              		.loc 16 36 3
 2396 00c0 FB68     		ldr	r3, [r7, #12]
 2397 00c2 DB69     		ldr	r3, [r3, #28]
 2398              		.loc 16 36 16
 2399 00c4 1846     		mov	r0, r3
 2400 00c6 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 2401              	.L90:
  37:GrannyChordApp.cpp **** }
 2402              		.loc 16 37 1
 2403 00ca 1037     		adds	r7, r7, #16
 2404              		.cfi_def_cfa_offset 8
 2405 00cc BD46     		mov	sp, r7
 2406              		.cfi_def_cfa_register 13
 2407              		@ sp needed
 2408 00ce 80BD     		pop	{r7, pc}
 2409              	.L94:
 2410              		.align	2
 2411              	.L93:
 2412 00d0 00000000 		.word	.LC0
 2413              		.cfi_endproc
 2414              	.LFE4911:
 2416              		.section	.rodata
 2417              		.align	2
 2418              	.LC1:
 2419 001c 50726F63 		.ascii	"Processing Load %:\000"
 2419      65737369 
 2419      6E67204C 
 2419      6F616420 
 2419      253A00
 2420 002f 00       		.align	2
 2421              	.LC2:
 2422 0030 4D61783A 		.ascii	"Max: %c%d.%03d\000"
 2422      20256325 
 2422      642E2530 
 2422      336400
 2423 003f 00       		.align	2
 2424              	.LC3:
 2425 0040 4176673A 		.ascii	"Avg: %c%d.%03d\000"
 2425      20256325 
 2425      642E2530 
 2425      336400
 2426 004f 00       		.align	2
 2427              	.LC4:
 2428 0050 4D696E3A 		.ascii	"Min: %c%d.%03d\000"
 2428      20256325 
 2428      642E2530 
 2428      336400
 2429              		.section	.text._ZN14GrannyChordApp12PrintCPULoadEv,"ax",%progbits
 2430              		.align	1
 2431              		.global	_ZN14GrannyChordApp12PrintCPULoadEv
 2432              		.syntax unified
 2433              		.thumb
 2434              		.thumb_func
 2436              	_ZN14GrannyChordApp12PrintCPULoadEv:
 2437              	.LFB4912:
  38:GrannyChordApp.cpp **** 
  39:GrannyChordApp.cpp **** #ifdef DEBUG_MODE
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 64


  40:GrannyChordApp.cpp **** void GrannyChordApp::PrintCPULoad(){
 2438              		.loc 16 40 36
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 24
 2441              		@ frame_needed = 1, uses_anonymous_args = 0
 2442 0000 90B5     		push	{r4, r7, lr}
 2443              		.cfi_def_cfa_offset 12
 2444              		.cfi_offset 4, -12
 2445              		.cfi_offset 7, -8
 2446              		.cfi_offset 14, -4
 2447 0002 2DED048B 		vpush.64	{d8, d9}
 2448              		.cfi_def_cfa_offset 28
 2449              		.cfi_offset 80, -28
 2450              		.cfi_offset 81, -24
 2451              		.cfi_offset 82, -20
 2452              		.cfi_offset 83, -16
 2453 0006 87B0     		sub	sp, sp, #28
 2454              		.cfi_def_cfa_offset 56
 2455 0008 00AF     		add	r7, sp, #0
 2456              		.cfi_def_cfa_register 7
 2457 000a 7860     		str	r0, [r7, #4]
  41:GrannyChordApp.cpp ****   const float avgLoad = loadmeter.GetAvgCpuLoad();
 2458              		.loc 16 41 48
 2459 000c 7B68     		ldr	r3, [r7, #4]
 2460 000e 1846     		mov	r0, r3
 2461 0010 FFF7FEFF 		bl	_ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv
 2462 0014 87ED050A 		vstr.32	s0, [r7, #20]
  42:GrannyChordApp.cpp ****   const float maxLoad = loadmeter.GetMaxCpuLoad();
 2463              		.loc 16 42 48
 2464 0018 7B68     		ldr	r3, [r7, #4]
 2465 001a 1846     		mov	r0, r3
 2466 001c FFF7FEFF 		bl	_ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv
 2467 0020 87ED040A 		vstr.32	s0, [r7, #16]
  43:GrannyChordApp.cpp ****   const float minLoad = loadmeter.GetMinCpuLoad();
 2468              		.loc 16 43 48
 2469 0024 7B68     		ldr	r3, [r7, #4]
 2470 0026 1846     		mov	r0, r3
 2471 0028 FFF7FEFF 		bl	_ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv
 2472 002c 87ED030A 		vstr.32	s0, [r7, #12]
  44:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Processing Load %:");
 2473              		.loc 16 44 22
 2474 0030 7948     		ldr	r0, .L111
 2475 0032 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
  45:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Max: " FLT_FMT3, FLT_VAR3(maxLoad * 100.0f));
 2476              		.loc 16 45 41
 2477 0036 D7ED047A 		vldr.32	s15, [r7, #16]
 2478 003a 9FED787A 		vldr.32	s14, .L111+4
 2479 003e 67EE877A 		vmul.f32	s15, s15, s14
 2480              		.loc 16 45 22
 2481 0042 F5EEC07A 		vcmpe.f32	s15, #0
 2482 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2483 004a 01D5     		bpl	.L108
 2484              		.loc 16 45 22 is_stmt 0 discriminator 1
 2485 004c 2D24     		movs	r4, #45
 2486 004e 00E0     		b	.L98
 2487              	.L108:
 2488              		.loc 16 45 22 discriminator 2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 65


 2489 0050 2024     		movs	r4, #32
 2490              	.L98:
 2491              		.loc 16 45 41 is_stmt 1 discriminator 4
 2492 0052 D7ED047A 		vldr.32	s15, [r7, #16]
 2493 0056 9FED717A 		vldr.32	s14, .L111+4
 2494 005a 67EE877A 		vmul.f32	s15, s15, s14
 2495 005e B0EE670A 		vmov.f32	s0, s15
 2496 0062 FFF7FEFF 		bl	_ZSt3absf
 2497 0066 F0EE407A 		vmov.f32	s15, s0
 2498              		.loc 16 45 22 discriminator 4
 2499 006a BDEEE79A 		vcvt.s32.f32	s18, s15
 2500              		.loc 16 45 41 discriminator 4
 2501 006e D7ED047A 		vldr.32	s15, [r7, #16]
 2502 0072 9FED6A7A 		vldr.32	s14, .L111+4
 2503 0076 67EE877A 		vmul.f32	s15, s15, s14
 2504 007a B0EE670A 		vmov.f32	s0, s15
 2505 007e FFF7FEFF 		bl	_ZSt3absf
 2506 0082 B0EE408A 		vmov.f32	s16, s0
 2507 0086 D7ED047A 		vldr.32	s15, [r7, #16]
 2508 008a 9FED647A 		vldr.32	s14, .L111+4
 2509 008e 67EE877A 		vmul.f32	s15, s15, s14
 2510 0092 B0EE670A 		vmov.f32	s0, s15
 2511 0096 FFF7FEFF 		bl	_ZSt3absf
 2512 009a F0EE407A 		vmov.f32	s15, s0
 2513 009e FDEEE77A 		vcvt.s32.f32	s15, s15
 2514 00a2 F8EEE77A 		vcvt.f32.s32	s15, s15
 2515 00a6 78EE677A 		vsub.f32	s15, s16, s15
 2516 00aa B7EEE78A 		vcvt.f64.f32	d8, s15
 2517 00ae 0321     		movs	r1, #3
 2518 00b0 0A20     		movs	r0, #10
 2519 00b2 FFF7FEFF 		bl	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 2520 00b6 B0EE407B 		vmov.f64	d7, d0
 2521 00ba 28EE077B 		vmul.f64	d7, d8, d7
 2522              		.loc 16 45 22 discriminator 4
 2523 00be FDEEC77B 		vcvt.s32.f64	s15, d7
 2524 00c2 17EE903A 		vmov	r3, s15	@ int
 2525 00c6 19EE102A 		vmov	r2, s18	@ int
 2526 00ca 2146     		mov	r1, r4
 2527 00cc 5448     		ldr	r0, .L111+8
 2528 00ce FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
  46:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Avg: " FLT_FMT3, FLT_VAR3(avgLoad * 100.0f));
 2529              		.loc 16 46 41 discriminator 4
 2530 00d2 D7ED057A 		vldr.32	s15, [r7, #20]
 2531 00d6 9FED517A 		vldr.32	s14, .L111+4
 2532 00da 67EE877A 		vmul.f32	s15, s15, s14
 2533              		.loc 16 46 22 discriminator 4
 2534 00de F5EEC07A 		vcmpe.f32	s15, #0
 2535 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2536 00e6 01D5     		bpl	.L109
 2537              		.loc 16 46 22 is_stmt 0 discriminator 1
 2538 00e8 2D24     		movs	r4, #45
 2539 00ea 00E0     		b	.L101
 2540              	.L109:
 2541              		.loc 16 46 22 discriminator 2
 2542 00ec 2024     		movs	r4, #32
 2543              	.L101:
 2544              		.loc 16 46 41 is_stmt 1 discriminator 4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 66


 2545 00ee D7ED057A 		vldr.32	s15, [r7, #20]
 2546 00f2 9FED4A7A 		vldr.32	s14, .L111+4
 2547 00f6 67EE877A 		vmul.f32	s15, s15, s14
 2548 00fa B0EE670A 		vmov.f32	s0, s15
 2549 00fe FFF7FEFF 		bl	_ZSt3absf
 2550 0102 F0EE407A 		vmov.f32	s15, s0
 2551              		.loc 16 46 22 discriminator 4
 2552 0106 BDEEE79A 		vcvt.s32.f32	s18, s15
 2553              		.loc 16 46 41 discriminator 4
 2554 010a D7ED057A 		vldr.32	s15, [r7, #20]
 2555 010e 9FED437A 		vldr.32	s14, .L111+4
 2556 0112 67EE877A 		vmul.f32	s15, s15, s14
 2557 0116 B0EE670A 		vmov.f32	s0, s15
 2558 011a FFF7FEFF 		bl	_ZSt3absf
 2559 011e B0EE408A 		vmov.f32	s16, s0
 2560 0122 D7ED057A 		vldr.32	s15, [r7, #20]
 2561 0126 9FED3D7A 		vldr.32	s14, .L111+4
 2562 012a 67EE877A 		vmul.f32	s15, s15, s14
 2563 012e B0EE670A 		vmov.f32	s0, s15
 2564 0132 FFF7FEFF 		bl	_ZSt3absf
 2565 0136 F0EE407A 		vmov.f32	s15, s0
 2566 013a FDEEE77A 		vcvt.s32.f32	s15, s15
 2567 013e F8EEE77A 		vcvt.f32.s32	s15, s15
 2568 0142 78EE677A 		vsub.f32	s15, s16, s15
 2569 0146 B7EEE78A 		vcvt.f64.f32	d8, s15
 2570 014a 0321     		movs	r1, #3
 2571 014c 0A20     		movs	r0, #10
 2572 014e FFF7FEFF 		bl	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 2573 0152 B0EE407B 		vmov.f64	d7, d0
 2574 0156 28EE077B 		vmul.f64	d7, d8, d7
 2575              		.loc 16 46 22 discriminator 4
 2576 015a FDEEC77B 		vcvt.s32.f64	s15, d7
 2577 015e 17EE903A 		vmov	r3, s15	@ int
 2578 0162 19EE102A 		vmov	r2, s18	@ int
 2579 0166 2146     		mov	r1, r4
 2580 0168 2E48     		ldr	r0, .L111+12
 2581 016a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
  47:GrannyChordApp.cpp ****   pod_.seed.PrintLine("Min: " FLT_FMT3, FLT_VAR3(minLoad * 100.0f));
 2582              		.loc 16 47 41 discriminator 4
 2583 016e D7ED037A 		vldr.32	s15, [r7, #12]
 2584 0172 9FED2A7A 		vldr.32	s14, .L111+4
 2585 0176 67EE877A 		vmul.f32	s15, s15, s14
 2586              		.loc 16 47 22 discriminator 4
 2587 017a F5EEC07A 		vcmpe.f32	s15, #0
 2588 017e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2589 0182 01D5     		bpl	.L110
 2590              		.loc 16 47 22 is_stmt 0 discriminator 1
 2591 0184 2D24     		movs	r4, #45
 2592 0186 00E0     		b	.L104
 2593              	.L110:
 2594              		.loc 16 47 22 discriminator 2
 2595 0188 2024     		movs	r4, #32
 2596              	.L104:
 2597              		.loc 16 47 41 is_stmt 1 discriminator 4
 2598 018a D7ED037A 		vldr.32	s15, [r7, #12]
 2599 018e 9FED237A 		vldr.32	s14, .L111+4
 2600 0192 67EE877A 		vmul.f32	s15, s15, s14
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 67


 2601 0196 B0EE670A 		vmov.f32	s0, s15
 2602 019a FFF7FEFF 		bl	_ZSt3absf
 2603 019e F0EE407A 		vmov.f32	s15, s0
 2604              		.loc 16 47 22 discriminator 4
 2605 01a2 BDEEE79A 		vcvt.s32.f32	s18, s15
 2606              		.loc 16 47 41 discriminator 4
 2607 01a6 D7ED037A 		vldr.32	s15, [r7, #12]
 2608 01aa 9FED1C7A 		vldr.32	s14, .L111+4
 2609 01ae 67EE877A 		vmul.f32	s15, s15, s14
 2610 01b2 B0EE670A 		vmov.f32	s0, s15
 2611 01b6 FFF7FEFF 		bl	_ZSt3absf
 2612 01ba B0EE408A 		vmov.f32	s16, s0
 2613 01be D7ED037A 		vldr.32	s15, [r7, #12]
 2614 01c2 9FED167A 		vldr.32	s14, .L111+4
 2615 01c6 67EE877A 		vmul.f32	s15, s15, s14
 2616 01ca B0EE670A 		vmov.f32	s0, s15
 2617 01ce FFF7FEFF 		bl	_ZSt3absf
 2618 01d2 F0EE407A 		vmov.f32	s15, s0
 2619 01d6 FDEEE77A 		vcvt.s32.f32	s15, s15
 2620 01da F8EEE77A 		vcvt.f32.s32	s15, s15
 2621 01de 78EE677A 		vsub.f32	s15, s16, s15
 2622 01e2 B7EEE78A 		vcvt.f64.f32	d8, s15
 2623 01e6 0321     		movs	r1, #3
 2624 01e8 0A20     		movs	r0, #10
 2625 01ea FFF7FEFF 		bl	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 2626 01ee B0EE407B 		vmov.f64	d7, d0
 2627 01f2 28EE077B 		vmul.f64	d7, d8, d7
 2628              		.loc 16 47 22 discriminator 4
 2629 01f6 FDEEC77B 		vcvt.s32.f64	s15, d7
 2630 01fa 17EE903A 		vmov	r3, s15	@ int
 2631 01fe 19EE102A 		vmov	r2, s18	@ int
 2632 0202 2146     		mov	r1, r4
 2633 0204 0848     		ldr	r0, .L111+16
 2634 0206 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
  48:GrannyChordApp.cpp **** }
 2635              		.loc 16 48 1 discriminator 4
 2636 020a 00BF     		nop
 2637 020c 1C37     		adds	r7, r7, #28
 2638              		.cfi_def_cfa_offset 28
 2639 020e BD46     		mov	sp, r7
 2640              		.cfi_def_cfa_register 13
 2641              		@ sp needed
 2642 0210 BDEC048B 		vldm	sp!, {d8-d9}
 2643              		.cfi_restore 82
 2644              		.cfi_restore 83
 2645              		.cfi_restore 80
 2646              		.cfi_restore 81
 2647              		.cfi_def_cfa_offset 12
 2648 0214 90BD     		pop	{r4, r7, pc}
 2649              	.L112:
 2650 0216 00BF     		.align	2
 2651              	.L111:
 2652 0218 1C000000 		.word	.LC1
 2653 021c 0000C842 		.word	1120403456
 2654 0220 30000000 		.word	.LC2
 2655 0224 40000000 		.word	.LC3
 2656 0228 50000000 		.word	.LC4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 68


 2657              		.cfi_endproc
 2658              	.LFE4912:
 2660              		.section	.rodata
 2661 005f 00       		.align	2
 2662              	.LC5:
 2663 0060 61707020 		.ascii	"app is running\000"
 2663      69732072 
 2663      756E6E69 
 2663      6E6700
 2664              		.section	.text._ZN14GrannyChordApp3RunEv,"ax",%progbits
 2665              		.align	1
 2666              		.global	_ZN14GrannyChordApp3RunEv
 2667              		.syntax unified
 2668              		.thumb
 2669              		.thumb_func
 2671              	_ZN14GrannyChordApp3RunEv:
 2672              	.LFB4913:
  49:GrannyChordApp.cpp **** #endif
  50:GrannyChordApp.cpp **** 
  51:GrannyChordApp.cpp **** /// @brief Loops whilst app is running, updating state and UI, handling 
  52:GrannyChordApp.cpp **** ///        state transitions, updating parameters and managing audio recordings
  53:GrannyChordApp.cpp **** void GrannyChordApp::Run(){
 2673              		.loc 16 53 27
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 8
 2676              		@ frame_needed = 1, uses_anonymous_args = 0
 2677 0000 80B5     		push	{r7, lr}
 2678              		.cfi_def_cfa_offset 8
 2679              		.cfi_offset 7, -8
 2680              		.cfi_offset 14, -4
 2681 0002 82B0     		sub	sp, sp, #8
 2682              		.cfi_def_cfa_offset 16
 2683 0004 00AF     		add	r7, sp, #0
 2684              		.cfi_def_cfa_register 7
 2685 0006 7860     		str	r0, [r7, #4]
  54:GrannyChordApp.cpp ****   pod_.seed.PrintLine("app is running");
 2686              		.loc 16 54 22
 2687 0008 1B48     		ldr	r0, .L116
 2688 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 2689              	.L115:
  55:GrannyChordApp.cpp ****   // timer_.Start();
  56:GrannyChordApp.cpp ****   while(true){
  57:GrannyChordApp.cpp ****     // #ifdef DEBUG_MODE
  58:GrannyChordApp.cpp ****     // loop_count++;
  59:GrannyChordApp.cpp ****     // if (loop_count%2000000==0){
  60:GrannyChordApp.cpp ****     //   PrintCPULoad();
  61:GrannyChordApp.cpp ****     //   loop_count=0;
  62:GrannyChordApp.cpp ****     //   // System::Delay(500);
  63:GrannyChordApp.cpp ****     // }
  64:GrannyChordApp.cpp ****     // #endif
  65:GrannyChordApp.cpp **** 
  66:GrannyChordApp.cpp ****     if (recording_out_) {
 2690              		.loc 16 66 9
 2691 000e 7B68     		ldr	r3, [r7, #4]
 2692 0010 03F50043 		add	r3, r3, #32768
 2693 0014 93F89436 		ldrb	r3, [r3, #1684]	@ zero_extendqisi2
 2694              		.loc 16 66 5
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 69


 2695 0018 002B     		cmp	r3, #0
 2696 001a 25D0     		beq	.L114
  67:GrannyChordApp.cpp ****       sd_writer_.Write();
 2697              		.loc 16 67 23
 2698 001c 7B68     		ldr	r3, [r7, #4]
 2699 001e 03F58363 		add	r3, r3, #1048
 2700 0022 1846     		mov	r0, r3
 2701 0024 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE5WriteEv
  68:GrannyChordApp.cpp ****       if (sd_writer_.GetLengthSeconds()>120){
 2702              		.loc 16 68 38
 2703 0028 7B68     		ldr	r3, [r7, #4]
 2704 002a 03F58363 		add	r3, r3, #1048
 2705 002e 1846     		mov	r0, r3
 2706 0030 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
 2707 0034 F0EE407A 		vmov.f32	s15, s0
 2708              		.loc 16 68 40
 2709 0038 9FED107A 		vldr.32	s14, .L116+4
 2710 003c F4EEC77A 		vcmpe.f32	s15, s14
 2711 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2712 0044 CCBF     		ite	gt
 2713 0046 0123     		movgt	r3, #1
 2714 0048 0023     		movle	r3, #0
 2715 004a DBB2     		uxtb	r3, r3
 2716              		.loc 16 68 7
 2717 004c 002B     		cmp	r3, #0
 2718 004e 0BD0     		beq	.L114
  69:GrannyChordApp.cpp ****         sd_writer_.SaveFile();
 2719              		.loc 16 69 28
 2720 0050 7B68     		ldr	r3, [r7, #4]
 2721 0052 03F58363 		add	r3, r3, #1048
 2722 0056 1846     		mov	r0, r3
 2723 0058 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE8SaveFileEv
  70:GrannyChordApp.cpp ****         recording_out_ = false;
 2724              		.loc 16 70 24
 2725 005c 7B68     		ldr	r3, [r7, #4]
 2726 005e 03F50043 		add	r3, r3, #32768
 2727 0062 0022     		movs	r2, #0
 2728 0064 83F89426 		strb	r2, [r3, #1684]
 2729              	.L114:
  71:GrannyChordApp.cpp ****       }
  72:GrannyChordApp.cpp ****     }
  73:GrannyChordApp.cpp ****     UpdateUI();
 2730              		.loc 16 73 13
 2731 0068 7868     		ldr	r0, [r7, #4]
 2732 006a FFF7FEFF 		bl	_ZN14GrannyChordApp8UpdateUIEv
  74:GrannyChordApp.cpp ****     UpdateSynthParams();
 2733              		.loc 16 74 22
 2734 006e 7868     		ldr	r0, [r7, #4]
 2735 0070 FFF7FEFF 		bl	_ZN14GrannyChordApp17UpdateSynthParamsEv
  66:GrannyChordApp.cpp ****       sd_writer_.Write();
 2736              		.loc 16 66 5
 2737 0074 CBE7     		b	.L115
 2738              	.L117:
 2739 0076 00BF     		.align	2
 2740              	.L116:
 2741 0078 60000000 		.word	.LC5
 2742 007c 0000F042 		.word	1123024896
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 70


 2743              		.cfi_endproc
 2744              	.LFE4913:
 2746              		.section	.rodata
 2747 006f 00       		.align	2
 2748              	.LC6:
 2749 0070 73776974 		.ascii	"switching states\000"
 2749      6368696E 
 2749      67207374 
 2749      61746573 
 2749      00
 2750 0081 000000   		.align	2
 2751              	.LC7:
 2752 0084 68616E64 		.ascii	"handled state change\000"
 2752      6C656420 
 2752      73746174 
 2752      65206368 
 2752      616E6765 
 2753              		.section	.text._ZN14GrannyChordApp8UpdateUIEv,"ax",%progbits
 2754              		.align	1
 2755              		.global	_ZN14GrannyChordApp8UpdateUIEv
 2756              		.syntax unified
 2757              		.thumb
 2758              		.thumb_func
 2760              	_ZN14GrannyChordApp8UpdateUIEv:
 2761              	.LFB4914:
  75:GrannyChordApp.cpp ****     // System::Delay(1);
  76:GrannyChordApp.cpp ****   }
  77:GrannyChordApp.cpp **** }
  78:GrannyChordApp.cpp **** 
  79:GrannyChordApp.cpp **** /// @brief Handles hardware control inputs and calls state change methods
  80:GrannyChordApp.cpp **** void GrannyChordApp::UpdateUI(){
 2762              		.loc 16 80 32
 2763              		.cfi_startproc
 2764              		@ args = 0, pretend = 0, frame = 16
 2765              		@ frame_needed = 1, uses_anonymous_args = 0
 2766 0000 80B5     		push	{r7, lr}
 2767              		.cfi_def_cfa_offset 8
 2768              		.cfi_offset 7, -8
 2769              		.cfi_offset 14, -4
 2770 0002 84B0     		sub	sp, sp, #16
 2771              		.cfi_def_cfa_offset 24
 2772 0004 00AF     		add	r7, sp, #0
 2773              		.cfi_def_cfa_register 7
 2774 0006 7860     		str	r0, [r7, #4]
  81:GrannyChordApp.cpp ****   pod_.ProcessDigitalControls();
 2775              		.loc 16 81 3
 2776 0008 7B68     		ldr	r3, [r7, #4]
 2777 000a DB69     		ldr	r3, [r3, #28]
 2778              		.loc 16 81 30
 2779 000c 1846     		mov	r0, r3
 2780 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
  82:GrannyChordApp.cpp **** 
  83:GrannyChordApp.cpp ****   if (pod_.encoder.TimeHeldMs() > 1000.0f) HandleEncoderLongPress();
 2781              		.loc 16 83 7
 2782 0012 7B68     		ldr	r3, [r7, #4]
 2783 0014 DB69     		ldr	r3, [r3, #28]
 2784              		.loc 16 83 30
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 71


 2785 0016 4033     		adds	r3, r3, #64
 2786 0018 1846     		mov	r0, r3
 2787 001a FFF7FEFF 		bl	_ZNK5daisy7Encoder10TimeHeldMsEv
 2788 001e F0EE407A 		vmov.f32	s15, s0
 2789              		.loc 16 83 33
 2790 0022 9FED2C7A 		vldr.32	s14, .L125
 2791 0026 F4EEC77A 		vcmpe.f32	s15, s14
 2792 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2793 002e CCBF     		ite	gt
 2794 0030 0123     		movgt	r3, #1
 2795 0032 0023     		movle	r3, #0
 2796 0034 DBB2     		uxtb	r3, r3
 2797              		.loc 16 83 3
 2798 0036 002B     		cmp	r3, #0
 2799 0038 03D0     		beq	.L119
 2800              		.loc 16 83 66 discriminator 1
 2801 003a 7868     		ldr	r0, [r7, #4]
 2802 003c FFF7FEFF 		bl	_ZN14GrannyChordApp22HandleEncoderLongPressEv
 2803 0040 0BE0     		b	.L120
 2804              	.L119:
  84:GrannyChordApp.cpp ****   else if (pod_.encoder.FallingEdge()) HandleEncoderPressed();
 2805              		.loc 16 84 12
 2806 0042 7B68     		ldr	r3, [r7, #4]
 2807 0044 DB69     		ldr	r3, [r3, #28]
 2808              		.loc 16 84 36
 2809 0046 4033     		adds	r3, r3, #64
 2810 0048 1846     		mov	r0, r3
 2811 004a FFF7FEFF 		bl	_ZNK5daisy7Encoder11FallingEdgeEv
 2812 004e 0346     		mov	r3, r0
 2813              		.loc 16 84 8
 2814 0050 002B     		cmp	r3, #0
 2815 0052 02D0     		beq	.L120
 2816              		.loc 16 84 60 discriminator 1
 2817 0054 7868     		ldr	r0, [r7, #4]
 2818 0056 FFF7FEFF 		bl	_ZN14GrannyChordApp20HandleEncoderPressedEv
 2819              	.L120:
  85:GrannyChordApp.cpp **** 
  86:GrannyChordApp.cpp ****   if (curr_state_==AppState::Synthesis){
 2820              		.loc 16 86 7
 2821 005a 7B68     		ldr	r3, [r7, #4]
 2822 005c D3F87432 		ldr	r3, [r3, #628]
 2823              		.loc 16 86 3
 2824 0060 022B     		cmp	r3, #2
 2825 0062 02D1     		bne	.L121
  87:GrannyChordApp.cpp ****     ButtonHandler();
 2826              		.loc 16 87 18
 2827 0064 7868     		ldr	r0, [r7, #4]
 2828 0066 FFF7FEFF 		bl	_ZN14GrannyChordApp13ButtonHandlerEv
 2829              	.L121:
  88:GrannyChordApp.cpp ****   }
  89:GrannyChordApp.cpp **** 
  90:GrannyChordApp.cpp ****   int32_t encoder_inc = pod_.encoder.Increment();
 2830              		.loc 16 90 25
 2831 006a 7B68     		ldr	r3, [r7, #4]
 2832 006c DB69     		ldr	r3, [r3, #28]
 2833              		.loc 16 90 47
 2834 006e 4033     		adds	r3, r3, #64
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 72


 2835 0070 1846     		mov	r0, r3
 2836 0072 FFF7FEFF 		bl	_ZNK5daisy7Encoder9IncrementEv
 2837 0076 F860     		str	r0, [r7, #12]
  91:GrannyChordApp.cpp ****   if (encoder_inc!=0){
 2838              		.loc 16 91 3
 2839 0078 FB68     		ldr	r3, [r7, #12]
 2840 007a 002B     		cmp	r3, #0
 2841 007c 03D0     		beq	.L122
  92:GrannyChordApp.cpp ****     HandleEncoderIncrement(encoder_inc);
 2842              		.loc 16 92 27
 2843 007e F968     		ldr	r1, [r7, #12]
 2844 0080 7868     		ldr	r0, [r7, #4]
 2845 0082 FFF7FEFF 		bl	_ZN14GrannyChordApp22HandleEncoderIncrementEi
 2846              	.L122:
  93:GrannyChordApp.cpp ****   }
  94:GrannyChordApp.cpp ****   if (curr_state_ != next_state_){
 2847              		.loc 16 94 7
 2848 0086 7B68     		ldr	r3, [r7, #4]
 2849 0088 D3F87422 		ldr	r2, [r3, #628]
 2850              		.loc 16 94 22
 2851 008c 7B68     		ldr	r3, [r7, #4]
 2852 008e D3F87832 		ldr	r3, [r3, #632]
 2853              		.loc 16 94 3
 2854 0092 9A42     		cmp	r2, r3
 2855 0094 19D0     		beq	.L124
  95:GrannyChordApp.cpp ****     #ifdef DEBUG_MODE
  96:GrannyChordApp.cpp ****     DebugPrintState(curr_state_);
 2856              		.loc 16 96 20
 2857 0096 7B68     		ldr	r3, [r7, #4]
 2858 0098 D3F87432 		ldr	r3, [r3, #628]
 2859 009c 1946     		mov	r1, r3
 2860 009e 7868     		ldr	r0, [r7, #4]
 2861 00a0 FFF7FEFF 		bl	_ZN14GrannyChordApp15DebugPrintStateE8AppState
  97:GrannyChordApp.cpp ****     DebugPrint(pod_, "switching states");
 2862              		.loc 16 97 5
 2863 00a4 0C48     		ldr	r0, .L125+4
 2864 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
  98:GrannyChordApp.cpp ****     DebugPrintState(next_state_);
 2865              		.loc 16 98 20
 2866 00aa 7B68     		ldr	r3, [r7, #4]
 2867 00ac D3F87832 		ldr	r3, [r3, #632]
 2868 00b0 1946     		mov	r1, r3
 2869 00b2 7868     		ldr	r0, [r7, #4]
 2870 00b4 FFF7FEFF 		bl	_ZN14GrannyChordApp15DebugPrintStateE8AppState
  99:GrannyChordApp.cpp ****     #endif
 100:GrannyChordApp.cpp ****     SetLedAppState();
 2871              		.loc 16 100 19
 2872 00b8 7868     		ldr	r0, [r7, #4]
 2873 00ba FFF7FEFF 		bl	_ZN14GrannyChordApp14SetLedAppStateEv
 101:GrannyChordApp.cpp ****     HandleStateChange();
 2874              		.loc 16 101 22
 2875 00be 7868     		ldr	r0, [r7, #4]
 2876 00c0 FFF7FEFF 		bl	_ZN14GrannyChordApp17HandleStateChangeEv
 102:GrannyChordApp.cpp ****     DebugPrint(pod_, "handled state change");
 2877              		.loc 16 102 5
 2878 00c4 0548     		ldr	r0, .L125+8
 2879 00c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 73


 2880              	.L124:
 103:GrannyChordApp.cpp ****   }
 104:GrannyChordApp.cpp **** }
 2881              		.loc 16 104 1
 2882 00ca 00BF     		nop
 2883 00cc 1037     		adds	r7, r7, #16
 2884              		.cfi_def_cfa_offset 8
 2885 00ce BD46     		mov	sp, r7
 2886              		.cfi_def_cfa_register 13
 2887              		@ sp needed
 2888 00d0 80BD     		pop	{r7, pc}
 2889              	.L126:
 2890 00d2 00BF     		.align	2
 2891              	.L125:
 2892 00d4 00007A44 		.word	1148846080
 2893 00d8 70000000 		.word	.LC6
 2894 00dc 84000000 		.word	.LC7
 2895              		.cfi_endproc
 2896              	.LFE4914:
 2898              		.section	.rodata
 2899 0099 000000   		.align	2
 2900              	.LC8:
 2901 009c 73746F70 		.ascii	"stopped audio for select file\000"
 2901      70656420 
 2901      61756469 
 2901      6F20666F 
 2901      72207365 
 2902 00ba 0000     		.align	2
 2903              	.LC9:
 2904 00bc 5265636F 		.ascii	"Recording in\000"
 2904      7264696E 
 2904      6720696E 
 2904      00
 2905 00c9 000000   		.align	2
 2906              	.LC10:
 2907 00cc 73746172 		.ascii	"starting playback\000"
 2907      74696E67 
 2907      20706C61 
 2907      79626163 
 2907      6B00
 2908              		.section	.text._ZN14GrannyChordApp17HandleStateChangeEv,"ax",%progbits
 2909              		.align	1
 2910              		.global	_ZN14GrannyChordApp17HandleStateChangeEv
 2911              		.syntax unified
 2912              		.thumb
 2913              		.thumb_func
 2915              	_ZN14GrannyChordApp17HandleStateChangeEv:
 2916              	.LFB4915:
 105:GrannyChordApp.cpp **** 
 106:GrannyChordApp.cpp **** /// @brief handles transitions between states and prepares for next state
 107:GrannyChordApp.cpp **** void GrannyChordApp::HandleStateChange(){
 2917              		.loc 16 107 41
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 8
 2920              		@ frame_needed = 1, uses_anonymous_args = 0
 2921 0000 80B5     		push	{r7, lr}
 2922              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 74


 2923              		.cfi_offset 7, -8
 2924              		.cfi_offset 14, -4
 2925 0002 82B0     		sub	sp, sp, #8
 2926              		.cfi_def_cfa_offset 16
 2927 0004 00AF     		add	r7, sp, #0
 2928              		.cfi_def_cfa_register 7
 2929 0006 7860     		str	r0, [r7, #4]
 108:GrannyChordApp.cpp ****   switch(next_state_){
 2930              		.loc 16 108 10
 2931 0008 7B68     		ldr	r3, [r7, #4]
 2932 000a D3F87832 		ldr	r3, [r3, #632]
 2933              		.loc 16 108 3
 2934 000e 052B     		cmp	r3, #5
 2935 0010 3ED8     		bhi	.L136
 2936 0012 01A2     		adr	r2, .L130
 2937 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2938              		.p2align 2
 2939              	.L130:
 2940 0018 31000000 		.word	.L134+1
 2941 001c 61000000 		.word	.L133+1
 2942 0020 77000000 		.word	.L132+1
 2943 0024 4B000000 		.word	.L131+1
 2944 0028 91000000 		.word	.L136+1
 2945 002c 87000000 		.word	.L129+1
 2946              		.p2align 1
 2947              	.L134:
 109:GrannyChordApp.cpp ****     case AppState::SelectFile:
 110:GrannyChordApp.cpp ****       pod_.StopAudio();
 2948              		.loc 16 110 7
 2949 0030 7B68     		ldr	r3, [r7, #4]
 2950 0032 DB69     		ldr	r3, [r3, #28]
 2951              		.loc 16 110 21
 2952 0034 1846     		mov	r0, r3
 2953 0036 FFF7FEFF 		bl	_ZN5daisy8DaisyPod9StopAudioEv
 111:GrannyChordApp.cpp ****       DebugPrint(pod_, "stopped audio for select file");
 2954              		.loc 16 111 7
 2955 003a 1848     		ldr	r0, .L137
 2956 003c FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 112:GrannyChordApp.cpp ****       curr_state_ = AppState::SelectFile;
 2957              		.loc 16 112 19
 2958 0040 7B68     		ldr	r3, [r7, #4]
 2959 0042 0022     		movs	r2, #0
 2960 0044 C3F87422 		str	r2, [r3, #628]
 113:GrannyChordApp.cpp ****       break; 
 2961              		.loc 16 113 7
 2962 0048 23E0     		b	.L135
 2963              	.L131:
 114:GrannyChordApp.cpp ****     case AppState::RecordIn:
 115:GrannyChordApp.cpp ****       InitRecordIn();
 2964              		.loc 16 115 19
 2965 004a 7868     		ldr	r0, [r7, #4]
 2966 004c FFF7FEFF 		bl	_ZN14GrannyChordApp12InitRecordInEv
 116:GrannyChordApp.cpp ****       DebugPrint(pod_, "Recording in");
 2967              		.loc 16 116 7
 2968 0050 1348     		ldr	r0, .L137+4
 2969 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 117:GrannyChordApp.cpp ****       curr_state_ = AppState::RecordIn;  
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 75


 2970              		.loc 16 117 19
 2971 0056 7B68     		ldr	r3, [r7, #4]
 2972 0058 0322     		movs	r2, #3
 2973 005a C3F87422 		str	r2, [r3, #628]
 118:GrannyChordApp.cpp ****       break;
 2974              		.loc 16 118 7
 2975 005e 18E0     		b	.L135
 2976              	.L133:
 119:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 120:GrannyChordApp.cpp ****       InitPlayback(); 
 2977              		.loc 16 120 19
 2978 0060 7868     		ldr	r0, [r7, #4]
 2979 0062 FFF7FEFF 		bl	_ZN14GrannyChordApp12InitPlaybackEv
 121:GrannyChordApp.cpp ****       DebugPrint(pod_,"starting playback");
 2980              		.loc 16 121 7
 2981 0066 0F48     		ldr	r0, .L137+8
 2982 0068 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 122:GrannyChordApp.cpp ****       curr_state_ = AppState::PlayWAV;
 2983              		.loc 16 122 19
 2984 006c 7B68     		ldr	r3, [r7, #4]
 2985 006e 0122     		movs	r2, #1
 2986 0070 C3F87422 		str	r2, [r3, #628]
 123:GrannyChordApp.cpp ****       break;
 2987              		.loc 16 123 7
 2988 0074 0DE0     		b	.L135
 2989              	.L132:
 124:GrannyChordApp.cpp ****     case AppState::Synthesis:
 125:GrannyChordApp.cpp ****       InitSynth();
 2990              		.loc 16 125 16
 2991 0076 7868     		ldr	r0, [r7, #4]
 2992 0078 FFF7FEFF 		bl	_ZN14GrannyChordApp9InitSynthEv
 126:GrannyChordApp.cpp ****       curr_state_ = AppState::Synthesis;
 2993              		.loc 16 126 19
 2994 007c 7B68     		ldr	r3, [r7, #4]
 2995 007e 0222     		movs	r2, #2
 2996 0080 C3F87422 		str	r2, [r3, #628]
 127:GrannyChordApp.cpp ****       // SetLedSynthMode();
 128:GrannyChordApp.cpp ****       // DebugPrint(pod_, "started audiocallback");
 129:GrannyChordApp.cpp ****       break;
 2997              		.loc 16 129 7
 2998 0084 05E0     		b	.L135
 2999              	.L129:
 130:GrannyChordApp.cpp ****     case AppState::Error: 
 131:GrannyChordApp.cpp ****       curr_state_ = AppState::Error;
 3000              		.loc 16 131 19
 3001 0086 7B68     		ldr	r3, [r7, #4]
 3002 0088 0522     		movs	r2, #5
 3003 008a C3F87422 		str	r2, [r3, #628]
 132:GrannyChordApp.cpp ****       break;
 3004              		.loc 16 132 7
 3005 008e 00E0     		b	.L135
 3006              	.L136:
 133:GrannyChordApp.cpp ****     default: 
 134:GrannyChordApp.cpp ****       break;
 3007              		.loc 16 134 7
 3008 0090 00BF     		nop
 3009              	.L135:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 76


 135:GrannyChordApp.cpp ****   }
 136:GrannyChordApp.cpp **** }
 3010              		.loc 16 136 1
 3011 0092 00BF     		nop
 3012 0094 0837     		adds	r7, r7, #8
 3013              		.cfi_def_cfa_offset 8
 3014 0096 BD46     		mov	sp, r7
 3015              		.cfi_def_cfa_register 13
 3016              		@ sp needed
 3017 0098 80BD     		pop	{r7, pc}
 3018              	.L138:
 3019 009a 00BF     		.align	2
 3020              	.L137:
 3021 009c 9C000000 		.word	.LC8
 3022 00a0 BC000000 		.word	.LC9
 3023 00a4 CC000000 		.word	.LC10
 3024              		.cfi_endproc
 3025              	.LFE4915:
 3027              		.section	.text._ZN14GrannyChordApp22HandleEncoderIncrementEi,"ax",%progbits
 3028              		.align	1
 3029              		.global	_ZN14GrannyChordApp22HandleEncoderIncrementEi
 3030              		.syntax unified
 3031              		.thumb
 3032              		.thumb_func
 3034              	_ZN14GrannyChordApp22HandleEncoderIncrementEi:
 3035              	.LFB4916:
 137:GrannyChordApp.cpp **** 
 138:GrannyChordApp.cpp **** /// @brief Handles when encoder is scrolled to select a file 
 139:GrannyChordApp.cpp **** /// @param encoder_inc amount the encoder has been scrolled/incremented
 140:GrannyChordApp.cpp **** void GrannyChordApp::HandleEncoderIncrement(int encoder_inc){
 3036              		.loc 16 140 61
 3037              		.cfi_startproc
 3038              		@ args = 0, pretend = 0, frame = 8
 3039              		@ frame_needed = 1, uses_anonymous_args = 0
 3040 0000 80B5     		push	{r7, lr}
 3041              		.cfi_def_cfa_offset 8
 3042              		.cfi_offset 7, -8
 3043              		.cfi_offset 14, -4
 3044 0002 82B0     		sub	sp, sp, #8
 3045              		.cfi_def_cfa_offset 16
 3046 0004 00AF     		add	r7, sp, #0
 3047              		.cfi_def_cfa_register 7
 3048 0006 7860     		str	r0, [r7, #4]
 3049 0008 3960     		str	r1, [r7]
 141:GrannyChordApp.cpp ****   if (next_state_== AppState::SelectFile){
 3050              		.loc 16 141 7
 3051 000a 7B68     		ldr	r3, [r7, #4]
 3052 000c D3F87832 		ldr	r3, [r3, #632]
 3053              		.loc 16 141 3
 3054 0010 002B     		cmp	r3, #0
 3055 0012 0AD1     		bne	.L140
 142:GrannyChordApp.cpp ****     recorded_in_ = false;
 3056              		.loc 16 142 18
 3057 0014 7B68     		ldr	r3, [r7, #4]
 3058 0016 03F50043 		add	r3, r3, #32768
 3059 001a 0022     		movs	r2, #0
 3060 001c 83F88C26 		strb	r2, [r3, #1676]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 77


 143:GrannyChordApp.cpp ****     HandleFileSelection(encoder_inc);
 3061              		.loc 16 143 24
 3062 0020 3968     		ldr	r1, [r7]
 3063 0022 7868     		ldr	r0, [r7, #4]
 3064 0024 FFF7FEFF 		bl	_ZN14GrannyChordApp19HandleFileSelectionEl
 144:GrannyChordApp.cpp ****   }
 145:GrannyChordApp.cpp ****   else if (curr_state_==AppState::PlayWAV){
 146:GrannyChordApp.cpp ****     recorded_in_ = false;
 147:GrannyChordApp.cpp ****     next_state_ = AppState::SelectFile;
 148:GrannyChordApp.cpp ****   }
 149:GrannyChordApp.cpp **** }
 3065              		.loc 16 149 1
 3066 0028 0EE0     		b	.L142
 3067              	.L140:
 145:GrannyChordApp.cpp ****     recorded_in_ = false;
 3068              		.loc 16 145 12
 3069 002a 7B68     		ldr	r3, [r7, #4]
 3070 002c D3F87432 		ldr	r3, [r3, #628]
 145:GrannyChordApp.cpp ****     recorded_in_ = false;
 3071              		.loc 16 145 8
 3072 0030 012B     		cmp	r3, #1
 3073 0032 09D1     		bne	.L142
 146:GrannyChordApp.cpp ****     next_state_ = AppState::SelectFile;
 3074              		.loc 16 146 18
 3075 0034 7B68     		ldr	r3, [r7, #4]
 3076 0036 03F50043 		add	r3, r3, #32768
 3077 003a 0022     		movs	r2, #0
 3078 003c 83F88C26 		strb	r2, [r3, #1676]
 147:GrannyChordApp.cpp ****   }
 3079              		.loc 16 147 17
 3080 0040 7B68     		ldr	r3, [r7, #4]
 3081 0042 0022     		movs	r2, #0
 3082 0044 C3F87822 		str	r2, [r3, #632]
 3083              	.L142:
 3084              		.loc 16 149 1
 3085 0048 00BF     		nop
 3086 004a 0837     		adds	r7, r7, #8
 3087              		.cfi_def_cfa_offset 8
 3088 004c BD46     		mov	sp, r7
 3089              		.cfi_def_cfa_register 13
 3090              		@ sp needed
 3091 004e 80BD     		pop	{r7, pc}
 3092              		.cfi_endproc
 3093              	.LFE4916:
 3095              		.section	.text._ZN14GrannyChordApp20HandleEncoderPressedEv,"ax",%progbits
 3096              		.align	1
 3097              		.global	_ZN14GrannyChordApp20HandleEncoderPressedEv
 3098              		.syntax unified
 3099              		.thumb
 3100              		.thumb_func
 3102              	_ZN14GrannyChordApp20HandleEncoderPressedEv:
 3103              	.LFB4917:
 150:GrannyChordApp.cpp **** 
 151:GrannyChordApp.cpp **** /// @brief handles when the encoder is pressed down (not held)
 152:GrannyChordApp.cpp **** void GrannyChordApp::HandleEncoderPressed(){
 3104              		.loc 16 152 44
 3105              		.cfi_startproc
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 78


 3106              		@ args = 0, pretend = 0, frame = 8
 3107              		@ frame_needed = 1, uses_anonymous_args = 0
 3108              		@ link register save eliminated.
 3109 0000 80B4     		push	{r7}
 3110              		.cfi_def_cfa_offset 4
 3111              		.cfi_offset 7, -4
 3112 0002 83B0     		sub	sp, sp, #12
 3113              		.cfi_def_cfa_offset 16
 3114 0004 00AF     		add	r7, sp, #0
 3115              		.cfi_def_cfa_register 7
 3116 0006 7860     		str	r0, [r7, #4]
 153:GrannyChordApp.cpp ****   switch(curr_state_){
 3117              		.loc 16 153 10
 3118 0008 7B68     		ldr	r3, [r7, #4]
 3119 000a D3F87432 		ldr	r3, [r3, #628]
 3120              		.loc 16 153 3
 3121 000e 032B     		cmp	r3, #3
 3122 0010 0BD0     		beq	.L144
 3123 0012 032B     		cmp	r3, #3
 3124 0014 19DC     		bgt	.L149
 3125 0016 002B     		cmp	r3, #0
 3126 0018 02D0     		beq	.L146
 3127 001a 012B     		cmp	r3, #1
 3128 001c 10D0     		beq	.L147
 154:GrannyChordApp.cpp ****     case AppState::SelectFile:
 155:GrannyChordApp.cpp ****       next_state_ = AppState::PlayWAV;
 156:GrannyChordApp.cpp ****       return;
 157:GrannyChordApp.cpp ****     case AppState::RecordIn: 
 158:GrannyChordApp.cpp ****       recorded_in_ = true;
 159:GrannyChordApp.cpp ****       next_state_ = AppState::PlayWAV; 
 160:GrannyChordApp.cpp ****       return;
 161:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 162:GrannyChordApp.cpp ****       next_state_ = AppState::Synthesis;
 163:GrannyChordApp.cpp ****       return;
 164:GrannyChordApp.cpp ****     default:
 165:GrannyChordApp.cpp ****       return;
 3129              		.loc 16 165 7
 3130 001e 14E0     		b	.L149
 3131              	.L146:
 155:GrannyChordApp.cpp ****       return;
 3132              		.loc 16 155 19
 3133 0020 7B68     		ldr	r3, [r7, #4]
 3134 0022 0122     		movs	r2, #1
 3135 0024 C3F87822 		str	r2, [r3, #632]
 156:GrannyChordApp.cpp ****     case AppState::RecordIn: 
 3136              		.loc 16 156 7
 3137 0028 10E0     		b	.L143
 3138              	.L144:
 158:GrannyChordApp.cpp ****       next_state_ = AppState::PlayWAV; 
 3139              		.loc 16 158 20
 3140 002a 7B68     		ldr	r3, [r7, #4]
 3141 002c 03F50043 		add	r3, r3, #32768
 3142 0030 0122     		movs	r2, #1
 3143 0032 83F88C26 		strb	r2, [r3, #1676]
 159:GrannyChordApp.cpp ****       return;
 3144              		.loc 16 159 19
 3145 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 79


 3146 0038 0122     		movs	r2, #1
 3147 003a C3F87822 		str	r2, [r3, #632]
 160:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 3148              		.loc 16 160 7
 3149 003e 05E0     		b	.L143
 3150              	.L147:
 162:GrannyChordApp.cpp ****       return;
 3151              		.loc 16 162 19
 3152 0040 7B68     		ldr	r3, [r7, #4]
 3153 0042 0222     		movs	r2, #2
 3154 0044 C3F87822 		str	r2, [r3, #632]
 163:GrannyChordApp.cpp ****     default:
 3155              		.loc 16 163 7
 3156 0048 00E0     		b	.L143
 3157              	.L149:
 3158              		.loc 16 165 7
 3159 004a 00BF     		nop
 3160              	.L143:
 166:GrannyChordApp.cpp ****   }
 167:GrannyChordApp.cpp **** }
 3161              		.loc 16 167 1
 3162 004c 0C37     		adds	r7, r7, #12
 3163              		.cfi_def_cfa_offset 4
 3164 004e BD46     		mov	sp, r7
 3165              		.cfi_def_cfa_register 13
 3166              		@ sp needed
 3167 0050 5DF8047B 		ldr	r7, [sp], #4
 3168              		.cfi_restore 7
 3169              		.cfi_def_cfa_offset 0
 3170 0054 7047     		bx	lr
 3171              		.cfi_endproc
 3172              	.LFE4917:
 3174              		.section	.text._ZN14GrannyChordApp22HandleEncoderLongPressEv,"ax",%progbits
 3175              		.align	1
 3176              		.global	_ZN14GrannyChordApp22HandleEncoderLongPressEv
 3177              		.syntax unified
 3178              		.thumb
 3179              		.thumb_func
 3181              	_ZN14GrannyChordApp22HandleEncoderLongPressEv:
 3182              	.LFB4918:
 168:GrannyChordApp.cpp **** 
 169:GrannyChordApp.cpp **** /// @brief switch between states by long pressing encoder.
 170:GrannyChordApp.cpp **** ///        much simpler than below!
 171:GrannyChordApp.cpp **** void GrannyChordApp::HandleEncoderLongPress(){
 3183              		.loc 16 171 46
 3184              		.cfi_startproc
 3185              		@ args = 0, pretend = 0, frame = 8
 3186              		@ frame_needed = 1, uses_anonymous_args = 0
 3187 0000 80B5     		push	{r7, lr}
 3188              		.cfi_def_cfa_offset 8
 3189              		.cfi_offset 7, -8
 3190              		.cfi_offset 14, -4
 3191 0002 82B0     		sub	sp, sp, #8
 3192              		.cfi_def_cfa_offset 16
 3193 0004 00AF     		add	r7, sp, #0
 3194              		.cfi_def_cfa_register 7
 3195 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 80


 3196              	.L152:
 172:GrannyChordApp.cpp ****   do { pod_.encoder.Debounce();  }
 3197              		.loc 16 172 8
 3198 0008 7B68     		ldr	r3, [r7, #4]
 3199 000a DB69     		ldr	r3, [r3, #28]
 3200              		.loc 16 172 29
 3201 000c 4033     		adds	r3, r3, #64
 3202 000e 1846     		mov	r0, r3
 3203 0010 FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 173:GrannyChordApp.cpp ****   while(!pod_.encoder.FallingEdge());
 3204              		.loc 16 173 10
 3205 0014 7B68     		ldr	r3, [r7, #4]
 3206 0016 DB69     		ldr	r3, [r3, #28]
 3207              		.loc 16 173 34
 3208 0018 4033     		adds	r3, r3, #64
 3209 001a 1846     		mov	r0, r3
 3210 001c FFF7FEFF 		bl	_ZNK5daisy7Encoder11FallingEdgeEv
 3211 0020 0346     		mov	r3, r0
 3212              		.loc 16 173 9
 3213 0022 83F00103 		eor	r3, r3, #1
 3214 0026 DBB2     		uxtb	r3, r3
 3215 0028 002B     		cmp	r3, #0
 3216 002a 00D0     		beq	.L151
 172:GrannyChordApp.cpp ****   do { pod_.encoder.Debounce();  }
 3217              		.loc 16 172 3
 3218 002c ECE7     		b	.L152
 3219              	.L151:
 174:GrannyChordApp.cpp ****   switch(curr_state_){
 3220              		.loc 16 174 10
 3221 002e 7B68     		ldr	r3, [r7, #4]
 3222 0030 D3F87432 		ldr	r3, [r3, #628]
 3223              		.loc 16 174 3
 3224 0034 012B     		cmp	r3, #1
 3225 0036 02DC     		bgt	.L153
 3226 0038 002B     		cmp	r3, #0
 3227 003a 08DA     		bge	.L154
 175:GrannyChordApp.cpp ****     case AppState::Synthesis:
 176:GrannyChordApp.cpp ****     case AppState::RecordIn:  
 177:GrannyChordApp.cpp ****       next_state_ = AppState::SelectFile;
 178:GrannyChordApp.cpp ****       return;
 179:GrannyChordApp.cpp ****     case AppState::SelectFile:
 180:GrannyChordApp.cpp ****     case AppState::PlayWAV: 
 181:GrannyChordApp.cpp ****       recorded_in_ = true;
 182:GrannyChordApp.cpp ****       next_state_ = AppState::RecordIn;  
 183:GrannyChordApp.cpp ****       return;
 184:GrannyChordApp.cpp ****     default:
 185:GrannyChordApp.cpp ****       return;
 3228              		.loc 16 185 7
 3229 003c 12E0     		b	.L157
 3230              	.L153:
 3231 003e 023B     		subs	r3, r3, #2
 174:GrannyChordApp.cpp ****   switch(curr_state_){
 3232              		.loc 16 174 3
 3233 0040 012B     		cmp	r3, #1
 3234 0042 0FD8     		bhi	.L157
 177:GrannyChordApp.cpp ****       return;
 3235              		.loc 16 177 19
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 81


 3236 0044 7B68     		ldr	r3, [r7, #4]
 3237 0046 0022     		movs	r2, #0
 3238 0048 C3F87822 		str	r2, [r3, #632]
 178:GrannyChordApp.cpp ****     case AppState::SelectFile:
 3239              		.loc 16 178 7
 3240 004c 0BE0     		b	.L150
 3241              	.L154:
 181:GrannyChordApp.cpp ****       next_state_ = AppState::RecordIn;  
 3242              		.loc 16 181 20
 3243 004e 7B68     		ldr	r3, [r7, #4]
 3244 0050 03F50043 		add	r3, r3, #32768
 3245 0054 0122     		movs	r2, #1
 3246 0056 83F88C26 		strb	r2, [r3, #1676]
 182:GrannyChordApp.cpp ****       return;
 3247              		.loc 16 182 19
 3248 005a 7B68     		ldr	r3, [r7, #4]
 3249 005c 0322     		movs	r2, #3
 3250 005e C3F87822 		str	r2, [r3, #632]
 183:GrannyChordApp.cpp ****     default:
 3251              		.loc 16 183 7
 3252 0062 00E0     		b	.L150
 3253              	.L157:
 3254              		.loc 16 185 7
 3255 0064 00BF     		nop
 3256              	.L150:
 186:GrannyChordApp.cpp ****   }
 187:GrannyChordApp.cpp **** }
 3257              		.loc 16 187 1
 3258 0066 0837     		adds	r7, r7, #8
 3259              		.cfi_def_cfa_offset 8
 3260 0068 BD46     		mov	sp, r7
 3261              		.cfi_def_cfa_register 13
 3262              		@ sp needed
 3263 006a 80BD     		pop	{r7, pc}
 3264              		.cfi_endproc
 3265              	.LFE4918:
 3267              		.section	.rodata
 3268 00de 0000     		.align	2
 3269              	.LC11:
 3270 00e0 6E6F7720 		.ascii	"now recording out!\000"
 3270      7265636F 
 3270      7264696E 
 3270      67206F75 
 3270      742100
 3271 00f3 00       		.align	2
 3272              	.LC12:
 3273 00f4 66696E69 		.ascii	"finished recording out: %.2fs\000"
 3273      73686564 
 3273      20726563 
 3273      6F726469 
 3273      6E67206F 
 3274              		.section	.text._ZN14GrannyChordApp13ButtonHandlerEv,"ax",%progbits
 3275              		.align	1
 3276              		.global	_ZN14GrannyChordApp13ButtonHandlerEv
 3277              		.syntax unified
 3278              		.thumb
 3279              		.thumb_func
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 82


 3281              	_ZN14GrannyChordApp13ButtonHandlerEv:
 3282              	.LFB4919:
 188:GrannyChordApp.cpp **** 
 189:GrannyChordApp.cpp **** /* this logic is required for button long presses:
 190:GrannyChordApp.cpp ****   the button update rate is extremely fast so without
 191:GrannyChordApp.cpp ****   a debounce delay, the method eg HandleButton1LongPress 
 192:GrannyChordApp.cpp ****   will be called many 1000s of times per second 
 193:GrannyChordApp.cpp ****   once time held > 1000ms, causing issues */
 194:GrannyChordApp.cpp **** void GrannyChordApp::ButtonHandler(){
 3283              		.loc 16 194 37
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 32
 3286              		@ frame_needed = 1, uses_anonymous_args = 0
 3287 0000 80B5     		push	{r7, lr}
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 7, -8
 3290              		.cfi_offset 14, -4
 3291 0002 88B0     		sub	sp, sp, #32
 3292              		.cfi_def_cfa_offset 40
 3293 0004 00AF     		add	r7, sp, #0
 3294              		.cfi_def_cfa_register 7
 3295 0006 7860     		str	r0, [r7, #4]
 195:GrannyChordApp.cpp ****   unsigned long time_now = System::GetNow();
 3296              		.loc 16 195 42
 3297 0008 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 3298 000c F861     		str	r0, [r7, #28]
 196:GrannyChordApp.cpp ****   /* only check button events if there's been a gap between them */
 197:GrannyChordApp.cpp ****   if (time_now - last_action_time_ < DEBOUNCE_DELAY) {
 3299              		.loc 16 197 18
 3300 000e 7B68     		ldr	r3, [r7, #4]
 3301 0010 03F50043 		add	r3, r3, #32768
 3302 0014 D3F8A836 		ldr	r3, [r3, #1704]
 3303              		.loc 16 197 16
 3304 0018 FA69     		ldr	r2, [r7, #28]
 3305 001a D31A     		subs	r3, r2, r3
 3306              		.loc 16 197 3
 3307 001c 312B     		cmp	r3, #49
 3308 001e 40F26581 		bls	.L182
 198:GrannyChordApp.cpp ****     return;
 199:GrannyChordApp.cpp ****   }
 200:GrannyChordApp.cpp **** 
 201:GrannyChordApp.cpp ****   /* store whether button 1 has been pressed down initiall*/
 202:GrannyChordApp.cpp ****   if (pod_.button1.RisingEdge()){
 3309              		.loc 16 202 7
 3310 0022 7B68     		ldr	r3, [r7, #4]
 3311 0024 DB69     		ldr	r3, [r3, #28]
 3312              		.loc 16 202 30
 3313 0026 B033     		adds	r3, r3, #176
 3314 0028 1846     		mov	r0, r3
 3315 002a FFF7FEFF 		bl	_ZNK5daisy6Switch10RisingEdgeEv
 3316 002e 0346     		mov	r3, r0
 3317              		.loc 16 202 3
 3318 0030 002B     		cmp	r3, #0
 3319 0032 0CD0     		beq	.L161
 203:GrannyChordApp.cpp ****     last_action_time_ = time_now;
 3320              		.loc 16 203 23
 3321 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 83


 3322 0036 03F50043 		add	r3, r3, #32768
 3323 003a 1A46     		mov	r2, r3
 3324 003c FB69     		ldr	r3, [r7, #28]
 3325 003e C2F8A836 		str	r3, [r2, #1704]
 204:GrannyChordApp.cpp ****     btn1_long_press_fired_ = false;
 3326              		.loc 16 204 28
 3327 0042 7B68     		ldr	r3, [r7, #4]
 3328 0044 03F50043 		add	r3, r3, #32768
 3329 0048 0022     		movs	r2, #0
 3330 004a 83F8AC26 		strb	r2, [r3, #1708]
 3331              	.L161:
 3332              	.LBB10:
 205:GrannyChordApp.cpp ****   }
 206:GrannyChordApp.cpp ****   
 207:GrannyChordApp.cpp ****   /* handle case when button 1 is held down */
 208:GrannyChordApp.cpp ****   if (pod_.button1.Pressed()){
 3333              		.loc 16 208 7
 3334 004e 7B68     		ldr	r3, [r7, #4]
 3335 0050 DB69     		ldr	r3, [r3, #28]
 3336              		.loc 16 208 27
 3337 0052 B033     		adds	r3, r3, #176
 3338 0054 1846     		mov	r0, r3
 3339 0056 FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 3340 005a 0346     		mov	r3, r0
 3341              		.loc 16 208 3
 3342 005c 002B     		cmp	r3, #0
 3343 005e 2AD0     		beq	.L162
 3344              	.LBB11:
 209:GrannyChordApp.cpp ****     float held_time = pod_.button1.TimeHeldMs();
 3345              		.loc 16 209 23
 3346 0060 7B68     		ldr	r3, [r7, #4]
 3347 0062 DB69     		ldr	r3, [r3, #28]
 3348              		.loc 16 209 46
 3349 0064 B033     		adds	r3, r3, #176
 3350 0066 1846     		mov	r0, r3
 3351 0068 FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3352 006c 87ED060A 		vstr.32	s0, [r7, #24]
 210:GrannyChordApp.cpp ****     if (held_time > LONG_PRESS_TIME && !btn1_long_press_fired_){
 3353              		.loc 16 210 5
 3354 0070 D7ED067A 		vldr.32	s15, [r7, #24]
 3355 0074 9FED9F7A 		vldr.32	s14, .L183
 3356 0078 F4EEC77A 		vcmpe.f32	s15, s14
 3357 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3358 0080 19DD     		ble	.L162
 3359              		.loc 16 210 41 discriminator 1
 3360 0082 7B68     		ldr	r3, [r7, #4]
 3361 0084 03F50043 		add	r3, r3, #32768
 3362 0088 93F8AC36 		ldrb	r3, [r3, #1708]	@ zero_extendqisi2
 3363              		.loc 16 210 40 discriminator 1
 3364 008c 83F00103 		eor	r3, r3, #1
 3365 0090 DBB2     		uxtb	r3, r3
 3366              		.loc 16 210 37 discriminator 1
 3367 0092 002B     		cmp	r3, #0
 3368 0094 0FD0     		beq	.L162
 211:GrannyChordApp.cpp ****       HandleButton1LongPress();
 3369              		.loc 16 211 29
 3370 0096 7868     		ldr	r0, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 84


 3371 0098 FFF7FEFF 		bl	_ZN14GrannyChordApp22HandleButton1LongPressEv
 212:GrannyChordApp.cpp ****       btn1_long_press_fired_ = true;
 3372              		.loc 16 212 30
 3373 009c 7B68     		ldr	r3, [r7, #4]
 3374 009e 03F50043 		add	r3, r3, #32768
 3375 00a2 0122     		movs	r2, #1
 3376 00a4 83F8AC26 		strb	r2, [r3, #1708]
 213:GrannyChordApp.cpp ****       last_action_time_ = time_now;
 3377              		.loc 16 213 25
 3378 00a8 7B68     		ldr	r3, [r7, #4]
 3379 00aa 03F50043 		add	r3, r3, #32768
 3380 00ae 1A46     		mov	r2, r3
 3381 00b0 FB69     		ldr	r3, [r7, #28]
 3382 00b2 C2F8A836 		str	r3, [r2, #1704]
 3383              	.L162:
 3384              	.LBE11:
 3385              	.LBE10:
 214:GrannyChordApp.cpp ****     }
 215:GrannyChordApp.cpp ****   }
 216:GrannyChordApp.cpp ****   
 217:GrannyChordApp.cpp ****   /* handle case when button 1 is released */
 218:GrannyChordApp.cpp ****   if (pod_.button1.FallingEdge()){
 3386              		.loc 16 218 7
 3387 00b6 7B68     		ldr	r3, [r7, #4]
 3388 00b8 DB69     		ldr	r3, [r3, #28]
 3389              		.loc 16 218 31
 3390 00ba B033     		adds	r3, r3, #176
 3391 00bc 1846     		mov	r0, r3
 3392 00be FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 3393 00c2 0346     		mov	r3, r0
 3394              		.loc 16 218 3
 3395 00c4 002B     		cmp	r3, #0
 3396 00c6 19D0     		beq	.L164
 219:GrannyChordApp.cpp ****     if (!btn1_long_press_fired_){
 3397              		.loc 16 219 10
 3398 00c8 7B68     		ldr	r3, [r7, #4]
 3399 00ca 03F50043 		add	r3, r3, #32768
 3400 00ce 93F8AC36 		ldrb	r3, [r3, #1708]	@ zero_extendqisi2
 3401              		.loc 16 219 9
 3402 00d2 83F00103 		eor	r3, r3, #1
 3403 00d6 DBB2     		uxtb	r3, r3
 3404              		.loc 16 219 5
 3405 00d8 002B     		cmp	r3, #0
 3406 00da 02D0     		beq	.L165
 220:GrannyChordApp.cpp ****       HandleButton1();
 3407              		.loc 16 220 20
 3408 00dc 7868     		ldr	r0, [r7, #4]
 3409 00de FFF7FEFF 		bl	_ZN14GrannyChordApp13HandleButton1Ev
 3410              	.L165:
 221:GrannyChordApp.cpp ****     }
 222:GrannyChordApp.cpp ****     last_action_time_ = time_now;
 3411              		.loc 16 222 23
 3412 00e2 7B68     		ldr	r3, [r7, #4]
 3413 00e4 03F50043 		add	r3, r3, #32768
 3414 00e8 1A46     		mov	r2, r3
 3415 00ea FB69     		ldr	r3, [r7, #28]
 3416 00ec C2F8A836 		str	r3, [r2, #1704]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 85


 223:GrannyChordApp.cpp ****     btn1_long_press_fired_ = false;
 3417              		.loc 16 223 28
 3418 00f0 7B68     		ldr	r3, [r7, #4]
 3419 00f2 03F50043 		add	r3, r3, #32768
 3420 00f6 0022     		movs	r2, #0
 3421 00f8 83F8AC26 		strb	r2, [r3, #1708]
 3422              	.L164:
 224:GrannyChordApp.cpp ****   }
 225:GrannyChordApp.cpp **** 
 226:GrannyChordApp.cpp ****   /* store whether button 2 has been pressed down initially */
 227:GrannyChordApp.cpp ****   if (pod_.button2.RisingEdge()){
 3423              		.loc 16 227 7
 3424 00fc 7B68     		ldr	r3, [r7, #4]
 3425 00fe DB69     		ldr	r3, [r3, #28]
 3426              		.loc 16 227 30
 3427 0100 C033     		adds	r3, r3, #192
 3428 0102 1846     		mov	r0, r3
 3429 0104 FFF7FEFF 		bl	_ZNK5daisy6Switch10RisingEdgeEv
 3430 0108 0346     		mov	r3, r0
 3431              		.loc 16 227 3
 3432 010a 002B     		cmp	r3, #0
 3433 010c 0CD0     		beq	.L166
 228:GrannyChordApp.cpp ****     last_action_time_ = time_now;
 3434              		.loc 16 228 23
 3435 010e 7B68     		ldr	r3, [r7, #4]
 3436 0110 03F50043 		add	r3, r3, #32768
 3437 0114 1A46     		mov	r2, r3
 3438 0116 FB69     		ldr	r3, [r7, #28]
 3439 0118 C2F8A836 		str	r3, [r2, #1704]
 229:GrannyChordApp.cpp ****     btn2_long_press_fired_ = false;
 3440              		.loc 16 229 28
 3441 011c 7B68     		ldr	r3, [r7, #4]
 3442 011e 03F50043 		add	r3, r3, #32768
 3443 0122 0022     		movs	r2, #0
 3444 0124 83F8AD26 		strb	r2, [r3, #1709]
 3445              	.L166:
 3446              	.LBB12:
 230:GrannyChordApp.cpp ****   }
 231:GrannyChordApp.cpp ****   
 232:GrannyChordApp.cpp ****   /* handle case when button 2 is held */
 233:GrannyChordApp.cpp ****   if (pod_.button2.Pressed()){
 3447              		.loc 16 233 7
 3448 0128 7B68     		ldr	r3, [r7, #4]
 3449 012a DB69     		ldr	r3, [r3, #28]
 3450              		.loc 16 233 27
 3451 012c C033     		adds	r3, r3, #192
 3452 012e 1846     		mov	r0, r3
 3453 0130 FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 3454 0134 0346     		mov	r3, r0
 3455              		.loc 16 233 3
 3456 0136 002B     		cmp	r3, #0
 3457 0138 2AD0     		beq	.L167
 3458              	.LBB13:
 234:GrannyChordApp.cpp ****     float held_time = pod_.button2.TimeHeldMs();
 3459              		.loc 16 234 23
 3460 013a 7B68     		ldr	r3, [r7, #4]
 3461 013c DB69     		ldr	r3, [r3, #28]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 86


 3462              		.loc 16 234 46
 3463 013e C033     		adds	r3, r3, #192
 3464 0140 1846     		mov	r0, r3
 3465 0142 FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3466 0146 87ED050A 		vstr.32	s0, [r7, #20]
 235:GrannyChordApp.cpp ****     if (held_time > LONG_PRESS_TIME && !btn2_long_press_fired_){
 3467              		.loc 16 235 5
 3468 014a D7ED057A 		vldr.32	s15, [r7, #20]
 3469 014e 9FED697A 		vldr.32	s14, .L183
 3470 0152 F4EEC77A 		vcmpe.f32	s15, s14
 3471 0156 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3472 015a 19DD     		ble	.L167
 3473              		.loc 16 235 41 discriminator 1
 3474 015c 7B68     		ldr	r3, [r7, #4]
 3475 015e 03F50043 		add	r3, r3, #32768
 3476 0162 93F8AD36 		ldrb	r3, [r3, #1709]	@ zero_extendqisi2
 3477              		.loc 16 235 40 discriminator 1
 3478 0166 83F00103 		eor	r3, r3, #1
 3479 016a DBB2     		uxtb	r3, r3
 3480              		.loc 16 235 37 discriminator 1
 3481 016c 002B     		cmp	r3, #0
 3482 016e 0FD0     		beq	.L167
 236:GrannyChordApp.cpp ****       HandleButton2LongPress();
 3483              		.loc 16 236 29
 3484 0170 7868     		ldr	r0, [r7, #4]
 3485 0172 FFF7FEFF 		bl	_ZN14GrannyChordApp22HandleButton2LongPressEv
 237:GrannyChordApp.cpp ****       btn2_long_press_fired_ = true;
 3486              		.loc 16 237 30
 3487 0176 7B68     		ldr	r3, [r7, #4]
 3488 0178 03F50043 		add	r3, r3, #32768
 3489 017c 0122     		movs	r2, #1
 3490 017e 83F8AD26 		strb	r2, [r3, #1709]
 238:GrannyChordApp.cpp ****       last_action_time_ = time_now;
 3491              		.loc 16 238 25
 3492 0182 7B68     		ldr	r3, [r7, #4]
 3493 0184 03F50043 		add	r3, r3, #32768
 3494 0188 1A46     		mov	r2, r3
 3495 018a FB69     		ldr	r3, [r7, #28]
 3496 018c C2F8A836 		str	r3, [r2, #1704]
 3497              	.L167:
 3498              	.LBE13:
 3499              	.LBE12:
 239:GrannyChordApp.cpp ****     }
 240:GrannyChordApp.cpp ****   }
 241:GrannyChordApp.cpp ****   
 242:GrannyChordApp.cpp ****   /* handle case when button2 is released */
 243:GrannyChordApp.cpp ****   if (pod_.button2.FallingEdge()){
 3500              		.loc 16 243 7
 3501 0190 7B68     		ldr	r3, [r7, #4]
 3502 0192 DB69     		ldr	r3, [r3, #28]
 3503              		.loc 16 243 31
 3504 0194 C033     		adds	r3, r3, #192
 3505 0196 1846     		mov	r0, r3
 3506 0198 FFF7FEFF 		bl	_ZNK5daisy6Switch11FallingEdgeEv
 3507 019c 0346     		mov	r3, r0
 3508              		.loc 16 243 3
 3509 019e 002B     		cmp	r3, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 87


 3510 01a0 19D0     		beq	.L169
 244:GrannyChordApp.cpp ****     if (!btn2_long_press_fired_){
 3511              		.loc 16 244 10
 3512 01a2 7B68     		ldr	r3, [r7, #4]
 3513 01a4 03F50043 		add	r3, r3, #32768
 3514 01a8 93F8AD36 		ldrb	r3, [r3, #1709]	@ zero_extendqisi2
 3515              		.loc 16 244 9
 3516 01ac 83F00103 		eor	r3, r3, #1
 3517 01b0 DBB2     		uxtb	r3, r3
 3518              		.loc 16 244 5
 3519 01b2 002B     		cmp	r3, #0
 3520 01b4 02D0     		beq	.L170
 245:GrannyChordApp.cpp ****       HandleButton2();
 3521              		.loc 16 245 20
 3522 01b6 7868     		ldr	r0, [r7, #4]
 3523 01b8 FFF7FEFF 		bl	_ZN14GrannyChordApp13HandleButton2Ev
 3524              	.L170:
 246:GrannyChordApp.cpp ****     }
 247:GrannyChordApp.cpp ****     last_action_time_ = time_now;
 3525              		.loc 16 247 23
 3526 01bc 7B68     		ldr	r3, [r7, #4]
 3527 01be 03F50043 		add	r3, r3, #32768
 3528 01c2 1A46     		mov	r2, r3
 3529 01c4 FB69     		ldr	r3, [r7, #28]
 3530 01c6 C2F8A836 		str	r3, [r2, #1704]
 248:GrannyChordApp.cpp ****     btn2_long_press_fired_ = false;
 3531              		.loc 16 248 28
 3532 01ca 7B68     		ldr	r3, [r7, #4]
 3533 01cc 03F50043 		add	r3, r3, #32768
 3534 01d0 0022     		movs	r2, #0
 3535 01d2 83F8AD26 		strb	r2, [r3, #1709]
 3536              	.L169:
 3537              	.LBB14:
 249:GrannyChordApp.cpp ****   }
 250:GrannyChordApp.cpp **** 
 251:GrannyChordApp.cpp ****   /* handle case when both buttons are held down */
 252:GrannyChordApp.cpp ****   if (pod_.button1.Pressed() && pod_.button2.Pressed()){
 3538              		.loc 16 252 7
 3539 01d6 7B68     		ldr	r3, [r7, #4]
 3540 01d8 DB69     		ldr	r3, [r3, #28]
 3541              		.loc 16 252 27
 3542 01da B033     		adds	r3, r3, #176
 3543 01dc 1846     		mov	r0, r3
 3544 01de FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 3545 01e2 0346     		mov	r3, r0
 3546              		.loc 16 252 30
 3547 01e4 002B     		cmp	r3, #0
 3548 01e6 0AD0     		beq	.L171
 3549              		.loc 16 252 33 discriminator 1
 3550 01e8 7B68     		ldr	r3, [r7, #4]
 3551 01ea DB69     		ldr	r3, [r3, #28]
 3552              		.loc 16 252 53 discriminator 1
 3553 01ec C033     		adds	r3, r3, #192
 3554 01ee 1846     		mov	r0, r3
 3555 01f0 FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 3556 01f4 0346     		mov	r3, r0
 3557              		.loc 16 252 30 discriminator 1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 88


 3558 01f6 002B     		cmp	r3, #0
 3559 01f8 01D0     		beq	.L171
 3560              		.loc 16 252 30 is_stmt 0 discriminator 3
 3561 01fa 0123     		movs	r3, #1
 3562 01fc 00E0     		b	.L172
 3563              	.L171:
 3564              		.loc 16 252 30 discriminator 4
 3565 01fe 0023     		movs	r3, #0
 3566              	.L172:
 3567              		.loc 16 252 3 is_stmt 1 discriminator 6
 3568 0200 002B     		cmp	r3, #0
 3569 0202 6CD0     		beq	.L173
 3570              	.LBB15:
 253:GrannyChordApp.cpp ****     float heldTime1 = pod_.button1.TimeHeldMs();
 3571              		.loc 16 253 23
 3572 0204 7B68     		ldr	r3, [r7, #4]
 3573 0206 DB69     		ldr	r3, [r3, #28]
 3574              		.loc 16 253 46
 3575 0208 B033     		adds	r3, r3, #176
 3576 020a 1846     		mov	r0, r3
 3577 020c FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3578 0210 87ED040A 		vstr.32	s0, [r7, #16]
 254:GrannyChordApp.cpp ****     float heldTime2 = pod_.button2.TimeHeldMs();
 3579              		.loc 16 254 23
 3580 0214 7B68     		ldr	r3, [r7, #4]
 3581 0216 DB69     		ldr	r3, [r3, #28]
 3582              		.loc 16 254 46
 3583 0218 C033     		adds	r3, r3, #192
 3584 021a 1846     		mov	r0, r3
 3585 021c FFF7FEFF 		bl	_ZNK5daisy6Switch10TimeHeldMsEv
 3586 0220 87ED030A 		vstr.32	s0, [r7, #12]
 255:GrannyChordApp.cpp ****     if (heldTime1 > LONG_PRESS_TIME &&
 3587              		.loc 16 255 5
 3588 0224 D7ED047A 		vldr.32	s15, [r7, #16]
 3589 0228 9FED327A 		vldr.32	s14, .L183
 3590 022c F4EEC77A 		vcmpe.f32	s15, s14
 3591 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3592 0234 5BDD     		ble	.L158
 3593              		.loc 16 255 37 discriminator 1
 3594 0236 D7ED037A 		vldr.32	s15, [r7, #12]
 3595 023a 9FED2E7A 		vldr.32	s14, .L183
 3596 023e F4EEC77A 		vcmpe.f32	s15, s14
 3597 0242 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3598 0246 52DD     		ble	.L158
 256:GrannyChordApp.cpp ****         heldTime2 > LONG_PRESS_TIME &&
 257:GrannyChordApp.cpp ****         !both_btns_long_press_fired_) 
 3599              		.loc 16 257 10
 3600 0248 7B68     		ldr	r3, [r7, #4]
 3601 024a 03F50043 		add	r3, r3, #32768
 3602 024e 93F8AE36 		ldrb	r3, [r3, #1710]	@ zero_extendqisi2
 3603              		.loc 16 257 9
 3604 0252 83F00103 		eor	r3, r3, #1
 3605 0256 DBB2     		uxtb	r3, r3
 256:GrannyChordApp.cpp ****         heldTime2 > LONG_PRESS_TIME &&
 3606              		.loc 16 256 37
 3607 0258 002B     		cmp	r3, #0
 3608 025a 48D0     		beq	.L158
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 89


 258:GrannyChordApp.cpp ****     {
 259:GrannyChordApp.cpp ****       if (!recording_out_){
 3609              		.loc 16 259 12
 3610 025c 7B68     		ldr	r3, [r7, #4]
 3611 025e 03F50043 		add	r3, r3, #32768
 3612 0262 93F89436 		ldrb	r3, [r3, #1684]	@ zero_extendqisi2
 3613              		.loc 16 259 11
 3614 0266 83F00103 		eor	r3, r3, #1
 3615 026a DBB2     		uxtb	r3, r3
 3616              		.loc 16 259 7
 3617 026c 002B     		cmp	r3, #0
 3618 026e 12D0     		beq	.L176
 260:GrannyChordApp.cpp ****         pod_.seed.SetLed(1);
 3619              		.loc 16 260 9
 3620 0270 7B68     		ldr	r3, [r7, #4]
 3621 0272 DB69     		ldr	r3, [r3, #28]
 3622              		.loc 16 260 25
 3623 0274 0121     		movs	r1, #1
 3624 0276 1846     		mov	r0, r3
 3625 0278 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 261:GrannyChordApp.cpp ****         recording_out_ = true;
 3626              		.loc 16 261 24
 3627 027c 7B68     		ldr	r3, [r7, #4]
 3628 027e 03F50043 		add	r3, r3, #32768
 3629 0282 0122     		movs	r2, #1
 3630 0284 83F89426 		strb	r2, [r3, #1684]
 262:GrannyChordApp.cpp ****         DebugPrint(pod_,"now recording out!");
 3631              		.loc 16 262 9
 3632 0288 1B48     		ldr	r0, .L183+4
 3633 028a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 263:GrannyChordApp.cpp ****         RecordOutToSD();
 3634              		.loc 16 263 22
 3635 028e 7868     		ldr	r0, [r7, #4]
 3636 0290 FFF7FEFF 		bl	_ZN14GrannyChordApp13RecordOutToSDEv
 3637 0294 15E0     		b	.L177
 3638              	.L176:
 264:GrannyChordApp.cpp ****       } 
 265:GrannyChordApp.cpp ****       else{
 266:GrannyChordApp.cpp ****         pod_.seed.SetLed(0);
 3639              		.loc 16 266 9
 3640 0296 7B68     		ldr	r3, [r7, #4]
 3641 0298 DB69     		ldr	r3, [r3, #28]
 3642              		.loc 16 266 25
 3643 029a 0021     		movs	r1, #0
 3644 029c 1846     		mov	r0, r3
 3645 029e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 267:GrannyChordApp.cpp ****         DebugPrint(pod_, "finished recording out: %.2fs",sd_writer_.GetLengthSeconds());
 3646              		.loc 16 267 9
 3647 02a2 7B68     		ldr	r3, [r7, #4]
 3648 02a4 03F58363 		add	r3, r3, #1048
 3649 02a8 1846     		mov	r0, r3
 3650 02aa FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
 3651 02ae F0EE407A 		vmov.f32	s15, s0
 3652 02b2 B0EE670A 		vmov.f32	s0, s15
 3653 02b6 1148     		ldr	r0, .L183+8
 3654 02b8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_
 268:GrannyChordApp.cpp ****         FinishRecording();
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 90


 3655              		.loc 16 268 24
 3656 02bc 7868     		ldr	r0, [r7, #4]
 3657 02be FFF7FEFF 		bl	_ZN14GrannyChordApp15FinishRecordingEv
 3658              	.L177:
 269:GrannyChordApp.cpp ****       }
 270:GrannyChordApp.cpp ****       both_btns_long_press_fired_ = true;
 3659              		.loc 16 270 35
 3660 02c2 7B68     		ldr	r3, [r7, #4]
 3661 02c4 03F50043 		add	r3, r3, #32768
 3662 02c8 0122     		movs	r2, #1
 3663 02ca 83F8AE26 		strb	r2, [r3, #1710]
 271:GrannyChordApp.cpp ****       last_action_time_ = time_now;
 3664              		.loc 16 271 25
 3665 02ce 7B68     		ldr	r3, [r7, #4]
 3666 02d0 03F50043 		add	r3, r3, #32768
 3667 02d4 1A46     		mov	r2, r3
 3668 02d6 FB69     		ldr	r3, [r7, #28]
 3669 02d8 C2F8A836 		str	r3, [r2, #1704]
 3670 02dc 07E0     		b	.L158
 3671              	.L173:
 3672              	.LBE15:
 272:GrannyChordApp.cpp ****     }
 273:GrannyChordApp.cpp ****   } 
 274:GrannyChordApp.cpp ****   else{
 275:GrannyChordApp.cpp ****     both_btns_long_press_fired_ = false;
 3673              		.loc 16 275 33
 3674 02de 7B68     		ldr	r3, [r7, #4]
 3675 02e0 03F50043 		add	r3, r3, #32768
 3676 02e4 0022     		movs	r2, #0
 3677 02e6 83F8AE26 		strb	r2, [r3, #1710]
 3678 02ea 00E0     		b	.L158
 3679              	.L182:
 3680              	.LBE14:
 198:GrannyChordApp.cpp ****   }
 3681              		.loc 16 198 5
 3682 02ec 00BF     		nop
 3683              	.L158:
 276:GrannyChordApp.cpp ****   }
 277:GrannyChordApp.cpp **** }
 3684              		.loc 16 277 1
 3685 02ee 2037     		adds	r7, r7, #32
 3686              		.cfi_def_cfa_offset 8
 3687 02f0 BD46     		mov	sp, r7
 3688              		.cfi_def_cfa_register 13
 3689              		@ sp needed
 3690 02f2 80BD     		pop	{r7, pc}
 3691              	.L184:
 3692              		.align	2
 3693              	.L183:
 3694 02f4 00007A44 		.word	1148846080
 3695 02f8 E0000000 		.word	.LC11
 3696 02fc F4000000 		.word	.LC12
 3697              		.cfi_endproc
 3698              	.LFE4919:
 3700              		.section	.text._ZN14GrannyChordApp13HandleButton1Ev,"ax",%progbits
 3701              		.align	1
 3702              		.global	_ZN14GrannyChordApp13HandleButton1Ev
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 91


 3703              		.syntax unified
 3704              		.thumb
 3705              		.thumb_func
 3707              	_ZN14GrannyChordApp13HandleButton1Ev:
 3708              	.LFB4920:
 278:GrannyChordApp.cpp **** 
 279:GrannyChordApp.cpp **** /// @brief Switch between synth parameter control modes
 280:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton1(){
 3709              		.loc 16 280 37
 3710              		.cfi_startproc
 3711              		@ args = 0, pretend = 0, frame = 8
 3712              		@ frame_needed = 1, uses_anonymous_args = 0
 3713 0000 80B5     		push	{r7, lr}
 3714              		.cfi_def_cfa_offset 8
 3715              		.cfi_offset 7, -8
 3716              		.cfi_offset 14, -4
 3717 0002 82B0     		sub	sp, sp, #8
 3718              		.cfi_def_cfa_offset 16
 3719 0004 00AF     		add	r7, sp, #0
 3720              		.cfi_def_cfa_register 7
 3721 0006 7860     		str	r0, [r7, #4]
 281:GrannyChordApp.cpp ****   NextSynthMode();
 3722              		.loc 16 281 16
 3723 0008 7868     		ldr	r0, [r7, #4]
 3724 000a FFF7FEFF 		bl	_ZN14GrannyChordApp13NextSynthModeEv
 282:GrannyChordApp.cpp **** }
 3725              		.loc 16 282 1
 3726 000e 00BF     		nop
 3727 0010 0837     		adds	r7, r7, #8
 3728              		.cfi_def_cfa_offset 8
 3729 0012 BD46     		mov	sp, r7
 3730              		.cfi_def_cfa_register 13
 3731              		@ sp needed
 3732 0014 80BD     		pop	{r7, pc}
 3733              		.cfi_endproc
 3734              	.LFE4920:
 3736              		.section	.text._ZN14GrannyChordApp13HandleButton2Ev,"ax",%progbits
 3737              		.align	1
 3738              		.global	_ZN14GrannyChordApp13HandleButton2Ev
 3739              		.syntax unified
 3740              		.thumb
 3741              		.thumb_func
 3743              	_ZN14GrannyChordApp13HandleButton2Ev:
 3744              	.LFB4921:
 283:GrannyChordApp.cpp **** 
 284:GrannyChordApp.cpp **** /// @brief Toggles on/off synth parameter randomness controls
 285:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton2(){
 3745              		.loc 16 285 37
 3746              		.cfi_startproc
 3747              		@ args = 0, pretend = 0, frame = 8
 3748              		@ frame_needed = 1, uses_anonymous_args = 0
 3749 0000 80B5     		push	{r7, lr}
 3750              		.cfi_def_cfa_offset 8
 3751              		.cfi_offset 7, -8
 3752              		.cfi_offset 14, -4
 3753 0002 82B0     		sub	sp, sp, #8
 3754              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 92


 3755 0004 00AF     		add	r7, sp, #0
 3756              		.cfi_def_cfa_register 7
 3757 0006 7860     		str	r0, [r7, #4]
 286:GrannyChordApp.cpp ****     PrevSynthMode();
 3758              		.loc 16 286 18
 3759 0008 7868     		ldr	r0, [r7, #4]
 3760 000a FFF7FEFF 		bl	_ZN14GrannyChordApp13PrevSynthModeEv
 287:GrannyChordApp.cpp **** }
 3761              		.loc 16 287 1
 3762 000e 00BF     		nop
 3763 0010 0837     		adds	r7, r7, #8
 3764              		.cfi_def_cfa_offset 8
 3765 0012 BD46     		mov	sp, r7
 3766              		.cfi_def_cfa_register 13
 3767              		@ sp needed
 3768 0014 80BD     		pop	{r7, pc}
 3769              		.cfi_endproc
 3770              	.LFE4921:
 3772              		.section	.text._ZN14GrannyChordApp22HandleButton1LongPressEv,"ax",%progbits
 3773              		.align	1
 3774              		.global	_ZN14GrannyChordApp22HandleButton1LongPressEv
 3775              		.syntax unified
 3776              		.thumb
 3777              		.thumb_func
 3779              	_ZN14GrannyChordApp22HandleButton1LongPressEv:
 3780              	.LFB4922:
 288:GrannyChordApp.cpp **** 
 289:GrannyChordApp.cpp **** /// @brief Switches between controlling regular parameter modes and FX parameter modes
 290:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton1LongPress(){
 3781              		.loc 16 290 46
 3782              		.cfi_startproc
 3783              		@ args = 0, pretend = 0, frame = 16
 3784              		@ frame_needed = 1, uses_anonymous_args = 0
 3785 0000 80B5     		push	{r7, lr}
 3786              		.cfi_def_cfa_offset 8
 3787              		.cfi_offset 7, -8
 3788              		.cfi_offset 14, -4
 3789 0002 84B0     		sub	sp, sp, #16
 3790              		.cfi_def_cfa_offset 24
 3791 0004 00AF     		add	r7, sp, #0
 3792              		.cfi_def_cfa_register 7
 3793 0006 7860     		str	r0, [r7, #4]
 291:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 3794              		.loc 16 291 7
 3795 0008 7B68     		ldr	r3, [r7, #4]
 3796 000a D3F87C32 		ldr	r3, [r3, #636]
 3797 000e FB60     		str	r3, [r7, #12]
 292:GrannyChordApp.cpp ****   if (mode_idx<4) mode_idx = 4;
 3798              		.loc 16 292 3
 3799 0010 FB68     		ldr	r3, [r7, #12]
 3800 0012 032B     		cmp	r3, #3
 3801 0014 02DC     		bgt	.L188
 3802              		.loc 16 292 28 discriminator 1
 3803 0016 0423     		movs	r3, #4
 3804 0018 FB60     		str	r3, [r7, #12]
 3805 001a 01E0     		b	.L189
 3806              	.L188:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 93


 293:GrannyChordApp.cpp ****   else mode_idx = 0;
 3807              		.loc 16 293 17
 3808 001c 0023     		movs	r3, #0
 3809 001e FB60     		str	r3, [r7, #12]
 3810              	.L189:
 294:GrannyChordApp.cpp ****   curr_synth_mode_ = static_cast<SynthMode>(mode_idx);
 3811              		.loc 16 294 20
 3812 0020 7B68     		ldr	r3, [r7, #4]
 3813 0022 FA68     		ldr	r2, [r7, #12]
 3814 0024 C3F87C22 		str	r2, [r3, #636]
 295:GrannyChordApp.cpp ****   SetLedSynthMode();
 3815              		.loc 16 295 18
 3816 0028 7868     		ldr	r0, [r7, #4]
 3817 002a FFF7FEFF 		bl	_ZN14GrannyChordApp15SetLedSynthModeEv
 296:GrannyChordApp.cpp **** }
 3818              		.loc 16 296 1
 3819 002e 00BF     		nop
 3820 0030 1037     		adds	r7, r7, #16
 3821              		.cfi_def_cfa_offset 8
 3822 0032 BD46     		mov	sp, r7
 3823              		.cfi_def_cfa_register 13
 3824              		@ sp needed
 3825 0034 80BD     		pop	{r7, pc}
 3826              		.cfi_endproc
 3827              	.LFE4922:
 3829              		.section	.text._ZN14GrannyChordApp22HandleButton2LongPressEv,"ax",%progbits
 3830              		.align	1
 3831              		.global	_ZN14GrannyChordApp22HandleButton2LongPressEv
 3832              		.syntax unified
 3833              		.thumb
 3834              		.thumb_func
 3836              	_ZN14GrannyChordApp22HandleButton2LongPressEv:
 3837              	.LFB4923:
 297:GrannyChordApp.cpp **** 
 298:GrannyChordApp.cpp **** /// @brief Switches to Chord Mode
 299:GrannyChordApp.cpp **** void GrannyChordApp::HandleButton2LongPress(){
 3838              		.loc 16 299 46
 3839              		.cfi_startproc
 3840              		@ args = 0, pretend = 0, frame = 8
 3841              		@ frame_needed = 1, uses_anonymous_args = 0
 3842              		@ link register save eliminated.
 3843 0000 80B4     		push	{r7}
 3844              		.cfi_def_cfa_offset 4
 3845              		.cfi_offset 7, -4
 3846 0002 83B0     		sub	sp, sp, #12
 3847              		.cfi_def_cfa_offset 16
 3848 0004 00AF     		add	r7, sp, #0
 3849              		.cfi_def_cfa_register 7
 3850 0006 7860     		str	r0, [r7, #4]
 300:GrannyChordApp.cpp ****   // TODO: RECORD OUT? 
 301:GrannyChordApp.cpp **** }
 3851              		.loc 16 301 1
 3852 0008 00BF     		nop
 3853 000a 0C37     		adds	r7, r7, #12
 3854              		.cfi_def_cfa_offset 4
 3855 000c BD46     		mov	sp, r7
 3856              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 94


 3857              		@ sp needed
 3858 000e 5DF8047B 		ldr	r7, [sp], #4
 3859              		.cfi_restore 7
 3860              		.cfi_def_cfa_offset 0
 3861 0012 7047     		bx	lr
 3862              		.cfi_endproc
 3863              	.LFE4923:
 3865              		.section	.rodata
 3866 0112 0000     		.align	2
 3867              	.LC13:
 3868 0114 73656C65 		.ascii	"selected file %d %s\000"
 3868      63746564 
 3868      2066696C 
 3868      65202564 
 3868      20257300 
 3869              		.section	.text._ZN14GrannyChordApp19HandleFileSelectionEl,"ax",%progbits
 3870              		.align	1
 3871              		.global	_ZN14GrannyChordApp19HandleFileSelectionEl
 3872              		.syntax unified
 3873              		.thumb
 3874              		.thumb_func
 3876              	_ZN14GrannyChordApp19HandleFileSelectionEl:
 3877              	.LFB4924:
 302:GrannyChordApp.cpp **** 
 303:GrannyChordApp.cpp **** /// @brief Scrolls through list of files for user selection
 304:GrannyChordApp.cpp **** void GrannyChordApp::HandleFileSelection(int32_t encoder_inc){
 3878              		.loc 16 304 62
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 16
 3881              		@ frame_needed = 1, uses_anonymous_args = 0
 3882 0000 80B5     		push	{r7, lr}
 3883              		.cfi_def_cfa_offset 8
 3884              		.cfi_offset 7, -8
 3885              		.cfi_offset 14, -4
 3886 0002 84B0     		sub	sp, sp, #16
 3887              		.cfi_def_cfa_offset 24
 3888 0004 00AF     		add	r7, sp, #0
 3889              		.cfi_def_cfa_register 7
 3890 0006 7860     		str	r0, [r7, #4]
 3891 0008 3960     		str	r1, [r7]
 305:GrannyChordApp.cpp ****   int file_count = filemgr_.GetFileCount();
 3892              		.loc 16 305 20
 3893 000a 7B68     		ldr	r3, [r7, #4]
 3894 000c D3F86C32 		ldr	r3, [r3, #620]
 3895              		.loc 16 305 41
 3896 0010 1846     		mov	r0, r3
 3897 0012 FFF7FEFF 		bl	_ZNK16AudioFileManager12GetFileCountEv
 3898 0016 0346     		mov	r3, r0
 3899              		.loc 16 305 42
 3900 0018 FB60     		str	r3, [r7, #12]
 306:GrannyChordApp.cpp ****   file_idx_ = (file_idx_ + encoder_inc + file_count) % file_count;
 3901              		.loc 16 306 16
 3902 001a 7B68     		ldr	r3, [r7, #4]
 3903 001c D3F84C23 		ldr	r2, [r3, #844]
 3904              		.loc 16 306 26
 3905 0020 3B68     		ldr	r3, [r7]
 3906 0022 1A44     		add	r2, r2, r3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 95


 3907              		.loc 16 306 40
 3908 0024 FB68     		ldr	r3, [r7, #12]
 3909 0026 1344     		add	r3, r3, r2
 3910              		.loc 16 306 54
 3911 0028 FA68     		ldr	r2, [r7, #12]
 3912 002a 93FBF2F2 		sdiv	r2, r3, r2
 3913 002e F968     		ldr	r1, [r7, #12]
 3914 0030 01FB02F2 		mul	r2, r1, r2
 3915 0034 9A1A     		subs	r2, r3, r2
 3916              		.loc 16 306 13
 3917 0036 7B68     		ldr	r3, [r7, #4]
 3918 0038 C3F84C23 		str	r2, [r3, #844]
 307:GrannyChordApp.cpp ****   filemgr_.GetName(file_idx_,fname_);
 3919              		.loc 16 307 3
 3920 003c 7B68     		ldr	r3, [r7, #4]
 3921 003e D3F86C02 		ldr	r0, [r3, #620]
 3922              		.loc 16 307 20
 3923 0042 7B68     		ldr	r3, [r7, #4]
 3924 0044 D3F84C33 		ldr	r3, [r3, #844]
 3925              		.loc 16 307 19
 3926 0048 99B2     		uxth	r1, r3
 3927              		.loc 16 307 30
 3928 004a 7B68     		ldr	r3, [r7, #4]
 3929 004c 03F55673 		add	r3, r3, #856
 3930              		.loc 16 307 19
 3931 0050 1A46     		mov	r2, r3
 3932 0052 FFF7FEFF 		bl	_ZNK16AudioFileManager7GetNameEtPc
 308:GrannyChordApp.cpp ****   DebugPrint(pod_, "selected file %d %s",file_idx_,fname_);
 3933              		.loc 16 308 3
 3934 0056 7B68     		ldr	r3, [r7, #4]
 3935 0058 D3F84C13 		ldr	r1, [r3, #844]
 3936 005c 7B68     		ldr	r3, [r7, #4]
 3937 005e 03F55673 		add	r3, r3, #856
 3938 0062 1A46     		mov	r2, r3
 3939 0064 0348     		ldr	r0, .L192
 3940 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_
 309:GrannyChordApp.cpp **** }
 3941              		.loc 16 309 1
 3942 006a 00BF     		nop
 3943 006c 1037     		adds	r7, r7, #16
 3944              		.cfi_def_cfa_offset 8
 3945 006e BD46     		mov	sp, r7
 3946              		.cfi_def_cfa_register 13
 3947              		@ sp needed
 3948 0070 80BD     		pop	{r7, pc}
 3949              	.L193:
 3950 0072 00BF     		.align	2
 3951              	.L192:
 3952 0074 14010000 		.word	.LC13
 3953              		.cfi_endproc
 3954              	.LFE4924:
 3956              		.section	.rodata
 3957              		.align	2
 3958              	.LC14:
 3959 0128 676F696E 		.ascii	"going to synth mode\000"
 3959      6720746F 
 3959      2073796E 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 96


 3959      7468206D 
 3959      6F646500 
 3960              		.section	.text._ZN14GrannyChordApp13NextSynthModeEv,"ax",%progbits
 3961              		.align	1
 3962              		.global	_ZN14GrannyChordApp13NextSynthModeEv
 3963              		.syntax unified
 3964              		.thumb
 3965              		.thumb_func
 3967              	_ZN14GrannyChordApp13NextSynthModeEv:
 3968              	.LFB4925:
 310:GrannyChordApp.cpp **** 
 311:GrannyChordApp.cpp **** /// @brief iterates to next synth mode within regular or FX group
 312:GrannyChordApp.cpp **** void GrannyChordApp::NextSynthMode(){
 3969              		.loc 16 312 37
 3970              		.cfi_startproc
 3971              		@ args = 0, pretend = 0, frame = 16
 3972              		@ frame_needed = 1, uses_anonymous_args = 0
 3973 0000 80B5     		push	{r7, lr}
 3974              		.cfi_def_cfa_offset 8
 3975              		.cfi_offset 7, -8
 3976              		.cfi_offset 14, -4
 3977 0002 84B0     		sub	sp, sp, #16
 3978              		.cfi_def_cfa_offset 24
 3979 0004 00AF     		add	r7, sp, #0
 3980              		.cfi_def_cfa_register 7
 3981 0006 7860     		str	r0, [r7, #4]
 313:GrannyChordApp.cpp ****   DebugPrint(pod_, "going to synth mode");
 3982              		.loc 16 313 3
 3983 0008 1A48     		ldr	r0, .L197
 3984 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 314:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 3985              		.loc 16 314 7
 3986 000e 7B68     		ldr	r3, [r7, #4]
 3987 0010 D3F87C32 		ldr	r3, [r3, #636]
 3988 0014 FB60     		str	r3, [r7, #12]
 315:GrannyChordApp.cpp ****   /* cycle to next regular mode, indices 0-3 */
 316:GrannyChordApp.cpp ****   if (mode_idx < 4){
 3989              		.loc 16 316 3
 3990 0016 FB68     		ldr	r3, [r7, #12]
 3991 0018 032B     		cmp	r3, #3
 3992 001a 08DC     		bgt	.L195
 317:GrannyChordApp.cpp ****     mode_idx++;
 3993              		.loc 16 317 13
 3994 001c FB68     		ldr	r3, [r7, #12]
 3995 001e 0133     		adds	r3, r3, #1
 3996 0020 FB60     		str	r3, [r7, #12]
 318:GrannyChordApp.cpp ****     if (mode_idx>=4) mode_idx =0;
 3997              		.loc 16 318 5
 3998 0022 FB68     		ldr	r3, [r7, #12]
 3999 0024 032B     		cmp	r3, #3
 4000 0026 0ADD     		ble	.L196
 4001              		.loc 16 318 31 discriminator 1
 4002 0028 0023     		movs	r3, #0
 4003 002a FB60     		str	r3, [r7, #12]
 4004 002c 07E0     		b	.L196
 4005              	.L195:
 319:GrannyChordApp.cpp ****   }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 97


 320:GrannyChordApp.cpp ****   /* cycle to next FX mode, indices 4-7 */
 321:GrannyChordApp.cpp ****   else {
 322:GrannyChordApp.cpp ****     mode_idx++;
 4006              		.loc 16 322 13
 4007 002e FB68     		ldr	r3, [r7, #12]
 4008 0030 0133     		adds	r3, r3, #1
 4009 0032 FB60     		str	r3, [r7, #12]
 323:GrannyChordApp.cpp ****     if (mode_idx>7) mode_idx =4;
 4010              		.loc 16 323 5
 4011 0034 FB68     		ldr	r3, [r7, #12]
 4012 0036 072B     		cmp	r3, #7
 4013 0038 01DD     		ble	.L196
 4014              		.loc 16 323 30 discriminator 1
 4015 003a 0423     		movs	r3, #4
 4016 003c FB60     		str	r3, [r7, #12]
 4017              	.L196:
 324:GrannyChordApp.cpp ****   }
 325:GrannyChordApp.cpp ****   curr_synth_mode_ = static_cast<SynthMode>(mode_idx);
 4018              		.loc 16 325 20
 4019 003e 7B68     		ldr	r3, [r7, #4]
 4020 0040 FA68     		ldr	r2, [r7, #12]
 4021 0042 C3F87C22 		str	r2, [r3, #636]
 326:GrannyChordApp.cpp ****   DebugPrintMode(curr_synth_mode_);
 4022              		.loc 16 326 17
 4023 0046 7B68     		ldr	r3, [r7, #4]
 4024 0048 D3F87C32 		ldr	r3, [r3, #636]
 4025 004c 1946     		mov	r1, r3
 4026 004e 7868     		ldr	r0, [r7, #4]
 4027 0050 FFF7FEFF 		bl	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode
 327:GrannyChordApp.cpp ****   SetLedSynthMode();
 4028              		.loc 16 327 18
 4029 0054 7868     		ldr	r0, [r7, #4]
 4030 0056 FFF7FEFF 		bl	_ZN14GrannyChordApp15SetLedSynthModeEv
 328:GrannyChordApp.cpp ****   knob1_latched = true;
 4031              		.loc 16 328 17
 4032 005a 7B68     		ldr	r3, [r7, #4]
 4033 005c 0122     		movs	r2, #1
 4034 005e 83F88422 		strb	r2, [r3, #644]
 329:GrannyChordApp.cpp ****   knob2_latched = true;
 4035              		.loc 16 329 17
 4036 0062 7B68     		ldr	r3, [r7, #4]
 4037 0064 0122     		movs	r2, #1
 4038 0066 83F88522 		strb	r2, [r3, #645]
 330:GrannyChordApp.cpp **** }
 4039              		.loc 16 330 1
 4040 006a 00BF     		nop
 4041 006c 1037     		adds	r7, r7, #16
 4042              		.cfi_def_cfa_offset 8
 4043 006e BD46     		mov	sp, r7
 4044              		.cfi_def_cfa_register 13
 4045              		@ sp needed
 4046 0070 80BD     		pop	{r7, pc}
 4047              	.L198:
 4048 0072 00BF     		.align	2
 4049              	.L197:
 4050 0074 28010000 		.word	.LC14
 4051              		.cfi_endproc
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 98


 4052              	.LFE4925:
 4054              		.section	.rodata
 4055              		.align	2
 4056              	.LC15:
 4057 013c 676F696E 		.ascii	"going to prev synth mode\000"
 4057      6720746F 
 4057      20707265 
 4057      76207379 
 4057      6E746820 
 4058              		.section	.text._ZN14GrannyChordApp13PrevSynthModeEv,"ax",%progbits
 4059              		.align	1
 4060              		.global	_ZN14GrannyChordApp13PrevSynthModeEv
 4061              		.syntax unified
 4062              		.thumb
 4063              		.thumb_func
 4065              	_ZN14GrannyChordApp13PrevSynthModeEv:
 4066              	.LFB4926:
 331:GrannyChordApp.cpp **** 
 332:GrannyChordApp.cpp **** /// @brief iterates to previous synth mode within regular or FX group
 333:GrannyChordApp.cpp **** void GrannyChordApp::PrevSynthMode(){
 4067              		.loc 16 333 37
 4068              		.cfi_startproc
 4069              		@ args = 0, pretend = 0, frame = 16
 4070              		@ frame_needed = 1, uses_anonymous_args = 0
 4071 0000 80B5     		push	{r7, lr}
 4072              		.cfi_def_cfa_offset 8
 4073              		.cfi_offset 7, -8
 4074              		.cfi_offset 14, -4
 4075 0002 84B0     		sub	sp, sp, #16
 4076              		.cfi_def_cfa_offset 24
 4077 0004 00AF     		add	r7, sp, #0
 4078              		.cfi_def_cfa_register 7
 4079 0006 7860     		str	r0, [r7, #4]
 334:GrannyChordApp.cpp ****   DebugPrint(pod_, "going to prev synth mode");
 4080              		.loc 16 334 3
 4081 0008 1A48     		ldr	r0, .L202
 4082 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 335:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4083              		.loc 16 335 7
 4084 000e 7B68     		ldr	r3, [r7, #4]
 4085 0010 D3F87C32 		ldr	r3, [r3, #636]
 4086 0014 FB60     		str	r3, [r7, #12]
 336:GrannyChordApp.cpp ****   /* cycle to prev regular mode indices 0-3 */
 337:GrannyChordApp.cpp ****   if (mode_idx < 4){
 4087              		.loc 16 337 3
 4088 0016 FB68     		ldr	r3, [r7, #12]
 4089 0018 032B     		cmp	r3, #3
 4090 001a 08DC     		bgt	.L200
 338:GrannyChordApp.cpp ****     mode_idx--;
 4091              		.loc 16 338 13
 4092 001c FB68     		ldr	r3, [r7, #12]
 4093 001e 013B     		subs	r3, r3, #1
 4094 0020 FB60     		str	r3, [r7, #12]
 339:GrannyChordApp.cpp ****     if (mode_idx<0) mode_idx = 3;
 4095              		.loc 16 339 5
 4096 0022 FB68     		ldr	r3, [r7, #12]
 4097 0024 002B     		cmp	r3, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 99


 4098 0026 0ADA     		bge	.L201
 4099              		.loc 16 339 30 discriminator 1
 4100 0028 0323     		movs	r3, #3
 4101 002a FB60     		str	r3, [r7, #12]
 4102 002c 07E0     		b	.L201
 4103              	.L200:
 340:GrannyChordApp.cpp ****   }
 341:GrannyChordApp.cpp ****   /* cycle to prev FX mode, indices 4-7 */
 342:GrannyChordApp.cpp ****   else {
 343:GrannyChordApp.cpp ****     mode_idx--;
 4104              		.loc 16 343 13
 4105 002e FB68     		ldr	r3, [r7, #12]
 4106 0030 013B     		subs	r3, r3, #1
 4107 0032 FB60     		str	r3, [r7, #12]
 344:GrannyChordApp.cpp ****     if (mode_idx<4) mode_idx = 7;
 4108              		.loc 16 344 5
 4109 0034 FB68     		ldr	r3, [r7, #12]
 4110 0036 032B     		cmp	r3, #3
 4111 0038 01DC     		bgt	.L201
 4112              		.loc 16 344 30 discriminator 1
 4113 003a 0723     		movs	r3, #7
 4114 003c FB60     		str	r3, [r7, #12]
 4115              	.L201:
 345:GrannyChordApp.cpp ****   }
 346:GrannyChordApp.cpp ****   curr_synth_mode_ = static_cast<SynthMode>(mode_idx);
 4116              		.loc 16 346 20
 4117 003e 7B68     		ldr	r3, [r7, #4]
 4118 0040 FA68     		ldr	r2, [r7, #12]
 4119 0042 C3F87C22 		str	r2, [r3, #636]
 347:GrannyChordApp.cpp ****   DebugPrintMode(curr_synth_mode_);
 4120              		.loc 16 347 17
 4121 0046 7B68     		ldr	r3, [r7, #4]
 4122 0048 D3F87C32 		ldr	r3, [r3, #636]
 4123 004c 1946     		mov	r1, r3
 4124 004e 7868     		ldr	r0, [r7, #4]
 4125 0050 FFF7FEFF 		bl	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode
 348:GrannyChordApp.cpp ****   SetLedSynthMode();
 4126              		.loc 16 348 18
 4127 0054 7868     		ldr	r0, [r7, #4]
 4128 0056 FFF7FEFF 		bl	_ZN14GrannyChordApp15SetLedSynthModeEv
 349:GrannyChordApp.cpp ****   knob1_latched = true;
 4129              		.loc 16 349 17
 4130 005a 7B68     		ldr	r3, [r7, #4]
 4131 005c 0122     		movs	r2, #1
 4132 005e 83F88422 		strb	r2, [r3, #644]
 350:GrannyChordApp.cpp ****   knob2_latched = true;
 4133              		.loc 16 350 17
 4134 0062 7B68     		ldr	r3, [r7, #4]
 4135 0064 0122     		movs	r2, #1
 4136 0066 83F88522 		strb	r2, [r3, #645]
 351:GrannyChordApp.cpp **** }
 4137              		.loc 16 351 1
 4138 006a 00BF     		nop
 4139 006c 1037     		adds	r7, r7, #16
 4140              		.cfi_def_cfa_offset 8
 4141 006e BD46     		mov	sp, r7
 4142              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 100


 4143              		@ sp needed
 4144 0070 80BD     		pop	{r7, pc}
 4145              	.L203:
 4146 0072 00BF     		.align	2
 4147              	.L202:
 4148 0074 3C010000 		.word	.LC15
 4149              		.cfi_endproc
 4150              	.LFE4926:
 4152              		.section	.rodata
 4153 0155 000000   		.align	2
 4154              	.LC16:
 4155 0158 6E657720 		.ascii	"new k1v: %f\000"
 4155      6B31763A 
 4155      20256600 
 4156              		.align	2
 4157              	.LC17:
 4158 0164 6E657720 		.ascii	"new k2v: %f\000"
 4158      6B32763A 
 4158      20256600 
 4159              		.section	.text._ZN14GrannyChordApp17UpdateSynthParamsEv,"ax",%progbits
 4160              		.align	1
 4161              		.global	_ZN14GrannyChordApp17UpdateSynthParamsEv
 4162              		.syntax unified
 4163              		.thumb
 4164              		.thumb_func
 4166              	_ZN14GrannyChordApp17UpdateSynthParamsEv:
 4167              	.LFB4927:
 352:GrannyChordApp.cpp **** 
 353:GrannyChordApp.cpp **** /// @brief Updates synth parameters based on current synth mode and adjusts
 354:GrannyChordApp.cpp **** ///        knob input values to account for knob jitter and deadzones around 0/1
 355:GrannyChordApp.cpp **** void GrannyChordApp::UpdateSynthParams(){
 4168              		.loc 16 355 41
 4169              		.cfi_startproc
 4170              		@ args = 0, pretend = 0, frame = 24
 4171              		@ frame_needed = 1, uses_anonymous_args = 0
 4172 0000 80B5     		push	{r7, lr}
 4173              		.cfi_def_cfa_offset 8
 4174              		.cfi_offset 7, -8
 4175              		.cfi_offset 14, -4
 4176 0002 86B0     		sub	sp, sp, #24
 4177              		.cfi_def_cfa_offset 32
 4178 0004 00AF     		add	r7, sp, #0
 4179              		.cfi_def_cfa_register 7
 4180 0006 7860     		str	r0, [r7, #4]
 356:GrannyChordApp.cpp ****   if (curr_state_!=AppState::Synthesis) return;
 4181              		.loc 16 356 7
 4182 0008 7B68     		ldr	r3, [r7, #4]
 4183 000a D3F87432 		ldr	r3, [r3, #628]
 4184              		.loc 16 356 3
 4185 000e 022B     		cmp	r3, #2
 4186 0010 40F09380 		bne	.L208
 357:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4187              		.loc 16 357 7
 4188 0014 7B68     		ldr	r3, [r7, #4]
 4189 0016 D3F87C32 		ldr	r3, [r3, #636]
 4190 001a 7B61     		str	r3, [r7, #20]
 358:GrannyChordApp.cpp **** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 101


 359:GrannyChordApp.cpp ****   /* set to 0 or 1 if very close to these bounds */
 360:GrannyChordApp.cpp ****   float knob1_val = MapKnobDeadzone(pod_.knob1.Process());
 4191              		.loc 16 360 37
 4192 001c 7B68     		ldr	r3, [r7, #4]
 4193 001e DB69     		ldr	r3, [r3, #28]
 4194              		.loc 16 360 36
 4195 0020 6833     		adds	r3, r3, #104
 4196 0022 1846     		mov	r0, r3
 4197 0024 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4198 0028 F0EE407A 		vmov.f32	s15, s0
 4199 002c B0EE670A 		vmov.f32	s0, s15
 4200 0030 7868     		ldr	r0, [r7, #4]
 4201 0032 FFF7FEFF 		bl	_ZN14GrannyChordApp15MapKnobDeadzoneEf
 4202 0036 87ED040A 		vstr.32	s0, [r7, #16]
 361:GrannyChordApp.cpp ****   float knob2_val = MapKnobDeadzone(pod_.knob2.Process());
 4203              		.loc 16 361 37
 4204 003a 7B68     		ldr	r3, [r7, #4]
 4205 003c DB69     		ldr	r3, [r3, #28]
 4206              		.loc 16 361 36
 4207 003e 8833     		adds	r3, r3, #136
 4208 0040 1846     		mov	r0, r3
 4209 0042 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 4210 0046 F0EE407A 		vmov.f32	s15, s0
 4211 004a B0EE670A 		vmov.f32	s0, s15
 4212 004e 7868     		ldr	r0, [r7, #4]
 4213 0050 FFF7FEFF 		bl	_ZN14GrannyChordApp15MapKnobDeadzoneEf
 4214 0054 87ED030A 		vstr.32	s0, [r7, #12]
 362:GrannyChordApp.cpp ****   
 363:GrannyChordApp.cpp ****   // counter++;
 364:GrannyChordApp.cpp **** 
 365:GrannyChordApp.cpp ****   /* only update parameter if knob has passed through previous value in this mode */
 366:GrannyChordApp.cpp ****   if (UpdateKnobPassThru(&knob1_latched, knob1_val,prev_param_k1[mode_idx])){
 4215              		.loc 16 366 25
 4216 0058 7B68     		ldr	r3, [r7, #4]
 4217 005a 03F52171 		add	r1, r3, #644
 4218 005e 7A68     		ldr	r2, [r7, #4]
 4219 0060 7B69     		ldr	r3, [r7, #20]
 4220 0062 F633     		adds	r3, r3, #246
 4221 0064 9B00     		lsls	r3, r3, #2
 4222 0066 1344     		add	r3, r3, r2
 4223 0068 D3ED007A 		vldr.32	s15, [r3]
 4224 006c F0EE670A 		vmov.f32	s1, s15
 4225 0070 97ED040A 		vldr.32	s0, [r7, #16]
 4226 0074 7868     		ldr	r0, [r7, #4]
 4227 0076 FFF7FEFF 		bl	_ZN14GrannyChordApp18UpdateKnobPassThruEPbff
 4228 007a 0346     		mov	r3, r0
 4229              		.loc 16 366 3
 4230 007c 002B     		cmp	r3, #0
 4231 007e 23D0     		beq	.L207
 367:GrannyChordApp.cpp ****     UpdateKnob1Params(knob1_val,curr_synth_mode_);
 4232              		.loc 16 367 22
 4233 0080 7B68     		ldr	r3, [r7, #4]
 4234 0082 D3F87C32 		ldr	r3, [r3, #636]
 4235 0086 1946     		mov	r1, r3
 4236 0088 97ED040A 		vldr.32	s0, [r7, #16]
 4237 008c 7868     		ldr	r0, [r7, #4]
 4238 008e FFF7FEFF 		bl	_ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 102


 368:GrannyChordApp.cpp ****     prev_param_k1[mode_idx] = knob1_val;
 4239              		.loc 16 368 29
 4240 0092 7A68     		ldr	r2, [r7, #4]
 4241 0094 7B69     		ldr	r3, [r7, #20]
 4242 0096 F633     		adds	r3, r3, #246
 4243 0098 9B00     		lsls	r3, r3, #2
 4244 009a 1344     		add	r3, r3, r2
 4245 009c 3A69     		ldr	r2, [r7, #16]	@ float
 4246 009e 1A60     		str	r2, [r3]	@ float
 369:GrannyChordApp.cpp ****     if (counter%300000==0){
 4247              		.loc 16 369 9
 4248 00a0 7B68     		ldr	r3, [r7, #4]
 4249 00a2 03F50043 		add	r3, r3, #32768
 4250 00a6 D3F81427 		ldr	r2, [r3, #1812]
 4251              		.loc 16 369 16
 4252 00aa 264B     		ldr	r3, .L209
 4253 00ac A3FB0213 		umull	r1, r3, r3, r2
 4254 00b0 5B0C     		lsrs	r3, r3, #17
 4255 00b2 2549     		ldr	r1, .L209+4
 4256 00b4 01FB03F3 		mul	r3, r1, r3
 4257 00b8 D31A     		subs	r3, r2, r3
 4258              		.loc 16 369 5
 4259 00ba 002B     		cmp	r3, #0
 4260 00bc 04D1     		bne	.L207
 370:GrannyChordApp.cpp ****       DebugPrint(pod_, "new k1v: %f",knob1_val);
 4261              		.loc 16 370 7
 4262 00be 97ED040A 		vldr.32	s0, [r7, #16]
 4263 00c2 2248     		ldr	r0, .L209+8
 4264 00c4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_
 4265              	.L207:
 371:GrannyChordApp.cpp ****     }
 372:GrannyChordApp.cpp ****   }
 373:GrannyChordApp.cpp **** 
 374:GrannyChordApp.cpp ****   if (UpdateKnobPassThru(&knob2_latched, knob2_val,prev_param_k2[mode_idx])){
 4266              		.loc 16 374 25
 4267 00c8 7B68     		ldr	r3, [r7, #4]
 4268 00ca 03F28521 		addw	r1, r3, #645
 4269 00ce 7A68     		ldr	r2, [r7, #4]
 4270 00d0 7B69     		ldr	r3, [r7, #20]
 4271 00d2 FE33     		adds	r3, r3, #254
 4272 00d4 9B00     		lsls	r3, r3, #2
 4273 00d6 1344     		add	r3, r3, r2
 4274 00d8 D3ED007A 		vldr.32	s15, [r3]
 4275 00dc F0EE670A 		vmov.f32	s1, s15
 4276 00e0 97ED030A 		vldr.32	s0, [r7, #12]
 4277 00e4 7868     		ldr	r0, [r7, #4]
 4278 00e6 FFF7FEFF 		bl	_ZN14GrannyChordApp18UpdateKnobPassThruEPbff
 4279 00ea 0346     		mov	r3, r0
 4280              		.loc 16 374 3
 4281 00ec 002B     		cmp	r3, #0
 4282 00ee 25D0     		beq	.L204
 375:GrannyChordApp.cpp ****     UpdateKnob2Params(knob2_val, curr_synth_mode_);
 4283              		.loc 16 375 22
 4284 00f0 7B68     		ldr	r3, [r7, #4]
 4285 00f2 D3F87C32 		ldr	r3, [r3, #636]
 4286 00f6 1946     		mov	r1, r3
 4287 00f8 97ED030A 		vldr.32	s0, [r7, #12]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 103


 4288 00fc 7868     		ldr	r0, [r7, #4]
 4289 00fe FFF7FEFF 		bl	_ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode
 376:GrannyChordApp.cpp ****     prev_param_k2[mode_idx] = knob2_val;
 4290              		.loc 16 376 29
 4291 0102 7A68     		ldr	r2, [r7, #4]
 4292 0104 7B69     		ldr	r3, [r7, #20]
 4293 0106 FE33     		adds	r3, r3, #254
 4294 0108 9B00     		lsls	r3, r3, #2
 4295 010a 1344     		add	r3, r3, r2
 4296 010c FA68     		ldr	r2, [r7, #12]	@ float
 4297 010e 1A60     		str	r2, [r3]	@ float
 377:GrannyChordApp.cpp ****     if (counter%300000==0){
 4298              		.loc 16 377 9
 4299 0110 7B68     		ldr	r3, [r7, #4]
 4300 0112 03F50043 		add	r3, r3, #32768
 4301 0116 D3F81427 		ldr	r2, [r3, #1812]
 4302              		.loc 16 377 16
 4303 011a 0A4B     		ldr	r3, .L209
 4304 011c A3FB0213 		umull	r1, r3, r3, r2
 4305 0120 5B0C     		lsrs	r3, r3, #17
 4306 0122 0949     		ldr	r1, .L209+4
 4307 0124 01FB03F3 		mul	r3, r1, r3
 4308 0128 D31A     		subs	r3, r2, r3
 4309              		.loc 16 377 5
 4310 012a 002B     		cmp	r3, #0
 4311 012c 06D1     		bne	.L204
 378:GrannyChordApp.cpp ****       DebugPrint(pod_, "new k2v: %f",knob2_val);
 4312              		.loc 16 378 7
 4313 012e 97ED030A 		vldr.32	s0, [r7, #12]
 4314 0132 0748     		ldr	r0, .L209+12
 4315 0134 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_
 4316 0138 00E0     		b	.L204
 4317              	.L208:
 356:GrannyChordApp.cpp ****   int mode_idx = static_cast<int>(curr_synth_mode_);
 4318              		.loc 16 356 41
 4319 013a 00BF     		nop
 4320              	.L204:
 379:GrannyChordApp.cpp ****     }
 380:GrannyChordApp.cpp ****   }
 381:GrannyChordApp.cpp **** }
 4321              		.loc 16 381 1
 4322 013c 1837     		adds	r7, r7, #24
 4323              		.cfi_def_cfa_offset 8
 4324 013e BD46     		mov	sp, r7
 4325              		.cfi_def_cfa_register 13
 4326              		@ sp needed
 4327 0140 80BD     		pop	{r7, pc}
 4328              	.L210:
 4329 0142 00BF     		.align	2
 4330              	.L209:
 4331 0144 851DD96F 		.word	1876499845
 4332 0148 E0930400 		.word	300000
 4333 014c 58010000 		.word	.LC16
 4334 0150 64010000 		.word	.LC17
 4335              		.cfi_endproc
 4336              	.LFE4927:
 4338              		.section	.text._ZN14GrannyChordApp11InitFileMgrEv,"ax",%progbits
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 104


 4339              		.align	1
 4340              		.global	_ZN14GrannyChordApp11InitFileMgrEv
 4341              		.syntax unified
 4342              		.thumb
 4343              		.thumb_func
 4345              	_ZN14GrannyChordApp11InitFileMgrEv:
 4346              	.LFB4928:
 382:GrannyChordApp.cpp **** 
 383:GrannyChordApp.cpp **** /// @brief Initialises file manager, sets audio data buffers and scans SD card for WAV files
 384:GrannyChordApp.cpp **** /// @return True on successful initialisation, false if init fails or no WAV files found
 385:GrannyChordApp.cpp **** bool GrannyChordApp::InitFileMgr(){
 4347              		.loc 16 385 35
 4348              		.cfi_startproc
 4349              		@ args = 0, pretend = 0, frame = 8
 4350              		@ frame_needed = 1, uses_anonymous_args = 0
 4351 0000 80B5     		push	{r7, lr}
 4352              		.cfi_def_cfa_offset 8
 4353              		.cfi_offset 7, -8
 4354              		.cfi_offset 14, -4
 4355 0002 82B0     		sub	sp, sp, #8
 4356              		.cfi_def_cfa_offset 16
 4357 0004 00AF     		add	r7, sp, #0
 4358              		.cfi_def_cfa_register 7
 4359 0006 7860     		str	r0, [r7, #4]
 386:GrannyChordApp.cpp ****   filemgr_.SetBuffers(left_buf_,right_buf_);
 4360              		.loc 16 386 3
 4361 0008 7B68     		ldr	r3, [r7, #4]
 4362 000a D3F86C02 		ldr	r0, [r3, #620]
 4363              		.loc 16 386 22
 4364 000e 7B68     		ldr	r3, [r7, #4]
 4365 0010 D3F84413 		ldr	r1, [r3, #836]
 4366 0014 7B68     		ldr	r3, [r7, #4]
 4367 0016 D3F84833 		ldr	r3, [r3, #840]
 4368 001a 1A46     		mov	r2, r3
 4369 001c FFF7FEFF 		bl	_ZN16AudioFileManager10SetBuffersEPsS0_
 387:GrannyChordApp.cpp ****   if (!filemgr_.Init())return false;
 4370              		.loc 16 387 8
 4371 0020 7B68     		ldr	r3, [r7, #4]
 4372 0022 D3F86C32 		ldr	r3, [r3, #620]
 4373              		.loc 16 387 21
 4374 0026 1846     		mov	r0, r3
 4375 0028 FFF7FEFF 		bl	_ZN16AudioFileManager4InitEv
 4376 002c 0346     		mov	r3, r0
 4377              		.loc 16 387 7
 4378 002e 83F00103 		eor	r3, r3, #1
 4379 0032 DBB2     		uxtb	r3, r3
 4380              		.loc 16 387 3
 4381 0034 002B     		cmp	r3, #0
 4382 0036 01D0     		beq	.L212
 4383              		.loc 16 387 31 discriminator 1
 4384 0038 0023     		movs	r3, #0
 4385 003a 07E0     		b	.L213
 4386              	.L212:
 388:GrannyChordApp.cpp **** 
 389:GrannyChordApp.cpp ****   return filemgr_.ScanWavFiles();
 4387              		.loc 16 389 10
 4388 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 105


 4389 003e D3F86C32 		ldr	r3, [r3, #620]
 4390              		.loc 16 389 31
 4391 0042 1846     		mov	r0, r3
 4392 0044 FFF7FEFF 		bl	_ZN16AudioFileManager12ScanWavFilesEv
 4393 0048 0346     		mov	r3, r0
 4394              		.loc 16 389 32
 4395 004a 00BF     		nop
 4396              	.L213:
 390:GrannyChordApp.cpp **** }
 4397              		.loc 16 390 1
 4398 004c 1846     		mov	r0, r3
 4399 004e 0837     		adds	r7, r7, #8
 4400              		.cfi_def_cfa_offset 8
 4401 0050 BD46     		mov	sp, r7
 4402              		.cfi_def_cfa_register 13
 4403              		@ sp needed
 4404 0052 80BD     		pop	{r7, pc}
 4405              		.cfi_endproc
 4406              	.LFE4928:
 4408              		.section	.rodata
 4409              		.align	2
 4410              	.LC18:
 4411 0170 73796E74 		.ascii	"synth init ok - samples %u\000"
 4411      6820696E 
 4411      6974206F 
 4411      6B202D20 
 4411      73616D70 
 4412              		.section	.text._ZN14GrannyChordApp9InitSynthEv,"ax",%progbits
 4413              		.align	1
 4414              		.global	_ZN14GrannyChordApp9InitSynthEv
 4415              		.syntax unified
 4416              		.thumb
 4417              		.thumb_func
 4419              	_ZN14GrannyChordApp9InitSynthEv:
 4420              	.LFB4929:
 391:GrannyChordApp.cpp **** 
 392:GrannyChordApp.cpp **** /// @brief Calls synth initialisation function, passes audio data buffers and audio length
 393:GrannyChordApp.cpp **** void GrannyChordApp::InitSynth(){
 4421              		.loc 16 393 33
 4422              		.cfi_startproc
 4423              		@ args = 0, pretend = 0, frame = 8
 4424              		@ frame_needed = 1, uses_anonymous_args = 0
 4425 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4426              		.cfi_def_cfa_offset 20
 4427              		.cfi_offset 4, -20
 4428              		.cfi_offset 5, -16
 4429              		.cfi_offset 6, -12
 4430              		.cfi_offset 7, -8
 4431              		.cfi_offset 14, -4
 4432 0002 83B0     		sub	sp, sp, #12
 4433              		.cfi_def_cfa_offset 32
 4434 0004 00AF     		add	r7, sp, #0
 4435              		.cfi_def_cfa_register 7
 4436 0006 7860     		str	r0, [r7, #4]
 394:GrannyChordApp.cpp ****   synth_.Init(left_buf_, right_buf_, filemgr_.GetSamplesPerChannel());
 4437              		.loc 16 394 14
 4438 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 106


 4439 000a 03F12004 		add	r4, r3, #32
 4440 000e 7B68     		ldr	r3, [r7, #4]
 4441 0010 D3F84453 		ldr	r5, [r3, #836]
 4442 0014 7B68     		ldr	r3, [r7, #4]
 4443 0016 D3F84863 		ldr	r6, [r3, #840]
 4444              		.loc 16 394 38
 4445 001a 7B68     		ldr	r3, [r7, #4]
 4446 001c D3F86C32 		ldr	r3, [r3, #620]
 4447              		.loc 16 394 14
 4448 0020 1846     		mov	r0, r3
 4449 0022 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 4450 0026 0346     		mov	r3, r0
 4451 0028 3246     		mov	r2, r6
 4452 002a 2946     		mov	r1, r5
 4453 002c 2046     		mov	r0, r4
 4454 002e FFF7FEFF 		bl	_ZN13GranularSynth4InitEPsS0_j
 395:GrannyChordApp.cpp ****   InitPrevParamVals();
 4455              		.loc 16 395 20
 4456 0032 7868     		ldr	r0, [r7, #4]
 4457 0034 FFF7FEFF 		bl	_ZN14GrannyChordApp17InitPrevParamValsEv
 396:GrannyChordApp.cpp ****   DebugPrint(pod_,"synth init ok - samples %u",filemgr_.GetSamplesPerChannel());
 4458              		.loc 16 396 3
 4459 0038 7B68     		ldr	r3, [r7, #4]
 4460 003a D3F86C32 		ldr	r3, [r3, #620]
 4461 003e 1846     		mov	r0, r3
 4462 0040 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 4463 0044 0346     		mov	r3, r0
 4464 0046 1946     		mov	r1, r3
 4465 0048 0348     		ldr	r0, .L215
 4466 004a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_
 397:GrannyChordApp.cpp **** }
 4467              		.loc 16 397 1
 4468 004e 00BF     		nop
 4469 0050 0C37     		adds	r7, r7, #12
 4470              		.cfi_def_cfa_offset 20
 4471 0052 BD46     		mov	sp, r7
 4472              		.cfi_def_cfa_register 13
 4473              		@ sp needed
 4474 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 4475              	.L216:
 4476 0056 00BF     		.align	2
 4477              	.L215:
 4478 0058 70010000 		.word	.LC18
 4479              		.cfi_endproc
 4480              	.LFE4929:
 4482              		.section	.rodata
 4483 018b 00       		.align	2
 4484              	.LC19:
 4485 018c 6661696C 		.ascii	"failed to load file\000"
 4485      65642074 
 4485      6F206C6F 
 4485      61642066 
 4485      696C6500 
 4486              		.align	2
 4487              	.LC20:
 4488 01a0 6C6F6164 		.ascii	"loaded file\000"
 4488      65642066 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 107


 4488      696C6500 
 4489              		.section	.text._ZN14GrannyChordApp12InitPlaybackEv,"ax",%progbits
 4490              		.align	1
 4491              		.global	_ZN14GrannyChordApp12InitPlaybackEv
 4492              		.syntax unified
 4493              		.thumb
 4494              		.thumb_func
 4496              	_ZN14GrannyChordApp12InitPlaybackEv:
 4497              	.LFB4930:
 398:GrannyChordApp.cpp **** 
 399:GrannyChordApp.cpp **** /// @brief Initialises WAV playback state, resets playhead, sets current file audio length
 400:GrannyChordApp.cpp **** void GrannyChordApp::InitPlayback(){
 4498              		.loc 16 400 36
 4499              		.cfi_startproc
 4500              		@ args = 0, pretend = 0, frame = 8
 4501              		@ frame_needed = 1, uses_anonymous_args = 0
 4502 0000 80B5     		push	{r7, lr}
 4503              		.cfi_def_cfa_offset 8
 4504              		.cfi_offset 7, -8
 4505              		.cfi_offset 14, -4
 4506 0002 82B0     		sub	sp, sp, #8
 4507              		.cfi_def_cfa_offset 16
 4508 0004 00AF     		add	r7, sp, #0
 4509              		.cfi_def_cfa_register 7
 4510 0006 7860     		str	r0, [r7, #4]
 401:GrannyChordApp.cpp ****   wav_playhead_ = 0;
 4511              		.loc 16 401 17
 4512 0008 7B68     		ldr	r3, [r7, #4]
 4513 000a 0022     		movs	r2, #0
 4514 000c C3F85023 		str	r2, [r3, #848]
 402:GrannyChordApp.cpp ****   record_in_pos_  = 0;
 4515              		.loc 16 402 19
 4516 0010 7B68     		ldr	r3, [r7, #4]
 4517 0012 03F50043 		add	r3, r3, #32768
 4518 0016 1A46     		mov	r2, r3
 4519 0018 0023     		movs	r3, #0
 4520 001a C2F89036 		str	r3, [r2, #1680]
 403:GrannyChordApp.cpp ****   if (!recorded_in_){
 4521              		.loc 16 403 8
 4522 001e 7B68     		ldr	r3, [r7, #4]
 4523 0020 03F50043 		add	r3, r3, #32768
 4524 0024 93F88C36 		ldrb	r3, [r3, #1676]	@ zero_extendqisi2
 4525              		.loc 16 403 7
 4526 0028 83F00103 		eor	r3, r3, #1
 4527 002c DBB2     		uxtb	r3, r3
 4528              		.loc 16 403 3
 4529 002e 002B     		cmp	r3, #0
 4530 0030 18D0     		beq	.L218
 404:GrannyChordApp.cpp ****     if (!filemgr_.LoadFile(file_idx_)) {
 4531              		.loc 16 404 10
 4532 0032 7B68     		ldr	r3, [r7, #4]
 4533 0034 D3F86C22 		ldr	r2, [r3, #620]
 4534              		.loc 16 404 28
 4535 0038 7B68     		ldr	r3, [r7, #4]
 4536 003a D3F84C33 		ldr	r3, [r3, #844]
 4537              		.loc 16 404 27
 4538 003e 9BB2     		uxth	r3, r3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 108


 4539 0040 1946     		mov	r1, r3
 4540 0042 1046     		mov	r0, r2
 4541 0044 FFF7FEFF 		bl	_ZN16AudioFileManager8LoadFileEt
 4542 0048 0346     		mov	r3, r0
 4543              		.loc 16 404 9
 4544 004a 83F00103 		eor	r3, r3, #1
 4545 004e DBB2     		uxtb	r3, r3
 4546              		.loc 16 404 5
 4547 0050 002B     		cmp	r3, #0
 4548 0052 07D0     		beq	.L218
 405:GrannyChordApp.cpp ****       DebugPrint(pod_,"failed to load file");
 4549              		.loc 16 405 7
 4550 0054 0948     		ldr	r0, .L220
 4551 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 406:GrannyChordApp.cpp ****       curr_state_=AppState::Error;
 4552              		.loc 16 406 18
 4553 005a 7B68     		ldr	r3, [r7, #4]
 4554 005c 0522     		movs	r2, #5
 4555 005e C3F87422 		str	r2, [r3, #628]
 407:GrannyChordApp.cpp ****       return;
 4556              		.loc 16 407 7
 4557 0062 08E0     		b	.L217
 4558              	.L218:
 408:GrannyChordApp.cpp ****     }
 409:GrannyChordApp.cpp ****   }
 410:GrannyChordApp.cpp ****   DebugPrint(pod_, "loaded file");
 4559              		.loc 16 410 3
 4560 0064 0648     		ldr	r0, .L220+4
 4561 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 411:GrannyChordApp.cpp ****   pod_.StartAudio(AudioCallback);
 4562              		.loc 16 411 3
 4563 006a 7B68     		ldr	r3, [r7, #4]
 4564 006c DB69     		ldr	r3, [r3, #28]
 4565              		.loc 16 411 18
 4566 006e 0549     		ldr	r1, .L220+8
 4567 0070 1846     		mov	r0, r3
 4568 0072 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 4569              	.L217:
 412:GrannyChordApp.cpp **** }
 4570              		.loc 16 412 1
 4571 0076 0837     		adds	r7, r7, #8
 4572              		.cfi_def_cfa_offset 8
 4573 0078 BD46     		mov	sp, r7
 4574              		.cfi_def_cfa_register 13
 4575              		@ sp needed
 4576 007a 80BD     		pop	{r7, pc}
 4577              	.L221:
 4578              		.align	2
 4579              	.L220:
 4580 007c 8C010000 		.word	.LC19
 4581 0080 A0010000 		.word	.LC20
 4582 0084 00000000 		.word	_ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj
 4583              		.cfi_endproc
 4584              	.LFE4930:
 4586              		.section	.text._ZN14GrannyChordApp12InitRecordInEv,"ax",%progbits
 4587              		.align	1
 4588              		.global	_ZN14GrannyChordApp12InitRecordInEv
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 109


 4589              		.syntax unified
 4590              		.thumb
 4591              		.thumb_func
 4593              	_ZN14GrannyChordApp12InitRecordInEv:
 4594              	.LFB4931:
 413:GrannyChordApp.cpp **** 
 414:GrannyChordApp.cpp **** /// @brief Initialises RecordIn state, clears audio buffers
 415:GrannyChordApp.cpp **** void GrannyChordApp::InitRecordIn(){
 4595              		.loc 16 415 36
 4596              		.cfi_startproc
 4597              		@ args = 0, pretend = 0, frame = 8
 4598              		@ frame_needed = 1, uses_anonymous_args = 0
 4599 0000 80B5     		push	{r7, lr}
 4600              		.cfi_def_cfa_offset 8
 4601              		.cfi_offset 7, -8
 4602              		.cfi_offset 14, -4
 4603 0002 82B0     		sub	sp, sp, #8
 4604              		.cfi_def_cfa_offset 16
 4605 0004 00AF     		add	r7, sp, #0
 4606              		.cfi_def_cfa_register 7
 4607 0006 7860     		str	r0, [r7, #4]
 416:GrannyChordApp.cpp ****   memset(left_buf_, 0, CHNL_BUF_SIZE_ABS);
 4608              		.loc 16 416 10
 4609 0008 7B68     		ldr	r3, [r7, #4]
 4610 000a D3F84433 		ldr	r3, [r3, #836]
 4611              		.loc 16 416 9
 4612 000e 4FF08072 		mov	r2, #16777216
 4613 0012 0021     		movs	r1, #0
 4614 0014 1846     		mov	r0, r3
 4615 0016 FFF7FEFF 		bl	memset
 417:GrannyChordApp.cpp ****   memset(right_buf_, 0, CHNL_BUF_SIZE_ABS);
 4616              		.loc 16 417 10
 4617 001a 7B68     		ldr	r3, [r7, #4]
 4618 001c D3F84833 		ldr	r3, [r3, #840]
 4619              		.loc 16 417 9
 4620 0020 4FF08072 		mov	r2, #16777216
 4621 0024 0021     		movs	r1, #0
 4622 0026 1846     		mov	r0, r3
 4623 0028 FFF7FEFF 		bl	memset
 418:GrannyChordApp.cpp ****   record_in_pos_ = 0;
 4624              		.loc 16 418 18
 4625 002c 7B68     		ldr	r3, [r7, #4]
 4626 002e 03F50043 		add	r3, r3, #32768
 4627 0032 1A46     		mov	r2, r3
 4628 0034 0023     		movs	r3, #0
 4629 0036 C2F89036 		str	r3, [r2, #1680]
 419:GrannyChordApp.cpp **** }
 4630              		.loc 16 419 1
 4631 003a 00BF     		nop
 4632 003c 0837     		adds	r7, r7, #8
 4633              		.cfi_def_cfa_offset 8
 4634 003e BD46     		mov	sp, r7
 4635              		.cfi_def_cfa_register 13
 4636              		@ sp needed
 4637 0040 80BD     		pop	{r7, pc}
 4638              		.cfi_endproc
 4639              	.LFE4931:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 110


 4641              		.section	.text._ZN14GrannyChordApp13InitWavWriterEv,"ax",%progbits
 4642              		.align	1
 4643              		.global	_ZN14GrannyChordApp13InitWavWriterEv
 4644              		.syntax unified
 4645              		.thumb
 4646              		.thumb_func
 4648              	_ZN14GrannyChordApp13InitWavWriterEv:
 4649              	.LFB4932:
 420:GrannyChordApp.cpp **** 
 421:GrannyChordApp.cpp **** // /// @brief Initialise object for recording out to SD card
 422:GrannyChordApp.cpp **** void GrannyChordApp::InitWavWriter(){
 4650              		.loc 16 422 37
 4651              		.cfi_startproc
 4652              		@ args = 0, pretend = 0, frame = 24
 4653              		@ frame_needed = 1, uses_anonymous_args = 0
 4654 0000 80B5     		push	{r7, lr}
 4655              		.cfi_def_cfa_offset 8
 4656              		.cfi_offset 7, -8
 4657              		.cfi_offset 14, -4
 4658 0002 86B0     		sub	sp, sp, #24
 4659              		.cfi_def_cfa_offset 32
 4660 0004 00AF     		add	r7, sp, #0
 4661              		.cfi_def_cfa_register 7
 4662 0006 7860     		str	r0, [r7, #4]
 423:GrannyChordApp.cpp ****   WavWriter<16384>::Config cfg;
 424:GrannyChordApp.cpp ****   cfg.bitspersample = BIT_DEPTH;
 4663              		.loc 16 424 21
 4664 0008 1023     		movs	r3, #16
 4665 000a 7B61     		str	r3, [r7, #20]
 425:GrannyChordApp.cpp ****   cfg.channels = filemgr_.GetNumChannels();
 4666              		.loc 16 425 18
 4667 000c 7B68     		ldr	r3, [r7, #4]
 4668 000e D3F86C32 		ldr	r3, [r3, #620]
 4669              		.loc 16 425 41
 4670 0012 1846     		mov	r0, r3
 4671 0014 FFF7FEFF 		bl	_ZNK16AudioFileManager14GetNumChannelsEv
 4672 0018 0346     		mov	r3, r0
 4673              		.loc 16 425 16
 4674 001a 3B61     		str	r3, [r7, #16]
 426:GrannyChordApp.cpp ****   cfg.samplerate = SAMPLE_RATE;
 4675              		.loc 16 426 18
 4676 001c 074B     		ldr	r3, .L224
 4677 001e FB60     		str	r3, [r7, #12]	@ float
 427:GrannyChordApp.cpp ****   sd_writer_.Init(cfg);
 4678              		.loc 16 427 18
 4679 0020 7B68     		ldr	r3, [r7, #4]
 4680 0022 03F58363 		add	r3, r3, #1048
 4681 0026 07F10C02 		add	r2, r7, #12
 4682 002a 1146     		mov	r1, r2
 4683 002c 1846     		mov	r0, r3
 4684 002e FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE
 428:GrannyChordApp.cpp **** }
 4685              		.loc 16 428 1
 4686 0032 00BF     		nop
 4687 0034 1837     		adds	r7, r7, #24
 4688              		.cfi_def_cfa_offset 8
 4689 0036 BD46     		mov	sp, r7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 111


 4690              		.cfi_def_cfa_register 13
 4691              		@ sp needed
 4692 0038 80BD     		pop	{r7, pc}
 4693              	.L225:
 4694 003a 00BF     		.align	2
 4695              	.L224:
 4696 003c 00803B47 		.word	1195081728
 4697              		.cfi_endproc
 4698              	.LFE4932:
 4700              		.section	.text._ZN14GrannyChordApp6InitFXEv,"ax",%progbits
 4701              		.align	1
 4702              		.global	_ZN14GrannyChordApp6InitFXEv
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4707              	_ZN14GrannyChordApp6InitFXEv:
 4708              	.LFB4933:
 429:GrannyChordApp.cpp **** 
 430:GrannyChordApp.cpp **** /// @brief initialise reverb, compressor, filter configs for FX section 
 431:GrannyChordApp.cpp **** void GrannyChordApp::InitFX(){
 4709              		.loc 16 431 30
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 8
 4712              		@ frame_needed = 1, uses_anonymous_args = 0
 4713 0000 80B5     		push	{r7, lr}
 4714              		.cfi_def_cfa_offset 8
 4715              		.cfi_offset 7, -8
 4716              		.cfi_offset 14, -4
 4717 0002 82B0     		sub	sp, sp, #8
 4718              		.cfi_def_cfa_offset 16
 4719 0004 00AF     		add	r7, sp, #0
 4720              		.cfi_def_cfa_register 7
 4721 0006 7860     		str	r0, [r7, #4]
 432:GrannyChordApp.cpp ****   comp_.Init(SAMPLE_RATE_FLOAT);
 4722              		.loc 16 432 13
 4723 0008 7B68     		ldr	r3, [r7, #4]
 4724 000a 03F52273 		add	r3, r3, #648
 4725 000e 9FED2D0A 		vldr.32	s0, .L227
 4726 0012 1846     		mov	r0, r3
 4727 0014 FFF7FEFF 		bl	_ZN7daisysp10Compressor4InitEf
 433:GrannyChordApp.cpp ****   limiter_.Init();
 4728              		.loc 16 433 16
 4729 0018 7B68     		ldr	r3, [r7, #4]
 4730 001a 03F53273 		add	r3, r3, #712
 4731 001e 1846     		mov	r0, r3
 4732 0020 FFF7FEFF 		bl	_ZN7daisysp7Limiter4InitEv
 434:GrannyChordApp.cpp ****   
 435:GrannyChordApp.cpp ****   chorus_.Init(SAMPLE_RATE_FLOAT);
 4733              		.loc 16 435 3
 4734 0024 7B68     		ldr	r3, [r7, #4]
 4735 0026 D3F8D032 		ldr	r3, [r3, #720]
 4736              		.loc 16 435 15
 4737 002a 9FED260A 		vldr.32	s0, .L227
 4738 002e 1846     		mov	r0, r3
 4739 0030 FFF7FEFF 		bl	_ZN7daisysp6Chorus4InitEf
 436:GrannyChordApp.cpp ****   reverb_.Init(SAMPLE_RATE_FLOAT);
 4740              		.loc 16 436 3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 112


 4741 0034 7B68     		ldr	r3, [r7, #4]
 4742 0036 D3F8CC32 		ldr	r3, [r3, #716]
 4743              		.loc 16 436 15
 4744 003a 9FED220A 		vldr.32	s0, .L227
 4745 003e 1846     		mov	r0, r3
 4746 0040 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc4InitEf
 437:GrannyChordApp.cpp ****   
 438:GrannyChordApp.cpp ****   lowpass_moog_.Init(SAMPLE_RATE_FLOAT);
 4747              		.loc 16 438 21
 4748 0044 7B68     		ldr	r3, [r7, #4]
 4749 0046 03F53573 		add	r3, r3, #724
 4750 004a 9FED1E0A 		vldr.32	s0, .L227
 4751 004e 1846     		mov	r0, r3
 4752 0050 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder4InitEf
 439:GrannyChordApp.cpp ****   lowpass_moog_.SetFreq(LOPASS_UPPER_BOUND);
 4753              		.loc 16 439 24
 4754 0054 7B68     		ldr	r3, [r7, #4]
 4755 0056 03F53573 		add	r3, r3, #724
 4756 005a 9FED1B0A 		vldr.32	s0, .L227+4
 4757 005e 1846     		mov	r0, r3
 4758 0060 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7SetFreqEf
 440:GrannyChordApp.cpp ****   lowpass_moog_.SetRes(0.7f);
 4759              		.loc 16 440 23
 4760 0064 7B68     		ldr	r3, [r7, #4]
 4761 0066 03F53573 		add	r3, r3, #724
 4762 006a 9FED180A 		vldr.32	s0, .L227+8
 4763 006e 1846     		mov	r0, r3
 4764 0070 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder6SetResEf
 441:GrannyChordApp.cpp ****   
 442:GrannyChordApp.cpp ****   hipass_.Init();
 4765              		.loc 16 442 15
 4766 0074 7B68     		ldr	r3, [r7, #4]
 4767 0076 03F54673 		add	r3, r3, #792
 4768 007a 1846     		mov	r0, r3
 4769 007c FFF7FEFF 		bl	_ZN7daisysp7OnePole4InitEv
 443:GrannyChordApp.cpp ****   hipass_.SetFilterMode(daisysp::OnePole::FilterMode::FILTER_MODE_HIGH_PASS);
 4770              		.loc 16 443 24
 4771 0080 7B68     		ldr	r3, [r7, #4]
 4772 0082 03F54673 		add	r3, r3, #792
 4773 0086 0121     		movs	r1, #1
 4774 0088 1846     		mov	r0, r3
 4775 008a FFF7FEFF 		bl	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
 444:GrannyChordApp.cpp ****   hipass_.SetFrequency(HIPASS_LOWER_BOUND);
 4776              		.loc 16 444 23
 4777 008e 7B68     		ldr	r3, [r7, #4]
 4778 0090 03F54673 		add	r3, r3, #792
 4779 0094 9FED0E0A 		vldr.32	s0, .L227+12
 4780 0098 1846     		mov	r0, r3
 4781 009a FFF7FEFF 		bl	_ZN7daisysp7OnePole12SetFrequencyEf
 445:GrannyChordApp.cpp **** 
 446:GrannyChordApp.cpp ****   hicut_.SetFilterMode(daisysp::OnePole::FilterMode::FILTER_MODE_LOW_PASS);
 4782              		.loc 16 446 23
 4783 009e 7B68     		ldr	r3, [r7, #4]
 4784 00a0 03F54D73 		add	r3, r3, #820
 4785 00a4 0021     		movs	r1, #0
 4786 00a6 1846     		mov	r0, r3
 4787 00a8 FFF7FEFF 		bl	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 113


 447:GrannyChordApp.cpp ****   hicut_.SetFrequency(HICUT_FREQ);
 4788              		.loc 16 447 22
 4789 00ac 7B68     		ldr	r3, [r7, #4]
 4790 00ae 03F54D73 		add	r3, r3, #820
 4791 00b2 B5EE060A 		vmov.f32	s0, #3.4375e-1
 4792 00b6 1846     		mov	r0, r3
 4793 00b8 FFF7FEFF 		bl	_ZN7daisysp7OnePole12SetFrequencyEf
 448:GrannyChordApp.cpp **** }
 4794              		.loc 16 448 1
 4795 00bc 00BF     		nop
 4796 00be 0837     		adds	r7, r7, #8
 4797              		.cfi_def_cfa_offset 8
 4798 00c0 BD46     		mov	sp, r7
 4799              		.cfi_def_cfa_register 13
 4800              		@ sp needed
 4801 00c2 80BD     		pop	{r7, pc}
 4802              	.L228:
 4803              		.align	2
 4804              	.L227:
 4805 00c4 00803B47 		.word	1195081728
 4806 00c8 00A08C46 		.word	1183621120
 4807 00cc 3333333F 		.word	1060320051
 4808 00d0 17B7D139 		.word	970045207
 4809              		.cfi_endproc
 4810              	.LFE4933:
 4812              		.section	.text._ZN14GrannyChordApp17InitPrevParamValsEv,"ax",%progbits
 4813              		.align	1
 4814              		.global	_ZN14GrannyChordApp17InitPrevParamValsEv
 4815              		.syntax unified
 4816              		.thumb
 4817              		.thumb_func
 4819              	_ZN14GrannyChordApp17InitPrevParamValsEv:
 4820              	.LFB4934:
 449:GrannyChordApp.cpp **** 
 450:GrannyChordApp.cpp **** /// @brief Initialise previous parameter value arrays to defaults
 451:GrannyChordApp.cpp **** void GrannyChordApp::InitPrevParamVals(){
 4821              		.loc 16 451 41
 4822              		.cfi_startproc
 4823              		@ args = 0, pretend = 0, frame = 16
 4824              		@ frame_needed = 1, uses_anonymous_args = 0
 4825              		@ link register save eliminated.
 4826 0000 80B4     		push	{r7}
 4827              		.cfi_def_cfa_offset 4
 4828              		.cfi_offset 7, -4
 4829 0002 85B0     		sub	sp, sp, #20
 4830              		.cfi_def_cfa_offset 24
 4831 0004 00AF     		add	r7, sp, #0
 4832              		.cfi_def_cfa_register 7
 4833 0006 7860     		str	r0, [r7, #4]
 4834              	.LBB16:
 452:GrannyChordApp.cpp ****   /* set regular synth parameters */
 453:GrannyChordApp.cpp ****   for (int i=0; i < NUM_SYNTH_MODES;i++){
 4835              		.loc 16 453 12
 4836 0008 0023     		movs	r3, #0
 4837 000a FB60     		str	r3, [r7, #12]
 4838              	.L233:
 4839              		.loc 16 453 19 discriminator 1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 114


 4840 000c FB68     		ldr	r3, [r7, #12]
 4841 000e 072B     		cmp	r3, #7
 4842 0010 27DC     		bgt	.L234
 454:GrannyChordApp.cpp ****     if (i<3){
 4843              		.loc 16 454 5
 4844 0012 FB68     		ldr	r3, [r7, #12]
 4845 0014 022B     		cmp	r3, #2
 4846 0016 10DC     		bgt	.L231
 455:GrannyChordApp.cpp ****       prev_param_k1[i] = 0.5f;
 4847              		.loc 16 455 24
 4848 0018 7A68     		ldr	r2, [r7, #4]
 4849 001a FB68     		ldr	r3, [r7, #12]
 4850 001c F633     		adds	r3, r3, #246
 4851 001e 9B00     		lsls	r3, r3, #2
 4852 0020 1344     		add	r3, r3, r2
 4853 0022 4FF07C52 		mov	r2, #1056964608
 4854 0026 1A60     		str	r2, [r3]	@ float
 456:GrannyChordApp.cpp ****       prev_param_k2[i] = 0.5f;
 4855              		.loc 16 456 24
 4856 0028 7A68     		ldr	r2, [r7, #4]
 4857 002a FB68     		ldr	r3, [r7, #12]
 4858 002c FE33     		adds	r3, r3, #254
 4859 002e 9B00     		lsls	r3, r3, #2
 4860 0030 1344     		add	r3, r3, r2
 4861 0032 4FF07C52 		mov	r2, #1056964608
 4862 0036 1A60     		str	r2, [r3]	@ float
 4863 0038 0FE0     		b	.L232
 4864              	.L231:
 457:GrannyChordApp.cpp ****     }
 458:GrannyChordApp.cpp ****     /* set randomness and FX values to 0 initially */
 459:GrannyChordApp.cpp ****     else {
 460:GrannyChordApp.cpp ****       prev_param_k1[i]=0.0f;
 4865              		.loc 16 460 23
 4866 003a 7A68     		ldr	r2, [r7, #4]
 4867 003c FB68     		ldr	r3, [r7, #12]
 4868 003e F633     		adds	r3, r3, #246
 4869 0040 9B00     		lsls	r3, r3, #2
 4870 0042 1344     		add	r3, r3, r2
 4871 0044 4FF00002 		mov	r2, #0
 4872 0048 1A60     		str	r2, [r3]	@ float
 461:GrannyChordApp.cpp ****       prev_param_k2[i]=0.0f;
 4873              		.loc 16 461 23
 4874 004a 7A68     		ldr	r2, [r7, #4]
 4875 004c FB68     		ldr	r3, [r7, #12]
 4876 004e FE33     		adds	r3, r3, #254
 4877 0050 9B00     		lsls	r3, r3, #2
 4878 0052 1344     		add	r3, r3, r2
 4879 0054 4FF00002 		mov	r2, #0
 4880 0058 1A60     		str	r2, [r3]	@ float
 4881              	.L232:
 453:GrannyChordApp.cpp ****     if (i<3){
 4882              		.loc 16 453 3 discriminator 2
 4883 005a FB68     		ldr	r3, [r7, #12]
 4884 005c 0133     		adds	r3, r3, #1
 4885 005e FB60     		str	r3, [r7, #12]
 4886 0060 D4E7     		b	.L233
 4887              	.L234:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 115


 4888              	.LBE16:
 462:GrannyChordApp.cpp ****     }
 463:GrannyChordApp.cpp ****   }
 464:GrannyChordApp.cpp **** }
 4889              		.loc 16 464 1
 4890 0062 00BF     		nop
 4891 0064 1437     		adds	r7, r7, #20
 4892              		.cfi_def_cfa_offset 4
 4893 0066 BD46     		mov	sp, r7
 4894              		.cfi_def_cfa_register 13
 4895              		@ sp needed
 4896 0068 5DF8047B 		ldr	r7, [sp], #4
 4897              		.cfi_restore 7
 4898              		.cfi_def_cfa_offset 0
 4899 006c 7047     		bx	lr
 4900              		.cfi_endproc
 4901              	.LFE4934:
 4903              		.section	.text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj,"ax",%progbits
 4904              		.align	1
 4905              		.global	_ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj
 4906              		.syntax unified
 4907              		.thumb
 4908              		.thumb_func
 4910              	_ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:
 4911              	.LFB4935:
 465:GrannyChordApp.cpp **** 
 466:GrannyChordApp.cpp **** /// @brief Master audio callback, called at audio rate, calls all audio processing methods
 467:GrannyChordApp.cpp **** /// @param in Audio input buffer
 468:GrannyChordApp.cpp **** /// @param out Audio output buffer
 469:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 470:GrannyChordApp.cpp **** void GrannyChordApp::AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size
 4912              		.loc 16 470 108
 4913              		.cfi_startproc
 4914              		@ args = 0, pretend = 0, frame = 16
 4915              		@ frame_needed = 1, uses_anonymous_args = 0
 4916 0000 80B5     		push	{r7, lr}
 4917              		.cfi_def_cfa_offset 8
 4918              		.cfi_offset 7, -8
 4919              		.cfi_offset 14, -4
 4920 0002 84B0     		sub	sp, sp, #16
 4921              		.cfi_def_cfa_offset 24
 4922 0004 00AF     		add	r7, sp, #0
 4923              		.cfi_def_cfa_register 7
 4924 0006 F860     		str	r0, [r7, #12]
 4925 0008 B960     		str	r1, [r7, #8]
 4926 000a 7A60     		str	r2, [r7, #4]
 471:GrannyChordApp.cpp ****   instance_->ProcessAudio(in,out,size);
 4927              		.loc 16 471 26
 4928 000c 054B     		ldr	r3, .L236
 4929 000e 1868     		ldr	r0, [r3]
 4930 0010 7B68     		ldr	r3, [r7, #4]
 4931 0012 BA68     		ldr	r2, [r7, #8]
 4932 0014 F968     		ldr	r1, [r7, #12]
 4933 0016 FFF7FEFF 		bl	_ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj
 472:GrannyChordApp.cpp **** }
 4934              		.loc 16 472 1
 4935 001a 00BF     		nop
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 116


 4936 001c 1037     		adds	r7, r7, #16
 4937              		.cfi_def_cfa_offset 8
 4938 001e BD46     		mov	sp, r7
 4939              		.cfi_def_cfa_register 13
 4940              		@ sp needed
 4941 0020 80BD     		pop	{r7, pc}
 4942              	.L237:
 4943 0022 00BF     		.align	2
 4944              	.L236:
 4945 0024 00000000 		.word	_ZN14GrannyChordApp9instance_E
 4946              		.cfi_endproc
 4947              	.LFE4935:
 4949              		.section	.rodata
 4950              		.align	2
 4951              	.LC21:
 4952 01ac 73746F70 		.ascii	"stopped audio > len\000"
 4952      70656420 
 4952      61756469 
 4952      6F203E20 
 4952      6C656E00 
 4953              		.section	.text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj,"ax",%progbits
 4954              		.align	1
 4955              		.global	_ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj
 4956              		.syntax unified
 4957              		.thumb
 4958              		.thumb_func
 4960              	_ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:
 4961              	.LFB4936:
 473:GrannyChordApp.cpp **** 
 474:GrannyChordApp.cpp **** void GrannyChordApp::ProcessAudio(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_
 4962              		.loc 16 474 107
 4963              		.cfi_startproc
 4964              		@ args = 0, pretend = 0, frame = 16
 4965              		@ frame_needed = 1, uses_anonymous_args = 0
 4966 0000 90B5     		push	{r4, r7, lr}
 4967              		.cfi_def_cfa_offset 12
 4968              		.cfi_offset 4, -12
 4969              		.cfi_offset 7, -8
 4970              		.cfi_offset 14, -4
 4971 0002 85B0     		sub	sp, sp, #20
 4972              		.cfi_def_cfa_offset 32
 4973 0004 00AF     		add	r7, sp, #0
 4974              		.cfi_def_cfa_register 7
 4975 0006 F860     		str	r0, [r7, #12]
 4976 0008 B960     		str	r1, [r7, #8]
 4977 000a 7A60     		str	r2, [r7, #4]
 4978 000c 3B60     		str	r3, [r7]
 475:GrannyChordApp.cpp ****   switch(curr_state_){
 4979              		.loc 16 475 10
 4980 000e FB68     		ldr	r3, [r7, #12]
 4981 0010 D3F87432 		ldr	r3, [r3, #628]
 4982              		.loc 16 475 3
 4983 0014 032B     		cmp	r3, #3
 4984 0016 2ED0     		beq	.L245
 4985 0018 032B     		cmp	r3, #3
 4986 001a 2EDC     		bgt	.L246
 4987 001c 012B     		cmp	r3, #1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 117


 4988 001e 02D0     		beq	.L241
 4989 0020 022B     		cmp	r3, #2
 4990 0022 22D0     		beq	.L242
 476:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 477:GrannyChordApp.cpp ****       if (wav_playhead_>= filemgr_.GetSamplesPerChannel() -1){
 478:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 479:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 480:GrannyChordApp.cpp ****         return;
 481:GrannyChordApp.cpp ****       }
 482:GrannyChordApp.cpp ****       ProcessWAVPlayback(out,size);
 483:GrannyChordApp.cpp ****       return;  
 484:GrannyChordApp.cpp ****     case AppState::RecordIn:
 485:GrannyChordApp.cpp ****       // ProcessRecordIn(in, out, size);
 486:GrannyChordApp.cpp ****       return;
 487:GrannyChordApp.cpp ****     case AppState::Synthesis:
 488:GrannyChordApp.cpp ****       ProcessSynthesis(out,size);
 489:GrannyChordApp.cpp ****       return;
 490:GrannyChordApp.cpp ****     // case AppState::ChordMode:
 491:GrannyChordApp.cpp ****     // return;
 492:GrannyChordApp.cpp ****     default:
 493:GrannyChordApp.cpp ****       return;
 4991              		.loc 16 493 7
 4992 0024 29E0     		b	.L246
 4993              	.L241:
 477:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 4994              		.loc 16 477 11
 4995 0026 FB68     		ldr	r3, [r7, #12]
 4996 0028 D3F85043 		ldr	r4, [r3, #848]
 477:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 4997              		.loc 16 477 27
 4998 002c FB68     		ldr	r3, [r7, #12]
 4999 002e D3F86C32 		ldr	r3, [r3, #620]
 477:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5000              		.loc 16 477 56
 5001 0032 1846     		mov	r0, r3
 5002 0034 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 5003 0038 0346     		mov	r3, r0
 477:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5004              		.loc 16 477 59
 5005 003a 013B     		subs	r3, r3, #1
 477:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5006              		.loc 16 477 24
 5007 003c 9C42     		cmp	r4, r3
 5008 003e 2CBF     		ite	cs
 5009 0040 0123     		movcs	r3, #1
 5010 0042 0023     		movcc	r3, #0
 5011 0044 DBB2     		uxtb	r3, r3
 477:GrannyChordApp.cpp ****         instance_->pod_.StopAudio();
 5012              		.loc 16 477 7
 5013 0046 002B     		cmp	r3, #0
 5014 0048 09D0     		beq	.L243
 478:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 5015              		.loc 16 478 34
 5016 004a 0E4B     		ldr	r3, .L247
 5017 004c 1B68     		ldr	r3, [r3]
 478:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 5018              		.loc 16 478 20
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 118


 5019 004e DB69     		ldr	r3, [r3, #28]
 478:GrannyChordApp.cpp ****         DebugPrint(pod_, "stopped audio > len"); 
 5020              		.loc 16 478 34
 5021 0050 1846     		mov	r0, r3
 5022 0052 FFF7FEFF 		bl	_ZN5daisy8DaisyPod9StopAudioEv
 479:GrannyChordApp.cpp ****         return;
 5023              		.loc 16 479 9
 5024 0056 0C48     		ldr	r0, .L247+4
 5025 0058 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 480:GrannyChordApp.cpp ****       }
 5026              		.loc 16 480 9
 5027 005c 0EE0     		b	.L238
 5028              	.L243:
 482:GrannyChordApp.cpp ****       return;  
 5029              		.loc 16 482 25
 5030 005e 3A68     		ldr	r2, [r7]
 5031 0060 7968     		ldr	r1, [r7, #4]
 5032 0062 F868     		ldr	r0, [r7, #12]
 5033 0064 FFF7FEFF 		bl	_ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj
 483:GrannyChordApp.cpp ****     case AppState::RecordIn:
 5034              		.loc 16 483 7
 5035 0068 08E0     		b	.L238
 5036              	.L242:
 488:GrannyChordApp.cpp ****       return;
 5037              		.loc 16 488 23
 5038 006a 3A68     		ldr	r2, [r7]
 5039 006c 7968     		ldr	r1, [r7, #4]
 5040 006e F868     		ldr	r0, [r7, #12]
 5041 0070 FFF7FEFF 		bl	_ZN14GrannyChordApp16ProcessSynthesisEPPfj
 489:GrannyChordApp.cpp ****     // case AppState::ChordMode:
 5042              		.loc 16 489 7
 5043 0074 02E0     		b	.L238
 5044              	.L245:
 486:GrannyChordApp.cpp ****     case AppState::Synthesis:
 5045              		.loc 16 486 7
 5046 0076 00BF     		nop
 5047 0078 00E0     		b	.L238
 5048              	.L246:
 5049              		.loc 16 493 7
 5050 007a 00BF     		nop
 5051              	.L238:
 494:GrannyChordApp.cpp ****   }
 495:GrannyChordApp.cpp **** }
 5052              		.loc 16 495 1
 5053 007c 1437     		adds	r7, r7, #20
 5054              		.cfi_def_cfa_offset 12
 5055 007e BD46     		mov	sp, r7
 5056              		.cfi_def_cfa_register 13
 5057              		@ sp needed
 5058 0080 90BD     		pop	{r4, r7, pc}
 5059              	.L248:
 5060 0082 00BF     		.align	2
 5061              	.L247:
 5062 0084 00000000 		.word	_ZN14GrannyChordApp9instance_E
 5063 0088 AC010000 		.word	.LC21
 5064              		.cfi_endproc
 5065              	.LFE4936:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 119


 5067              		.section	.text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj,"ax",%progbits
 5068              		.align	1
 5069              		.global	_ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj
 5070              		.syntax unified
 5071              		.thumb
 5072              		.thumb_func
 5074              	_ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:
 5075              	.LFB4937:
 496:GrannyChordApp.cpp **** 
 497:GrannyChordApp.cpp **** /// @brief Process audio for WAV playback mode and increment playback position
 498:GrannyChordApp.cpp **** /// @param out Output audio buffer
 499:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 500:GrannyChordApp.cpp **** void GrannyChordApp::ProcessWAVPlayback(AudioHandle::OutputBuffer out, size_t size){
 5076              		.loc 16 500 84
 5077              		.cfi_startproc
 5078              		@ args = 0, pretend = 0, frame = 24
 5079              		@ frame_needed = 1, uses_anonymous_args = 0
 5080 0000 90B5     		push	{r4, r7, lr}
 5081              		.cfi_def_cfa_offset 12
 5082              		.cfi_offset 4, -12
 5083              		.cfi_offset 7, -8
 5084              		.cfi_offset 14, -4
 5085 0002 87B0     		sub	sp, sp, #28
 5086              		.cfi_def_cfa_offset 40
 5087 0004 00AF     		add	r7, sp, #0
 5088              		.cfi_def_cfa_register 7
 5089 0006 F860     		str	r0, [r7, #12]
 5090 0008 B960     		str	r1, [r7, #8]
 5091 000a 7A60     		str	r2, [r7, #4]
 5092              	.LBB17:
 501:GrannyChordApp.cpp ****   for (size_t i=0; i<size; i++){
 5093              		.loc 16 501 15
 5094 000c 0023     		movs	r3, #0
 5095 000e 7B61     		str	r3, [r7, #20]
 5096              	.L254:
 5097              		.loc 16 501 21 discriminator 1
 5098 0010 7A69     		ldr	r2, [r7, #20]
 5099 0012 7B68     		ldr	r3, [r7, #4]
 5100 0014 9A42     		cmp	r2, r3
 5101 0016 5CD2     		bcs	.L255
 502:GrannyChordApp.cpp ****     if (wav_playhead_ < filemgr_.GetSamplesPerChannel()){
 5102              		.loc 16 502 9
 5103 0018 FB68     		ldr	r3, [r7, #12]
 5104 001a D3F85043 		ldr	r4, [r3, #848]
 5105              		.loc 16 502 25
 5106 001e FB68     		ldr	r3, [r7, #12]
 5107 0020 D3F86C32 		ldr	r3, [r3, #620]
 5108              		.loc 16 502 54
 5109 0024 1846     		mov	r0, r3
 5110 0026 FFF7FEFF 		bl	_ZNK16AudioFileManager20GetSamplesPerChannelEv
 5111 002a 0346     		mov	r3, r0
 5112              		.loc 16 502 23
 5113 002c 9C42     		cmp	r4, r3
 5114 002e 34BF     		ite	cc
 5115 0030 0123     		movcc	r3, #1
 5116 0032 0023     		movcs	r3, #0
 5117 0034 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 120


 5118              		.loc 16 502 5
 5119 0036 002B     		cmp	r3, #0
 5120 0038 47D0     		beq	.L251
 503:GrannyChordApp.cpp ****       out[0][i] = s162f(left_buf_[wav_playhead_]) * 0.5f;
 5121              		.loc 16 503 25
 5122 003a FB68     		ldr	r3, [r7, #12]
 5123 003c D3F84423 		ldr	r2, [r3, #836]
 5124              		.loc 16 503 35
 5125 0040 FB68     		ldr	r3, [r7, #12]
 5126 0042 D3F85033 		ldr	r3, [r3, #848]
 5127              		.loc 16 503 48
 5128 0046 5B00     		lsls	r3, r3, #1
 5129 0048 1344     		add	r3, r3, r2
 5130              		.loc 16 503 24
 5131 004a B3F90030 		ldrsh	r3, [r3]
 5132 004e 3B82     		strh	r3, [r7, #16]	@ movhi
 5133              	.LBB18:
 5134              	.LBB19:
 5135              		.file 17 "../libDaisy/src/daisy_core.h"
   1:../libDaisy/src/daisy_core.h **** #pragma once
   2:../libDaisy/src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../libDaisy/src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../libDaisy/src/daisy_core.h **** #include <stdint.h>
   5:../libDaisy/src/daisy_core.h **** #include <stdlib.h>
   6:../libDaisy/src/daisy_core.h **** 
   7:../libDaisy/src/daisy_core.h **** #if defined(_MSC_VER)
   8:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../libDaisy/src/daisy_core.h **** #elif defined(__clang__)
  10:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../libDaisy/src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../libDaisy/src/daisy_core.h **** #elif defined(__GNUC__)
  13:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../libDaisy/src/daisy_core.h **** #else
  15:../libDaisy/src/daisy_core.h **** #error unknown compiler
  16:../libDaisy/src/daisy_core.h **** #endif
  17:../libDaisy/src/daisy_core.h **** 
  18:../libDaisy/src/daisy_core.h **** /** @addtogroup utility
  19:../libDaisy/src/daisy_core.h ****     @{
  20:../libDaisy/src/daisy_core.h **** */
  21:../libDaisy/src/daisy_core.h **** 
  22:../libDaisy/src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../libDaisy/src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../libDaisy/src/daisy_core.h **** */
  25:../libDaisy/src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../libDaisy/src/daisy_core.h **** /** 
  27:../libDaisy/src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../libDaisy/src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../libDaisy/src/daisy_core.h **** cache enabled.
  30:../libDaisy/src/daisy_core.h **** */
  31:../libDaisy/src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../libDaisy/src/daisy_core.h **** 
  33:../libDaisy/src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../libDaisy/src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../libDaisy/src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../libDaisy/src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../libDaisy/src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../libDaisy/src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 121


  39:../libDaisy/src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../libDaisy/src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../libDaisy/src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../libDaisy/src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../libDaisy/src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../libDaisy/src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../libDaisy/src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../libDaisy/src/daisy_core.h **** 
  47:../libDaisy/src/daisy_core.h **** 
  48:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../libDaisy/src/daisy_core.h **** #define OUT_L out[0]
  51:../libDaisy/src/daisy_core.h **** 
  52:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../libDaisy/src/daisy_core.h **** #define OUT_R out[1]
  55:../libDaisy/src/daisy_core.h **** 
  56:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../libDaisy/src/daisy_core.h **** #define IN_L in[0]
  59:../libDaisy/src/daisy_core.h **** 
  60:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../libDaisy/src/daisy_core.h **** #define IN_R in[1]
  63:../libDaisy/src/daisy_core.h **** 
  64:../libDaisy/src/daisy_core.h **** /** 
  65:../libDaisy/src/daisy_core.h ****     Computes cube.
  66:../libDaisy/src/daisy_core.h ****     \param x Number to be cubed
  67:../libDaisy/src/daisy_core.h ****     \return x ^ 3
  68:../libDaisy/src/daisy_core.h **** */
  69:../libDaisy/src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../libDaisy/src/daisy_core.h **** {
  71:../libDaisy/src/daisy_core.h ****     return (x * x) * x;
  72:../libDaisy/src/daisy_core.h **** }
  73:../libDaisy/src/daisy_core.h **** 
  74:../libDaisy/src/daisy_core.h **** /** 
  75:../libDaisy/src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  77:../libDaisy/src/daisy_core.h ****     \return Scaled number.
  78:../libDaisy/src/daisy_core.h **** */
  79:../libDaisy/src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../libDaisy/src/daisy_core.h **** {
  81:../libDaisy/src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../libDaisy/src/daisy_core.h **** }
  83:../libDaisy/src/daisy_core.h **** 
  84:../libDaisy/src/daisy_core.h **** /**
  85:../libDaisy/src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../libDaisy/src/daisy_core.h **** */
  87:../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../libDaisy/src/daisy_core.h **** {
  89:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../libDaisy/src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../libDaisy/src/daisy_core.h **** }
  93:../libDaisy/src/daisy_core.h **** 
  94:../libDaisy/src/daisy_core.h **** 
  95:../libDaisy/src/daisy_core.h **** /** 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 122


  96:../libDaisy/src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  98:../libDaisy/src/daisy_core.h ****     \return Scaled number.
  99:../libDaisy/src/daisy_core.h **** */
 100:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../libDaisy/src/daisy_core.h **** {
 102:../libDaisy/src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../libDaisy/src/daisy_core.h **** }
 104:../libDaisy/src/daisy_core.h **** 
 105:../libDaisy/src/daisy_core.h **** /**
 106:../libDaisy/src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../libDaisy/src/daisy_core.h **** */
 108:../libDaisy/src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../libDaisy/src/daisy_core.h **** {
 110:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../libDaisy/src/daisy_core.h **** }
 114:../libDaisy/src/daisy_core.h **** 
 115:../libDaisy/src/daisy_core.h **** /** 
 116:../libDaisy/src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
 118:../libDaisy/src/daisy_core.h ****     \return Scaled number.
 119:../libDaisy/src/daisy_core.h **** */
 120:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../libDaisy/src/daisy_core.h **** {
 122:../libDaisy/src/daisy_core.h ****     return (float)x * S162F_SCALE;
 5136              		.loc 17 122 12
 5137 0050 B7F91030 		ldrsh	r3, [r7, #16]
 5138 0054 07EE903A 		vmov	s15, r3	@ int
 5139 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 5140              		.loc 17 122 23
 5141 005c 9FED1F7A 		vldr.32	s14, .L256
 5142 0060 67EE877A 		vmul.f32	s15, s15, s14
 5143              	.LBE19:
 5144              	.LBE18:
 5145              		.loc 16 503 12
 5146 0064 BB68     		ldr	r3, [r7, #8]
 5147 0066 1A68     		ldr	r2, [r3]
 5148              		.loc 16 503 15
 5149 0068 7B69     		ldr	r3, [r7, #20]
 5150 006a 9B00     		lsls	r3, r3, #2
 5151 006c 1344     		add	r3, r3, r2
 5152              		.loc 16 503 51
 5153 006e B6EE007A 		vmov.f32	s14, #5.0e-1
 5154 0072 67EE877A 		vmul.f32	s15, s15, s14
 5155              		.loc 16 503 17
 5156 0076 C3ED007A 		vstr.32	s15, [r3]
 504:GrannyChordApp.cpp ****       out[1][i] = s162f(right_buf_[wav_playhead_]) * 0.5f;
 5157              		.loc 16 504 25
 5158 007a FB68     		ldr	r3, [r7, #12]
 5159 007c D3F84823 		ldr	r2, [r3, #840]
 5160              		.loc 16 504 36
 5161 0080 FB68     		ldr	r3, [r7, #12]
 5162 0082 D3F85033 		ldr	r3, [r3, #848]
 5163              		.loc 16 504 49
 5164 0086 5B00     		lsls	r3, r3, #1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 123


 5165 0088 1344     		add	r3, r3, r2
 5166              		.loc 16 504 24
 5167 008a B3F90030 		ldrsh	r3, [r3]
 5168 008e 7B82     		strh	r3, [r7, #18]	@ movhi
 5169              	.LBB20:
 5170              	.LBB21:
 5171              		.loc 17 122 12
 5172 0090 B7F91230 		ldrsh	r3, [r7, #18]
 5173 0094 07EE903A 		vmov	s15, r3	@ int
 5174 0098 F8EEE77A 		vcvt.f32.s32	s15, s15
 5175              		.loc 17 122 23
 5176 009c 9FED0F7A 		vldr.32	s14, .L256
 5177 00a0 67EE877A 		vmul.f32	s15, s15, s14
 5178              	.LBE21:
 5179              	.LBE20:
 5180              		.loc 16 504 12
 5181 00a4 BB68     		ldr	r3, [r7, #8]
 5182 00a6 0433     		adds	r3, r3, #4
 5183 00a8 1A68     		ldr	r2, [r3]
 5184              		.loc 16 504 15
 5185 00aa 7B69     		ldr	r3, [r7, #20]
 5186 00ac 9B00     		lsls	r3, r3, #2
 5187 00ae 1344     		add	r3, r3, r2
 5188              		.loc 16 504 52
 5189 00b0 B6EE007A 		vmov.f32	s14, #5.0e-1
 5190 00b4 67EE877A 		vmul.f32	s15, s15, s14
 5191              		.loc 16 504 17
 5192 00b8 C3ED007A 		vstr.32	s15, [r3]
 505:GrannyChordApp.cpp ****       wav_playhead_++;
 5193              		.loc 16 505 7
 5194 00bc FB68     		ldr	r3, [r7, #12]
 5195 00be D3F85033 		ldr	r3, [r3, #848]
 5196              		.loc 16 505 20
 5197 00c2 5A1C     		adds	r2, r3, #1
 5198 00c4 FB68     		ldr	r3, [r7, #12]
 5199 00c6 C3F85023 		str	r2, [r3, #848]
 5200              	.L251:
 501:GrannyChordApp.cpp ****     if (wav_playhead_ < filemgr_.GetSamplesPerChannel()){
 5201              		.loc 16 501 3 discriminator 2
 5202 00ca 7B69     		ldr	r3, [r7, #20]
 5203 00cc 0133     		adds	r3, r3, #1
 5204 00ce 7B61     		str	r3, [r7, #20]
 5205 00d0 9EE7     		b	.L254
 5206              	.L255:
 5207              	.LBE17:
 506:GrannyChordApp.cpp ****     }
 507:GrannyChordApp.cpp ****   }
 508:GrannyChordApp.cpp **** }
 5208              		.loc 16 508 1
 5209 00d2 00BF     		nop
 5210 00d4 1C37     		adds	r7, r7, #28
 5211              		.cfi_def_cfa_offset 12
 5212 00d6 BD46     		mov	sp, r7
 5213              		.cfi_def_cfa_register 13
 5214              		@ sp needed
 5215 00d8 90BD     		pop	{r4, r7, pc}
 5216              	.L257:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 124


 5217 00da 00BF     		.align	2
 5218              	.L256:
 5219 00dc 00000038 		.word	939524096
 5220              		.cfi_endproc
 5221              	.LFE4937:
 5223              		.section	.text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj,"ax",%progbits
 5224              		.align	1
 5225              		.global	_ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj
 5226              		.syntax unified
 5227              		.thumb
 5228              		.thumb_func
 5230              	_ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:
 5231              	.LFB4938:
 509:GrannyChordApp.cpp **** 
 510:GrannyChordApp.cpp **** /// @brief Process input audio when app is in RecordIn state
 511:GrannyChordApp.cpp **** /// @param in Input audio buffer
 512:GrannyChordApp.cpp **** /// @param out Output audio buffer
 513:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 514:GrannyChordApp.cpp **** void GrannyChordApp::ProcessRecordIn(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, si
 5232              		.loc 16 514 110
 5233              		.cfi_startproc
 5234              		@ args = 0, pretend = 0, frame = 24
 5235              		@ frame_needed = 1, uses_anonymous_args = 0
 5236              		@ link register save eliminated.
 5237 0000 80B4     		push	{r7}
 5238              		.cfi_def_cfa_offset 4
 5239              		.cfi_offset 7, -4
 5240 0002 87B0     		sub	sp, sp, #28
 5241              		.cfi_def_cfa_offset 32
 5242 0004 00AF     		add	r7, sp, #0
 5243              		.cfi_def_cfa_register 7
 5244 0006 F860     		str	r0, [r7, #12]
 5245 0008 B960     		str	r1, [r7, #8]
 5246 000a 7A60     		str	r2, [r7, #4]
 5247 000c 3B60     		str	r3, [r7]
 515:GrannyChordApp.cpp ****   const size_t MAX_RECORDING_LEN = 120*48000; /* 120s @ 48kHZ */
 5248              		.loc 16 515 16
 5249 000e 374B     		ldr	r3, .L262
 5250 0010 3B61     		str	r3, [r7, #16]
 5251              	.LBB22:
 516:GrannyChordApp.cpp ****   for (size_t i=0; i<size;i++){
 5252              		.loc 16 516 15
 5253 0012 0023     		movs	r3, #0
 5254 0014 7B61     		str	r3, [r7, #20]
 5255              	.L260:
 5256              		.loc 16 516 21 discriminator 3
 5257 0016 7A69     		ldr	r2, [r7, #20]
 5258 0018 3B68     		ldr	r3, [r7]
 5259 001a 9A42     		cmp	r2, r3
 5260 001c 60D2     		bcs	.L261
 517:GrannyChordApp.cpp ****     /* send audio in straight to output for monitoring */
 518:GrannyChordApp.cpp ****     out[0][i]=in[0][i];
 5261              		.loc 16 518 19 discriminator 2
 5262 001e BB68     		ldr	r3, [r7, #8]
 5263 0020 1A68     		ldr	r2, [r3]
 5264              		.loc 16 518 22 discriminator 2
 5265 0022 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 125


 5266 0024 9B00     		lsls	r3, r3, #2
 5267 0026 1A44     		add	r2, r2, r3
 5268              		.loc 16 518 10 discriminator 2
 5269 0028 7B68     		ldr	r3, [r7, #4]
 5270 002a 1968     		ldr	r1, [r3]
 5271              		.loc 16 518 13 discriminator 2
 5272 002c 7B69     		ldr	r3, [r7, #20]
 5273 002e 9B00     		lsls	r3, r3, #2
 5274 0030 0B44     		add	r3, r3, r1
 5275              		.loc 16 518 22 discriminator 2
 5276 0032 1268     		ldr	r2, [r2]	@ float
 5277              		.loc 16 518 14 discriminator 2
 5278 0034 1A60     		str	r2, [r3]	@ float
 519:GrannyChordApp.cpp ****     out[1][i]=in[1][i];
 5279              		.loc 16 519 19 discriminator 2
 5280 0036 BB68     		ldr	r3, [r7, #8]
 5281 0038 0433     		adds	r3, r3, #4
 5282 003a 1A68     		ldr	r2, [r3]
 5283              		.loc 16 519 22 discriminator 2
 5284 003c 7B69     		ldr	r3, [r7, #20]
 5285 003e 9B00     		lsls	r3, r3, #2
 5286 0040 1A44     		add	r2, r2, r3
 5287              		.loc 16 519 10 discriminator 2
 5288 0042 7B68     		ldr	r3, [r7, #4]
 5289 0044 0433     		adds	r3, r3, #4
 5290 0046 1968     		ldr	r1, [r3]
 5291              		.loc 16 519 13 discriminator 2
 5292 0048 7B69     		ldr	r3, [r7, #20]
 5293 004a 9B00     		lsls	r3, r3, #2
 5294 004c 0B44     		add	r3, r3, r1
 5295              		.loc 16 519 22 discriminator 2
 5296 004e 1268     		ldr	r2, [r2]	@ float
 5297              		.loc 16 519 14 discriminator 2
 5298 0050 1A60     		str	r2, [r3]	@ float
 520:GrannyChordApp.cpp ****     /* record audio in to SDRAM buffers */
 521:GrannyChordApp.cpp ****     left_buf_[record_in_pos_] = in[0][i];
 5299              		.loc 16 521 37 discriminator 2
 5300 0052 BB68     		ldr	r3, [r7, #8]
 5301 0054 1A68     		ldr	r2, [r3]
 5302              		.loc 16 521 40 discriminator 2
 5303 0056 7B69     		ldr	r3, [r7, #20]
 5304 0058 9B00     		lsls	r3, r3, #2
 5305 005a 1344     		add	r3, r3, r2
 5306 005c D3ED007A 		vldr.32	s15, [r3]
 5307              		.loc 16 521 5 discriminator 2
 5308 0060 FB68     		ldr	r3, [r7, #12]
 5309 0062 D3F84423 		ldr	r2, [r3, #836]
 5310              		.loc 16 521 15 discriminator 2
 5311 0066 FB68     		ldr	r3, [r7, #12]
 5312 0068 03F50043 		add	r3, r3, #32768
 5313 006c D3F89036 		ldr	r3, [r3, #1680]
 5314              		.loc 16 521 29 discriminator 2
 5315 0070 5B00     		lsls	r3, r3, #1
 5316 0072 1344     		add	r3, r3, r2
 5317              		.loc 16 521 31 discriminator 2
 5318 0074 FDEEE77A 		vcvt.s32.f32	s15, s15
 5319 0078 17EE902A 		vmov	r2, s15	@ int
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 126


 5320 007c 12B2     		sxth	r2, r2
 5321 007e 1A80     		strh	r2, [r3]	@ movhi
 522:GrannyChordApp.cpp ****     right_buf_[record_in_pos_] = in[1][i];
 5322              		.loc 16 522 38 discriminator 2
 5323 0080 BB68     		ldr	r3, [r7, #8]
 5324 0082 0433     		adds	r3, r3, #4
 5325 0084 1A68     		ldr	r2, [r3]
 5326              		.loc 16 522 41 discriminator 2
 5327 0086 7B69     		ldr	r3, [r7, #20]
 5328 0088 9B00     		lsls	r3, r3, #2
 5329 008a 1344     		add	r3, r3, r2
 5330 008c D3ED007A 		vldr.32	s15, [r3]
 5331              		.loc 16 522 5 discriminator 2
 5332 0090 FB68     		ldr	r3, [r7, #12]
 5333 0092 D3F84823 		ldr	r2, [r3, #840]
 5334              		.loc 16 522 16 discriminator 2
 5335 0096 FB68     		ldr	r3, [r7, #12]
 5336 0098 03F50043 		add	r3, r3, #32768
 5337 009c D3F89036 		ldr	r3, [r3, #1680]
 5338              		.loc 16 522 30 discriminator 2
 5339 00a0 5B00     		lsls	r3, r3, #1
 5340 00a2 1344     		add	r3, r3, r2
 5341              		.loc 16 522 32 discriminator 2
 5342 00a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 5343 00a8 17EE902A 		vmov	r2, s15	@ int
 5344 00ac 12B2     		sxth	r2, r2
 5345 00ae 1A80     		strh	r2, [r3]	@ movhi
 523:GrannyChordApp.cpp ****     /* wrap around recording length - if it exceeds 120s,
 524:GrannyChordApp.cpp ****       the start of the recording will be overwritten */
 525:GrannyChordApp.cpp ****     record_in_pos_ = (record_in_pos_+1)%MAX_RECORDING_LEN;
 5346              		.loc 16 525 23 discriminator 2
 5347 00b0 FB68     		ldr	r3, [r7, #12]
 5348 00b2 03F50043 		add	r3, r3, #32768
 5349 00b6 D3F89036 		ldr	r3, [r3, #1680]
 5350              		.loc 16 525 37 discriminator 2
 5351 00ba 5A1C     		adds	r2, r3, #1
 5352              		.loc 16 525 40 discriminator 2
 5353 00bc 930A     		lsrs	r3, r2, #10
 5354 00be 0C49     		ldr	r1, .L262+4
 5355 00c0 A1FB0313 		umull	r1, r3, r1, r3
 5356 00c4 9B08     		lsrs	r3, r3, #2
 5357 00c6 0949     		ldr	r1, .L262
 5358 00c8 01FB03F3 		mul	r3, r1, r3
 5359 00cc D31A     		subs	r3, r2, r3
 5360              		.loc 16 525 20 discriminator 2
 5361 00ce FA68     		ldr	r2, [r7, #12]
 5362 00d0 02F50042 		add	r2, r2, #32768
 5363 00d4 C2F89036 		str	r3, [r2, #1680]
 516:GrannyChordApp.cpp ****     /* send audio in straight to output for monitoring */
 5364              		.loc 16 516 3 discriminator 2
 5365 00d8 7B69     		ldr	r3, [r7, #20]
 5366 00da 0133     		adds	r3, r3, #1
 5367 00dc 7B61     		str	r3, [r7, #20]
 5368 00de 9AE7     		b	.L260
 5369              	.L261:
 5370              	.LBE22:
 526:GrannyChordApp.cpp ****   }
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 127


 527:GrannyChordApp.cpp **** }
 5371              		.loc 16 527 1
 5372 00e0 00BF     		nop
 5373 00e2 1C37     		adds	r7, r7, #28
 5374              		.cfi_def_cfa_offset 4
 5375 00e4 BD46     		mov	sp, r7
 5376              		.cfi_def_cfa_register 13
 5377              		@ sp needed
 5378 00e6 5DF8047B 		ldr	r7, [sp], #4
 5379              		.cfi_restore 7
 5380              		.cfi_def_cfa_offset 0
 5381 00ea 7047     		bx	lr
 5382              	.L263:
 5383              		.align	2
 5384              	.L262:
 5385 00ec 00E45700 		.word	5760000
 5386 00f0 779A2E00 		.word	3054199
 5387              		.cfi_endproc
 5388              	.LFE4938:
 5390              		.section	.text._ZN14GrannyChordApp16ProcessSynthesisEPPfj,"ax",%progbits
 5391              		.align	1
 5392              		.global	_ZN14GrannyChordApp16ProcessSynthesisEPPfj
 5393              		.syntax unified
 5394              		.thumb
 5395              		.thumb_func
 5397              	_ZN14GrannyChordApp16ProcessSynthesisEPPfj:
 5398              	.LFB4939:
 528:GrannyChordApp.cpp **** 
 529:GrannyChordApp.cpp **** /// @brief Process audio through granular synth and mix to output buffer
 530:GrannyChordApp.cpp **** /// @param out Output audio buffer
 531:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 532:GrannyChordApp.cpp **** void GrannyChordApp::ProcessSynthesis(AudioHandle::OutputBuffer out, size_t size){
 5399              		.loc 16 532 82
 5400              		.cfi_startproc
 5401              		@ args = 0, pretend = 0, frame = 32
 5402              		@ frame_needed = 1, uses_anonymous_args = 0
 5403 0000 80B5     		push	{r7, lr}
 5404              		.cfi_def_cfa_offset 8
 5405              		.cfi_offset 7, -8
 5406              		.cfi_offset 14, -4
 5407 0002 88B0     		sub	sp, sp, #32
 5408              		.cfi_def_cfa_offset 40
 5409 0004 00AF     		add	r7, sp, #0
 5410              		.cfi_def_cfa_register 7
 5411 0006 F860     		str	r0, [r7, #12]
 5412 0008 B960     		str	r1, [r7, #8]
 5413 000a 7A60     		str	r2, [r7, #4]
 5414              	.LBB23:
 533:GrannyChordApp.cpp ****   // Sample samp;
 534:GrannyChordApp.cpp ****   for (size_t i=0; i<size; i++){ 
 5415              		.loc 16 534 15
 5416 000c 0023     		movs	r3, #0
 5417 000e FB61     		str	r3, [r7, #28]
 5418              	.L266:
 5419              		.loc 16 534 21 discriminator 3
 5420 0010 FA69     		ldr	r2, [r7, #28]
 5421 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 128


 5422 0014 9A42     		cmp	r2, r3
 5423 0016 3DD2     		bcs	.L267
 5424              	.LBB24:
 535:GrannyChordApp.cpp ****     Sample samp = synth_.ProcessGrains();
 5425              		.loc 16 535 40 discriminator 2
 5426 0018 FB68     		ldr	r3, [r7, #12]
 5427 001a 2033     		adds	r3, r3, #32
 5428 001c 1846     		mov	r0, r3
 5429 001e FFF7FEFF 		bl	_ZN13GranularSynth13ProcessGrainsEv
 5430 0022 B0EE407A 		vmov.f32	s14, s0
 5431 0026 F0EE607A 		vmov.f32	s15, s1
 5432 002a 87ED057A 		vstr.32	s14, [r7, #20]
 5433 002e C7ED067A 		vstr.32	s15, [r7, #24]
 536:GrannyChordApp.cpp ****     counter++;
 5434              		.loc 16 536 5 discriminator 2
 5435 0032 FB68     		ldr	r3, [r7, #12]
 5436 0034 03F50043 		add	r3, r3, #32768
 5437 0038 D3F81437 		ldr	r3, [r3, #1812]
 5438              		.loc 16 536 12 discriminator 2
 5439 003c 0133     		adds	r3, r3, #1
 5440 003e FA68     		ldr	r2, [r7, #12]
 5441 0040 02F50042 		add	r2, r2, #32768
 5442 0044 C2F81437 		str	r3, [r2, #1812]
 537:GrannyChordApp.cpp **** 
 538:GrannyChordApp.cpp ****     samp = ProcessFX(samp);
 5443              		.loc 16 538 26 discriminator 2
 5444 0048 97ED057A 		vldr.32	s14, [r7, #20]
 5445 004c D7ED067A 		vldr.32	s15, [r7, #24]
 5446 0050 B0EE470A 		vmov.f32	s0, s14
 5447 0054 F0EE670A 		vmov.f32	s1, s15
 5448 0058 F868     		ldr	r0, [r7, #12]
 5449 005a FFF7FEFF 		bl	_ZN14GrannyChordApp9ProcessFXE6Sample
 5450 005e B0EE407A 		vmov.f32	s14, s0
 5451 0062 F0EE607A 		vmov.f32	s15, s1
 5452 0066 87ED057A 		vstr.32	s14, [r7, #20]
 5453 006a C7ED067A 		vstr.32	s15, [r7, #24]
 539:GrannyChordApp.cpp ****   //   out[0][i] = samp.left;
 540:GrannyChordApp.cpp ****   //   out[1][i] = samp.right;
 541:GrannyChordApp.cpp ****   // }
 542:GrannyChordApp.cpp ****     // limiter_.ProcessBlock(&samp.left, 1, 1.0f);
 543:GrannyChordApp.cpp ****     // limiter_.ProcessBlock(&samp.right, 1, 1.0f);
 544:GrannyChordApp.cpp ****   //   // if (counter%128000==0){
 545:GrannyChordApp.cpp ****   //   //   counter=0;
 546:GrannyChordApp.cpp ****   //   //   DebugPrint(pod_, "l: %f, r: %f", samp.left, samp.right);
 547:GrannyChordApp.cpp ****   //   // }
 548:GrannyChordApp.cpp ****     out[0][i] = samp.left;
 5454              		.loc 16 548 10 discriminator 2
 5455 006e BB68     		ldr	r3, [r7, #8]
 5456 0070 1A68     		ldr	r2, [r3]
 5457              		.loc 16 548 13 discriminator 2
 5458 0072 FB69     		ldr	r3, [r7, #28]
 5459 0074 9B00     		lsls	r3, r3, #2
 5460 0076 1344     		add	r3, r3, r2
 5461              		.loc 16 548 22 discriminator 2
 5462 0078 7A69     		ldr	r2, [r7, #20]	@ float
 5463              		.loc 16 548 15 discriminator 2
 5464 007a 1A60     		str	r2, [r3]	@ float
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 129


 549:GrannyChordApp.cpp ****     out[1][i] = samp.right;
 5465              		.loc 16 549 10 discriminator 2
 5466 007c BB68     		ldr	r3, [r7, #8]
 5467 007e 0433     		adds	r3, r3, #4
 5468 0080 1A68     		ldr	r2, [r3]
 5469              		.loc 16 549 13 discriminator 2
 5470 0082 FB69     		ldr	r3, [r7, #28]
 5471 0084 9B00     		lsls	r3, r3, #2
 5472 0086 1344     		add	r3, r3, r2
 5473              		.loc 16 549 22 discriminator 2
 5474 0088 BA69     		ldr	r2, [r7, #24]	@ float
 5475              		.loc 16 549 15 discriminator 2
 5476 008a 1A60     		str	r2, [r3]	@ float
 5477              	.LBE24:
 534:GrannyChordApp.cpp ****     Sample samp = synth_.ProcessGrains();
 5478              		.loc 16 534 3 discriminator 2
 5479 008c FB69     		ldr	r3, [r7, #28]
 5480 008e 0133     		adds	r3, r3, #1
 5481 0090 FB61     		str	r3, [r7, #28]
 5482 0092 BDE7     		b	.L266
 5483              	.L267:
 5484              	.LBE23:
 550:GrannyChordApp.cpp **** 
 551:GrannyChordApp.cpp ****   //   // if (recording_out_ && sd_writer_.GetLengthSeconds()<MAX_REC_OUT_LEN){
 552:GrannyChordApp.cpp ****   //   //   temp_interleaved_buf_[0]=out[0][i];
 553:GrannyChordApp.cpp ****   //   //   temp_interleaved_buf_[1]=out[1][i];
 554:GrannyChordApp.cpp ****   //   //   sd_writer_.Sample(temp_interleaved_buf_);
 555:GrannyChordApp.cpp ****   //   // }
 556:GrannyChordApp.cpp ****   }
 557:GrannyChordApp.cpp **** }
 5485              		.loc 16 557 1
 5486 0094 00BF     		nop
 5487 0096 2037     		adds	r7, r7, #32
 5488              		.cfi_def_cfa_offset 8
 5489 0098 BD46     		mov	sp, r7
 5490              		.cfi_def_cfa_register 13
 5491              		@ sp needed
 5492 009a 80BD     		pop	{r7, pc}
 5493              		.cfi_endproc
 5494              	.LFE4939:
 5496              		.section	.text._ZN14GrannyChordApp9ProcessFXE6Sample,"ax",%progbits
 5497              		.align	1
 5498              		.global	_ZN14GrannyChordApp9ProcessFXE6Sample
 5499              		.syntax unified
 5500              		.thumb
 5501              		.thumb_func
 5503              	_ZN14GrannyChordApp9ProcessFXE6Sample:
 5504              	.LFB4940:
 558:GrannyChordApp.cpp **** 
 559:GrannyChordApp.cpp **** Sample GrannyChordApp::ProcessFX(Sample in){
 5505              		.loc 16 559 44
 5506              		.cfi_startproc
 5507              		@ args = 0, pretend = 0, frame = 40
 5508              		@ frame_needed = 1, uses_anonymous_args = 0
 5509 0000 90B5     		push	{r4, r7, lr}
 5510              		.cfi_def_cfa_offset 12
 5511              		.cfi_offset 4, -12
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 130


 5512              		.cfi_offset 7, -8
 5513              		.cfi_offset 14, -4
 5514 0002 8DB0     		sub	sp, sp, #52
 5515              		.cfi_def_cfa_offset 64
 5516 0004 02AF     		add	r7, sp, #8
 5517              		.cfi_def_cfa 7, 56
 5518 0006 7861     		str	r0, [r7, #20]
 5519 0008 B0EE407A 		vmov.f32	s14, s0
 5520 000c F0EE607A 		vmov.f32	s15, s1
 5521 0010 87ED037A 		vstr.32	s14, [r7, #12]
 5522 0014 C7ED047A 		vstr.32	s15, [r7, #16]
 560:GrannyChordApp.cpp ****   Sample out;
 561:GrannyChordApp.cpp ****   /* hipass: remove rumble */
 562:GrannyChordApp.cpp ****   out.left = hipass_.Process(in.left);
 5523              		.loc 16 562 29
 5524 0018 7B69     		ldr	r3, [r7, #20]
 5525 001a 03F54673 		add	r3, r3, #792
 5526 001e D7ED037A 		vldr.32	s15, [r7, #12]
 5527 0022 B0EE670A 		vmov.f32	s0, s15
 5528 0026 1846     		mov	r0, r3
 5529 0028 FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 5530 002c F0EE407A 		vmov.f32	s15, s0
 5531              		.loc 16 562 12
 5532 0030 C7ED067A 		vstr.32	s15, [r7, #24]
 563:GrannyChordApp.cpp ****   out.right = hipass_.Process(in.right);
 5533              		.loc 16 563 30
 5534 0034 7B69     		ldr	r3, [r7, #20]
 5535 0036 03F54673 		add	r3, r3, #792
 5536 003a D7ED047A 		vldr.32	s15, [r7, #16]
 5537 003e B0EE670A 		vmov.f32	s0, s15
 5538 0042 1846     		mov	r0, r3
 5539 0044 FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 5540 0048 F0EE407A 		vmov.f32	s15, s0
 5541              		.loc 16 563 13
 5542 004c C7ED077A 		vstr.32	s15, [r7, #28]
 564:GrannyChordApp.cpp **** 
 565:GrannyChordApp.cpp ****   // /* apply compression to reduce gain changes */
 566:GrannyChordApp.cpp ****   // out.left = comp_.Process(out.left);
 567:GrannyChordApp.cpp ****   // out.right = comp_.Process(out.right);
 568:GrannyChordApp.cpp **** 
 569:GrannyChordApp.cpp ****   /* apply lowpass filter */
 570:GrannyChordApp.cpp ****   out.left = lowpass_moog_.Process(out.left);
 5543              		.loc 16 570 35
 5544 0050 7B69     		ldr	r3, [r7, #20]
 5545 0052 03F53573 		add	r3, r3, #724
 5546 0056 D7ED067A 		vldr.32	s15, [r7, #24]
 5547 005a B0EE670A 		vmov.f32	s0, s15
 5548 005e 1846     		mov	r0, r3
 5549 0060 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7ProcessEf
 5550 0064 F0EE407A 		vmov.f32	s15, s0
 5551              		.loc 16 570 12
 5552 0068 C7ED067A 		vstr.32	s15, [r7, #24]
 571:GrannyChordApp.cpp ****   out.right = lowpass_moog_.Process(out.right);
 5553              		.loc 16 571 36
 5554 006c 7B69     		ldr	r3, [r7, #20]
 5555 006e 03F53573 		add	r3, r3, #724
 5556 0072 D7ED077A 		vldr.32	s15, [r7, #28]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 131


 5557 0076 B0EE670A 		vmov.f32	s0, s15
 5558 007a 1846     		mov	r0, r3
 5559 007c FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7ProcessEf
 5560 0080 F0EE407A 		vmov.f32	s15, s0
 5561              		.loc 16 571 13
 5562 0084 C7ED077A 		vstr.32	s15, [r7, #28]
 572:GrannyChordApp.cpp **** 
 573:GrannyChordApp.cpp ****   /* apply stereo rotation */
 574:GrannyChordApp.cpp ****   // out = rotator_.ProcessMix(out);
 575:GrannyChordApp.cpp ****   /* apply chorus */
 576:GrannyChordApp.cpp ****   // out = chorus_.ProcessMix(out);
 577:GrannyChordApp.cpp **** 
 578:GrannyChordApp.cpp ****   /* apply reverb */
 579:GrannyChordApp.cpp ****   reverb_.ProcessMix(out.left, out.right, &out.left, &out.right);
 5563              		.loc 16 579 3
 5564 0088 7B69     		ldr	r3, [r7, #20]
 5565 008a D3F8CC02 		ldr	r0, [r3, #716]
 5566              		.loc 16 579 21
 5567 008e 07F11804 		add	r4, r7, #24
 5568 0092 07F11803 		add	r3, r7, #24
 5569 0096 1A1D     		adds	r2, r3, #4
 5570 0098 07F11801 		add	r1, r7, #24
 5571 009c 07F11803 		add	r3, r7, #24
 5572 00a0 0433     		adds	r3, r3, #4
 5573 00a2 0093     		str	r3, [sp]
 5574 00a4 2346     		mov	r3, r4
 5575 00a6 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc10ProcessMixERKfS2_PfS3_
 580:GrannyChordApp.cpp **** 
 581:GrannyChordApp.cpp ****   out.left = hicut_.Process(out.left);
 5576              		.loc 16 581 28
 5577 00aa 7B69     		ldr	r3, [r7, #20]
 5578 00ac 03F54D73 		add	r3, r3, #820
 5579 00b0 D7ED067A 		vldr.32	s15, [r7, #24]
 5580 00b4 B0EE670A 		vmov.f32	s0, s15
 5581 00b8 1846     		mov	r0, r3
 5582 00ba FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 5583 00be F0EE407A 		vmov.f32	s15, s0
 5584              		.loc 16 581 12
 5585 00c2 C7ED067A 		vstr.32	s15, [r7, #24]
 582:GrannyChordApp.cpp ****   out.right = hicut_.Process(out.right);
 5586              		.loc 16 582 29
 5587 00c6 7B69     		ldr	r3, [r7, #20]
 5588 00c8 03F54D73 		add	r3, r3, #820
 5589 00cc D7ED077A 		vldr.32	s15, [r7, #28]
 5590 00d0 B0EE670A 		vmov.f32	s0, s15
 5591 00d4 1846     		mov	r0, r3
 5592 00d6 FFF7FEFF 		bl	_ZN7daisysp7OnePole7ProcessEf
 5593 00da F0EE407A 		vmov.f32	s15, s0
 5594              		.loc 16 582 13
 5595 00de C7ED077A 		vstr.32	s15, [r7, #28]
 583:GrannyChordApp.cpp ****   return out;
 5596              		.loc 16 583 10
 5597 00e2 07F12003 		add	r3, r7, #32
 5598 00e6 07F11802 		add	r2, r7, #24
 5599 00ea 92E80300 		ldm	r2, {r0, r1}
 5600 00ee 83E80300 		stm	r3, {r0, r1}
 5601 00f2 3A6A     		ldr	r2, [r7, #32]	@ float
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 132


 5602 00f4 7B6A     		ldr	r3, [r7, #36]	@ float
 5603 00f6 07EE102A 		vmov	s14, r2
 5604 00fa 07EE903A 		vmov	s15, r3
 584:GrannyChordApp.cpp **** }
 5605              		.loc 16 584 1
 5606 00fe B0EE470A 		vmov.f32	s0, s14
 5607 0102 F0EE670A 		vmov.f32	s1, s15
 5608 0106 2C37     		adds	r7, r7, #44
 5609              		.cfi_def_cfa_offset 12
 5610 0108 BD46     		mov	sp, r7
 5611              		.cfi_def_cfa_register 13
 5612              		@ sp needed
 5613 010a 90BD     		pop	{r4, r7, pc}
 5614              		.cfi_endproc
 5615              	.LFE4940:
 5617              		.section	.rodata
 5618              		.align	2
 5619              	.LC22:
 5620 01c0 7265636F 		.ascii	"recording_%d\000"
 5620      7264696E 
 5620      675F2564 
 5620      00
 5621              		.section	.text._ZN14GrannyChordApp13RecordOutToSDEv,"ax",%progbits
 5622              		.align	1
 5623              		.global	_ZN14GrannyChordApp13RecordOutToSDEv
 5624              		.syntax unified
 5625              		.thumb
 5626              		.thumb_func
 5628              	_ZN14GrannyChordApp13RecordOutToSDEv:
 5629              	.LFB4941:
 585:GrannyChordApp.cpp **** 
 586:GrannyChordApp.cpp **** /// @brief Process audio from chord mode and mix to output buffer
 587:GrannyChordApp.cpp **** /// @param out Output audio buffer
 588:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 589:GrannyChordApp.cpp **** // void GrannyChordApp::ProcessChordMode(AudioHandle::OutputBuffer out, size_t size){
 590:GrannyChordApp.cpp **** //   // if (UserTriggeredChord()) {
 591:GrannyChordApp.cpp **** //   //   synth_.TriggerChord(out[0], out[1], size);
 592:GrannyChordApp.cpp **** //   // } else {
 593:GrannyChordApp.cpp **** //   //     std::memset(out[0], 0, size * sizeof(float));
 594:GrannyChordApp.cpp **** //   //     std::memset(out[1], 0, size * sizeof(float));
 595:GrannyChordApp.cpp **** //   // }
 596:GrannyChordApp.cpp **** // }
 597:GrannyChordApp.cpp **** 
 598:GrannyChordApp.cpp **** /// @brief Record granular synth or chord output audio to SD card
 599:GrannyChordApp.cpp **** /// @param out Output audio buffer
 600:GrannyChordApp.cpp **** /// @param size Number of samples to process in this call
 601:GrannyChordApp.cpp **** void GrannyChordApp::RecordOutToSD(){
 5630              		.loc 16 601 37
 5631              		.cfi_startproc
 5632              		@ args = 0, pretend = 0, frame = 40
 5633              		@ frame_needed = 1, uses_anonymous_args = 0
 5634 0000 80B5     		push	{r7, lr}
 5635              		.cfi_def_cfa_offset 8
 5636              		.cfi_offset 7, -8
 5637              		.cfi_offset 14, -4
 5638 0002 8AB0     		sub	sp, sp, #40
 5639              		.cfi_def_cfa_offset 48
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 133


 5640 0004 00AF     		add	r7, sp, #0
 5641              		.cfi_def_cfa_register 7
 5642 0006 7860     		str	r0, [r7, #4]
 602:GrannyChordApp.cpp ****   InitWavWriter();
 5643              		.loc 16 602 16
 5644 0008 7868     		ldr	r0, [r7, #4]
 5645 000a FFF7FEFF 		bl	_ZN14GrannyChordApp13InitWavWriterEv
 603:GrannyChordApp.cpp ****   char name[32];
 604:GrannyChordApp.cpp ****   sprintf(name,"recording_%d",recording_count_);
 5646              		.loc 16 604 10
 5647 000e 7B68     		ldr	r3, [r7, #4]
 5648 0010 03F50043 		add	r3, r3, #32768
 5649 0014 D3F89826 		ldr	r2, [r3, #1688]
 5650 0018 07F10803 		add	r3, r7, #8
 5651 001c 1049     		ldr	r1, .L271
 5652 001e 1846     		mov	r0, r3
 5653 0020 FFF7FEFF 		bl	sprintf
 605:GrannyChordApp.cpp ****   recording_count_++;
 5654              		.loc 16 605 3
 5655 0024 7B68     		ldr	r3, [r7, #4]
 5656 0026 03F50043 		add	r3, r3, #32768
 5657 002a D3F89836 		ldr	r3, [r3, #1688]
 5658              		.loc 16 605 19
 5659 002e 0133     		adds	r3, r3, #1
 5660 0030 7A68     		ldr	r2, [r7, #4]
 5661 0032 02F50042 		add	r2, r2, #32768
 5662 0036 C2F89836 		str	r3, [r2, #1688]
 606:GrannyChordApp.cpp ****   sd_writer_.OpenFile(name);
 5663              		.loc 16 606 22
 5664 003a 7B68     		ldr	r3, [r7, #4]
 5665 003c 03F58363 		add	r3, r3, #1048
 5666 0040 07F10802 		add	r2, r7, #8
 5667 0044 1146     		mov	r1, r2
 5668 0046 1846     		mov	r0, r3
 5669 0048 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE8OpenFileEPKc
 607:GrannyChordApp.cpp ****   recording_out_ = true;
 5670              		.loc 16 607 18
 5671 004c 7B68     		ldr	r3, [r7, #4]
 5672 004e 03F50043 		add	r3, r3, #32768
 5673 0052 0122     		movs	r2, #1
 5674 0054 83F89426 		strb	r2, [r3, #1684]
 608:GrannyChordApp.cpp **** }
 5675              		.loc 16 608 1
 5676 0058 00BF     		nop
 5677 005a 2837     		adds	r7, r7, #40
 5678              		.cfi_def_cfa_offset 8
 5679 005c BD46     		mov	sp, r7
 5680              		.cfi_def_cfa_register 13
 5681              		@ sp needed
 5682 005e 80BD     		pop	{r7, pc}
 5683              	.L272:
 5684              		.align	2
 5685              	.L271:
 5686 0060 C0010000 		.word	.LC22
 5687              		.cfi_endproc
 5688              	.LFE4941:
 5690              		.section	.text._ZN14GrannyChordApp15FinishRecordingEv,"ax",%progbits
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 134


 5691              		.align	1
 5692              		.global	_ZN14GrannyChordApp15FinishRecordingEv
 5693              		.syntax unified
 5694              		.thumb
 5695              		.thumb_func
 5697              	_ZN14GrannyChordApp15FinishRecordingEv:
 5698              	.LFB4942:
 609:GrannyChordApp.cpp **** 
 610:GrannyChordApp.cpp **** /// @brief cleans up after recording to SD card is finished
 611:GrannyChordApp.cpp **** void GrannyChordApp::FinishRecording(){
 5699              		.loc 16 611 39
 5700              		.cfi_startproc
 5701              		@ args = 0, pretend = 0, frame = 8
 5702              		@ frame_needed = 1, uses_anonymous_args = 0
 5703 0000 80B5     		push	{r7, lr}
 5704              		.cfi_def_cfa_offset 8
 5705              		.cfi_offset 7, -8
 5706              		.cfi_offset 14, -4
 5707 0002 82B0     		sub	sp, sp, #8
 5708              		.cfi_def_cfa_offset 16
 5709 0004 00AF     		add	r7, sp, #0
 5710              		.cfi_def_cfa_register 7
 5711 0006 7860     		str	r0, [r7, #4]
 612:GrannyChordApp.cpp ****   sd_writer_.SaveFile();
 5712              		.loc 16 612 22
 5713 0008 7B68     		ldr	r3, [r7, #4]
 5714 000a 03F58363 		add	r3, r3, #1048
 5715 000e 1846     		mov	r0, r3
 5716 0010 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE8SaveFileEv
 613:GrannyChordApp.cpp ****   recording_out_=false;
 5717              		.loc 16 613 17
 5718 0014 7B68     		ldr	r3, [r7, #4]
 5719 0016 03F50043 		add	r3, r3, #32768
 5720 001a 0022     		movs	r2, #0
 5721 001c 83F89426 		strb	r2, [r3, #1684]
 614:GrannyChordApp.cpp **** }
 5722              		.loc 16 614 1
 5723 0020 00BF     		nop
 5724 0022 0837     		adds	r7, r7, #8
 5725              		.cfi_def_cfa_offset 8
 5726 0024 BD46     		mov	sp, r7
 5727              		.cfi_def_cfa_register 13
 5728              		@ sp needed
 5729 0026 80BD     		pop	{r7, pc}
 5730              		.cfi_endproc
 5731              	.LFE4942:
 5733              		.section	.text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode,"ax",%progbits
 5734              		.align	1
 5735              		.global	_ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode
 5736              		.syntax unified
 5737              		.thumb
 5738              		.thumb_func
 5740              	_ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:
 5741              	.LFB4943:
 615:GrannyChordApp.cpp **** 
 616:GrannyChordApp.cpp **** /// @brief Updates synth parameters from hardware knob 1 input
 617:GrannyChordApp.cpp **** /// @param knob1_val float between 0-1 from knob input
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 135


 618:GrannyChordApp.cpp **** /// @param mode current synth mode that determines which parameters to update
 619:GrannyChordApp.cpp **** void GrannyChordApp::UpdateKnob1Params(float knob1_val, SynthMode mode){
 5742              		.loc 16 619 72
 5743              		.cfi_startproc
 5744              		@ args = 0, pretend = 0, frame = 16
 5745              		@ frame_needed = 1, uses_anonymous_args = 0
 5746 0000 90B5     		push	{r4, r7, lr}
 5747              		.cfi_def_cfa_offset 12
 5748              		.cfi_offset 4, -12
 5749              		.cfi_offset 7, -8
 5750              		.cfi_offset 14, -4
 5751 0002 2DED028B 		vpush.64	{d8}
 5752              		.cfi_def_cfa_offset 20
 5753              		.cfi_offset 80, -20
 5754              		.cfi_offset 81, -16
 5755 0006 85B0     		sub	sp, sp, #20
 5756              		.cfi_def_cfa_offset 40
 5757 0008 00AF     		add	r7, sp, #0
 5758              		.cfi_def_cfa_register 7
 5759 000a F860     		str	r0, [r7, #12]
 5760 000c 87ED020A 		vstr.32	s0, [r7, #8]
 5761 0010 7960     		str	r1, [r7, #4]
 620:GrannyChordApp.cpp ****   switch (mode){
 5762              		.loc 16 620 3
 5763 0012 7B68     		ldr	r3, [r7, #4]
 5764 0014 072B     		cmp	r3, #7
 5765 0016 00F2B180 		bhi	.L274
 5766 001a 01A2     		adr	r2, .L277
 5767 001c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5768              		.p2align 2
 5769              	.L277:
 5770 0020 41000000 		.word	.L284+1
 5771 0024 55000000 		.word	.L283+1
 5772 0028 69000000 		.word	.L282+1
 5773 002c 7D000000 		.word	.L281+1
 5774 0030 91000000 		.word	.L280+1
 5775 0034 A7000000 		.word	.L279+1
 5776 0038 35010000 		.word	.L278+1
 5777 003c 49010000 		.word	.L276+1
 5778              		.p2align 1
 5779              	.L284:
 621:GrannyChordApp.cpp ****     case SynthMode::Size_Position:
 622:GrannyChordApp.cpp ****       synth_.SetGrainSize(knob1_val);
 5780              		.loc 16 622 26
 5781 0040 FB68     		ldr	r3, [r7, #12]
 5782 0042 2033     		adds	r3, r3, #32
 5783 0044 D7ED027A 		vldr.32	s15, [r7, #8]
 5784 0048 B0EE670A 		vmov.f32	s0, s15
 5785 004c 1846     		mov	r0, r3
 5786 004e FFF7FEFF 		bl	_ZN13GranularSynth12SetGrainSizeEf
 623:GrannyChordApp.cpp ****       return;
 5787              		.loc 16 623 7
 5788 0052 93E0     		b	.L274
 5789              	.L283:
 624:GrannyChordApp.cpp ****     case SynthMode::Pitch_ActiveGrains:
 625:GrannyChordApp.cpp ****       synth_.SetPitchRatio(knob1_val);
 5790              		.loc 16 625 27
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 136


 5791 0054 FB68     		ldr	r3, [r7, #12]
 5792 0056 2033     		adds	r3, r3, #32
 5793 0058 D7ED027A 		vldr.32	s15, [r7, #8]
 5794 005c B0EE670A 		vmov.f32	s0, s15
 5795 0060 1846     		mov	r0, r3
 5796 0062 FFF7FEFF 		bl	_ZN13GranularSynth13SetPitchRatioEf
 626:GrannyChordApp.cpp ****       return;
 5797              		.loc 16 626 7
 5798 0066 89E0     		b	.L274
 5799              	.L282:
 627:GrannyChordApp.cpp ****     case SynthMode::Pan_Direction:
 628:GrannyChordApp.cpp ****       synth_.SetPan(knob1_val);
 5800              		.loc 16 628 20
 5801 0068 FB68     		ldr	r3, [r7, #12]
 5802 006a 2033     		adds	r3, r3, #32
 5803 006c D7ED027A 		vldr.32	s15, [r7, #8]
 5804 0070 B0EE670A 		vmov.f32	s0, s15
 5805 0074 1846     		mov	r0, r3
 5806 0076 FFF7FEFF 		bl	_ZN13GranularSynth6SetPanEf
 629:GrannyChordApp.cpp ****       return;
 5807              		.loc 16 629 7
 5808 007a 7FE0     		b	.L274
 5809              	.L281:
 630:GrannyChordApp.cpp ****     case SynthMode::RndAmount_RndFreq:
 631:GrannyChordApp.cpp ****       synth_.SetRndAmount(knob1_val);
 5810              		.loc 16 631 26
 5811 007c FB68     		ldr	r3, [r7, #12]
 5812 007e 2033     		adds	r3, r3, #32
 5813 0080 D7ED027A 		vldr.32	s15, [r7, #8]
 5814 0084 B0EE670A 		vmov.f32	s0, s15
 5815 0088 1846     		mov	r0, r3
 5816 008a FFF7FEFF 		bl	_ZN13GranularSynth12SetRndAmountEf
 632:GrannyChordApp.cpp ****       break;
 5817              		.loc 16 632 7
 5818 008e 75E0     		b	.L274
 5819              	.L280:
 633:GrannyChordApp.cpp ****     case SynthMode::StereoRotate:
 634:GrannyChordApp.cpp ****       rotator_.SetFreq(knob1_val);
 5820              		.loc 16 634 23
 5821 0090 FB68     		ldr	r3, [r7, #12]
 5822 0092 03F54A73 		add	r3, r3, #808
 5823 0096 D7ED027A 		vldr.32	s15, [r7, #8]
 5824 009a B0EE670A 		vmov.f32	s0, s15
 5825 009e 1846     		mov	r0, r3
 5826 00a0 FFF7FEFF 		bl	_ZN13StereoRotator7SetFreqEf
 635:GrannyChordApp.cpp ****       return;
 5827              		.loc 16 635 7
 5828 00a4 6AE0     		b	.L274
 5829              	.L279:
 636:GrannyChordApp.cpp ****     case SynthMode::Chorus:
 637:GrannyChordApp.cpp ****       chorus_.SetLfoDepth(knob1_val);
 5830              		.loc 16 637 7
 5831 00a6 FB68     		ldr	r3, [r7, #12]
 5832 00a8 D3F8D032 		ldr	r3, [r3, #720]
 5833              		.loc 16 637 26
 5834 00ac D7ED027A 		vldr.32	s15, [r7, #8]
 5835 00b0 B0EE670A 		vmov.f32	s0, s15
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 137


 5836 00b4 1846     		mov	r0, r3
 5837 00b6 FFF7FEFF 		bl	_ZN7daisysp6Chorus11SetLfoDepthEf
 638:GrannyChordApp.cpp ****       /* set chorus left/right channel to (synth pan +/- 20% of knob value) */
 639:GrannyChordApp.cpp ****       chorus_.SetPan(fclamp(synth_.GetPan()+(0.2f*knob1_val),0,1), (fclamp(synth_.GetPan()-(0.2f*kn
 5838              		.loc 16 639 7
 5839 00ba FB68     		ldr	r3, [r7, #12]
 5840 00bc D3F8D042 		ldr	r4, [r3, #720]
 5841              		.loc 16 639 42
 5842 00c0 FB68     		ldr	r3, [r7, #12]
 5843 00c2 2033     		adds	r3, r3, #32
 5844 00c4 1846     		mov	r0, r3
 5845 00c6 FFF7FEFF 		bl	_ZN13GranularSynth6GetPanEv
 5846 00ca B0EE407A 		vmov.f32	s14, s0
 5847              		.loc 16 639 50
 5848 00ce D7ED027A 		vldr.32	s15, [r7, #8]
 5849 00d2 DFED2D6A 		vldr.32	s13, .L285
 5850 00d6 67EEA67A 		vmul.f32	s15, s15, s13
 5851              		.loc 16 639 21
 5852 00da 77EE277A 		vadd.f32	s15, s14, s15
 5853 00de B7EE001A 		vmov.f32	s2, #1.0e+0
 5854 00e2 DFED2A0A 		vldr.32	s1, .L285+4
 5855 00e6 B0EE670A 		vmov.f32	s0, s15
 5856 00ea FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 5857 00ee B0EE408A 		vmov.f32	s16, s0
 5858              		.loc 16 639 89
 5859 00f2 FB68     		ldr	r3, [r7, #12]
 5860 00f4 2033     		adds	r3, r3, #32
 5861 00f6 1846     		mov	r0, r3
 5862 00f8 FFF7FEFF 		bl	_ZN13GranularSynth6GetPanEv
 5863 00fc B0EE407A 		vmov.f32	s14, s0
 5864              		.loc 16 639 97
 5865 0100 D7ED027A 		vldr.32	s15, [r7, #8]
 5866 0104 DFED206A 		vldr.32	s13, .L285
 5867 0108 67EEA67A 		vmul.f32	s15, s15, s13
 5868              		.loc 16 639 21
 5869 010c 77EE677A 		vsub.f32	s15, s14, s15
 5870 0110 B7EE001A 		vmov.f32	s2, #1.0e+0
 5871 0114 DFED1D0A 		vldr.32	s1, .L285+4
 5872 0118 B0EE670A 		vmov.f32	s0, s15
 5873 011c FFF7FEFF 		bl	_ZN7daisysp6fclampEfff
 5874 0120 F0EE407A 		vmov.f32	s15, s0
 5875 0124 F0EE670A 		vmov.f32	s1, s15
 5876 0128 B0EE480A 		vmov.f32	s0, s16
 5877 012c 2046     		mov	r0, r4
 5878 012e FFF7FEFF 		bl	_ZN7daisysp6Chorus6SetPanEff
 640:GrannyChordApp.cpp ****       return;     
 5879              		.loc 16 640 7
 5880 0132 23E0     		b	.L274
 5881              	.L278:
 641:GrannyChordApp.cpp ****     case SynthMode::Reverb:
 642:GrannyChordApp.cpp ****        /* set reverb feedback ie tail length */
 643:GrannyChordApp.cpp ****       reverb_.SetFeedback(knob1_val);
 5882              		.loc 16 643 7
 5883 0134 FB68     		ldr	r3, [r7, #12]
 5884 0136 D3F8CC32 		ldr	r3, [r3, #716]
 5885              		.loc 16 643 26
 5886 013a 07F10802 		add	r2, r7, #8
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 138


 5887 013e 1146     		mov	r1, r2
 5888 0140 1846     		mov	r0, r3
 5889 0142 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc11SetFeedbackERKf
 644:GrannyChordApp.cpp ****       return;
 5890              		.loc 16 644 7
 5891 0146 19E0     		b	.L274
 5892              	.L276:
 645:GrannyChordApp.cpp ****     case SynthMode::Filter:
 646:GrannyChordApp.cpp ****       /* map knob value to frequency range with an exponential curve */
 647:GrannyChordApp.cpp ****       knob1_val = fmap(knob1_val, LOPASS_LOWER_BOUND, LOPASS_UPPER_BOUND, daisysp::Mapping::EXP);
 5893              		.loc 16 647 23
 5894 0148 D7ED027A 		vldr.32	s15, [r7, #8]
 5895 014c 0120     		movs	r0, #1
 5896 014e 9FED101A 		vldr.32	s2, .L285+8
 5897 0152 F3EE040A 		vmov.f32	s1, #2.0e+1
 5898 0156 B0EE670A 		vmov.f32	s0, s15
 5899 015a FFF7FEFF 		bl	_ZN7daisysp4fmapEfffNS_7MappingE
 5900 015e F0EE407A 		vmov.f32	s15, s0
 5901              		.loc 16 647 17
 5902 0162 C7ED027A 		vstr.32	s15, [r7, #8]
 648:GrannyChordApp.cpp ****       /* set cutoff frequency of low pass moog filter */
 649:GrannyChordApp.cpp ****       lowpass_moog_.SetFreq(knob1_val);
 5903              		.loc 16 649 28
 5904 0166 FB68     		ldr	r3, [r7, #12]
 5905 0168 03F53573 		add	r3, r3, #724
 5906 016c D7ED027A 		vldr.32	s15, [r7, #8]
 5907 0170 B0EE670A 		vmov.f32	s0, s15
 5908 0174 1846     		mov	r0, r3
 5909 0176 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7SetFreqEf
 650:GrannyChordApp.cpp ****       return;
 5910              		.loc 16 650 7
 5911 017a 00BF     		nop
 5912              	.L274:
 651:GrannyChordApp.cpp ****   }
 652:GrannyChordApp.cpp **** }
 5913              		.loc 16 652 1
 5914 017c 1437     		adds	r7, r7, #20
 5915              		.cfi_def_cfa_offset 20
 5916 017e BD46     		mov	sp, r7
 5917              		.cfi_def_cfa_register 13
 5918              		@ sp needed
 5919 0180 BDEC028B 		vldm	sp!, {d8}
 5920              		.cfi_restore 80
 5921              		.cfi_restore 81
 5922              		.cfi_def_cfa_offset 12
 5923 0184 90BD     		pop	{r4, r7, pc}
 5924              	.L286:
 5925 0186 00BF     		.align	2
 5926              	.L285:
 5927 0188 CDCC4C3E 		.word	1045220557
 5928 018c 00000000 		.word	0
 5929 0190 00A08C46 		.word	1183621120
 5930              		.cfi_endproc
 5931              	.LFE4943:
 5933              		.section	.text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode,"ax",%progbits
 5934              		.align	1
 5935              		.global	_ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 139


 5936              		.syntax unified
 5937              		.thumb
 5938              		.thumb_func
 5940              	_ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:
 5941              	.LFB4944:
 653:GrannyChordApp.cpp **** 
 654:GrannyChordApp.cpp **** /// @brief Updates synth parameters from hardware knob 2 input
 655:GrannyChordApp.cpp **** /// @param knob1_val float between 0-1 from knob input
 656:GrannyChordApp.cpp **** /// @param mode current synth mode that determines which parameters to update
 657:GrannyChordApp.cpp **** void GrannyChordApp::UpdateKnob2Params(float knob2_val, SynthMode mode){
 5942              		.loc 16 657 72
 5943              		.cfi_startproc
 5944              		@ args = 0, pretend = 0, frame = 16
 5945              		@ frame_needed = 1, uses_anonymous_args = 0
 5946 0000 80B5     		push	{r7, lr}
 5947              		.cfi_def_cfa_offset 8
 5948              		.cfi_offset 7, -8
 5949              		.cfi_offset 14, -4
 5950 0002 84B0     		sub	sp, sp, #16
 5951              		.cfi_def_cfa_offset 24
 5952 0004 00AF     		add	r7, sp, #0
 5953              		.cfi_def_cfa_register 7
 5954 0006 F860     		str	r0, [r7, #12]
 5955 0008 87ED020A 		vstr.32	s0, [r7, #8]
 5956 000c 7960     		str	r1, [r7, #4]
 658:GrannyChordApp.cpp ****   switch (mode){
 5957              		.loc 16 658 3
 5958 000e 7B68     		ldr	r3, [r7, #4]
 5959 0010 072B     		cmp	r3, #7
 5960 0012 62D8     		bhi	.L287
 5961 0014 01A2     		adr	r2, .L290
 5962 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5963 001a 00BF     		.p2align 2
 5964              	.L290:
 5965 001c 3D000000 		.word	.L297+1
 5966 0020 4D000000 		.word	.L296+1
 5967 0024 5D000000 		.word	.L295+1
 5968 0028 6D000000 		.word	.L294+1
 5969 002c 7D000000 		.word	.L293+1
 5970 0030 8F000000 		.word	.L292+1
 5971 0034 A1000000 		.word	.L291+1
 5972 0038 B3000000 		.word	.L289+1
 5973              		.p2align 1
 5974              	.L297:
 659:GrannyChordApp.cpp ****     case SynthMode::Size_Position:
 660:GrannyChordApp.cpp ****       synth_.SetSpawnPos(knob2_val);
 5975              		.loc 16 660 25
 5976 003c FB68     		ldr	r3, [r7, #12]
 5977 003e 2033     		adds	r3, r3, #32
 5978 0040 97ED020A 		vldr.32	s0, [r7, #8]
 5979 0044 1846     		mov	r0, r3
 5980 0046 FFF7FEFF 		bl	_ZN13GranularSynth11SetSpawnPosEf
 661:GrannyChordApp.cpp ****       return;
 5981              		.loc 16 661 7
 5982 004a 46E0     		b	.L287
 5983              	.L296:
 662:GrannyChordApp.cpp ****     case SynthMode::Pitch_ActiveGrains:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 140


 663:GrannyChordApp.cpp ****       synth_.SetTargetActiveGrains(knob2_val);
 5984              		.loc 16 663 35
 5985 004c FB68     		ldr	r3, [r7, #12]
 5986 004e 2033     		adds	r3, r3, #32
 5987 0050 97ED020A 		vldr.32	s0, [r7, #8]
 5988 0054 1846     		mov	r0, r3
 5989 0056 FFF7FEFF 		bl	_ZN13GranularSynth21SetTargetActiveGrainsEf
 664:GrannyChordApp.cpp ****       return;
 5990              		.loc 16 664 7
 5991 005a 3EE0     		b	.L287
 5992              	.L295:
 665:GrannyChordApp.cpp ****     case SynthMode::Pan_Direction:
 666:GrannyChordApp.cpp ****       synth_.SetDirection(knob2_val);
 5993              		.loc 16 666 26
 5994 005c FB68     		ldr	r3, [r7, #12]
 5995 005e 2033     		adds	r3, r3, #32
 5996 0060 97ED020A 		vldr.32	s0, [r7, #8]
 5997 0064 1846     		mov	r0, r3
 5998 0066 FFF7FEFF 		bl	_ZN13GranularSynth12SetDirectionEf
 667:GrannyChordApp.cpp ****       return;
 5999              		.loc 16 667 7
 6000 006a 36E0     		b	.L287
 6001              	.L294:
 668:GrannyChordApp.cpp ****     case SynthMode::RndAmount_RndFreq:
 669:GrannyChordApp.cpp ****       synth_.SetRndBias(knob2_val);
 6002              		.loc 16 669 24
 6003 006c FB68     		ldr	r3, [r7, #12]
 6004 006e 2033     		adds	r3, r3, #32
 6005 0070 97ED020A 		vldr.32	s0, [r7, #8]
 6006 0074 1846     		mov	r0, r3
 6007 0076 FFF7FEFF 		bl	_ZN13GranularSynth10SetRndBiasEf
 670:GrannyChordApp.cpp ****       break;
 6008              		.loc 16 670 7
 6009 007a 2EE0     		b	.L287
 6010              	.L293:
 671:GrannyChordApp.cpp ****     case SynthMode::StereoRotate:
 672:GrannyChordApp.cpp ****       rotator_.SetMix(knob2_val);
 6011              		.loc 16 672 22
 6012 007c FB68     		ldr	r3, [r7, #12]
 6013 007e 03F54A73 		add	r3, r3, #808
 6014 0082 97ED020A 		vldr.32	s0, [r7, #8]
 6015 0086 1846     		mov	r0, r3
 6016 0088 FFF7FEFF 		bl	_ZN13StereoRotator6SetMixEf
 673:GrannyChordApp.cpp ****       return;
 6017              		.loc 16 673 7
 6018 008c 25E0     		b	.L287
 6019              	.L292:
 674:GrannyChordApp.cpp ****     case SynthMode::Chorus:
 675:GrannyChordApp.cpp ****       chorus_.SetMix(knob2_val);
 6020              		.loc 16 675 7
 6021 008e FB68     		ldr	r3, [r7, #12]
 6022 0090 D3F8D032 		ldr	r3, [r3, #720]
 6023              		.loc 16 675 21
 6024 0094 97ED020A 		vldr.32	s0, [r7, #8]
 6025 0098 1846     		mov	r0, r3
 6026 009a FFF7FEFF 		bl	_ZN7daisysp6Chorus6SetMixEf
 676:GrannyChordApp.cpp ****       return;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 141


 6027              		.loc 16 676 7
 6028 009e 1CE0     		b	.L287
 6029              	.L291:
 677:GrannyChordApp.cpp ****     case SynthMode::Reverb:
 678:GrannyChordApp.cpp ****         reverb_.SetMix(knob2_val);
 6030              		.loc 16 678 9
 6031 00a0 FB68     		ldr	r3, [r7, #12]
 6032 00a2 D3F8CC32 		ldr	r3, [r3, #716]
 6033              		.loc 16 678 23
 6034 00a6 97ED020A 		vldr.32	s0, [r7, #8]
 6035 00aa 1846     		mov	r0, r3
 6036 00ac FFF7FEFF 		bl	_ZN7daisysp8ReverbSc6SetMixEf
 679:GrannyChordApp.cpp ****         return;
 6037              		.loc 16 679 9
 6038 00b0 13E0     		b	.L287
 6039              	.L289:
 680:GrannyChordApp.cpp ****     case SynthMode::Filter:
 681:GrannyChordApp.cpp ****       /* map knob value to frequency range with linear curve */
 682:GrannyChordApp.cpp ****       knob2_val = fmap(knob2_val, HIPASS_LOWER_BOUND, HIPASS_UPPER_BOUND, daisysp::Mapping::EXP);
 6040              		.loc 16 682 23
 6041 00b2 0120     		movs	r0, #1
 6042 00b4 9FED0A1A 		vldr.32	s2, .L298
 6043 00b8 DFED0A0A 		vldr.32	s1, .L298+4
 6044 00bc 97ED020A 		vldr.32	s0, [r7, #8]
 6045 00c0 FFF7FEFF 		bl	_ZN7daisysp4fmapEfffNS_7MappingE
 6046 00c4 87ED020A 		vstr.32	s0, [r7, #8]
 683:GrannyChordApp.cpp ****       /* set cutoff frequency for high pass filter */
 684:GrannyChordApp.cpp ****       hipass_.SetFrequency(knob2_val);
 6047              		.loc 16 684 27
 6048 00c8 FB68     		ldr	r3, [r7, #12]
 6049 00ca 03F54673 		add	r3, r3, #792
 6050 00ce 97ED020A 		vldr.32	s0, [r7, #8]
 6051 00d2 1846     		mov	r0, r3
 6052 00d4 FFF7FEFF 		bl	_ZN7daisysp7OnePole12SetFrequencyEf
 685:GrannyChordApp.cpp ****       return;
 6053              		.loc 16 685 7
 6054 00d8 00BF     		nop
 6055              	.L287:
 686:GrannyChordApp.cpp ****   }
 687:GrannyChordApp.cpp **** }
 6056              		.loc 16 687 1
 6057 00da 1037     		adds	r7, r7, #16
 6058              		.cfi_def_cfa_offset 8
 6059 00dc BD46     		mov	sp, r7
 6060              		.cfi_def_cfa_register 13
 6061              		@ sp needed
 6062 00de 80BD     		pop	{r7, pc}
 6063              	.L299:
 6064              		.align	2
 6065              	.L298:
 6066 00e0 0AD7233C 		.word	1008981770
 6067 00e4 17B7D139 		.word	970045207
 6068              		.cfi_endproc
 6069              	.LFE4944:
 6071              		.section	.text._ZN14GrannyChordApp15MapKnobDeadzoneEf,"axG",%progbits,_ZN14GrannyChordApp15MapKnob
 6072              		.align	1
 6073              		.weak	_ZN14GrannyChordApp15MapKnobDeadzoneEf
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 142


 6074              		.syntax unified
 6075              		.thumb
 6076              		.thumb_func
 6078              	_ZN14GrannyChordApp15MapKnobDeadzoneEf:
 6079              	.LFB4945:
 688:GrannyChordApp.cpp **** 
 689:GrannyChordApp.cpp **** 
 690:GrannyChordApp.cpp **** 
 691:GrannyChordApp.cpp **** /*
 692:GrannyChordApp.cpp **** 
 693:GrannyChordApp.cpp **** encoder for strum??? nice clicks 
 694:GrannyChordApp.cpp **** knob1 pitch? 
 695:GrannyChordApp.cpp **** knob2 position?
 696:GrannyChordApp.cpp **** buttons chords? 
 697:GrannyChordApp.cpp **** click encoder for granular stuff
 698:GrannyChordApp.cpp **** 
 699:GrannyChordApp.cpp **** */
 700:GrannyChordApp.cpp **** 
 701:GrannyChordApp.cpp **** /* knobs on the Pod have deadzones around 0 and 1 so we adjust for this */
 702:GrannyChordApp.cpp **** inline float GrannyChordApp::MapKnobDeadzone(float knob_val ){
 6080              		.loc 16 702 62
 6081              		.cfi_startproc
 6082              		@ args = 0, pretend = 0, frame = 8
 6083              		@ frame_needed = 1, uses_anonymous_args = 0
 6084              		@ link register save eliminated.
 6085 0000 80B4     		push	{r7}
 6086              		.cfi_def_cfa_offset 4
 6087              		.cfi_offset 7, -4
 6088 0002 83B0     		sub	sp, sp, #12
 6089              		.cfi_def_cfa_offset 16
 6090 0004 00AF     		add	r7, sp, #0
 6091              		.cfi_def_cfa_register 7
 6092 0006 7860     		str	r0, [r7, #4]
 6093 0008 87ED000A 		vstr.32	s0, [r7]
 703:GrannyChordApp.cpp ****   if (knob_val<=0.01f) return 0.0f;
 6094              		.loc 16 703 3
 6095 000c D7ED007A 		vldr.32	s15, [r7]
 6096 0010 9FED0F7A 		vldr.32	s14, .L310
 6097 0014 F4EEC77A 		vcmpe.f32	s15, s14
 6098 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6099 001c 02D8     		bhi	.L308
 6100              		.loc 16 703 31 discriminator 1
 6101 001e 4FF00003 		mov	r3, #0
 6102 0022 0CE0     		b	.L303
 6103              	.L308:
 704:GrannyChordApp.cpp ****   if (knob_val>=0.99f) return 1.0f;
 6104              		.loc 16 704 3
 6105 0024 D7ED007A 		vldr.32	s15, [r7]
 6106 0028 9FED0A7A 		vldr.32	s14, .L310+4
 6107 002c F4EEC77A 		vcmpe.f32	s15, s14
 6108 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6109 0034 02DB     		blt	.L309
 6110              		.loc 16 704 31 discriminator 1
 6111 0036 4FF07E53 		mov	r3, #1065353216
 6112 003a 00E0     		b	.L303
 6113              	.L309:
 705:GrannyChordApp.cpp ****   return knob_val;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 143


 6114              		.loc 16 705 10
 6115 003c 3B68     		ldr	r3, [r7]	@ float
 6116              	.L303:
 706:GrannyChordApp.cpp **** }
 6117              		.loc 16 706 1
 6118 003e 07EE903A 		vmov	s15, r3
 6119 0042 B0EE670A 		vmov.f32	s0, s15
 6120 0046 0C37     		adds	r7, r7, #12
 6121              		.cfi_def_cfa_offset 4
 6122 0048 BD46     		mov	sp, r7
 6123              		.cfi_def_cfa_register 13
 6124              		@ sp needed
 6125 004a 5DF8047B 		ldr	r7, [sp], #4
 6126              		.cfi_restore 7
 6127              		.cfi_def_cfa_offset 0
 6128 004e 7047     		bx	lr
 6129              	.L311:
 6130              		.align	2
 6131              	.L310:
 6132 0050 0AD7233C 		.word	1008981770
 6133 0054 A4707D3F 		.word	1065185444
 6134              		.cfi_endproc
 6135              	.LFE4945:
 6137              		.section	.text._ZN14GrannyChordApp18UpdateKnobPassThruEPbff,"axG",%progbits,_ZN14GrannyChordApp18U
 6138              		.align	1
 6139              		.weak	_ZN14GrannyChordApp18UpdateKnobPassThruEPbff
 6140              		.syntax unified
 6141              		.thumb
 6142              		.thumb_func
 6144              	_ZN14GrannyChordApp18UpdateKnobPassThruEPbff:
 6145              	.LFB4946:
 707:GrannyChordApp.cpp **** 
 708:GrannyChordApp.cpp **** inline bool GrannyChordApp::UpdateKnobPassThru(bool *knob_latched, float curr_knob_val, float prev_
 6146              		.loc 16 708 106
 6147              		.cfi_startproc
 6148              		@ args = 0, pretend = 0, frame = 16
 6149              		@ frame_needed = 1, uses_anonymous_args = 0
 6150 0000 80B5     		push	{r7, lr}
 6151              		.cfi_def_cfa_offset 8
 6152              		.cfi_offset 7, -8
 6153              		.cfi_offset 14, -4
 6154 0002 84B0     		sub	sp, sp, #16
 6155              		.cfi_def_cfa_offset 24
 6156 0004 00AF     		add	r7, sp, #0
 6157              		.cfi_def_cfa_register 7
 6158 0006 F860     		str	r0, [r7, #12]
 6159 0008 B960     		str	r1, [r7, #8]
 6160 000a 87ED010A 		vstr.32	s0, [r7, #4]
 6161 000e C7ED000A 		vstr.32	s1, [r7]
 709:GrannyChordApp.cpp ****   if ((*knob_latched)){
 6162              		.loc 16 709 8
 6163 0012 BB68     		ldr	r3, [r7, #8]
 6164 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6165              		.loc 16 709 3
 6166 0016 002B     		cmp	r3, #0
 6167 0018 20D0     		beq	.L313
 710:GrannyChordApp.cpp ****     if (fabs(curr_knob_val - prev_param)<0.0001){
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 144


 6168              		.loc 16 710 13
 6169 001a 97ED017A 		vldr.32	s14, [r7, #4]
 6170 001e D7ED007A 		vldr.32	s15, [r7]
 6171 0022 77EE677A 		vsub.f32	s15, s14, s15
 6172 0026 B0EE670A 		vmov.f32	s0, s15
 6173 002a FFF7FEFF 		bl	_ZSt4fabsf
 6174 002e F0EE407A 		vmov.f32	s15, s0
 6175 0032 B7EEE77A 		vcvt.f64.f32	d7, s15
 6176              		.loc 16 710 41
 6177 0036 9FED0C6B 		vldr.64	d6, .L316
 6178 003a B4EEC67B 		vcmpe.f64	d7, d6
 6179 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6180 0042 4CBF     		ite	mi
 6181 0044 0123     		movmi	r3, #1
 6182 0046 0023     		movpl	r3, #0
 6183 0048 DBB2     		uxtb	r3, r3
 6184              		.loc 16 710 5
 6185 004a 002B     		cmp	r3, #0
 6186 004c 04D0     		beq	.L314
 711:GrannyChordApp.cpp ****       (*knob_latched) = false;
 6187              		.loc 16 711 23
 6188 004e BB68     		ldr	r3, [r7, #8]
 6189 0050 0022     		movs	r2, #0
 6190 0052 1A70     		strb	r2, [r3]
 712:GrannyChordApp.cpp ****       return true;
 6191              		.loc 16 712 14
 6192 0054 0123     		movs	r3, #1
 6193 0056 02E0     		b	.L315
 6194              	.L314:
 713:GrannyChordApp.cpp ****     }
 714:GrannyChordApp.cpp ****     else return false;
 6195              		.loc 16 714 17
 6196 0058 0023     		movs	r3, #0
 6197 005a 00E0     		b	.L315
 6198              	.L313:
 715:GrannyChordApp.cpp ****   }
 716:GrannyChordApp.cpp ****   else return true;
 6199              		.loc 16 716 15
 6200 005c 0123     		movs	r3, #1
 6201              	.L315:
 717:GrannyChordApp.cpp **** }
 6202              		.loc 16 717 1
 6203 005e 1846     		mov	r0, r3
 6204 0060 1037     		adds	r7, r7, #16
 6205              		.cfi_def_cfa_offset 8
 6206 0062 BD46     		mov	sp, r7
 6207              		.cfi_def_cfa_register 13
 6208              		@ sp needed
 6209 0064 80BD     		pop	{r7, pc}
 6210              	.L317:
 6211 0066 00BF     		.align	3
 6212              	.L316:
 6213 0068 2D431CEB 		.word	-350469331
 6214 006c E2361A3F 		.word	1058682594
 6215              		.cfi_endproc
 6216              	.LFE4946:
 6218              		.section	.rodata
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 145


 6219 01cd 000000   		.align	2
 6220              	.LC23:
 6221 01d0 53746174 		.ascii	"State now in: SelectFile\000"
 6221      65206E6F 
 6221      7720696E 
 6221      3A205365 
 6221      6C656374 
 6222 01e9 000000   		.align	2
 6223              	.LC24:
 6224 01ec 53746174 		.ascii	"State now in: RecordIn\000"
 6224      65206E6F 
 6224      7720696E 
 6224      3A205265 
 6224      636F7264 
 6225 0203 00       		.align	2
 6226              	.LC25:
 6227 0204 53746174 		.ascii	"State now in: PlayWAV\000"
 6227      65206E6F 
 6227      7720696E 
 6227      3A20506C 
 6227      61795741 
 6228 021a 0000     		.align	2
 6229              	.LC26:
 6230 021c 53746174 		.ascii	"State now in: Synthesis\000"
 6230      65206E6F 
 6230      7720696E 
 6230      3A205379 
 6230      6E746865 
 6231              		.align	2
 6232              	.LC27:
 6233 0234 53746174 		.ascii	"State now in: Error\000"
 6233      65206E6F 
 6233      7720696E 
 6233      3A204572 
 6233      726F7200 
 6234              		.section	.text._ZN14GrannyChordApp15DebugPrintStateE8AppState,"ax",%progbits
 6235              		.align	1
 6236              		.global	_ZN14GrannyChordApp15DebugPrintStateE8AppState
 6237              		.syntax unified
 6238              		.thumb
 6239              		.thumb_func
 6241              	_ZN14GrannyChordApp15DebugPrintStateE8AppState:
 6242              	.LFB4947:
 718:GrannyChordApp.cpp **** 
 719:GrannyChordApp.cpp **** 
 720:GrannyChordApp.cpp **** 
 721:GrannyChordApp.cpp **** void GrannyChordApp::DebugPrintState(AppState state){
 6243              		.loc 16 721 53
 6244              		.cfi_startproc
 6245              		@ args = 0, pretend = 0, frame = 8
 6246              		@ frame_needed = 1, uses_anonymous_args = 0
 6247 0000 80B5     		push	{r7, lr}
 6248              		.cfi_def_cfa_offset 8
 6249              		.cfi_offset 7, -8
 6250              		.cfi_offset 14, -4
 6251 0002 82B0     		sub	sp, sp, #8
 6252              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 146


 6253 0004 00AF     		add	r7, sp, #0
 6254              		.cfi_def_cfa_register 7
 6255 0006 7860     		str	r0, [r7, #4]
 6256 0008 3960     		str	r1, [r7]
 722:GrannyChordApp.cpp ****   switch(state){
 6257              		.loc 16 722 3
 6258 000a 3B68     		ldr	r3, [r7]
 6259 000c 032B     		cmp	r3, #3
 6260 000e 1BD8     		bhi	.L319
 6261 0010 01A2     		adr	r2, .L321
 6262 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6263 0016 00BF     		.p2align 2
 6264              	.L321:
 6265 0018 29000000 		.word	.L324+1
 6266 001c 39000000 		.word	.L323+1
 6267 0020 41000000 		.word	.L322+1
 6268 0024 31000000 		.word	.L320+1
 6269              		.p2align 1
 6270              	.L324:
 723:GrannyChordApp.cpp ****     case AppState::SelectFile:
 724:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: SelectFile");
 6271              		.loc 16 724 7
 6272 0028 0B48     		ldr	r0, .L326
 6273 002a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 725:GrannyChordApp.cpp ****       return;
 6274              		.loc 16 725 7
 6275 002e 0FE0     		b	.L318
 6276              	.L320:
 726:GrannyChordApp.cpp ****     case AppState::RecordIn:
 727:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: RecordIn");
 6277              		.loc 16 727 7
 6278 0030 0A48     		ldr	r0, .L326+4
 6279 0032 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 728:GrannyChordApp.cpp ****       return;
 6280              		.loc 16 728 7
 6281 0036 0BE0     		b	.L318
 6282              	.L323:
 729:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 730:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: PlayWAV");
 6283              		.loc 16 730 7
 6284 0038 0948     		ldr	r0, .L326+8
 6285 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 731:GrannyChordApp.cpp ****       return;
 6286              		.loc 16 731 7
 6287 003e 07E0     		b	.L318
 6288              	.L322:
 732:GrannyChordApp.cpp ****     case AppState::Synthesis:
 733:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Synthesis");
 6289              		.loc 16 733 7
 6290 0040 0848     		ldr	r0, .L326+12
 6291 0042 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 734:GrannyChordApp.cpp ****       return;
 6292              		.loc 16 734 7
 6293 0046 03E0     		b	.L318
 6294              	.L319:
 735:GrannyChordApp.cpp ****     // case AppState::ChordMode:
 736:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: ChordMode");
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 147


 737:GrannyChordApp.cpp ****     case AppState::Error:
 738:GrannyChordApp.cpp ****     default:
 739:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Error");
 6295              		.loc 16 739 7
 6296 0048 0748     		ldr	r0, .L326+16
 6297 004a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 740:GrannyChordApp.cpp ****       return;
 6298              		.loc 16 740 7
 6299 004e 00BF     		nop
 6300              	.L318:
 741:GrannyChordApp.cpp ****   }
 742:GrannyChordApp.cpp **** };
 6301              		.loc 16 742 1
 6302 0050 0837     		adds	r7, r7, #8
 6303              		.cfi_def_cfa_offset 8
 6304 0052 BD46     		mov	sp, r7
 6305              		.cfi_def_cfa_register 13
 6306              		@ sp needed
 6307 0054 80BD     		pop	{r7, pc}
 6308              	.L327:
 6309 0056 00BF     		.align	2
 6310              	.L326:
 6311 0058 D0010000 		.word	.LC23
 6312 005c EC010000 		.word	.LC24
 6313 0060 04020000 		.word	.LC25
 6314 0064 1C020000 		.word	.LC26
 6315 0068 34020000 		.word	.LC27
 6316              		.cfi_endproc
 6317              	.LFE4947:
 6319              		.section	.rodata
 6320              		.align	2
 6321              	.LC28:
 6322 0248 53746174 		.ascii	"State now in: SizePos\000"
 6322      65206E6F 
 6322      7720696E 
 6322      3A205369 
 6322      7A65506F 
 6323 025e 0000     		.align	2
 6324              	.LC29:
 6325 0260 53746174 		.ascii	"State now in: PitchGrains\000"
 6325      65206E6F 
 6325      7720696E 
 6325      3A205069 
 6325      74636847 
 6326 027a 0000     		.align	2
 6327              	.LC30:
 6328 027c 53746174 		.ascii	"State now in: PanDirection\000"
 6328      65206E6F 
 6328      7720696E 
 6328      3A205061 
 6328      6E446972 
 6329 0297 00       		.align	2
 6330              	.LC31:
 6331 0298 53746174 		.ascii	"State now in: RndAmt/Freq\000"
 6331      65206E6F 
 6331      7720696E 
 6331      3A20526E 
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 148


 6331      64416D74 
 6332 02b2 0000     		.align	2
 6333              	.LC32:
 6334 02b4 53746174 		.ascii	"State now in: StereoRotate\000"
 6334      65206E6F 
 6334      7720696E 
 6334      3A205374 
 6334      6572656F 
 6335 02cf 00       		.align	2
 6336              	.LC33:
 6337 02d0 53746174 		.ascii	"State now in: Chorus\000"
 6337      65206E6F 
 6337      7720696E 
 6337      3A204368 
 6337      6F727573 
 6338 02e5 000000   		.align	2
 6339              	.LC34:
 6340 02e8 53746174 		.ascii	"State now in: Reverb\000"
 6340      65206E6F 
 6340      7720696E 
 6340      3A205265 
 6340      76657262 
 6341 02fd 000000   		.align	2
 6342              	.LC35:
 6343 0300 53746174 		.ascii	"State now in: Filter\000"
 6343      65206E6F 
 6343      7720696E 
 6343      3A204669 
 6343      6C746572 
 6344              		.section	.text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode,"ax",%progbits
 6345              		.align	1
 6346              		.global	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode
 6347              		.syntax unified
 6348              		.thumb
 6349              		.thumb_func
 6351              	_ZN14GrannyChordApp14DebugPrintModeE9SynthMode:
 6352              	.LFB4948:
 743:GrannyChordApp.cpp **** 
 744:GrannyChordApp.cpp **** void GrannyChordApp::DebugPrintMode(SynthMode mode){
 6353              		.loc 16 744 52
 6354              		.cfi_startproc
 6355              		@ args = 0, pretend = 0, frame = 8
 6356              		@ frame_needed = 1, uses_anonymous_args = 0
 6357 0000 80B5     		push	{r7, lr}
 6358              		.cfi_def_cfa_offset 8
 6359              		.cfi_offset 7, -8
 6360              		.cfi_offset 14, -4
 6361 0002 82B0     		sub	sp, sp, #8
 6362              		.cfi_def_cfa_offset 16
 6363 0004 00AF     		add	r7, sp, #0
 6364              		.cfi_def_cfa_register 7
 6365 0006 7860     		str	r0, [r7, #4]
 6366 0008 3960     		str	r1, [r7]
 745:GrannyChordApp.cpp ****   switch(mode){
 6367              		.loc 16 745 3
 6368 000a 3B68     		ldr	r3, [r7]
 6369 000c 072B     		cmp	r3, #7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 149


 6370 000e 33D8     		bhi	.L328
 6371 0010 01A2     		adr	r2, .L331
 6372 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6373 0016 00BF     		.p2align 2
 6374              	.L331:
 6375 0018 39000000 		.word	.L338+1
 6376 001c 41000000 		.word	.L337+1
 6377 0020 49000000 		.word	.L336+1
 6378 0024 51000000 		.word	.L335+1
 6379 0028 59000000 		.word	.L334+1
 6380 002c 61000000 		.word	.L333+1
 6381 0030 69000000 		.word	.L332+1
 6382 0034 71000000 		.word	.L330+1
 6383              		.p2align 1
 6384              	.L338:
 746:GrannyChordApp.cpp ****     case SynthMode::Size_Position:
 747:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: SizePos");
 6385              		.loc 16 747 7
 6386 0038 1148     		ldr	r0, .L339
 6387 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 748:GrannyChordApp.cpp ****       return;
 6388              		.loc 16 748 7
 6389 003e 1BE0     		b	.L328
 6390              	.L337:
 749:GrannyChordApp.cpp ****     case SynthMode::Pitch_ActiveGrains:
 750:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: PitchGrains");
 6391              		.loc 16 750 7
 6392 0040 1048     		ldr	r0, .L339+4
 6393 0042 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 751:GrannyChordApp.cpp ****       return;
 6394              		.loc 16 751 7
 6395 0046 17E0     		b	.L328
 6396              	.L336:
 752:GrannyChordApp.cpp ****     case SynthMode::Pan_Direction:
 753:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: PanDirection");
 6397              		.loc 16 753 7
 6398 0048 0F48     		ldr	r0, .L339+8
 6399 004a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 754:GrannyChordApp.cpp ****       return;
 6400              		.loc 16 754 7
 6401 004e 13E0     		b	.L328
 6402              	.L335:
 755:GrannyChordApp.cpp ****     case SynthMode::RndAmount_RndFreq:
 756:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: RndAmt/Freq");
 6403              		.loc 16 756 7
 6404 0050 0E48     		ldr	r0, .L339+12
 6405 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 757:GrannyChordApp.cpp ****       return;
 6406              		.loc 16 757 7
 6407 0056 0FE0     		b	.L328
 6408              	.L334:
 758:GrannyChordApp.cpp ****     case SynthMode::StereoRotate:
 759:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: StereoRotate");
 6409              		.loc 16 759 7
 6410 0058 0D48     		ldr	r0, .L339+16
 6411 005a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 760:GrannyChordApp.cpp ****       return;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 150


 6412              		.loc 16 760 7
 6413 005e 0BE0     		b	.L328
 6414              	.L333:
 761:GrannyChordApp.cpp ****     case SynthMode::Chorus:
 762:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Chorus");
 6415              		.loc 16 762 7
 6416 0060 0C48     		ldr	r0, .L339+20
 6417 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 763:GrannyChordApp.cpp ****       return;
 6418              		.loc 16 763 7
 6419 0066 07E0     		b	.L328
 6420              	.L332:
 764:GrannyChordApp.cpp ****     case SynthMode::Reverb:
 765:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Reverb");
 6421              		.loc 16 765 7
 6422 0068 0B48     		ldr	r0, .L339+24
 6423 006a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 766:GrannyChordApp.cpp ****       return;
 6424              		.loc 16 766 7
 6425 006e 03E0     		b	.L328
 6426              	.L330:
 767:GrannyChordApp.cpp ****     case SynthMode::Filter:
 768:GrannyChordApp.cpp ****       DebugPrint(pod_, "State now in: Filter");
 6427              		.loc 16 768 7
 6428 0070 0A48     		ldr	r0, .L339+28
 6429 0072 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 769:GrannyChordApp.cpp ****       return;
 6430              		.loc 16 769 7
 6431 0076 00BF     		nop
 6432              	.L328:
 770:GrannyChordApp.cpp ****   }
 771:GrannyChordApp.cpp **** };
 6433              		.loc 16 771 1
 6434 0078 0837     		adds	r7, r7, #8
 6435              		.cfi_def_cfa_offset 8
 6436 007a BD46     		mov	sp, r7
 6437              		.cfi_def_cfa_register 13
 6438              		@ sp needed
 6439 007c 80BD     		pop	{r7, pc}
 6440              	.L340:
 6441 007e 00BF     		.align	2
 6442              	.L339:
 6443 0080 48020000 		.word	.LC28
 6444 0084 60020000 		.word	.LC29
 6445 0088 7C020000 		.word	.LC30
 6446 008c 98020000 		.word	.LC31
 6447 0090 B4020000 		.word	.LC32
 6448 0094 D0020000 		.word	.LC33
 6449 0098 E8020000 		.word	.LC34
 6450 009c 00030000 		.word	.LC35
 6451              		.cfi_endproc
 6452              	.LFE4948:
 6454              		.section	.text._ZN14GrannyChordApp11InitColoursEv,"ax",%progbits
 6455              		.align	1
 6456              		.global	_ZN14GrannyChordApp11InitColoursEv
 6457              		.syntax unified
 6458              		.thumb
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 151


 6459              		.thumb_func
 6461              	_ZN14GrannyChordApp11InitColoursEv:
 6462              	.LFB4949:
 772:GrannyChordApp.cpp **** 
 773:GrannyChordApp.cpp **** void GrannyChordApp::InitColours(){
 6463              		.loc 16 773 35
 6464              		.cfi_startproc
 6465              		@ args = 0, pretend = 0, frame = 8
 6466              		@ frame_needed = 1, uses_anonymous_args = 0
 6467 0000 80B5     		push	{r7, lr}
 6468              		.cfi_def_cfa_offset 8
 6469              		.cfi_offset 7, -8
 6470              		.cfi_offset 14, -4
 6471 0002 82B0     		sub	sp, sp, #8
 6472              		.cfi_def_cfa_offset 16
 6473 0004 00AF     		add	r7, sp, #0
 6474              		.cfi_def_cfa_register 7
 6475 0006 7860     		str	r0, [r7, #4]
 774:GrannyChordApp.cpp ****   colours.BLUE.Init(Color::PresetColor::BLUE);
 6476              		.loc 16 774 20
 6477 0008 7A68     		ldr	r2, [r7, #4]
 6478 000a 48F2B063 		movw	r3, #34480
 6479 000e 1344     		add	r3, r3, r2
 6480 0010 0221     		movs	r1, #2
 6481 0012 1846     		mov	r0, r3
 6482 0014 FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 775:GrannyChordApp.cpp ****   colours.GREEN.Init(Color::PresetColor::GREEN);
 6483              		.loc 16 775 21
 6484 0018 7A68     		ldr	r2, [r7, #4]
 6485 001a 48F2BC63 		movw	r3, #34492
 6486 001e 1344     		add	r3, r3, r2
 6487 0020 0121     		movs	r1, #1
 6488 0022 1846     		mov	r0, r3
 6489 0024 FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 776:GrannyChordApp.cpp ****   colours.RED.Init(Color::PresetColor::RED);
 6490              		.loc 16 776 19
 6491 0028 7A68     		ldr	r2, [r7, #4]
 6492 002a 48F2C863 		movw	r3, #34504
 6493 002e 1344     		add	r3, r3, r2
 6494 0030 0021     		movs	r1, #0
 6495 0032 1846     		mov	r0, r3
 6496 0034 FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 777:GrannyChordApp.cpp ****   colours.CYAN.Init(0,255,255);
 6497              		.loc 16 777 20
 6498 0038 7A68     		ldr	r2, [r7, #4]
 6499 003a 48F2D463 		movw	r3, #34516
 6500 003e 1344     		add	r3, r3, r2
 6501 0040 9FED1B1A 		vldr.32	s2, .L342
 6502 0044 DFED1A0A 		vldr.32	s1, .L342
 6503 0048 9FED1A0A 		vldr.32	s0, .L342+4
 6504 004c 1846     		mov	r0, r3
 6505 004e FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 778:GrannyChordApp.cpp ****   colours.PURPLE.Init(Color::PresetColor::PURPLE);
 6506              		.loc 16 778 22
 6507 0052 7A68     		ldr	r2, [r7, #4]
 6508 0054 48F2E063 		movw	r3, #34528
 6509 0058 1344     		add	r3, r3, r2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 152


 6510 005a 0421     		movs	r1, #4
 6511 005c 1846     		mov	r0, r3
 6512 005e FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 779:GrannyChordApp.cpp ****   colours.ORANGE.Init(Color::PresetColor::GOLD);
 6513              		.loc 16 779 22
 6514 0062 7A68     		ldr	r2, [r7, #4]
 6515 0064 48F2EC63 		movw	r3, #34540
 6516 0068 1344     		add	r3, r3, r2
 6517 006a 0621     		movs	r1, #6
 6518 006c 1846     		mov	r0, r3
 6519 006e FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 780:GrannyChordApp.cpp ****   colours.YELLOW.Init(255,255,0);
 6520              		.loc 16 780 22
 6521 0072 7A68     		ldr	r2, [r7, #4]
 6522 0074 48F2F863 		movw	r3, #34552
 6523 0078 1344     		add	r3, r3, r2
 6524 007a 9FED0E1A 		vldr.32	s2, .L342+4
 6525 007e DFED0C0A 		vldr.32	s1, .L342
 6526 0082 9FED0B0A 		vldr.32	s0, .L342
 6527 0086 1846     		mov	r0, r3
 6528 0088 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 781:GrannyChordApp.cpp ****   colours.PINK.Init(255,0,255);
 6529              		.loc 16 781 20
 6530 008c 7A68     		ldr	r2, [r7, #4]
 6531 008e 48F20473 		movw	r3, #34564
 6532 0092 1344     		add	r3, r3, r2
 6533 0094 9FED061A 		vldr.32	s2, .L342
 6534 0098 DFED060A 		vldr.32	s1, .L342+4
 6535 009c 9FED040A 		vldr.32	s0, .L342
 6536 00a0 1846     		mov	r0, r3
 6537 00a2 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 782:GrannyChordApp.cpp **** }
 6538              		.loc 16 782 1
 6539 00a6 00BF     		nop
 6540 00a8 0837     		adds	r7, r7, #8
 6541              		.cfi_def_cfa_offset 8
 6542 00aa BD46     		mov	sp, r7
 6543              		.cfi_def_cfa_register 13
 6544              		@ sp needed
 6545 00ac 80BD     		pop	{r7, pc}
 6546              	.L343:
 6547 00ae 00BF     		.align	2
 6548              	.L342:
 6549 00b0 00007F43 		.word	1132396544
 6550 00b4 00000000 		.word	0
 6551              		.cfi_endproc
 6552              	.LFE4949:
 6554              		.section	.text._ZN14GrannyChordApp14SetLedAppStateEv,"ax",%progbits
 6555              		.align	1
 6556              		.global	_ZN14GrannyChordApp14SetLedAppStateEv
 6557              		.syntax unified
 6558              		.thumb
 6559              		.thumb_func
 6561              	_ZN14GrannyChordApp14SetLedAppStateEv:
 6562              	.LFB4950:
 783:GrannyChordApp.cpp **** 
 784:GrannyChordApp.cpp **** /// @brief sets led colours based on app state
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 153


 785:GrannyChordApp.cpp **** void GrannyChordApp::SetLedAppState(){
 6563              		.loc 16 785 38
 6564              		.cfi_startproc
 6565              		@ args = 0, pretend = 0, frame = 104
 6566              		@ frame_needed = 1, uses_anonymous_args = 0
 6567 0000 90B5     		push	{r4, r7, lr}
 6568              		.cfi_def_cfa_offset 12
 6569              		.cfi_offset 4, -12
 6570              		.cfi_offset 7, -8
 6571              		.cfi_offset 14, -4
 6572 0002 9BB0     		sub	sp, sp, #108
 6573              		.cfi_def_cfa_offset 120
 6574 0004 00AF     		add	r7, sp, #0
 6575              		.cfi_def_cfa_register 7
 6576 0006 7860     		str	r0, [r7, #4]
 786:GrannyChordApp.cpp ****   switch(next_state_){
 6577              		.loc 16 786 10
 6578 0008 7B68     		ldr	r3, [r7, #4]
 6579 000a D3F87832 		ldr	r3, [r3, #632]
 6580              		.loc 16 786 3
 6581 000e 052B     		cmp	r3, #5
 6582 0010 00F2E680 		bhi	.L355
 6583 0014 01A2     		adr	r2, .L347
 6584 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6585 001a 00BF     		.p2align 2
 6586              	.L347:
 6587 001c 35000000 		.word	.L352+1
 6588 0020 6B000000 		.word	.L351+1
 6589 0024 A1000000 		.word	.L350+1
 6590 0028 0B010000 		.word	.L349+1
 6591 002c 41010000 		.word	.L348+1
 6592 0030 77010000 		.word	.L346+1
 6593              		.p2align 1
 6594              	.L352:
 787:GrannyChordApp.cpp ****     case AppState::SelectFile:
 788:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.GREEN);
 6595              		.loc 16 788 7
 6596 0034 7B68     		ldr	r3, [r7, #4]
 6597 0036 DB69     		ldr	r3, [r3, #28]
 6598              		.loc 16 788 25
 6599 0038 03F1D804 		add	r4, r3, #216
 6600              		.loc 16 788 34
 6601 003c 7B68     		ldr	r3, [r7, #4]
 6602 003e 03F50043 		add	r3, r3, #32768
 6603 0042 1A46     		mov	r2, r3
 6604 0044 07F10803 		add	r3, r7, #8
 6605 0048 02F2BC62 		addw	r2, r2, #1724
 6606 004c 07CA     		ldm	r2, {r0, r1, r2}
 6607 004e 83E80700 		stm	r3, {r0, r1, r2}
 6608              		.loc 16 788 25
 6609 0052 07F10803 		add	r3, r7, #8
 6610 0056 1946     		mov	r1, r3
 6611 0058 2046     		mov	r0, r4
 6612 005a FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6613              		.loc 16 788 34
 6614 005e 07F10803 		add	r3, r7, #8
 6615 0062 1846     		mov	r0, r3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 154


 6616 0064 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 789:GrannyChordApp.cpp ****       break;
 6617              		.loc 16 789 7
 6618 0068 BBE0     		b	.L353
 6619              	.L351:
 790:GrannyChordApp.cpp ****     case AppState::PlayWAV:
 791:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.CYAN);
 6620              		.loc 16 791 7
 6621 006a 7B68     		ldr	r3, [r7, #4]
 6622 006c DB69     		ldr	r3, [r3, #28]
 6623              		.loc 16 791 25
 6624 006e 03F1D804 		add	r4, r3, #216
 6625              		.loc 16 791 34
 6626 0072 7B68     		ldr	r3, [r7, #4]
 6627 0074 03F50043 		add	r3, r3, #32768
 6628 0078 1A46     		mov	r2, r3
 6629 007a 07F11403 		add	r3, r7, #20
 6630 007e 02F2D462 		addw	r2, r2, #1748
 6631 0082 07CA     		ldm	r2, {r0, r1, r2}
 6632 0084 83E80700 		stm	r3, {r0, r1, r2}
 6633              		.loc 16 791 25
 6634 0088 07F11403 		add	r3, r7, #20
 6635 008c 1946     		mov	r1, r3
 6636 008e 2046     		mov	r0, r4
 6637 0090 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6638              		.loc 16 791 34
 6639 0094 07F11403 		add	r3, r7, #20
 6640 0098 1846     		mov	r0, r3
 6641 009a FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 792:GrannyChordApp.cpp ****       break;
 6642              		.loc 16 792 7
 6643 009e A0E0     		b	.L353
 6644              	.L350:
 793:GrannyChordApp.cpp ****     case AppState::Synthesis:
 794:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.BLUE);
 6645              		.loc 16 794 7
 6646 00a0 7B68     		ldr	r3, [r7, #4]
 6647 00a2 DB69     		ldr	r3, [r3, #28]
 6648              		.loc 16 794 25
 6649 00a4 03F1D804 		add	r4, r3, #216
 6650              		.loc 16 794 34
 6651 00a8 7B68     		ldr	r3, [r7, #4]
 6652 00aa 03F50043 		add	r3, r3, #32768
 6653 00ae 1A46     		mov	r2, r3
 6654 00b0 07F12003 		add	r3, r7, #32
 6655 00b4 02F5D662 		add	r2, r2, #1712
 6656 00b8 07CA     		ldm	r2, {r0, r1, r2}
 6657 00ba 83E80700 		stm	r3, {r0, r1, r2}
 6658              		.loc 16 794 25
 6659 00be 07F12003 		add	r3, r7, #32
 6660 00c2 1946     		mov	r1, r3
 6661 00c4 2046     		mov	r0, r4
 6662 00c6 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6663              		.loc 16 794 34
 6664 00ca 07F12003 		add	r3, r7, #32
 6665 00ce 1846     		mov	r0, r3
 6666 00d0 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 155


 795:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.GREEN);
 6667              		.loc 16 795 7
 6668 00d4 7B68     		ldr	r3, [r7, #4]
 6669 00d6 DB69     		ldr	r3, [r3, #28]
 6670              		.loc 16 795 25
 6671 00d8 03F59674 		add	r4, r3, #300
 6672              		.loc 16 795 34
 6673 00dc 7B68     		ldr	r3, [r7, #4]
 6674 00de 03F50043 		add	r3, r3, #32768
 6675 00e2 1A46     		mov	r2, r3
 6676 00e4 07F12C03 		add	r3, r7, #44
 6677 00e8 02F2BC62 		addw	r2, r2, #1724
 6678 00ec 07CA     		ldm	r2, {r0, r1, r2}
 6679 00ee 83E80700 		stm	r3, {r0, r1, r2}
 6680              		.loc 16 795 25
 6681 00f2 07F12C03 		add	r3, r7, #44
 6682 00f6 1946     		mov	r1, r3
 6683 00f8 2046     		mov	r0, r4
 6684 00fa FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6685              		.loc 16 795 34
 6686 00fe 07F12C03 		add	r3, r7, #44
 6687 0102 1846     		mov	r0, r3
 6688 0104 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 796:GrannyChordApp.cpp ****       break;
 6689              		.loc 16 796 7
 6690 0108 6BE0     		b	.L353
 6691              	.L349:
 797:GrannyChordApp.cpp ****     case AppState::RecordIn:
 798:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.YELLOW);
 6692              		.loc 16 798 7
 6693 010a 7B68     		ldr	r3, [r7, #4]
 6694 010c DB69     		ldr	r3, [r3, #28]
 6695              		.loc 16 798 25
 6696 010e 03F1D804 		add	r4, r3, #216
 6697              		.loc 16 798 34
 6698 0112 7B68     		ldr	r3, [r7, #4]
 6699 0114 03F50043 		add	r3, r3, #32768
 6700 0118 1A46     		mov	r2, r3
 6701 011a 07F13803 		add	r3, r7, #56
 6702 011e 02F5DF62 		add	r2, r2, #1784
 6703 0122 07CA     		ldm	r2, {r0, r1, r2}
 6704 0124 83E80700 		stm	r3, {r0, r1, r2}
 6705              		.loc 16 798 25
 6706 0128 07F13803 		add	r3, r7, #56
 6707 012c 1946     		mov	r1, r3
 6708 012e 2046     		mov	r0, r4
 6709 0130 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6710              		.loc 16 798 34
 6711 0134 07F13803 		add	r3, r7, #56
 6712 0138 1846     		mov	r0, r3
 6713 013a FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 799:GrannyChordApp.cpp ****       break;
 6714              		.loc 16 799 7
 6715 013e 50E0     		b	.L353
 6716              	.L348:
 800:GrannyChordApp.cpp ****     case AppState::ChordMode:
 801:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.PURPLE);
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 156


 6717              		.loc 16 801 7
 6718 0140 7B68     		ldr	r3, [r7, #4]
 6719 0142 DB69     		ldr	r3, [r3, #28]
 6720              		.loc 16 801 25
 6721 0144 03F1D804 		add	r4, r3, #216
 6722              		.loc 16 801 34
 6723 0148 7B68     		ldr	r3, [r7, #4]
 6724 014a 03F50043 		add	r3, r3, #32768
 6725 014e 1A46     		mov	r2, r3
 6726 0150 07F14403 		add	r3, r7, #68
 6727 0154 02F5DC62 		add	r2, r2, #1760
 6728 0158 07CA     		ldm	r2, {r0, r1, r2}
 6729 015a 83E80700 		stm	r3, {r0, r1, r2}
 6730              		.loc 16 801 25
 6731 015e 07F14403 		add	r3, r7, #68
 6732 0162 1946     		mov	r1, r3
 6733 0164 2046     		mov	r0, r4
 6734 0166 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6735              		.loc 16 801 34
 6736 016a 07F14403 		add	r3, r7, #68
 6737 016e 1846     		mov	r0, r3
 6738 0170 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 802:GrannyChordApp.cpp ****       break;
 6739              		.loc 16 802 7
 6740 0174 35E0     		b	.L353
 6741              	.L346:
 803:GrannyChordApp.cpp ****     case AppState::Error:
 804:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.RED);
 6742              		.loc 16 804 7
 6743 0176 7B68     		ldr	r3, [r7, #4]
 6744 0178 DB69     		ldr	r3, [r3, #28]
 6745              		.loc 16 804 25
 6746 017a 03F1D804 		add	r4, r3, #216
 6747              		.loc 16 804 34
 6748 017e 7B68     		ldr	r3, [r7, #4]
 6749 0180 03F50043 		add	r3, r3, #32768
 6750 0184 1A46     		mov	r2, r3
 6751 0186 07F15003 		add	r3, r7, #80
 6752 018a 02F5D962 		add	r2, r2, #1736
 6753 018e 07CA     		ldm	r2, {r0, r1, r2}
 6754 0190 83E80700 		stm	r3, {r0, r1, r2}
 6755              		.loc 16 804 25
 6756 0194 07F15003 		add	r3, r7, #80
 6757 0198 1946     		mov	r1, r3
 6758 019a 2046     		mov	r0, r4
 6759 019c FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6760              		.loc 16 804 34
 6761 01a0 07F15003 		add	r3, r7, #80
 6762 01a4 1846     		mov	r0, r3
 6763 01a6 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 805:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.RED);
 6764              		.loc 16 805 7
 6765 01aa 7B68     		ldr	r3, [r7, #4]
 6766 01ac DB69     		ldr	r3, [r3, #28]
 6767              		.loc 16 805 25
 6768 01ae 03F59674 		add	r4, r3, #300
 6769              		.loc 16 805 34
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 157


 6770 01b2 7B68     		ldr	r3, [r7, #4]
 6771 01b4 03F50043 		add	r3, r3, #32768
 6772 01b8 1A46     		mov	r2, r3
 6773 01ba 07F15C03 		add	r3, r7, #92
 6774 01be 02F5D962 		add	r2, r2, #1736
 6775 01c2 07CA     		ldm	r2, {r0, r1, r2}
 6776 01c4 83E80700 		stm	r3, {r0, r1, r2}
 6777              		.loc 16 805 25
 6778 01c8 07F15C03 		add	r3, r7, #92
 6779 01cc 1946     		mov	r1, r3
 6780 01ce 2046     		mov	r0, r4
 6781 01d0 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6782              		.loc 16 805 34
 6783 01d4 07F15C03 		add	r3, r7, #92
 6784 01d8 1846     		mov	r0, r3
 6785 01da FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 806:GrannyChordApp.cpp ****       break;
 6786              		.loc 16 806 7
 6787 01de 00E0     		b	.L353
 6788              	.L355:
 807:GrannyChordApp.cpp ****     default:
 808:GrannyChordApp.cpp ****       break;
 6789              		.loc 16 808 7
 6790 01e0 00BF     		nop
 6791              	.L353:
 809:GrannyChordApp.cpp ****   }
 810:GrannyChordApp.cpp ****   if (curr_state_ != AppState::Synthesis) pod_.led2.Set(0,0,0); /* turn off led2 */
 6792              		.loc 16 810 7
 6793 01e2 7B68     		ldr	r3, [r7, #4]
 6794 01e4 D3F87432 		ldr	r3, [r3, #628]
 6795              		.loc 16 810 3
 6796 01e8 022B     		cmp	r3, #2
 6797 01ea 0CD0     		beq	.L354
 6798              		.loc 16 810 43 discriminator 1
 6799 01ec 7B68     		ldr	r3, [r7, #4]
 6800 01ee DB69     		ldr	r3, [r3, #28]
 6801              		.loc 16 810 56 discriminator 1
 6802 01f0 03F59673 		add	r3, r3, #300
 6803 01f4 9FED081A 		vldr.32	s2, .L356
 6804 01f8 DFED070A 		vldr.32	s1, .L356
 6805 01fc 9FED060A 		vldr.32	s0, .L356
 6806 0200 1846     		mov	r0, r3
 6807 0202 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 6808              	.L354:
 811:GrannyChordApp.cpp ****   pod_.UpdateLeds();
 6809              		.loc 16 811 3
 6810 0206 7B68     		ldr	r3, [r7, #4]
 6811 0208 DB69     		ldr	r3, [r3, #28]
 6812              		.loc 16 811 18
 6813 020a 1846     		mov	r0, r3
 6814 020c FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 812:GrannyChordApp.cpp **** }
 6815              		.loc 16 812 1
 6816 0210 00BF     		nop
 6817 0212 6C37     		adds	r7, r7, #108
 6818              		.cfi_def_cfa_offset 12
 6819 0214 BD46     		mov	sp, r7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 158


 6820              		.cfi_def_cfa_register 13
 6821              		@ sp needed
 6822 0216 90BD     		pop	{r4, r7, pc}
 6823              	.L357:
 6824              		.align	2
 6825              	.L356:
 6826 0218 00000000 		.word	0
 6827              		.cfi_endproc
 6828              	.LFE4950:
 6830              		.section	.text._ZN14GrannyChordApp15SetLedSynthModeEv,"ax",%progbits
 6831              		.align	1
 6832              		.global	_ZN14GrannyChordApp15SetLedSynthModeEv
 6833              		.syntax unified
 6834              		.thumb
 6835              		.thumb_func
 6837              	_ZN14GrannyChordApp15SetLedSynthModeEv:
 6838              	.LFB4951:
 813:GrannyChordApp.cpp **** 
 814:GrannyChordApp.cpp **** void GrannyChordApp::SetLedSynthMode(){
 6839              		.loc 16 814 39
 6840              		.cfi_startproc
 6841              		@ args = 0, pretend = 0, frame = 136
 6842              		@ frame_needed = 1, uses_anonymous_args = 0
 6843 0000 90B5     		push	{r4, r7, lr}
 6844              		.cfi_def_cfa_offset 12
 6845              		.cfi_offset 4, -12
 6846              		.cfi_offset 7, -8
 6847              		.cfi_offset 14, -4
 6848 0002 A3B0     		sub	sp, sp, #140
 6849              		.cfi_def_cfa_offset 152
 6850 0004 00AF     		add	r7, sp, #0
 6851              		.cfi_def_cfa_register 7
 6852 0006 7860     		str	r0, [r7, #4]
 6853              	.LBB25:
 815:GrannyChordApp.cpp ****   if (curr_state_ == AppState::Synthesis){
 6854              		.loc 16 815 7
 6855 0008 7B68     		ldr	r3, [r7, #4]
 6856 000a D3F87432 		ldr	r3, [r3, #628]
 6857              		.loc 16 815 3
 6858 000e 022B     		cmp	r3, #2
 6859 0010 40F03181 		bne	.L359
 6860              	.LBB26:
 816:GrannyChordApp.cpp ****     switch(curr_synth_mode_){
 6861              		.loc 16 816 12
 6862 0014 7B68     		ldr	r3, [r7, #4]
 6863 0016 D3F87C32 		ldr	r3, [r3, #636]
 6864              		.loc 16 816 5
 6865 001a 072B     		cmp	r3, #7
 6866 001c 00F2EC80 		bhi	.L372
 6867 0020 01A2     		adr	r2, .L362
 6868 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6869 0026 00BF     		.p2align 2
 6870              	.L362:
 6871 0028 49000000 		.word	.L369+1
 6872 002c 7F000000 		.word	.L368+1
 6873 0030 B5000000 		.word	.L367+1
 6874 0034 EB000000 		.word	.L366+1
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 159


 6875 0038 21010000 		.word	.L365+1
 6876 003c 57010000 		.word	.L364+1
 6877 0040 8D010000 		.word	.L363+1
 6878 0044 C3010000 		.word	.L361+1
 6879              		.p2align 1
 6880              	.L369:
 817:GrannyChordApp.cpp ****       /* regular: led1 blue / cyan / orange / yellow */
 818:GrannyChordApp.cpp ****       /* FX: led2 blue / cyan / orange / yellow */
 819:GrannyChordApp.cpp ****       case SynthMode::Size_Position:
 820:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.BLUE);
 6881              		.loc 16 820 9
 6882 0048 7B68     		ldr	r3, [r7, #4]
 6883 004a DB69     		ldr	r3, [r3, #28]
 6884              		.loc 16 820 27
 6885 004c 03F1D804 		add	r4, r3, #216
 6886              		.loc 16 820 36
 6887 0050 7B68     		ldr	r3, [r7, #4]
 6888 0052 03F50043 		add	r3, r3, #32768
 6889 0056 1A46     		mov	r2, r3
 6890 0058 07F10C03 		add	r3, r7, #12
 6891 005c 02F5D662 		add	r2, r2, #1712
 6892 0060 07CA     		ldm	r2, {r0, r1, r2}
 6893 0062 83E80700 		stm	r3, {r0, r1, r2}
 6894              		.loc 16 820 27
 6895 0066 07F10C03 		add	r3, r7, #12
 6896 006a 1946     		mov	r1, r3
 6897 006c 2046     		mov	r0, r4
 6898 006e FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6899              		.loc 16 820 36
 6900 0072 07F10C03 		add	r3, r7, #12
 6901 0076 1846     		mov	r0, r3
 6902 0078 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 821:GrannyChordApp.cpp ****         break;
 6903              		.loc 16 821 9
 6904 007c BDE0     		b	.L370
 6905              	.L368:
 822:GrannyChordApp.cpp ****       case SynthMode::Pitch_ActiveGrains:
 823:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.CYAN);
 6906              		.loc 16 823 9
 6907 007e 7B68     		ldr	r3, [r7, #4]
 6908 0080 DB69     		ldr	r3, [r3, #28]
 6909              		.loc 16 823 27
 6910 0082 03F1D804 		add	r4, r3, #216
 6911              		.loc 16 823 36
 6912 0086 7B68     		ldr	r3, [r7, #4]
 6913 0088 03F50043 		add	r3, r3, #32768
 6914 008c 1A46     		mov	r2, r3
 6915 008e 07F11803 		add	r3, r7, #24
 6916 0092 02F2D462 		addw	r2, r2, #1748
 6917 0096 07CA     		ldm	r2, {r0, r1, r2}
 6918 0098 83E80700 		stm	r3, {r0, r1, r2}
 6919              		.loc 16 823 27
 6920 009c 07F11803 		add	r3, r7, #24
 6921 00a0 1946     		mov	r1, r3
 6922 00a2 2046     		mov	r0, r4
 6923 00a4 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6924              		.loc 16 823 36
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 160


 6925 00a8 07F11803 		add	r3, r7, #24
 6926 00ac 1846     		mov	r0, r3
 6927 00ae FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 824:GrannyChordApp.cpp ****         break;
 6928              		.loc 16 824 9
 6929 00b2 A2E0     		b	.L370
 6930              	.L367:
 825:GrannyChordApp.cpp ****       case SynthMode::Pan_Direction:
 826:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.ORANGE);
 6931              		.loc 16 826 9
 6932 00b4 7B68     		ldr	r3, [r7, #4]
 6933 00b6 DB69     		ldr	r3, [r3, #28]
 6934              		.loc 16 826 27
 6935 00b8 03F1D804 		add	r4, r3, #216
 6936              		.loc 16 826 36
 6937 00bc 7B68     		ldr	r3, [r7, #4]
 6938 00be 03F50043 		add	r3, r3, #32768
 6939 00c2 1A46     		mov	r2, r3
 6940 00c4 07F12403 		add	r3, r7, #36
 6941 00c8 02F2EC62 		addw	r2, r2, #1772
 6942 00cc 07CA     		ldm	r2, {r0, r1, r2}
 6943 00ce 83E80700 		stm	r3, {r0, r1, r2}
 6944              		.loc 16 826 27
 6945 00d2 07F12403 		add	r3, r7, #36
 6946 00d6 1946     		mov	r1, r3
 6947 00d8 2046     		mov	r0, r4
 6948 00da FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6949              		.loc 16 826 36
 6950 00de 07F12403 		add	r3, r7, #36
 6951 00e2 1846     		mov	r0, r3
 6952 00e4 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 827:GrannyChordApp.cpp ****         break;
 6953              		.loc 16 827 9
 6954 00e8 87E0     		b	.L370
 6955              	.L366:
 828:GrannyChordApp.cpp ****       case SynthMode::RndAmount_RndFreq:
 829:GrannyChordApp.cpp ****         pod_.led1.SetColor(colours.YELLOW);
 6956              		.loc 16 829 9
 6957 00ea 7B68     		ldr	r3, [r7, #4]
 6958 00ec DB69     		ldr	r3, [r3, #28]
 6959              		.loc 16 829 27
 6960 00ee 03F1D804 		add	r4, r3, #216
 6961              		.loc 16 829 36
 6962 00f2 7B68     		ldr	r3, [r7, #4]
 6963 00f4 03F50043 		add	r3, r3, #32768
 6964 00f8 1A46     		mov	r2, r3
 6965 00fa 07F13003 		add	r3, r7, #48
 6966 00fe 02F5DF62 		add	r2, r2, #1784
 6967 0102 07CA     		ldm	r2, {r0, r1, r2}
 6968 0104 83E80700 		stm	r3, {r0, r1, r2}
 6969              		.loc 16 829 27
 6970 0108 07F13003 		add	r3, r7, #48
 6971 010c 1946     		mov	r1, r3
 6972 010e 2046     		mov	r0, r4
 6973 0110 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6974              		.loc 16 829 36
 6975 0114 07F13003 		add	r3, r7, #48
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 161


 6976 0118 1846     		mov	r0, r3
 6977 011a FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 830:GrannyChordApp.cpp ****         break;
 6978              		.loc 16 830 9
 6979 011e 6CE0     		b	.L370
 6980              	.L365:
 831:GrannyChordApp.cpp ****       case SynthMode::StereoRotate:
 832:GrannyChordApp.cpp ****         pod_.led2.SetColor(colours.BLUE);
 6981              		.loc 16 832 9
 6982 0120 7B68     		ldr	r3, [r7, #4]
 6983 0122 DB69     		ldr	r3, [r3, #28]
 6984              		.loc 16 832 27
 6985 0124 03F59674 		add	r4, r3, #300
 6986              		.loc 16 832 36
 6987 0128 7B68     		ldr	r3, [r7, #4]
 6988 012a 03F50043 		add	r3, r3, #32768
 6989 012e 1A46     		mov	r2, r3
 6990 0130 07F13C03 		add	r3, r7, #60
 6991 0134 02F5D662 		add	r2, r2, #1712
 6992 0138 07CA     		ldm	r2, {r0, r1, r2}
 6993 013a 83E80700 		stm	r3, {r0, r1, r2}
 6994              		.loc 16 832 27
 6995 013e 07F13C03 		add	r3, r7, #60
 6996 0142 1946     		mov	r1, r3
 6997 0144 2046     		mov	r0, r4
 6998 0146 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 6999              		.loc 16 832 36
 7000 014a 07F13C03 		add	r3, r7, #60
 7001 014e 1846     		mov	r0, r3
 7002 0150 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 833:GrannyChordApp.cpp ****         break;
 7003              		.loc 16 833 9
 7004 0154 51E0     		b	.L370
 7005              	.L364:
 834:GrannyChordApp.cpp ****       case SynthMode::Chorus:
 835:GrannyChordApp.cpp ****         pod_.led2.SetColor(colours.CYAN);
 7006              		.loc 16 835 9
 7007 0156 7B68     		ldr	r3, [r7, #4]
 7008 0158 DB69     		ldr	r3, [r3, #28]
 7009              		.loc 16 835 27
 7010 015a 03F59674 		add	r4, r3, #300
 7011              		.loc 16 835 36
 7012 015e 7B68     		ldr	r3, [r7, #4]
 7013 0160 03F50043 		add	r3, r3, #32768
 7014 0164 1A46     		mov	r2, r3
 7015 0166 07F14803 		add	r3, r7, #72
 7016 016a 02F2D462 		addw	r2, r2, #1748
 7017 016e 07CA     		ldm	r2, {r0, r1, r2}
 7018 0170 83E80700 		stm	r3, {r0, r1, r2}
 7019              		.loc 16 835 27
 7020 0174 07F14803 		add	r3, r7, #72
 7021 0178 1946     		mov	r1, r3
 7022 017a 2046     		mov	r0, r4
 7023 017c FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7024              		.loc 16 835 36
 7025 0180 07F14803 		add	r3, r7, #72
 7026 0184 1846     		mov	r0, r3
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 162


 7027 0186 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 836:GrannyChordApp.cpp ****         break;
 7028              		.loc 16 836 9
 7029 018a 36E0     		b	.L370
 7030              	.L363:
 837:GrannyChordApp.cpp ****       case SynthMode::Reverb:
 838:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.ORANGE);
 7031              		.loc 16 838 7
 7032 018c 7B68     		ldr	r3, [r7, #4]
 7033 018e DB69     		ldr	r3, [r3, #28]
 7034              		.loc 16 838 25
 7035 0190 03F59674 		add	r4, r3, #300
 7036              		.loc 16 838 34
 7037 0194 7B68     		ldr	r3, [r7, #4]
 7038 0196 03F50043 		add	r3, r3, #32768
 7039 019a 1A46     		mov	r2, r3
 7040 019c 07F15403 		add	r3, r7, #84
 7041 01a0 02F2EC62 		addw	r2, r2, #1772
 7042 01a4 07CA     		ldm	r2, {r0, r1, r2}
 7043 01a6 83E80700 		stm	r3, {r0, r1, r2}
 7044              		.loc 16 838 25
 7045 01aa 07F15403 		add	r3, r7, #84
 7046 01ae 1946     		mov	r1, r3
 7047 01b0 2046     		mov	r0, r4
 7048 01b2 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7049              		.loc 16 838 34
 7050 01b6 07F15403 		add	r3, r7, #84
 7051 01ba 1846     		mov	r0, r3
 7052 01bc FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 839:GrannyChordApp.cpp ****         break;
 7053              		.loc 16 839 9
 7054 01c0 1BE0     		b	.L370
 7055              	.L361:
 840:GrannyChordApp.cpp ****       case SynthMode::Filter:
 841:GrannyChordApp.cpp ****         pod_.led2.SetColor(colours.YELLOW);
 7056              		.loc 16 841 9
 7057 01c2 7B68     		ldr	r3, [r7, #4]
 7058 01c4 DB69     		ldr	r3, [r3, #28]
 7059              		.loc 16 841 27
 7060 01c6 03F59674 		add	r4, r3, #300
 7061              		.loc 16 841 36
 7062 01ca 7B68     		ldr	r3, [r7, #4]
 7063 01cc 03F50043 		add	r3, r3, #32768
 7064 01d0 1A46     		mov	r2, r3
 7065 01d2 07F16003 		add	r3, r7, #96
 7066 01d6 02F5DF62 		add	r2, r2, #1784
 7067 01da 07CA     		ldm	r2, {r0, r1, r2}
 7068 01dc 83E80700 		stm	r3, {r0, r1, r2}
 7069              		.loc 16 841 27
 7070 01e0 07F16003 		add	r3, r7, #96
 7071 01e4 1946     		mov	r1, r3
 7072 01e6 2046     		mov	r0, r4
 7073 01e8 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7074              		.loc 16 841 36
 7075 01ec 07F16003 		add	r3, r7, #96
 7076 01f0 1846     		mov	r0, r3
 7077 01f2 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 163


 842:GrannyChordApp.cpp ****         break;
 7078              		.loc 16 842 9
 7079 01f6 00E0     		b	.L370
 7080              	.L372:
 843:GrannyChordApp.cpp ****       default:
 844:GrannyChordApp.cpp ****         break;
 7081              		.loc 16 844 9
 7082 01f8 00BF     		nop
 7083              	.L370:
 845:GrannyChordApp.cpp ****     }
 846:GrannyChordApp.cpp ****     int mode_idx = static_cast<int>(curr_synth_mode_);
 7084              		.loc 16 846 9
 7085 01fa 7B68     		ldr	r3, [r7, #4]
 7086 01fc D3F87C32 		ldr	r3, [r3, #636]
 7087 0200 C7F88430 		str	r3, [r7, #132]
 847:GrannyChordApp.cpp ****     if (mode_idx < 4) {
 7088              		.loc 16 847 5
 7089 0204 D7F88430 		ldr	r3, [r7, #132]
 7090 0208 032B     		cmp	r3, #3
 7091 020a 1ADC     		bgt	.L371
 848:GrannyChordApp.cpp ****       /* led2 green in regular mode */
 849:GrannyChordApp.cpp ****       pod_.led2.SetColor(colours.GREEN);
 7092              		.loc 16 849 7
 7093 020c 7B68     		ldr	r3, [r7, #4]
 7094 020e DB69     		ldr	r3, [r3, #28]
 7095              		.loc 16 849 25
 7096 0210 03F59674 		add	r4, r3, #300
 7097              		.loc 16 849 34
 7098 0214 7B68     		ldr	r3, [r7, #4]
 7099 0216 03F50043 		add	r3, r3, #32768
 7100 021a 1A46     		mov	r2, r3
 7101 021c 07F16C03 		add	r3, r7, #108
 7102 0220 02F2BC62 		addw	r2, r2, #1724
 7103 0224 07CA     		ldm	r2, {r0, r1, r2}
 7104 0226 83E80700 		stm	r3, {r0, r1, r2}
 7105              		.loc 16 849 25
 7106 022a 07F16C03 		add	r3, r7, #108
 7107 022e 1946     		mov	r1, r3
 7108 0230 2046     		mov	r0, r4
 7109 0232 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7110              		.loc 16 849 34
 7111 0236 07F16C03 		add	r3, r7, #108
 7112 023a 1846     		mov	r0, r3
 7113 023c FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 7114 0240 19E0     		b	.L359
 7115              	.L371:
 850:GrannyChordApp.cpp ****     }
 851:GrannyChordApp.cpp ****     else{
 852:GrannyChordApp.cpp ****       /* led1 pink in FX Mode */
 853:GrannyChordApp.cpp ****       pod_.led1.SetColor(colours.PINK);
 7116              		.loc 16 853 7
 7117 0242 7B68     		ldr	r3, [r7, #4]
 7118 0244 DB69     		ldr	r3, [r3, #28]
 7119              		.loc 16 853 25
 7120 0246 03F1D804 		add	r4, r3, #216
 7121              		.loc 16 853 34
 7122 024a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 164


 7123 024c 03F50043 		add	r3, r3, #32768
 7124 0250 1A46     		mov	r2, r3
 7125 0252 07F17803 		add	r3, r7, #120
 7126 0256 02F20472 		addw	r2, r2, #1796
 7127 025a 07CA     		ldm	r2, {r0, r1, r2}
 7128 025c 83E80700 		stm	r3, {r0, r1, r2}
 7129              		.loc 16 853 25
 7130 0260 07F17803 		add	r3, r7, #120
 7131 0264 1946     		mov	r1, r3
 7132 0266 2046     		mov	r0, r4
 7133 0268 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 7134              		.loc 16 853 34
 7135 026c 07F17803 		add	r3, r7, #120
 7136 0270 1846     		mov	r0, r3
 7137 0272 FFF7FEFF 		bl	_ZN5daisy5ColorD1Ev
 7138              	.L359:
 7139              	.LBE26:
 7140              	.LBE25:
 854:GrannyChordApp.cpp ****     }
 855:GrannyChordApp.cpp ****   }
 856:GrannyChordApp.cpp ****   pod_.UpdateLeds();
 7141              		.loc 16 856 3
 7142 0276 7B68     		ldr	r3, [r7, #4]
 7143 0278 DB69     		ldr	r3, [r3, #28]
 7144              		.loc 16 856 18
 7145 027a 1846     		mov	r0, r3
 7146 027c FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 857:GrannyChordApp.cpp **** }...
 7147              		.loc 16 857 1
 7148 0280 00BF     		nop
 7149 0282 8C37     		adds	r7, r7, #140
 7150              		.cfi_def_cfa_offset 12
 7151 0284 BD46     		mov	sp, r7
 7152              		.cfi_def_cfa_register 13
 7153              		@ sp needed
 7154 0286 90BD     		pop	{r4, r7, pc}
 7155              		.cfi_endproc
 7156              	.LFE4951:
 7158              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9Prin
 7159              		.align	1
 7160              		.weak	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7161              		.syntax unified
 7162              		.thumb
 7163              		.thumb_func
 7165              	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:
 7166              	.LFB5278:
 7167              		.file 18 "../libDaisy/src/daisy_seed.h"
   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 165


  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  23:../libDaisy/src/daisy_seed.h **** 
  24:../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../libDaisy/src/daisy_seed.h ****      */
  27:../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../libDaisy/src/daisy_seed.h **** 
  29:../libDaisy/src/daisy_seed.h ****     /** 
  30:../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../libDaisy/src/daisy_seed.h **** 
  34:../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../libDaisy/src/daisy_seed.h ****     */
  38:../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../libDaisy/src/daisy_seed.h **** 
  40:../libDaisy/src/daisy_seed.h ****     /** 
  41:../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../libDaisy/src/daisy_seed.h ****     */
  43:../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../libDaisy/src/daisy_seed.h **** 
  45:../libDaisy/src/daisy_seed.h ****     /** 
  46:../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../libDaisy/src/daisy_seed.h ****     */
  49:../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../libDaisy/src/daisy_seed.h **** 
  51:../libDaisy/src/daisy_seed.h ****     /** 
  52:../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../libDaisy/src/daisy_seed.h ****     */
  55:../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../libDaisy/src/daisy_seed.h **** 
  57:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../libDaisy/src/daisy_seed.h ****     */
  61:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../libDaisy/src/daisy_seed.h **** 
  63:../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../libDaisy/src/daisy_seed.h ****     */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 166


  68:../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../libDaisy/src/daisy_seed.h **** 
  70:../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../libDaisy/src/daisy_seed.h ****      */
  72:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../libDaisy/src/daisy_seed.h **** 
  74:../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../libDaisy/src/daisy_seed.h ****      */
  76:../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../libDaisy/src/daisy_seed.h **** 
  78:../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../libDaisy/src/daisy_seed.h **** 
  81:../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../libDaisy/src/daisy_seed.h ****      */
  84:../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../libDaisy/src/daisy_seed.h **** 
  86:../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../libDaisy/src/daisy_seed.h ****      */
  88:../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../libDaisy/src/daisy_seed.h **** 
  90:../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../libDaisy/src/daisy_seed.h ****      */
  92:../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../libDaisy/src/daisy_seed.h **** 
  94:../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../libDaisy/src/daisy_seed.h **** 
  97:../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../libDaisy/src/daisy_seed.h **** 
 100:../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../libDaisy/src/daisy_seed.h ****      */
 105:../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../libDaisy/src/daisy_seed.h **** 
 107:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../libDaisy/src/daisy_seed.h ****      */
 109:../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../libDaisy/src/daisy_seed.h **** 
 111:../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../libDaisy/src/daisy_seed.h ****      */
 113:../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../libDaisy/src/daisy_seed.h **** 
 115:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../libDaisy/src/daisy_seed.h ****      */
 117:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../libDaisy/src/daisy_seed.h ****     {
 120:../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../libDaisy/src/daisy_seed.h ****     }
 122:../libDaisy/src/daisy_seed.h **** 
 123:../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../libDaisy/src/daisy_seed.h ****     */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 167


 125:../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 7168              		.loc 18 126 17
 7169              		.cfi_startproc
 7170              		@ args = 0, pretend = 0, frame = 8
 7171              		@ frame_needed = 1, uses_anonymous_args = 0
 7172 0000 80B5     		push	{r7, lr}
 7173              		.cfi_def_cfa_offset 8
 7174              		.cfi_offset 7, -8
 7175              		.cfi_offset 14, -4
 7176 0002 82B0     		sub	sp, sp, #8
 7177              		.cfi_def_cfa_offset 16
 7178 0004 00AF     		add	r7, sp, #0
 7179              		.cfi_def_cfa_register 7
 7180 0006 7860     		str	r0, [r7, #4]
 127:../libDaisy/src/daisy_seed.h ****     {
 128:../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 7181              		.loc 18 128 23
 7182 0008 7868     		ldr	r0, [r7, #4]
 7183 000a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 129:../libDaisy/src/daisy_seed.h ****     }
 7184              		.loc 18 129 5
 7185 000e 00BF     		nop
 7186 0010 0837     		adds	r7, r7, #8
 7187              		.cfi_def_cfa_offset 8
 7188 0012 BD46     		mov	sp, r7
 7189              		.cfi_def_cfa_register 13
 7190              		@ sp needed
 7191 0014 80BD     		pop	{r7, pc}
 7192              		.cfi_endproc
 7193              	.LFE5278:
 7195              		.section	.text._ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_
 7196              		.align	1
 7197              		.weak	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__value
 7198              		.syntax unified
 7199              		.thumb
 7200              		.thumb_func
 7202              	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__ty
 7203              	.LFB5279:
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(long double __x)
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fabs(_Tp __x)
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_fabs(__x); }
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::floor;
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(float __x)
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 168


 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorf(__x); }
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(long double __x)
 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorl(__x); }
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     floor(_Tp __x)
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_floor(__x); }
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fmod;
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(float __x, float __y)
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(long double __x, long double __y)
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::frexp;
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(float __x, int* __exp)
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(long double __x, int* __exp)
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ldexp;
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 169


 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(float __x, int __exp)
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(long double __x, int __exp)
 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log;
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(float __x)
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logf(__x); }
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(long double __x)
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logl(__x); }
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log(_Tp __x)
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log(__x); }
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log10;
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(float __x)
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10f(__x); }
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(long double __x)
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10l(__x); }
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log10(_Tp __x)
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log10(__x); }
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::modf;
 373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 170


 375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(float __x, float* __iptr)
 377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 380:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 383:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 384:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::pow;
 385:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 386:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, float __y)
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 391:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, long double __y)
 393:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 395:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #if __cplusplus < 201103L
 396:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline double
 399:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(double __x, int __i)
 400:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 402:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 403:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, int __n)
 404:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 406:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 407:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, int __n)
 408:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 410:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 411:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 412:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 413:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     pow(_Tp __x, _Up __y)
 7204              		.loc 2 415 5
 7205              		.cfi_startproc
 7206              		@ args = 0, pretend = 0, frame = 8
 7207              		@ frame_needed = 1, uses_anonymous_args = 0
 7208 0000 80B5     		push	{r7, lr}
 7209              		.cfi_def_cfa_offset 8
 7210              		.cfi_offset 7, -8
 7211              		.cfi_offset 14, -4
 7212 0002 82B0     		sub	sp, sp, #8
 7213              		.cfi_def_cfa_offset 16
 7214 0004 00AF     		add	r7, sp, #0
 7215              		.cfi_def_cfa_register 7
 7216 0006 7860     		str	r0, [r7, #4]
 7217 0008 3960     		str	r1, [r7]
 416:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 417:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 171


 418:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return pow(__type(__x), __type(__y));
 7218              		.loc 2 418 17
 7219 000a 7B68     		ldr	r3, [r7, #4]
 7220 000c 07EE903A 		vmov	s15, r3	@ int
 7221 0010 B8EEE77B 		vcvt.f64.s32	d7, s15
 7222 0014 3B68     		ldr	r3, [r7]
 7223 0016 06EE903A 		vmov	s13, r3	@ int
 7224 001a B8EEE66B 		vcvt.f64.s32	d6, s13
 7225 001e B0EE461B 		vmov.f64	d1, d6
 7226 0022 B0EE470B 		vmov.f64	d0, d7
 7227 0026 FFF7FEFF 		bl	pow
 7228 002a B0EE407B 		vmov.f64	d7, d0
 419:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 7229              		.loc 2 419 5
 7230 002e B0EE470B 		vmov.f64	d0, d7
 7231 0032 0837     		adds	r7, r7, #8
 7232              		.cfi_def_cfa_offset 8
 7233 0034 BD46     		mov	sp, r7
 7234              		.cfi_def_cfa_register 13
 7235              		@ sp needed
 7236 0036 80BD     		pop	{r7, pc}
 7237              		.cfi_endproc
 7238              	.LFE5279:
 7240              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9P
 7241              		.align	1
 7242              		.weak	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
 7243              		.syntax unified
 7244              		.thumb
 7245              		.thumb_func
 7247              	_ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_:
 7248              	.LFB5280:
 126:../libDaisy/src/daisy_seed.h ****     {
 7249              		.loc 18 126 17
 7250              		.cfi_startproc
 7251              		@ args = 0, pretend = 0, frame = 16
 7252              		@ frame_needed = 1, uses_anonymous_args = 0
 7253 0000 80B5     		push	{r7, lr}
 7254              		.cfi_def_cfa_offset 8
 7255              		.cfi_offset 7, -8
 7256              		.cfi_offset 14, -4
 7257 0002 84B0     		sub	sp, sp, #16
 7258              		.cfi_def_cfa_offset 24
 7259 0004 00AF     		add	r7, sp, #0
 7260              		.cfi_def_cfa_register 7
 7261 0006 F860     		str	r0, [r7, #12]
 7262 0008 7A60     		str	r2, [r7, #4]
 7263 000a 3B60     		str	r3, [r7]
 7264 000c 0B46     		mov	r3, r1
 7265 000e FB72     		strb	r3, [r7, #11]
 128:../libDaisy/src/daisy_seed.h ****     }
 7266              		.loc 18 128 23
 7267 0010 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 7268 0012 3B68     		ldr	r3, [r7]
 7269 0014 7A68     		ldr	r2, [r7, #4]
 7270 0016 F868     		ldr	r0, [r7, #12]
 7271 0018 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 7272              		.loc 18 129 5
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 172


 7273 001c 00BF     		nop
 7274 001e 1037     		adds	r7, r7, #16
 7275              		.cfi_def_cfa_offset 8
 7276 0020 BD46     		mov	sp, r7
 7277              		.cfi_def_cfa_register 13
 7278              		@ sp needed
 7279 0022 80BD     		pop	{r7, pc}
 7280              		.cfi_endproc
 7281              	.LFE5280:
 7283              		.section	.text._ZN5daisy9WavWriterILj16384EE5WriteEv,"axG",%progbits,_ZN5daisy9WavWriterILj16384EE
 7284              		.align	1
 7285              		.weak	_ZN5daisy9WavWriterILj16384EE5WriteEv
 7286              		.syntax unified
 7287              		.thumb
 7288              		.thumb_func
 7290              	_ZN5daisy9WavWriterILj16384EE5WriteEv:
 7291              	.LFB5281:
 7292              		.file 19 "../libDaisy/src/util/WavWriter.h"
   1:../libDaisy/src/util/WavWriter.h **** #pragma once
   2:../libDaisy/src/util/WavWriter.h **** #pragma once
   3:../libDaisy/src/util/WavWriter.h **** #include "fatfs.h"
   4:../libDaisy/src/util/WavWriter.h **** 
   5:../libDaisy/src/util/WavWriter.h **** namespace daisy
   6:../libDaisy/src/util/WavWriter.h **** {
   7:../libDaisy/src/util/WavWriter.h **** /** Audio Recording Module
   8:../libDaisy/src/util/WavWriter.h ****  ** 
   9:../libDaisy/src/util/WavWriter.h ****  ** Record audio into a working buffer that is gradually written to a WAV file on an SD Card. 
  10:../libDaisy/src/util/WavWriter.h ****  **
  11:../libDaisy/src/util/WavWriter.h ****  ** Recordings are made with floating point input, and will be converted to the 
  12:../libDaisy/src/util/WavWriter.h ****  ** specified bits per sample internally 
  13:../libDaisy/src/util/WavWriter.h ****  **
  14:../libDaisy/src/util/WavWriter.h ****  ** For now only 16-bit and 32-bit (signed int) formats are supported
  15:../libDaisy/src/util/WavWriter.h ****  ** f32 and s24 formats will be added next
  16:../libDaisy/src/util/WavWriter.h ****  **
  17:../libDaisy/src/util/WavWriter.h ****  ** The transfer size determines the amount of internal memory used, and can have an
  18:../libDaisy/src/util/WavWriter.h ****  ** effect on the performance of the streaming behavior of the WavWriter.
  19:../libDaisy/src/util/WavWriter.h ****  ** Memory use can be calculated as: (2 * transfer_size) bytes
  20:../libDaisy/src/util/WavWriter.h ****  ** Performance optimal with sizes: 16384, 32768
  21:../libDaisy/src/util/WavWriter.h ****  ** 
  22:../libDaisy/src/util/WavWriter.h ****  ** To use:
  23:../libDaisy/src/util/WavWriter.h ****  ** 1. Create a WavWriter<size> object (e.g. WavWriter<32768> writer)
  24:../libDaisy/src/util/WavWriter.h ****  ** 2. Configure the settings as desired by creating a WavWriter<32768>::Config struct and setting 
  25:../libDaisy/src/util/WavWriter.h ****  ** 3. Initialize the object with the configuration struct.
  26:../libDaisy/src/util/WavWriter.h ****  ** 4. Open a new file for writing with: writer.OpenFile("FileName.wav")
  27:../libDaisy/src/util/WavWriter.h ****  ** 5. Write to it within your audio callback using: writer.Sample(value)
  28:../libDaisy/src/util/WavWriter.h ****  ** 6. Fill the Wav File on the SD Card with data from your main loop by running: writer.Write()
  29:../libDaisy/src/util/WavWriter.h ****  ** 7. When finished with the recording finalize, and close the file with: writer.SaveFile();
  30:../libDaisy/src/util/WavWriter.h ****  ** 
  31:../libDaisy/src/util/WavWriter.h ****  ** */
  32:../libDaisy/src/util/WavWriter.h **** template <size_t transfer_size>
  33:../libDaisy/src/util/WavWriter.h **** class WavWriter
  34:../libDaisy/src/util/WavWriter.h **** {
  35:../libDaisy/src/util/WavWriter.h ****   public:
  36:../libDaisy/src/util/WavWriter.h ****     WavWriter() {}
  37:../libDaisy/src/util/WavWriter.h ****     ~WavWriter() {}
  38:../libDaisy/src/util/WavWriter.h **** 
  39:../libDaisy/src/util/WavWriter.h ****     /** Return values for write related functions */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 173


  40:../libDaisy/src/util/WavWriter.h ****     enum class Result
  41:../libDaisy/src/util/WavWriter.h ****     {
  42:../libDaisy/src/util/WavWriter.h ****         OK,
  43:../libDaisy/src/util/WavWriter.h ****         ERROR,
  44:../libDaisy/src/util/WavWriter.h ****     };
  45:../libDaisy/src/util/WavWriter.h **** 
  46:../libDaisy/src/util/WavWriter.h ****     /** Configuration structure for the wave writer.
  47:../libDaisy/src/util/WavWriter.h **** 	 ** */
  48:../libDaisy/src/util/WavWriter.h ****     struct Config
  49:../libDaisy/src/util/WavWriter.h ****     {
  50:../libDaisy/src/util/WavWriter.h ****         float   samplerate;
  51:../libDaisy/src/util/WavWriter.h ****         int32_t channels;
  52:../libDaisy/src/util/WavWriter.h ****         int32_t bitspersample;
  53:../libDaisy/src/util/WavWriter.h ****     };
  54:../libDaisy/src/util/WavWriter.h **** 
  55:../libDaisy/src/util/WavWriter.h ****     /** State of the internal Writing mechanism. 
  56:../libDaisy/src/util/WavWriter.h **** 	 ** When the buffer is a certain amount full one section will write its contents
  57:../libDaisy/src/util/WavWriter.h **** 	 ** while the other is still being written to. This is performed circularly
  58:../libDaisy/src/util/WavWriter.h **** 	 ** so that audio will be uninterrupted during writing. */
  59:../libDaisy/src/util/WavWriter.h ****     enum class BufferState
  60:../libDaisy/src/util/WavWriter.h ****     {
  61:../libDaisy/src/util/WavWriter.h ****         IDLE,
  62:../libDaisy/src/util/WavWriter.h ****         FLUSH0,
  63:../libDaisy/src/util/WavWriter.h ****         FLUSH1,
  64:../libDaisy/src/util/WavWriter.h ****     };
  65:../libDaisy/src/util/WavWriter.h **** 
  66:../libDaisy/src/util/WavWriter.h ****     /**  Initializes the WavFile header, and prepares the object for recording. */
  67:../libDaisy/src/util/WavWriter.h ****     void Init(const Config &cfg)
  68:../libDaisy/src/util/WavWriter.h ****     {
  69:../libDaisy/src/util/WavWriter.h ****         cfg_       = cfg;
  70:../libDaisy/src/util/WavWriter.h ****         num_samps_ = 0;
  71:../libDaisy/src/util/WavWriter.h ****         // Prep the wav header according to config.
  72:../libDaisy/src/util/WavWriter.h ****         // Certain things (i.e. Size, etc. will have to wait until the finalization of the file, or
  73:../libDaisy/src/util/WavWriter.h ****         wavheader_.ChunkId       = kWavFileChunkId;     /** "RIFF" */
  74:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileFormat    = kWavFileWaveId;      /** "WAVE" */
  75:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1ID   = kWavFileSubChunk1Id; /** "fmt " */
  76:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1Size = 16;                  // for PCM
  77:../libDaisy/src/util/WavWriter.h ****         wavheader_.AudioFormat   = WAVE_FORMAT_PCM;
  78:../libDaisy/src/util/WavWriter.h ****         wavheader_.NbrChannels   = cfg.channels;
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.SampleRate    = static_cast<int>(cfg.samplerate);
  80:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BlockAlign    = cfg_.channels * cfg_.bitspersample / 8;
  82:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
  83:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk2ID   = kWavFileSubChunk2Id; /** "data" */
  84:../libDaisy/src/util/WavWriter.h ****         /** Also calcs SubChunk2Size */
  85:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileSize = CalcFileSize();
  86:../libDaisy/src/util/WavWriter.h ****         // This is calculated as part of the subchunk size
  87:../libDaisy/src/util/WavWriter.h ****     }
  88:../libDaisy/src/util/WavWriter.h **** 
  89:../libDaisy/src/util/WavWriter.h ****     /** Records the current sample into the working buffer,
  90:../libDaisy/src/util/WavWriter.h ****      ** queues writes to media when necessary. 
  91:../libDaisy/src/util/WavWriter.h ****      ** 
  92:../libDaisy/src/util/WavWriter.h ****      ** \param in should be a pointer to an array of samples */
  93:../libDaisy/src/util/WavWriter.h ****     void Sample(const float *in)
  94:../libDaisy/src/util/WavWriter.h ****     {
  95:../libDaisy/src/util/WavWriter.h ****         for(int32_t i = 0; i < cfg_.channels; i++)
  96:../libDaisy/src/util/WavWriter.h ****         {
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 174


  97:../libDaisy/src/util/WavWriter.h ****             switch(cfg_.bitspersample)
  98:../libDaisy/src/util/WavWriter.h ****             {
  99:../libDaisy/src/util/WavWriter.h ****                 case 16:
 100:../libDaisy/src/util/WavWriter.h ****                 {
 101:../libDaisy/src/util/WavWriter.h ****                     int16_t *tp;
 102:../libDaisy/src/util/WavWriter.h ****                     tp            = (int16_t *)transfer_buff;
 103:../libDaisy/src/util/WavWriter.h ****                     tp[wptr_ + i] = f2s16(in[i]);
 104:../libDaisy/src/util/WavWriter.h ****                 }
 105:../libDaisy/src/util/WavWriter.h ****                 break;
 106:../libDaisy/src/util/WavWriter.h ****                 case 32: transfer_buff[wptr_ + i] = f2s32(in[i]); break;
 107:../libDaisy/src/util/WavWriter.h ****                 default: break;
 108:../libDaisy/src/util/WavWriter.h ****             }
 109:../libDaisy/src/util/WavWriter.h ****         }
 110:../libDaisy/src/util/WavWriter.h ****         num_samps_++;
 111:../libDaisy/src/util/WavWriter.h ****         wptr_ += cfg_.channels;
 112:../libDaisy/src/util/WavWriter.h ****         size_t cap_point
 113:../libDaisy/src/util/WavWriter.h ****             = cfg_.bitspersample == 16 ? kTransferSamps * 2 : kTransferSamps;
 114:../libDaisy/src/util/WavWriter.h ****         if(wptr_ == cap_point)
 115:../libDaisy/src/util/WavWriter.h ****         {
 116:../libDaisy/src/util/WavWriter.h ****             bstate_ = BufferState::FLUSH0;
 117:../libDaisy/src/util/WavWriter.h ****         }
 118:../libDaisy/src/util/WavWriter.h ****         if(wptr_ >= cap_point * 2)
 119:../libDaisy/src/util/WavWriter.h ****         {
 120:../libDaisy/src/util/WavWriter.h ****             wptr_   = 0;
 121:../libDaisy/src/util/WavWriter.h ****             bstate_ = BufferState::FLUSH1;
 122:../libDaisy/src/util/WavWriter.h ****         }
 123:../libDaisy/src/util/WavWriter.h ****     }
 124:../libDaisy/src/util/WavWriter.h **** 
 125:../libDaisy/src/util/WavWriter.h ****     /** Check buffer state and write */
 126:../libDaisy/src/util/WavWriter.h ****     void Write()
 7293              		.loc 19 126 10
 7294              		.cfi_startproc
 7295              		@ args = 0, pretend = 0, frame = 16
 7296              		@ frame_needed = 1, uses_anonymous_args = 0
 7297 0000 80B5     		push	{r7, lr}
 7298              		.cfi_def_cfa_offset 8
 7299              		.cfi_offset 7, -8
 7300              		.cfi_offset 14, -4
 7301 0002 84B0     		sub	sp, sp, #16
 7302              		.cfi_def_cfa_offset 24
 7303 0004 00AF     		add	r7, sp, #0
 7304              		.cfi_def_cfa_register 7
 7305 0006 7860     		str	r0, [r7, #4]
 7306              	.LBB27:
 127:../libDaisy/src/util/WavWriter.h ****     {
 128:../libDaisy/src/util/WavWriter.h ****         if(bstate_ != BufferState::IDLE && IsRecording())
 7307              		.loc 19 128 12
 7308 0008 7B68     		ldr	r3, [r7, #4]
 7309 000a 03F50043 		add	r3, r3, #32768
 7310 000e 1B6C     		ldr	r3, [r3, #64]
 7311              		.loc 19 128 41
 7312 0010 002B     		cmp	r3, #0
 7313 0012 07D0     		beq	.L378
 7314              		.loc 19 128 55 discriminator 1
 7315 0014 7868     		ldr	r0, [r7, #4]
 7316 0016 FFF7FEFF 		bl	_ZNK5daisy9WavWriterILj16384EE11IsRecordingEv
 7317 001a 0346     		mov	r3, r0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 175


 7318              		.loc 19 128 41 discriminator 1
 7319 001c 002B     		cmp	r3, #0
 7320 001e 01D0     		beq	.L378
 7321              		.loc 19 128 41 is_stmt 0 discriminator 3
 7322 0020 0123     		movs	r3, #1
 7323 0022 00E0     		b	.L379
 7324              	.L378:
 7325              		.loc 19 128 41 discriminator 4
 7326 0024 0023     		movs	r3, #0
 7327              	.L379:
 7328              		.loc 19 128 9 is_stmt 1 discriminator 6
 7329 0026 002B     		cmp	r3, #0
 7330 0028 21D0     		beq	.L383
 7331              	.LBB28:
 129:../libDaisy/src/util/WavWriter.h ****         {
 130:../libDaisy/src/util/WavWriter.h ****             uint32_t     offset;
 131:../libDaisy/src/util/WavWriter.h ****             unsigned int bw = 0;
 7332              		.loc 19 131 26
 7333 002a 0023     		movs	r3, #0
 7334 002c BB60     		str	r3, [r7, #8]
 132:../libDaisy/src/util/WavWriter.h ****             //offset          = bstate_ == BufferState::FLUSH0 ? 0 : transfer_size;
 133:../libDaisy/src/util/WavWriter.h ****             offset  = bstate_ == BufferState::FLUSH0 ? 0 : kTransferSamps;
 7335              		.loc 19 133 23
 7336 002e 7B68     		ldr	r3, [r7, #4]
 7337 0030 03F50043 		add	r3, r3, #32768
 7338 0034 1B6C     		ldr	r3, [r3, #64]
 7339              		.loc 19 133 54
 7340 0036 012B     		cmp	r3, #1
 7341 0038 01D1     		bne	.L381
 7342              		.loc 19 133 54 is_stmt 0 discriminator 1
 7343 003a 0023     		movs	r3, #0
 7344 003c 01E0     		b	.L382
 7345              	.L381:
 7346              		.loc 19 133 54 discriminator 2
 7347 003e 4FF48053 		mov	r3, #4096
 7348              	.L382:
 7349              		.loc 19 133 21 is_stmt 1 discriminator 4
 7350 0042 FB60     		str	r3, [r7, #12]
 134:../libDaisy/src/util/WavWriter.h ****             bstate_ = BufferState::IDLE;
 7351              		.loc 19 134 21 discriminator 4
 7352 0044 7B68     		ldr	r3, [r7, #4]
 7353 0046 03F50043 		add	r3, r3, #32768
 7354 004a 1A46     		mov	r2, r3
 7355 004c 0023     		movs	r3, #0
 7356 004e 1364     		str	r3, [r2, #64]
 135:../libDaisy/src/util/WavWriter.h ****             f_write(&fp_, &transfer_buff[offset], transfer_size, &bw);
 7357              		.loc 19 135 20 discriminator 4
 7358 0050 7B68     		ldr	r3, [r7, #4]
 7359 0052 48F24800 		movw	r0, #32840
 7360 0056 1844     		add	r0, r0, r3
 7361              		.loc 19 135 41 discriminator 4
 7362 0058 FB68     		ldr	r3, [r7, #12]
 7363 005a 1033     		adds	r3, r3, #16
 7364 005c 9B00     		lsls	r3, r3, #2
 7365 005e 7A68     		ldr	r2, [r7, #4]
 7366 0060 D118     		adds	r1, r2, r3
 7367              		.loc 19 135 20 discriminator 4
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 176


 7368 0062 07F10803 		add	r3, r7, #8
 7369 0066 4FF48042 		mov	r2, #16384
 7370 006a FFF7FEFF 		bl	f_write
 7371              	.L383:
 7372              	.LBE28:
 7373              	.LBE27:
 136:../libDaisy/src/util/WavWriter.h ****         }
 137:../libDaisy/src/util/WavWriter.h ****     }
 7374              		.loc 19 137 5
 7375 006e 00BF     		nop
 7376 0070 1037     		adds	r7, r7, #16
 7377              		.cfi_def_cfa_offset 8
 7378 0072 BD46     		mov	sp, r7
 7379              		.cfi_def_cfa_register 13
 7380              		@ sp needed
 7381 0074 80BD     		pop	{r7, pc}
 7382              		.cfi_endproc
 7383              	.LFE5281:
 7385              		.section	.text._ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv,"axG",%progbits,_ZN5daisy9WavWrit
 7386              		.align	1
 7387              		.weak	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
 7388              		.syntax unified
 7389              		.thumb
 7390              		.thumb_func
 7392              	_ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv:
 7393              	.LFB5282:
 138:../libDaisy/src/util/WavWriter.h **** 
 139:../libDaisy/src/util/WavWriter.h ****     /** Finalizes the writing of the WAV file.
 140:../libDaisy/src/util/WavWriter.h **** 	 ** This overwrites the WAV Header with the correct
 141:../libDaisy/src/util/WavWriter.h **** 	 ** final size, and closes the fptr. */
 142:../libDaisy/src/util/WavWriter.h ****     void SaveFile()
 143:../libDaisy/src/util/WavWriter.h ****     {
 144:../libDaisy/src/util/WavWriter.h ****         unsigned int bw = 0;
 145:../libDaisy/src/util/WavWriter.h ****         recording_      = false;
 146:../libDaisy/src/util/WavWriter.h ****         // We _should_ flush whatever's left in the transfer buff
 147:../libDaisy/src/util/WavWriter.h ****         // TODO: that.
 148:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileSize = CalcFileSize();
 149:../libDaisy/src/util/WavWriter.h ****         f_lseek(&fp_, 0);
 150:../libDaisy/src/util/WavWriter.h ****         f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw);
 151:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 152:../libDaisy/src/util/WavWriter.h ****     }
 153:../libDaisy/src/util/WavWriter.h **** 
 154:../libDaisy/src/util/WavWriter.h ****     /** Opens a file for writing. Writes the initial WAV Header, and gets ready for stream-based re
 155:../libDaisy/src/util/WavWriter.h ****     void OpenFile(const char *name)
 156:../libDaisy/src/util/WavWriter.h ****     {
 157:../libDaisy/src/util/WavWriter.h ****         if(f_open(&fp_, name, FA_WRITE | FA_CREATE_ALWAYS) == FR_OK)
 158:../libDaisy/src/util/WavWriter.h ****         {
 159:../libDaisy/src/util/WavWriter.h ****             unsigned int bw = 0;
 160:../libDaisy/src/util/WavWriter.h ****             if(f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw) == FR_OK)
 161:../libDaisy/src/util/WavWriter.h ****             {
 162:../libDaisy/src/util/WavWriter.h ****                 recording_ = true;
 163:../libDaisy/src/util/WavWriter.h ****                 num_samps_ = 0;
 164:../libDaisy/src/util/WavWriter.h ****             }
 165:../libDaisy/src/util/WavWriter.h ****         }
 166:../libDaisy/src/util/WavWriter.h ****     }
 167:../libDaisy/src/util/WavWriter.h **** 
 168:../libDaisy/src/util/WavWriter.h ****     /** Returns whether recording is currently active or not. */
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 177


 169:../libDaisy/src/util/WavWriter.h ****     inline bool IsRecording() const { return recording_; }
 170:../libDaisy/src/util/WavWriter.h **** 
 171:../libDaisy/src/util/WavWriter.h ****     /** Returns the current length in samples of the recording. */
 172:../libDaisy/src/util/WavWriter.h ****     inline uint32_t GetLengthSamps() { return num_samps_; }
 173:../libDaisy/src/util/WavWriter.h **** 
 174:../libDaisy/src/util/WavWriter.h ****     /** Returns the current length of the recording in seconds. */
 175:../libDaisy/src/util/WavWriter.h ****     inline float GetLengthSeconds()
 7394              		.loc 19 175 18
 7395              		.cfi_startproc
 7396              		@ args = 0, pretend = 0, frame = 8
 7397              		@ frame_needed = 1, uses_anonymous_args = 0
 7398              		@ link register save eliminated.
 7399 0000 80B4     		push	{r7}
 7400              		.cfi_def_cfa_offset 4
 7401              		.cfi_offset 7, -4
 7402 0002 83B0     		sub	sp, sp, #12
 7403              		.cfi_def_cfa_offset 16
 7404 0004 00AF     		add	r7, sp, #0
 7405              		.cfi_def_cfa_register 7
 7406 0006 7860     		str	r0, [r7, #4]
 176:../libDaisy/src/util/WavWriter.h ****     {
 177:../libDaisy/src/util/WavWriter.h ****         return (float)num_samps_ / (float)cfg_.samplerate;
 7407              		.loc 19 177 23
 7408 0008 7B68     		ldr	r3, [r7, #4]
 7409 000a DB6A     		ldr	r3, [r3, #44]
 7410              		.loc 19 177 16
 7411 000c 07EE903A 		vmov	s15, r3	@ int
 7412 0010 B8EE677A 		vcvt.f32.u32	s14, s15
 7413              		.loc 19 177 48
 7414 0014 7B68     		ldr	r3, [r7, #4]
 7415 0016 D3ED0D7A 		vldr.32	s15, [r3, #52]
 7416 001a C7EE276A 		vdiv.f32	s13, s14, s15
 7417 001e F0EE667A 		vmov.f32	s15, s13
 178:../libDaisy/src/util/WavWriter.h ****     }
 7418              		.loc 19 178 5
 7419 0022 B0EE670A 		vmov.f32	s0, s15
 7420 0026 0C37     		adds	r7, r7, #12
 7421              		.cfi_def_cfa_offset 4
 7422 0028 BD46     		mov	sp, r7
 7423              		.cfi_def_cfa_register 13
 7424              		@ sp needed
 7425 002a 5DF8047B 		ldr	r7, [sp], #4
 7426              		.cfi_restore 7
 7427              		.cfi_def_cfa_offset 0
 7428 002e 7047     		bx	lr
 7429              		.cfi_endproc
 7430              	.LFE5282:
 7432              		.section	.text._ZN5daisy9WavWriterILj16384EE8SaveFileEv,"axG",%progbits,_ZN5daisy9WavWriterILj1638
 7433              		.align	1
 7434              		.weak	_ZN5daisy9WavWriterILj16384EE8SaveFileEv
 7435              		.syntax unified
 7436              		.thumb
 7437              		.thumb_func
 7439              	_ZN5daisy9WavWriterILj16384EE8SaveFileEv:
 7440              	.LFB5283:
 142:../libDaisy/src/util/WavWriter.h ****     {
 7441              		.loc 19 142 10
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 178


 7442              		.cfi_startproc
 7443              		@ args = 0, pretend = 0, frame = 16
 7444              		@ frame_needed = 1, uses_anonymous_args = 0
 7445 0000 80B5     		push	{r7, lr}
 7446              		.cfi_def_cfa_offset 8
 7447              		.cfi_offset 7, -8
 7448              		.cfi_offset 14, -4
 7449 0002 84B0     		sub	sp, sp, #16
 7450              		.cfi_def_cfa_offset 24
 7451 0004 00AF     		add	r7, sp, #0
 7452              		.cfi_def_cfa_register 7
 7453 0006 7860     		str	r0, [r7, #4]
 144:../libDaisy/src/util/WavWriter.h ****         recording_      = false;
 7454              		.loc 19 144 22
 7455 0008 0023     		movs	r3, #0
 7456 000a FB60     		str	r3, [r7, #12]
 145:../libDaisy/src/util/WavWriter.h ****         // We _should_ flush whatever's left in the transfer buff
 7457              		.loc 19 145 25
 7458 000c 7B68     		ldr	r3, [r7, #4]
 7459 000e 03F50043 		add	r3, r3, #32768
 7460 0012 0022     		movs	r2, #0
 7461 0014 83F84420 		strb	r2, [r3, #68]
 148:../libDaisy/src/util/WavWriter.h ****         f_lseek(&fp_, 0);
 7462              		.loc 19 148 43
 7463 0018 7868     		ldr	r0, [r7, #4]
 7464 001a FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
 7465 001e 0246     		mov	r2, r0
 148:../libDaisy/src/util/WavWriter.h ****         f_lseek(&fp_, 0);
 7466              		.loc 19 148 29
 7467 0020 7B68     		ldr	r3, [r7, #4]
 7468 0022 5A60     		str	r2, [r3, #4]
 149:../libDaisy/src/util/WavWriter.h ****         f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw);
 7469              		.loc 19 149 16
 7470 0024 7A68     		ldr	r2, [r7, #4]
 7471 0026 48F24803 		movw	r3, #32840
 7472 002a 1344     		add	r3, r3, r2
 7473 002c 0021     		movs	r1, #0
 7474 002e 1846     		mov	r0, r3
 7475 0030 FFF7FEFF 		bl	f_lseek
 150:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 7476              		.loc 19 150 16
 7477 0034 7B68     		ldr	r3, [r7, #4]
 7478 0036 48F24800 		movw	r0, #32840
 7479 003a 1844     		add	r0, r0, r3
 150:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 7480              		.loc 19 150 24
 7481 003c 7968     		ldr	r1, [r7, #4]
 150:../libDaisy/src/util/WavWriter.h ****         f_close(&fp_);
 7482              		.loc 19 150 16
 7483 003e 07F10C03 		add	r3, r7, #12
 7484 0042 2C22     		movs	r2, #44
 7485 0044 FFF7FEFF 		bl	f_write
 151:../libDaisy/src/util/WavWriter.h ****     }
 7486              		.loc 19 151 16
 7487 0048 7A68     		ldr	r2, [r7, #4]
 7488 004a 48F24803 		movw	r3, #32840
 7489 004e 1344     		add	r3, r3, r2
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 179


 7490 0050 1846     		mov	r0, r3
 7491 0052 FFF7FEFF 		bl	f_close
 152:../libDaisy/src/util/WavWriter.h **** 
 7492              		.loc 19 152 5
 7493 0056 00BF     		nop
 7494 0058 1037     		adds	r7, r7, #16
 7495              		.cfi_def_cfa_offset 8
 7496 005a BD46     		mov	sp, r7
 7497              		.cfi_def_cfa_register 13
 7498              		@ sp needed
 7499 005c 80BD     		pop	{r7, pc}
 7500              		.cfi_endproc
 7501              	.LFE5283:
 7503              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9Pri
 7504              		.align	1
 7505              		.weak	_ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_
 7506              		.syntax unified
 7507              		.thumb
 7508              		.thumb_func
 7510              	_ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_:
 7511              	.LFB5284:
 126:../libDaisy/src/daisy_seed.h ****     {
 7512              		.loc 18 126 17
 7513              		.cfi_startproc
 7514              		@ args = 0, pretend = 0, frame = 8
 7515              		@ frame_needed = 1, uses_anonymous_args = 0
 7516 0000 80B5     		push	{r7, lr}
 7517              		.cfi_def_cfa_offset 8
 7518              		.cfi_offset 7, -8
 7519              		.cfi_offset 14, -4
 7520 0002 82B0     		sub	sp, sp, #8
 7521              		.cfi_def_cfa_offset 16
 7522 0004 00AF     		add	r7, sp, #0
 7523              		.cfi_def_cfa_register 7
 7524 0006 7860     		str	r0, [r7, #4]
 7525 0008 87ED000A 		vstr.32	s0, [r7]
 128:../libDaisy/src/daisy_seed.h ****     }
 7526              		.loc 18 128 23
 7527 000c D7ED007A 		vldr.32	s15, [r7]
 7528 0010 B7EEE77A 		vcvt.f64.f32	d7, s15
 7529 0014 53EC172B 		vmov	r2, r3, d7
 7530 0018 7868     		ldr	r0, [r7, #4]
 7531 001a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 7532              		.loc 18 129 5
 7533 001e 00BF     		nop
 7534 0020 0837     		adds	r7, r7, #8
 7535              		.cfi_def_cfa_offset 8
 7536 0022 BD46     		mov	sp, r7
 7537              		.cfi_def_cfa_register 13
 7538              		@ sp needed
 7539 0024 80BD     		pop	{r7, pc}
 7540              		.cfi_endproc
 7541              	.LFE5284:
 7543              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9P
 7544              		.align	1
 7545              		.weak	_ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_
 7546              		.syntax unified
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 180


 7547              		.thumb
 7548              		.thumb_func
 7550              	_ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_:
 7551              	.LFB5285:
 126:../libDaisy/src/daisy_seed.h ****     {
 7552              		.loc 18 126 17
 7553              		.cfi_startproc
 7554              		@ args = 0, pretend = 0, frame = 16
 7555              		@ frame_needed = 1, uses_anonymous_args = 0
 7556 0000 80B5     		push	{r7, lr}
 7557              		.cfi_def_cfa_offset 8
 7558              		.cfi_offset 7, -8
 7559              		.cfi_offset 14, -4
 7560 0002 84B0     		sub	sp, sp, #16
 7561              		.cfi_def_cfa_offset 24
 7562 0004 00AF     		add	r7, sp, #0
 7563              		.cfi_def_cfa_register 7
 7564 0006 F860     		str	r0, [r7, #12]
 7565 0008 B960     		str	r1, [r7, #8]
 7566 000a 7A60     		str	r2, [r7, #4]
 128:../libDaisy/src/daisy_seed.h ****     }
 7567              		.loc 18 128 23
 7568 000c 7A68     		ldr	r2, [r7, #4]
 7569 000e B968     		ldr	r1, [r7, #8]
 7570 0010 F868     		ldr	r0, [r7, #12]
 7571 0012 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 7572              		.loc 18 129 5
 7573 0016 00BF     		nop
 7574 0018 1037     		adds	r7, r7, #16
 7575              		.cfi_def_cfa_offset 8
 7576 001a BD46     		mov	sp, r7
 7577              		.cfi_def_cfa_register 13
 7578              		@ sp needed
 7579 001c 80BD     		pop	{r7, pc}
 7580              		.cfi_endproc
 7581              	.LFE5285:
 7583              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9Pri
 7584              		.align	1
 7585              		.weak	_ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_
 7586              		.syntax unified
 7587              		.thumb
 7588              		.thumb_func
 7590              	_ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_:
 7591              	.LFB5286:
 126:../libDaisy/src/daisy_seed.h ****     {
 7592              		.loc 18 126 17
 7593              		.cfi_startproc
 7594              		@ args = 0, pretend = 0, frame = 8
 7595              		@ frame_needed = 1, uses_anonymous_args = 0
 7596 0000 80B5     		push	{r7, lr}
 7597              		.cfi_def_cfa_offset 8
 7598              		.cfi_offset 7, -8
 7599              		.cfi_offset 14, -4
 7600 0002 82B0     		sub	sp, sp, #8
 7601              		.cfi_def_cfa_offset 16
 7602 0004 00AF     		add	r7, sp, #0
 7603              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 181


 7604 0006 7860     		str	r0, [r7, #4]
 7605 0008 3960     		str	r1, [r7]
 128:../libDaisy/src/daisy_seed.h ****     }
 7606              		.loc 18 128 23
 7607 000a 3968     		ldr	r1, [r7]
 7608 000c 7868     		ldr	r0, [r7, #4]
 7609 000e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 7610              		.loc 18 129 5
 7611 0012 00BF     		nop
 7612 0014 0837     		adds	r7, r7, #8
 7613              		.cfi_def_cfa_offset 8
 7614 0016 BD46     		mov	sp, r7
 7615              		.cfi_def_cfa_register 13
 7616              		@ sp needed
 7617 0018 80BD     		pop	{r7, pc}
 7618              		.cfi_endproc
 7619              	.LFE5286:
 7621              		.section	.text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE,"axG",%progbits,_ZN5daisy9WavWrit
 7622              		.align	1
 7623              		.weak	_ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE
 7624              		.syntax unified
 7625              		.thumb
 7626              		.thumb_func
 7628              	_ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:
 7629              	.LFB5287:
  67:../libDaisy/src/util/WavWriter.h ****     {
 7630              		.loc 19 67 10
 7631              		.cfi_startproc
 7632              		@ args = 0, pretend = 0, frame = 8
 7633              		@ frame_needed = 1, uses_anonymous_args = 0
 7634 0000 80B5     		push	{r7, lr}
 7635              		.cfi_def_cfa_offset 8
 7636              		.cfi_offset 7, -8
 7637              		.cfi_offset 14, -4
 7638 0002 82B0     		sub	sp, sp, #8
 7639              		.cfi_def_cfa_offset 16
 7640 0004 00AF     		add	r7, sp, #0
 7641              		.cfi_def_cfa_register 7
 7642 0006 7860     		str	r0, [r7, #4]
 7643 0008 3960     		str	r1, [r7]
  69:../libDaisy/src/util/WavWriter.h ****         num_samps_ = 0;
 7644              		.loc 19 69 9
 7645 000a 7B68     		ldr	r3, [r7, #4]
 7646 000c 3A68     		ldr	r2, [r7]
 7647 000e 3433     		adds	r3, r3, #52
 7648 0010 07CA     		ldm	r2, {r0, r1, r2}
 7649 0012 83E80700 		stm	r3, {r0, r1, r2}
  70:../libDaisy/src/util/WavWriter.h ****         // Prep the wav header according to config.
 7650              		.loc 19 70 20
 7651 0016 7B68     		ldr	r3, [r7, #4]
 7652 0018 0022     		movs	r2, #0
 7653 001a DA62     		str	r2, [r3, #44]
  73:../libDaisy/src/util/WavWriter.h ****         wavheader_.FileFormat    = kWavFileWaveId;      /** "WAVE" */
 7654              		.loc 19 73 34
 7655 001c 7B68     		ldr	r3, [r7, #4]
 7656 001e 204A     		ldr	r2, .L392
 7657 0020 1A60     		str	r2, [r3]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 182


  74:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1ID   = kWavFileSubChunk1Id; /** "fmt " */
 7658              		.loc 19 74 34
 7659 0022 7B68     		ldr	r3, [r7, #4]
 7660 0024 1F4A     		ldr	r2, .L392+4
 7661 0026 9A60     		str	r2, [r3, #8]
  75:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk1Size = 16;                  // for PCM
 7662              		.loc 19 75 34
 7663 0028 7B68     		ldr	r3, [r7, #4]
 7664 002a 1F4A     		ldr	r2, .L392+8
 7665 002c DA60     		str	r2, [r3, #12]
  76:../libDaisy/src/util/WavWriter.h ****         wavheader_.AudioFormat   = WAVE_FORMAT_PCM;
 7666              		.loc 19 76 34
 7667 002e 7B68     		ldr	r3, [r7, #4]
 7668 0030 1022     		movs	r2, #16
 7669 0032 1A61     		str	r2, [r3, #16]
  77:../libDaisy/src/util/WavWriter.h ****         wavheader_.NbrChannels   = cfg.channels;
 7670              		.loc 19 77 34
 7671 0034 7B68     		ldr	r3, [r7, #4]
 7672 0036 0122     		movs	r2, #1
 7673 0038 9A82     		strh	r2, [r3, #20]	@ movhi
  78:../libDaisy/src/util/WavWriter.h ****         wavheader_.SampleRate    = static_cast<int>(cfg.samplerate);
 7674              		.loc 19 78 40
 7675 003a 3B68     		ldr	r3, [r7]
 7676 003c 5B68     		ldr	r3, [r3, #4]
  78:../libDaisy/src/util/WavWriter.h ****         wavheader_.SampleRate    = static_cast<int>(cfg.samplerate);
 7677              		.loc 19 78 34
 7678 003e 9AB2     		uxth	r2, r3
 7679 0040 7B68     		ldr	r3, [r7, #4]
 7680 0042 DA82     		strh	r2, [r3, #22]	@ movhi
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
 7681              		.loc 19 79 57
 7682 0044 3B68     		ldr	r3, [r7]
 7683 0046 D3ED007A 		vldr.32	s15, [r3]
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
 7684              		.loc 19 79 36
 7685 004a FDEEE77A 		vcvt.s32.f32	s15, s15
 7686 004e 17EE902A 		vmov	r2, s15	@ int
  79:../libDaisy/src/util/WavWriter.h ****         wavheader_.ByteRate      = CalcByteRate();
 7687              		.loc 19 79 34
 7688 0052 7B68     		ldr	r3, [r7, #4]
 7689 0054 9A61     		str	r2, [r3, #24]
  80:../libDaisy/src/util/WavWriter.h ****         wavheader_.BlockAlign    = cfg_.channels * cfg_.bitspersample / 8;
 7690              		.loc 19 80 48
 7691 0056 7868     		ldr	r0, [r7, #4]
 7692 0058 FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE12CalcByteRateEv
 7693 005c 0246     		mov	r2, r0
  80:../libDaisy/src/util/WavWriter.h ****         wavheader_.BlockAlign    = cfg_.channels * cfg_.bitspersample / 8;
 7694              		.loc 19 80 34
 7695 005e 7B68     		ldr	r3, [r7, #4]
 7696 0060 DA61     		str	r2, [r3, #28]
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7697              		.loc 19 81 41
 7698 0062 7B68     		ldr	r3, [r7, #4]
 7699 0064 9B6B     		ldr	r3, [r3, #56]
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7700              		.loc 19 81 57
 7701 0066 7A68     		ldr	r2, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 183


 7702 0068 D26B     		ldr	r2, [r2, #60]
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7703              		.loc 19 81 50
 7704 006a 02FB03F3 		mul	r3, r2, r3
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7705              		.loc 19 81 71
 7706 006e 002B     		cmp	r3, #0
 7707 0070 00DA     		bge	.L391
 7708 0072 0733     		adds	r3, r3, #7
 7709              	.L391:
 7710 0074 DB10     		asrs	r3, r3, #3
  81:../libDaisy/src/util/WavWriter.h ****         wavheader_.BitPerSample  = cfg_.bitspersample;
 7711              		.loc 19 81 34
 7712 0076 9AB2     		uxth	r2, r3
 7713 0078 7B68     		ldr	r3, [r7, #4]
 7714 007a 1A84     		strh	r2, [r3, #32]	@ movhi
  82:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk2ID   = kWavFileSubChunk2Id; /** "data" */
 7715              		.loc 19 82 41
 7716 007c 7B68     		ldr	r3, [r7, #4]
 7717 007e DB6B     		ldr	r3, [r3, #60]
  82:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubChunk2ID   = kWavFileSubChunk2Id; /** "data" */
 7718              		.loc 19 82 34
 7719 0080 9AB2     		uxth	r2, r3
 7720 0082 7B68     		ldr	r3, [r7, #4]
 7721 0084 5A84     		strh	r2, [r3, #34]	@ movhi
  83:../libDaisy/src/util/WavWriter.h ****         /** Also calcs SubChunk2Size */
 7722              		.loc 19 83 34
 7723 0086 7B68     		ldr	r3, [r7, #4]
 7724 0088 084A     		ldr	r2, .L392+12
 7725 008a 5A62     		str	r2, [r3, #36]
  85:../libDaisy/src/util/WavWriter.h ****         // This is calculated as part of the subchunk size
 7726              		.loc 19 85 43
 7727 008c 7868     		ldr	r0, [r7, #4]
 7728 008e FFF7FEFF 		bl	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
 7729 0092 0246     		mov	r2, r0
  85:../libDaisy/src/util/WavWriter.h ****         // This is calculated as part of the subchunk size
 7730              		.loc 19 85 29
 7731 0094 7B68     		ldr	r3, [r7, #4]
 7732 0096 5A60     		str	r2, [r3, #4]
  87:../libDaisy/src/util/WavWriter.h **** 
 7733              		.loc 19 87 5
 7734 0098 00BF     		nop
 7735 009a 0837     		adds	r7, r7, #8
 7736              		.cfi_def_cfa_offset 8
 7737 009c BD46     		mov	sp, r7
 7738              		.cfi_def_cfa_register 13
 7739              		@ sp needed
 7740 009e 80BD     		pop	{r7, pc}
 7741              	.L393:
 7742              		.align	2
 7743              	.L392:
 7744 00a0 52494646 		.word	1179011410
 7745 00a4 57415645 		.word	1163280727
 7746 00a8 666D7420 		.word	544501094
 7747 00ac 64617461 		.word	1635017060
 7748              		.cfi_endproc
 7749              	.LFE5287:
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 184


 7751              		.section	.text._ZN5daisy9WavWriterILj16384EE8OpenFileEPKc,"axG",%progbits,_ZN5daisy9WavWriterILj16
 7752              		.align	1
 7753              		.weak	_ZN5daisy9WavWriterILj16384EE8OpenFileEPKc
 7754              		.syntax unified
 7755              		.thumb
 7756              		.thumb_func
 7758              	_ZN5daisy9WavWriterILj16384EE8OpenFileEPKc:
 7759              	.LFB5288:
 155:../libDaisy/src/util/WavWriter.h ****     {
 7760              		.loc 19 155 10
 7761              		.cfi_startproc
 7762              		@ args = 0, pretend = 0, frame = 16
 7763              		@ frame_needed = 1, uses_anonymous_args = 0
 7764 0000 80B5     		push	{r7, lr}
 7765              		.cfi_def_cfa_offset 8
 7766              		.cfi_offset 7, -8
 7767              		.cfi_offset 14, -4
 7768 0002 84B0     		sub	sp, sp, #16
 7769              		.cfi_def_cfa_offset 24
 7770 0004 00AF     		add	r7, sp, #0
 7771              		.cfi_def_cfa_register 7
 7772 0006 7860     		str	r0, [r7, #4]
 7773 0008 3960     		str	r1, [r7]
 7774              	.LBB29:
 157:../libDaisy/src/util/WavWriter.h ****         {
 7775              		.loc 19 157 18
 7776 000a 7A68     		ldr	r2, [r7, #4]
 7777 000c 48F24803 		movw	r3, #32840
 7778 0010 1344     		add	r3, r3, r2
 7779 0012 0A22     		movs	r2, #10
 7780 0014 3968     		ldr	r1, [r7]
 7781 0016 1846     		mov	r0, r3
 7782 0018 FFF7FEFF 		bl	f_open
 7783 001c 0346     		mov	r3, r0
 157:../libDaisy/src/util/WavWriter.h ****         {
 7784              		.loc 19 157 60
 7785 001e 002B     		cmp	r3, #0
 7786 0020 0CBF     		ite	eq
 7787 0022 0123     		moveq	r3, #1
 7788 0024 0023     		movne	r3, #0
 7789 0026 DBB2     		uxtb	r3, r3
 157:../libDaisy/src/util/WavWriter.h ****         {
 7790              		.loc 19 157 9
 7791 0028 002B     		cmp	r3, #0
 7792 002a 1CD0     		beq	.L397
 7793              	.LBB30:
 159:../libDaisy/src/util/WavWriter.h ****             if(f_write(&fp_, &wavheader_, sizeof(wavheader_), &bw) == FR_OK)
 7794              		.loc 19 159 26
 7795 002c 0023     		movs	r3, #0
 7796 002e FB60     		str	r3, [r7, #12]
 160:../libDaisy/src/util/WavWriter.h ****             {
 7797              		.loc 19 160 23
 7798 0030 7B68     		ldr	r3, [r7, #4]
 7799 0032 48F24800 		movw	r0, #32840
 7800 0036 1844     		add	r0, r0, r3
 160:../libDaisy/src/util/WavWriter.h ****             {
 7801              		.loc 19 160 31
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 185


 7802 0038 7968     		ldr	r1, [r7, #4]
 160:../libDaisy/src/util/WavWriter.h ****             {
 7803              		.loc 19 160 23
 7804 003a 07F10C03 		add	r3, r7, #12
 7805 003e 2C22     		movs	r2, #44
 7806 0040 FFF7FEFF 		bl	f_write
 7807 0044 0346     		mov	r3, r0
 160:../libDaisy/src/util/WavWriter.h ****             {
 7808              		.loc 19 160 68
 7809 0046 002B     		cmp	r3, #0
 7810 0048 0CBF     		ite	eq
 7811 004a 0123     		moveq	r3, #1
 7812 004c 0023     		movne	r3, #0
 7813 004e DBB2     		uxtb	r3, r3
 160:../libDaisy/src/util/WavWriter.h ****             {
 7814              		.loc 19 160 13
 7815 0050 002B     		cmp	r3, #0
 7816 0052 08D0     		beq	.L397
 162:../libDaisy/src/util/WavWriter.h ****                 num_samps_ = 0;
 7817              		.loc 19 162 28
 7818 0054 7B68     		ldr	r3, [r7, #4]
 7819 0056 03F50043 		add	r3, r3, #32768
 7820 005a 0122     		movs	r2, #1
 7821 005c 83F84420 		strb	r2, [r3, #68]
 163:../libDaisy/src/util/WavWriter.h ****             }
 7822              		.loc 19 163 28
 7823 0060 7B68     		ldr	r3, [r7, #4]
 7824 0062 0022     		movs	r2, #0
 7825 0064 DA62     		str	r2, [r3, #44]
 7826              	.L397:
 7827              	.LBE30:
 7828              	.LBE29:
 166:../libDaisy/src/util/WavWriter.h **** 
 7829              		.loc 19 166 5
 7830 0066 00BF     		nop
 7831 0068 1037     		adds	r7, r7, #16
 7832              		.cfi_def_cfa_offset 8
 7833 006a BD46     		mov	sp, r7
 7834              		.cfi_def_cfa_register 13
 7835              		@ sp needed
 7836 006c 80BD     		pop	{r7, pc}
 7837              		.cfi_endproc
 7838              	.LFE5288:
 7840              		.section	.text._ZNK5daisy9WavWriterILj16384EE11IsRecordingEv,"axG",%progbits,_ZNK5daisy9WavWriterI
 7841              		.align	1
 7842              		.weak	_ZNK5daisy9WavWriterILj16384EE11IsRecordingEv
 7843              		.syntax unified
 7844              		.thumb
 7845              		.thumb_func
 7847              	_ZNK5daisy9WavWriterILj16384EE11IsRecordingEv:
 7848              	.LFB5413:
 169:../libDaisy/src/util/WavWriter.h **** 
 7849              		.loc 19 169 17
 7850              		.cfi_startproc
 7851              		@ args = 0, pretend = 0, frame = 8
 7852              		@ frame_needed = 1, uses_anonymous_args = 0
 7853              		@ link register save eliminated.
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 186


 7854 0000 80B4     		push	{r7}
 7855              		.cfi_def_cfa_offset 4
 7856              		.cfi_offset 7, -4
 7857 0002 83B0     		sub	sp, sp, #12
 7858              		.cfi_def_cfa_offset 16
 7859 0004 00AF     		add	r7, sp, #0
 7860              		.cfi_def_cfa_register 7
 7861 0006 7860     		str	r0, [r7, #4]
 169:../libDaisy/src/util/WavWriter.h **** 
 7862              		.loc 19 169 46
 7863 0008 7B68     		ldr	r3, [r7, #4]
 7864 000a 03F50043 		add	r3, r3, #32768
 7865 000e 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 169:../libDaisy/src/util/WavWriter.h **** 
 7866              		.loc 19 169 58
 7867 0012 1846     		mov	r0, r3
 7868 0014 0C37     		adds	r7, r7, #12
 7869              		.cfi_def_cfa_offset 4
 7870 0016 BD46     		mov	sp, r7
 7871              		.cfi_def_cfa_register 13
 7872              		@ sp needed
 7873 0018 5DF8047B 		ldr	r7, [sp], #4
 7874              		.cfi_restore 7
 7875              		.cfi_def_cfa_offset 0
 7876 001c 7047     		bx	lr
 7877              		.cfi_endproc
 7878              	.LFE5413:
 7880              		.section	.text._ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv,"axG",%progbits,_ZN5daisy9WavWriterIL
 7881              		.align	1
 7882              		.weak	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
 7883              		.syntax unified
 7884              		.thumb
 7885              		.thumb_func
 7887              	_ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv:
 7888              	.LFB5414:
 179:../libDaisy/src/util/WavWriter.h **** 
 180:../libDaisy/src/util/WavWriter.h ****   private:
 181:../libDaisy/src/util/WavWriter.h ****     /** Calculate the file size based on current recording */
 182:../libDaisy/src/util/WavWriter.h ****     inline uint32_t CalcFileSize()
 7889              		.loc 19 182 21
 7890              		.cfi_startproc
 7891              		@ args = 0, pretend = 0, frame = 8
 7892              		@ frame_needed = 1, uses_anonymous_args = 0
 7893              		@ link register save eliminated.
 7894 0000 80B4     		push	{r7}
 7895              		.cfi_def_cfa_offset 4
 7896              		.cfi_offset 7, -4
 7897 0002 83B0     		sub	sp, sp, #12
 7898              		.cfi_def_cfa_offset 16
 7899 0004 00AF     		add	r7, sp, #0
 7900              		.cfi_def_cfa_register 7
 7901 0006 7860     		str	r0, [r7, #4]
 183:../libDaisy/src/util/WavWriter.h ****     {
 184:../libDaisy/src/util/WavWriter.h ****         wavheader_.SubCHunk2Size
 185:../libDaisy/src/util/WavWriter.h ****             = num_samps_ * cfg_.channels * cfg_.bitspersample / 8;
 7902              		.loc 19 185 15
 7903 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 187


 7904 000a DB6A     		ldr	r3, [r3, #44]
 7905              		.loc 19 185 33
 7906 000c 7A68     		ldr	r2, [r7, #4]
 7907 000e 926B     		ldr	r2, [r2, #56]
 7908              		.loc 19 185 26
 7909 0010 02FB03F3 		mul	r3, r2, r3
 7910              		.loc 19 185 49
 7911 0014 7A68     		ldr	r2, [r7, #4]
 7912 0016 D26B     		ldr	r2, [r2, #60]
 7913              		.loc 19 185 42
 7914 0018 02FB03F3 		mul	r3, r2, r3
 7915              		.loc 19 185 63
 7916 001c DA08     		lsrs	r2, r3, #3
 7917              		.loc 19 185 13
 7918 001e 7B68     		ldr	r3, [r7, #4]
 7919 0020 9A62     		str	r2, [r3, #40]
 186:../libDaisy/src/util/WavWriter.h ****         return 36 + wavheader_.SubCHunk2Size;
 7920              		.loc 19 186 32
 7921 0022 7B68     		ldr	r3, [r7, #4]
 7922 0024 9B6A     		ldr	r3, [r3, #40]
 7923 0026 2433     		adds	r3, r3, #36
 187:../libDaisy/src/util/WavWriter.h ****     }
 7924              		.loc 19 187 5
 7925 0028 1846     		mov	r0, r3
 7926 002a 0C37     		adds	r7, r7, #12
 7927              		.cfi_def_cfa_offset 4
 7928 002c BD46     		mov	sp, r7
 7929              		.cfi_def_cfa_register 13
 7930              		@ sp needed
 7931 002e 5DF8047B 		ldr	r7, [sp], #4
 7932              		.cfi_restore 7
 7933              		.cfi_def_cfa_offset 0
 7934 0032 7047     		bx	lr
 7935              		.cfi_endproc
 7936              	.LFE5414:
 7938              		.section	.text._ZN5daisy9WavWriterILj16384EE12CalcByteRateEv,"axG",%progbits,_ZN5daisy9WavWriterIL
 7939              		.align	1
 7940              		.weak	_ZN5daisy9WavWriterILj16384EE12CalcByteRateEv
 7941              		.syntax unified
 7942              		.thumb
 7943              		.thumb_func
 7945              	_ZN5daisy9WavWriterILj16384EE12CalcByteRateEv:
 7946              	.LFB5415:
 188:../libDaisy/src/util/WavWriter.h **** 
 189:../libDaisy/src/util/WavWriter.h ****     /** Compute the byte rate given the user settings. */
 190:../libDaisy/src/util/WavWriter.h ****     inline uint32_t CalcByteRate()
 7947              		.loc 19 190 21
 7948              		.cfi_startproc
 7949              		@ args = 0, pretend = 0, frame = 8
 7950              		@ frame_needed = 1, uses_anonymous_args = 0
 7951              		@ link register save eliminated.
 7952 0000 80B4     		push	{r7}
 7953              		.cfi_def_cfa_offset 4
 7954              		.cfi_offset 7, -4
 7955 0002 83B0     		sub	sp, sp, #12
 7956              		.cfi_def_cfa_offset 16
 7957 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 188


 7958              		.cfi_def_cfa_register 7
 7959 0006 7860     		str	r0, [r7, #4]
 191:../libDaisy/src/util/WavWriter.h ****     {
 192:../libDaisy/src/util/WavWriter.h ****         return cfg_.samplerate * cfg_.channels * cfg_.bitspersample / 8;
 7960              		.loc 19 192 21
 7961 0008 7B68     		ldr	r3, [r7, #4]
 7962 000a 93ED0D7A 		vldr.32	s14, [r3, #52]
 7963              		.loc 19 192 39
 7964 000e 7B68     		ldr	r3, [r7, #4]
 7965 0010 9B6B     		ldr	r3, [r3, #56]
 7966              		.loc 19 192 32
 7967 0012 07EE903A 		vmov	s15, r3	@ int
 7968 0016 F8EEE77A 		vcvt.f32.s32	s15, s15
 7969 001a 27EE277A 		vmul.f32	s14, s14, s15
 7970              		.loc 19 192 55
 7971 001e 7B68     		ldr	r3, [r7, #4]
 7972 0020 DB6B     		ldr	r3, [r3, #60]
 7973              		.loc 19 192 48
 7974 0022 07EE903A 		vmov	s15, r3	@ int
 7975 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 7976 002a 27EE277A 		vmul.f32	s14, s14, s15
 7977              		.loc 19 192 69
 7978 002e F2EE006A 		vmov.f32	s13, #8.0e+0
 7979 0032 C7EE267A 		vdiv.f32	s15, s14, s13
 7980              		.loc 19 192 71
 7981 0036 FCEEE77A 		vcvt.u32.f32	s15, s15
 7982 003a 17EE903A 		vmov	r3, s15	@ int
 193:../libDaisy/src/util/WavWriter.h ****     }
 7983              		.loc 19 193 5
 7984 003e 1846     		mov	r0, r3
 7985 0040 0C37     		adds	r7, r7, #12
 7986              		.cfi_def_cfa_offset 4
 7987 0042 BD46     		mov	sp, r7
 7988              		.cfi_def_cfa_register 13
 7989              		@ sp needed
 7990 0044 5DF8047B 		ldr	r7, [sp], #4
 7991              		.cfi_restore 7
 7992              		.cfi_def_cfa_offset 0
 7993 0048 7047     		bx	lr
 7994              		.cfi_endproc
 7995              	.LFE5415:
 7997              		.text
 7998              	.Letext0:
 7999              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 8000              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 8001              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 8002              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 8003              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/cpp_type_traits.
 8004              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 8005              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 8006              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 8007              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 8008              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 8009              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 8010              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 8011              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 8012              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 189


 8013              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 8014              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 8015              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 8016              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 8017              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 8018              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 8019              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 8020              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 8021              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/type_traits.h"
 8022              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 8023              		.file 44 "<built-in>"
 8024              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 8025              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 8026              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 8027              		.file 48 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 8028              		.file 49 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 8029              		.file 50 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 8030              		.file 51 "../libDaisy/src/per/tim.h"
 8031              		.file 52 "../libDaisy/src/sys/system.h"
 8032              		.file 53 "../libDaisy/src/per/qspi.h"
 8033              		.file 54 "../libDaisy/src/per/dac.h"
 8034              		.file 55 "../libDaisy/src/per/sai.h"
 8035              		.file 56 "../libDaisy/src/hid/audio.h"
 8036              		.file 57 "../libDaisy/src/per/adc.h"
 8037              		.file 58 "../libDaisy/src/per/uart.h"
 8038              		.file 59 "../libDaisy/src/hid/MidiEvent.h"
 8039              		.file 60 "../libDaisy/src/hid/midi_parser.h"
 8040              		.file 61 "../libDaisy/src/hid/usb.h"
 8041              		.file 62 "../libDaisy/src/hid/midi.h"
 8042              		.file 63 "../libDaisy/src/util/FIFO.h"
 8043              		.file 64 "../libDaisy/src/hid/ctrl.h"
 8044              		.file 65 "../libDaisy/src/hid/logger_impl.h"
 8045              		.file 66 "../libDaisy/src/per/sdmmc.h"
 8046              		.file 67 "../libDaisy/src/util/wav_format.h"
 8047              		.file 68 "../libDaisy/src/hid/led.h"
 8048              		.file 69 "../libDaisy/src/hid/rgb_led.h"
 8049              		.file 70 "../libDaisy/src/dev/max11300.h"
 8050              		.file 71 "../libDaisy/src/sys/fatfs.h"
 8051              		.file 72 "../libDaisy/src/hid/logger.h"
 8052              		.file 73 "../libDaisy/src/daisy_pod.h"
 8053              		.file 74 "../libDaisy/src/per/gpio.h"
 8054              		.file 75 "../libDaisy/src/dev/sdram.h"
 8055              		.file 76 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 8056              		.file 77 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 8057              		.file 78 "../libDaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 8058              		.file 79 "../libDaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 8059              		.file 80 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 8060              		.file 81 "../DaisySP/Source/Control/adenv.h"
 8061              		.file 82 "../DaisySP/Source/Dynamics/limiter.h"
 8062              		.file 83 "../DaisySP/Source/Utility/delayline.h"
 8063              		.file 84 "../DaisySP/Source/Effects/chorus.h"
 8064              		.file 85 "../DaisySP/Source/Utility/smooth_random.h"
 8065              		.file 86 "../DaisySP/Source/../DaisySP-LGPL/Source/Dynamics/compressor.h"
 8066              		.file 87 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 8067              		.file 88 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/time.h"
 8068              		.file 89 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 8069              		.file 90 "../DaisySP/Source/Effects/../../../src/sample.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 190


 8070              		.file 91 "../libDaisy/src/dev/sr_595.h"
 8071              		.file 92 "GrainPhasor.h"
 8072              		.file 93 "Grain.h"
 8073              		.file 94 "AppState.h"
 8074              		.file 95 "GrannyChordApp.h"
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 191


DEFINED SYMBOLS
                            *ABS*:0000000000000000 GrannyChordApp.cpp
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:19     .text._ZSt3absf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:25     .text._ZSt3absf:0000000000000000 _ZSt3absf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:59     .text._ZSt4fabsf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:65     .text._ZSt4fabsf:0000000000000000 _ZSt4fabsf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:99     .rodata._ZStL19piecewise_construct:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:102    .rodata._ZStL19piecewise_construct:0000000000000000 _ZStL19piecewise_construct
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:105    .text._ZNK5daisy6Switch10RisingEdgeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:111    .text._ZNK5daisy6Switch10RisingEdgeEv:0000000000000000 _ZNK5daisy6Switch10RisingEdgeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:162    .text._ZNK5daisy6Switch11FallingEdgeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:168    .text._ZNK5daisy6Switch11FallingEdgeEv:0000000000000000 _ZNK5daisy6Switch11FallingEdgeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:218    .text._ZNK5daisy6Switch7PressedEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:224    .text._ZNK5daisy6Switch7PressedEv:0000000000000000 _ZNK5daisy6Switch7PressedEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:263    .text._ZNK5daisy6Switch10TimeHeldMsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:269    .text._ZNK5daisy6Switch10TimeHeldMsEv:0000000000000000 _ZNK5daisy6Switch10TimeHeldMsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:318    .text._ZNK5daisy6Switch10TimeHeldMsEv:000000000000003c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:323    .text._ZNK5daisy7Encoder9IncrementEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:329    .text._ZNK5daisy7Encoder9IncrementEv:0000000000000000 _ZNK5daisy7Encoder9IncrementEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:375    .text._ZNK5daisy7Encoder11FallingEdgeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:381    .text._ZNK5daisy7Encoder11FallingEdgeEv:0000000000000000 _ZNK5daisy7Encoder11FallingEdgeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:414    .text._ZNK5daisy7Encoder10TimeHeldMsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:420    .text._ZNK5daisy7Encoder10TimeHeldMsEv:0000000000000000 _ZNK5daisy7Encoder10TimeHeldMsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:453    .rodata._ZN5daisyL15kWavFileChunkIdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:456    .rodata._ZN5daisyL15kWavFileChunkIdE:0000000000000000 _ZN5daisyL15kWavFileChunkIdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:459    .rodata._ZN5daisyL14kWavFileWaveIdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:462    .rodata._ZN5daisyL14kWavFileWaveIdE:0000000000000000 _ZN5daisyL14kWavFileWaveIdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:465    .rodata._ZN5daisyL19kWavFileSubChunk1IdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:468    .rodata._ZN5daisyL19kWavFileSubChunk1IdE:0000000000000000 _ZN5daisyL19kWavFileSubChunk1IdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:471    .rodata._ZN5daisyL19kWavFileSubChunk2IdE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:474    .rodata._ZN5daisyL19kWavFileSubChunk2IdE:0000000000000000 _ZN5daisyL19kWavFileSubChunk2IdE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:477    .text._ZN5daisy5ColorD2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:483    .text._ZN5daisy5ColorD2Ev:0000000000000000 _ZN5daisy5ColorD2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:483    .text._ZN5daisy5ColorD2Ev:0000000000000000 _ZN5daisy5ColorD1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:517    .rodata._ZL19kMaxSr595DaisyChain:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:520    .rodata._ZL19kMaxSr595DaisyChain:0000000000000000 _ZL19kMaxSr595DaisyChain
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:523    .text._ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:529    .text._ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv:0000000000000000 _ZNK5daisy12CpuLoadMeter13GetAvgCpuLoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:564    .text._ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:570    .text._ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv:0000000000000000 _ZNK5daisy12CpuLoadMeter13GetMinCpuLoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:604    .text._ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:610    .text._ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv:0000000000000000 _ZNK5daisy12CpuLoadMeter13GetMaxCpuLoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:644    .rodata._ZN5daisy4seedL2D0E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:647    .rodata._ZN5daisy4seedL2D0E:0000000000000000 _ZN5daisy4seedL2D0E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:651    .rodata._ZN5daisy4seedL2D1E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:654    .rodata._ZN5daisy4seedL2D1E:0000000000000000 _ZN5daisy4seedL2D1E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:658    .rodata._ZN5daisy4seedL2D2E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:661    .rodata._ZN5daisy4seedL2D2E:0000000000000000 _ZN5daisy4seedL2D2E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:665    .rodata._ZN5daisy4seedL2D3E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:668    .rodata._ZN5daisy4seedL2D3E:0000000000000000 _ZN5daisy4seedL2D3E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:672    .rodata._ZN5daisy4seedL2D4E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:675    .rodata._ZN5daisy4seedL2D4E:0000000000000000 _ZN5daisy4seedL2D4E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:679    .rodata._ZN5daisy4seedL2D5E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:682    .rodata._ZN5daisy4seedL2D5E:0000000000000000 _ZN5daisy4seedL2D5E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:686    .rodata._ZN5daisy4seedL2D6E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:689    .rodata._ZN5daisy4seedL2D6E:0000000000000000 _ZN5daisy4seedL2D6E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:693    .rodata._ZN5daisy4seedL2D7E:0000000000000000 $d
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 192


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:696    .rodata._ZN5daisy4seedL2D7E:0000000000000000 _ZN5daisy4seedL2D7E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:700    .rodata._ZN5daisy4seedL2D8E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:703    .rodata._ZN5daisy4seedL2D8E:0000000000000000 _ZN5daisy4seedL2D8E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:707    .rodata._ZN5daisy4seedL2D9E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:710    .rodata._ZN5daisy4seedL2D9E:0000000000000000 _ZN5daisy4seedL2D9E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:714    .rodata._ZN5daisy4seedL3D10E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:717    .rodata._ZN5daisy4seedL3D10E:0000000000000000 _ZN5daisy4seedL3D10E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:721    .rodata._ZN5daisy4seedL3D11E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:724    .rodata._ZN5daisy4seedL3D11E:0000000000000000 _ZN5daisy4seedL3D11E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:728    .rodata._ZN5daisy4seedL3D12E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:731    .rodata._ZN5daisy4seedL3D12E:0000000000000000 _ZN5daisy4seedL3D12E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:735    .rodata._ZN5daisy4seedL3D13E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:738    .rodata._ZN5daisy4seedL3D13E:0000000000000000 _ZN5daisy4seedL3D13E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:742    .rodata._ZN5daisy4seedL3D14E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:745    .rodata._ZN5daisy4seedL3D14E:0000000000000000 _ZN5daisy4seedL3D14E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:749    .rodata._ZN5daisy4seedL3D15E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:752    .rodata._ZN5daisy4seedL3D15E:0000000000000000 _ZN5daisy4seedL3D15E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:756    .rodata._ZN5daisy4seedL3D16E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:759    .rodata._ZN5daisy4seedL3D16E:0000000000000000 _ZN5daisy4seedL3D16E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:763    .rodata._ZN5daisy4seedL3D17E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:766    .rodata._ZN5daisy4seedL3D17E:0000000000000000 _ZN5daisy4seedL3D17E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:770    .rodata._ZN5daisy4seedL3D18E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:773    .rodata._ZN5daisy4seedL3D18E:0000000000000000 _ZN5daisy4seedL3D18E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:777    .rodata._ZN5daisy4seedL3D19E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:780    .rodata._ZN5daisy4seedL3D19E:0000000000000000 _ZN5daisy4seedL3D19E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:784    .rodata._ZN5daisy4seedL3D20E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:787    .rodata._ZN5daisy4seedL3D20E:0000000000000000 _ZN5daisy4seedL3D20E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:791    .rodata._ZN5daisy4seedL3D21E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:794    .rodata._ZN5daisy4seedL3D21E:0000000000000000 _ZN5daisy4seedL3D21E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:798    .rodata._ZN5daisy4seedL3D22E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:801    .rodata._ZN5daisy4seedL3D22E:0000000000000000 _ZN5daisy4seedL3D22E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:805    .rodata._ZN5daisy4seedL3D23E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:808    .rodata._ZN5daisy4seedL3D23E:0000000000000000 _ZN5daisy4seedL3D23E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:812    .rodata._ZN5daisy4seedL3D24E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:815    .rodata._ZN5daisy4seedL3D24E:0000000000000000 _ZN5daisy4seedL3D24E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:819    .rodata._ZN5daisy4seedL3D25E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:822    .rodata._ZN5daisy4seedL3D25E:0000000000000000 _ZN5daisy4seedL3D25E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:825    .rodata._ZN5daisy4seedL3D26E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:828    .rodata._ZN5daisy4seedL3D26E:0000000000000000 _ZN5daisy4seedL3D26E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:832    .rodata._ZN5daisy4seedL3D27E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:835    .rodata._ZN5daisy4seedL3D27E:0000000000000000 _ZN5daisy4seedL3D27E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:839    .rodata._ZN5daisy4seedL3D28E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:842    .rodata._ZN5daisy4seedL3D28E:0000000000000000 _ZN5daisy4seedL3D28E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:846    .rodata._ZN5daisy4seedL3D29E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:849    .rodata._ZN5daisy4seedL3D29E:0000000000000000 _ZN5daisy4seedL3D29E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:853    .rodata._ZN5daisy4seedL3D30E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:856    .rodata._ZN5daisy4seedL3D30E:0000000000000000 _ZN5daisy4seedL3D30E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:860    .rodata._ZN5daisy4seedL2A0E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:863    .rodata._ZN5daisy4seedL2A0E:0000000000000000 _ZN5daisy4seedL2A0E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:867    .rodata._ZN5daisy4seedL2A1E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:870    .rodata._ZN5daisy4seedL2A1E:0000000000000000 _ZN5daisy4seedL2A1E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:874    .rodata._ZN5daisy4seedL2A2E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:877    .rodata._ZN5daisy4seedL2A2E:0000000000000000 _ZN5daisy4seedL2A2E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:881    .rodata._ZN5daisy4seedL2A3E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:884    .rodata._ZN5daisy4seedL2A3E:0000000000000000 _ZN5daisy4seedL2A3E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:888    .rodata._ZN5daisy4seedL2A4E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:891    .rodata._ZN5daisy4seedL2A4E:0000000000000000 _ZN5daisy4seedL2A4E
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 193


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:895    .rodata._ZN5daisy4seedL2A5E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:898    .rodata._ZN5daisy4seedL2A5E:0000000000000000 _ZN5daisy4seedL2A5E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:902    .rodata._ZN5daisy4seedL2A6E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:905    .rodata._ZN5daisy4seedL2A6E:0000000000000000 _ZN5daisy4seedL2A6E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:909    .rodata._ZN5daisy4seedL2A7E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:912    .rodata._ZN5daisy4seedL2A7E:0000000000000000 _ZN5daisy4seedL2A7E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:916    .rodata._ZN5daisy4seedL2A8E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:919    .rodata._ZN5daisy4seedL2A8E:0000000000000000 _ZN5daisy4seedL2A8E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:923    .rodata._ZN5daisy4seedL2A9E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:926    .rodata._ZN5daisy4seedL2A9E:0000000000000000 _ZN5daisy4seedL2A9E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:930    .rodata._ZN5daisy4seedL3A10E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:933    .rodata._ZN5daisy4seedL3A10E:0000000000000000 _ZN5daisy4seedL3A10E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:936    .rodata._ZN5daisy4seedL3A11E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:939    .rodata._ZN5daisy4seedL3A11E:0000000000000000 _ZN5daisy4seedL3A11E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:943    .rodata._ZN5daisy4seedL3D31E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:946    .rodata._ZN5daisy4seedL3D31E:0000000000000000 _ZN5daisy4seedL3D31E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:950    .rodata._ZN5daisy4seedL3D32E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:953    .rodata._ZN5daisy4seedL3D32E:0000000000000000 _ZN5daisy4seedL3D32E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:957    .rodata._ZN5daisy4seedL3A12E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:960    .rodata._ZN5daisy4seedL3A12E:0000000000000000 _ZN5daisy4seedL3A12E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:964    .rodata._ZN5daisy4seedL3A13E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:967    .rodata._ZN5daisy4seedL3A13E:0000000000000000 _ZN5daisy4seedL3A13E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:971    .text._ZL20__gthread_key_deletei:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:976    .text._ZL20__gthread_key_deletei:0000000000000000 _ZL20__gthread_key_deletei
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1009   .rodata._ZN7daisyspL9kRandFracE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1012   .rodata._ZN7daisyspL9kRandFracE:0000000000000000 _ZN7daisyspL9kRandFracE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1015   .rodata._ZN7daisyspL11kOneTwelfthE:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1018   .rodata._ZN7daisyspL11kOneTwelfthE:0000000000000000 _ZN7daisyspL11kOneTwelfthE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1021   .text._ZN7daisysp4fmaxEff:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1027   .text._ZN7daisysp4fmaxEff:0000000000000000 _ZN7daisysp4fmaxEff
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1072   .text._ZN7daisysp4fminEff:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1078   .text._ZN7daisysp4fminEff:0000000000000000 _ZN7daisysp4fminEff
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1122   .text._ZN7daisysp6fclampEfff:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1128   .text._ZN7daisysp6fclampEfff:0000000000000000 _ZN7daisysp6fclampEfff
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1166   .text._ZN7daisysp4fmapEfffNS_7MappingE:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1172   .text._ZN7daisysp4fmapEfffNS_7MappingE:0000000000000000 _ZN7daisysp4fmapEfffNS_7MappingE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1285   .text._ZN7daisysp7OnePole4InitEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1291   .text._ZN7daisysp7OnePole4InitEv:0000000000000000 _ZN7daisysp7OnePole4InitEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1332   .text._ZN7daisysp7OnePole5ResetEv:0000000000000000 _ZN7daisysp7OnePole5ResetEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1326   .text._ZN7daisysp7OnePole5ResetEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1366   .text._ZN7daisysp7OnePole12SetFrequencyEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1372   .text._ZN7daisysp7OnePole12SetFrequencyEf:0000000000000000 _ZN7daisysp7OnePole12SetFrequencyEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1436   .text._ZN7daisysp7OnePole12SetFrequencyEf:0000000000000068 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1443   .text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1449   .text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:0000000000000000 _ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1485   .text._ZN7daisysp7OnePole7ProcessEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1491   .text._ZN7daisysp7OnePole7ProcessEf:0000000000000000 _ZN7daisysp7OnePole7ProcessEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1576   .text._ZN7daisysp7OnePole7ProcessEf:000000000000008c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1581   .text._ZN7daisysp8ReverbSc6SetMixEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1587   .text._ZN7daisysp8ReverbSc6SetMixEf:0000000000000000 _ZN7daisysp8ReverbSc6SetMixEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1625   .text._ZN7daisysp8ReverbSc11SetFeedbackERKf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1631   .text._ZN7daisysp8ReverbSc11SetFeedbackERKf:0000000000000000 _ZN7daisysp8ReverbSc11SetFeedbackERKf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1668   .text._ZN7daisysp10MoogLadder7SetFreqEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1674   .text._ZN7daisysp10MoogLadder7SetFreqEf:0000000000000000 _ZN7daisysp10MoogLadder7SetFreqEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1710   .text._ZN7daisysp10MoogLadder6SetResEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1716   .text._ZN7daisysp10MoogLadder6SetResEf:0000000000000000 _ZN7daisysp10MoogLadder6SetResEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1751   .rodata._ZL11SAMPLE_RATE:0000000000000000 $d
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 194


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1754   .rodata._ZL11SAMPLE_RATE:0000000000000000 _ZL11SAMPLE_RATE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1757   .rodata._ZL17SAMPLE_RATE_FLOAT:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1760   .rodata._ZL17SAMPLE_RATE_FLOAT:0000000000000000 _ZL17SAMPLE_RATE_FLOAT
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1763   .rodata._ZL9BIT_DEPTH:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1766   .rodata._ZL9BIT_DEPTH:0000000000000000 _ZL9BIT_DEPTH
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1769   .rodata._ZL10DELAY_TIME:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1772   .rodata._ZL10DELAY_TIME:0000000000000000 _ZL10DELAY_TIME
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1775   .rodata._ZL15MAX_REC_OUT_LEN:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1778   .rodata._ZL15MAX_REC_OUT_LEN:0000000000000000 _ZL15MAX_REC_OUT_LEN
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1781   .rodata._ZL17CHNL_BUF_SIZE_ABS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1784   .rodata._ZL17CHNL_BUF_SIZE_ABS:0000000000000000 _ZL17CHNL_BUF_SIZE_ABS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1787   .rodata._ZL19CHNL_BUF_SIZE_SAMPS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1790   .rodata._ZL19CHNL_BUF_SIZE_SAMPS:0000000000000000 _ZL19CHNL_BUF_SIZE_SAMPS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1793   .rodata._ZL12BUF_CHUNK_SZ:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1796   .rodata._ZL12BUF_CHUNK_SZ:0000000000000000 _ZL12BUF_CHUNK_SZ
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1799   .rodata._ZL9MAX_FILES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1802   .rodata._ZL9MAX_FILES:0000000000000000 _ZL9MAX_FILES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1805   .rodata._ZL13MAX_FNAME_LEN:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1808   .rodata._ZL13MAX_FNAME_LEN:0000000000000000 _ZL13MAX_FNAME_LEN
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1811   .rodata._ZL10MIN_GRAINS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1814   .rodata._ZL10MIN_GRAINS:0000000000000000 _ZL10MIN_GRAINS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1817   .rodata._ZL10MAX_GRAINS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1820   .rodata._ZL10MAX_GRAINS:0000000000000000 _ZL10MAX_GRAINS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1823   .rodata._ZL25GRAIN_INCREASE_SMOOTHNESS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1826   .rodata._ZL25GRAIN_INCREASE_SMOOTHNESS:0000000000000000 _ZL25GRAIN_INCREASE_SMOOTHNESS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1829   .rodata._ZL15NUM_SYNTH_MODES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1832   .rodata._ZL15NUM_SYNTH_MODES:0000000000000000 _ZL15NUM_SYNTH_MODES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1835   .rodata._ZL22PARAM_CHANGE_THRESHOLD:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1838   .rodata._ZL22PARAM_CHANGE_THRESHOLD:0000000000000000 _ZL22PARAM_CHANGE_THRESHOLD
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1841   .rodata._ZL17MIN_GRAIN_SIZE_MS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1844   .rodata._ZL17MIN_GRAIN_SIZE_MS:0000000000000000 _ZL17MIN_GRAIN_SIZE_MS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1847   .rodata._ZL17MAX_GRAIN_SIZE_MS:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1850   .rodata._ZL17MAX_GRAIN_SIZE_MS:0000000000000000 _ZL17MAX_GRAIN_SIZE_MS
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1853   .rodata._ZL22MIN_GRAIN_SIZE_SAMPLES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1856   .rodata._ZL22MIN_GRAIN_SIZE_SAMPLES:0000000000000000 _ZL22MIN_GRAIN_SIZE_SAMPLES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1859   .rodata._ZL22MAX_GRAIN_SIZE_SAMPLES:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1862   .rodata._ZL22MAX_GRAIN_SIZE_SAMPLES:0000000000000000 _ZL22MAX_GRAIN_SIZE_SAMPLES
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1865   .rodata._ZL9MIN_PITCH:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1868   .rodata._ZL9MIN_PITCH:0000000000000000 _ZL9MIN_PITCH
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1871   .rodata._ZL9MAX_PITCH:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1874   .rodata._ZL9MAX_PITCH:0000000000000000 _ZL9MAX_PITCH
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1877   .rodata._ZL14DEBOUNCE_DELAY:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1880   .rodata._ZL14DEBOUNCE_DELAY:0000000000000000 _ZL14DEBOUNCE_DELAY
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1883   .rodata._ZL15LONG_PRESS_TIME:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1886   .rodata._ZL15LONG_PRESS_TIME:0000000000000000 _ZL15LONG_PRESS_TIME
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1889   .rodata._ZL18HIPASS_LOWER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1892   .rodata._ZL18HIPASS_LOWER_BOUND:0000000000000000 _ZL18HIPASS_LOWER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1895   .rodata._ZL18HIPASS_UPPER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1898   .rodata._ZL18HIPASS_UPPER_BOUND:0000000000000000 _ZL18HIPASS_UPPER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1901   .rodata._ZL18LOPASS_LOWER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1904   .rodata._ZL18LOPASS_LOWER_BOUND:0000000000000000 _ZL18LOPASS_LOWER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1907   .rodata._ZL18LOPASS_UPPER_BOUND:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1910   .rodata._ZL18LOPASS_UPPER_BOUND:0000000000000000 _ZL18LOPASS_UPPER_BOUND
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1913   .rodata._ZL10HICUT_FREQ:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1916   .rodata._ZL10HICUT_FREQ:0000000000000000 _ZL10HICUT_FREQ
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1919   .text._ZL7SeedRngv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1924   .text._ZL7SeedRngv:0000000000000000 _ZL7SeedRngv
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 195


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1951   .text._ZL7SeedRngv:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1956   .rodata._ZL6halfpi:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1959   .rodata._ZL6halfpi:0000000000000000 _ZL6halfpi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1962   .text._ZN13GranularSynth6GetPanEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:1968   .text._ZN13GranularSynth6GetPanEv:0000000000000000 _ZN13GranularSynth6GetPanEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2003   .text._ZNK16AudioFileManager20GetSamplesPerChannelEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2009   .text._ZNK16AudioFileManager20GetSamplesPerChannelEv:0000000000000000 _ZNK16AudioFileManager20GetSamplesPerChannelEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2049   .text._ZNK16AudioFileManager14GetNumChannelsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2055   .text._ZNK16AudioFileManager14GetNumChannelsEv:0000000000000000 _ZNK16AudioFileManager14GetNumChannelsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2089   .text._ZNK16AudioFileManager12GetFileCountEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2095   .text._ZNK16AudioFileManager12GetFileCountEv:0000000000000000 _ZNK16AudioFileManager12GetFileCountEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2129   .text._ZNK16AudioFileManager7GetNameEtPc:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2135   .text._ZNK16AudioFileManager7GetNameEtPc:0000000000000000 _ZNK16AudioFileManager7GetNameEtPc
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2177   .text._ZN13StereoRotator7SetFreqEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2183   .text._ZN13StereoRotator7SetFreqEf:0000000000000000 _ZN13StereoRotator7SetFreqEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2221   .text._ZN13StereoRotator7SetFreqEf:0000000000000030 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2226   .text._ZN13StereoRotator6SetMixEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2232   .text._ZN13StereoRotator6SetMixEf:0000000000000000 _ZN13StereoRotator6SetMixEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2271   .bss._ZN14GrannyChordApp9instance_E:0000000000000000 _ZN14GrannyChordApp9instance_E
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2268   .bss._ZN14GrannyChordApp9instance_E:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2274   .rodata:0000000000000000 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2278   .text._ZN14GrannyChordApp4InitEPsS0_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2284   .text._ZN14GrannyChordApp4InitEPsS0_:0000000000000000 _ZN14GrannyChordApp4InitEPsS0_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4345   .text._ZN14GrannyChordApp11InitFileMgrEv:0000000000000000 _ZN14GrannyChordApp11InitFileMgrEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7165   .text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4707   .text._ZN14GrannyChordApp6InitFXEv:0000000000000000 _ZN14GrannyChordApp6InitFXEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4819   .text._ZN14GrannyChordApp17InitPrevParamValsEv:0000000000000000 _ZN14GrannyChordApp17InitPrevParamValsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6461   .text._ZN14GrannyChordApp11InitColoursEv:0000000000000000 _ZN14GrannyChordApp11InitColoursEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6561   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000000 _ZN14GrannyChordApp14SetLedAppStateEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2412   .text._ZN14GrannyChordApp4InitEPsS0_:00000000000000d0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2430   .text._ZN14GrannyChordApp12PrintCPULoadEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2436   .text._ZN14GrannyChordApp12PrintCPULoadEv:0000000000000000 _ZN14GrannyChordApp12PrintCPULoadEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7202   .text._ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:0000000000000000 _ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7247   .text._ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2652   .text._ZN14GrannyChordApp12PrintCPULoadEv:0000000000000218 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2665   .text._ZN14GrannyChordApp3RunEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2671   .text._ZN14GrannyChordApp3RunEv:0000000000000000 _ZN14GrannyChordApp3RunEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7290   .text._ZN5daisy9WavWriterILj16384EE5WriteEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE5WriteEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7392   .text._ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7439   .text._ZN5daisy9WavWriterILj16384EE8SaveFileEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE8SaveFileEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2760   .text._ZN14GrannyChordApp8UpdateUIEv:0000000000000000 _ZN14GrannyChordApp8UpdateUIEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4166   .text._ZN14GrannyChordApp17UpdateSynthParamsEv:0000000000000000 _ZN14GrannyChordApp17UpdateSynthParamsEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2741   .text._ZN14GrannyChordApp3RunEv:0000000000000078 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2754   .text._ZN14GrannyChordApp8UpdateUIEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3181   .text._ZN14GrannyChordApp22HandleEncoderLongPressEv:0000000000000000 _ZN14GrannyChordApp22HandleEncoderLongPressEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3102   .text._ZN14GrannyChordApp20HandleEncoderPressedEv:0000000000000000 _ZN14GrannyChordApp20HandleEncoderPressedEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3281   .text._ZN14GrannyChordApp13ButtonHandlerEv:0000000000000000 _ZN14GrannyChordApp13ButtonHandlerEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3034   .text._ZN14GrannyChordApp22HandleEncoderIncrementEi:0000000000000000 _ZN14GrannyChordApp22HandleEncoderIncrementEi
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6241   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000000 _ZN14GrannyChordApp15DebugPrintStateE8AppState
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2915   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000000 _ZN14GrannyChordApp17HandleStateChangeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2892   .text._ZN14GrannyChordApp8UpdateUIEv:00000000000000d4 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2909   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2940   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:2946   .text._ZN14GrannyChordApp17HandleStateChangeEv:0000000000000030 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4593   .text._ZN14GrannyChordApp12InitRecordInEv:0000000000000000 _ZN14GrannyChordApp12InitRecordInEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4496   .text._ZN14GrannyChordApp12InitPlaybackEv:0000000000000000 _ZN14GrannyChordApp12InitPlaybackEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4419   .text._ZN14GrannyChordApp9InitSynthEv:0000000000000000 _ZN14GrannyChordApp9InitSynthEv
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 196


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3021   .text._ZN14GrannyChordApp17HandleStateChangeEv:000000000000009c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3028   .text._ZN14GrannyChordApp22HandleEncoderIncrementEi:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3876   .text._ZN14GrannyChordApp19HandleFileSelectionEl:0000000000000000 _ZN14GrannyChordApp19HandleFileSelectionEl
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3096   .text._ZN14GrannyChordApp20HandleEncoderPressedEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3175   .text._ZN14GrannyChordApp22HandleEncoderLongPressEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3275   .text._ZN14GrannyChordApp13ButtonHandlerEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3779   .text._ZN14GrannyChordApp22HandleButton1LongPressEv:0000000000000000 _ZN14GrannyChordApp22HandleButton1LongPressEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3707   .text._ZN14GrannyChordApp13HandleButton1Ev:0000000000000000 _ZN14GrannyChordApp13HandleButton1Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3836   .text._ZN14GrannyChordApp22HandleButton2LongPressEv:0000000000000000 _ZN14GrannyChordApp22HandleButton2LongPressEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3743   .text._ZN14GrannyChordApp13HandleButton2Ev:0000000000000000 _ZN14GrannyChordApp13HandleButton2Ev
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5628   .text._ZN14GrannyChordApp13RecordOutToSDEv:0000000000000000 _ZN14GrannyChordApp13RecordOutToSDEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7510   .text._ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5697   .text._ZN14GrannyChordApp15FinishRecordingEv:0000000000000000 _ZN14GrannyChordApp15FinishRecordingEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3694   .text._ZN14GrannyChordApp13ButtonHandlerEv:00000000000002f4 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3701   .text._ZN14GrannyChordApp13HandleButton1Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3967   .text._ZN14GrannyChordApp13NextSynthModeEv:0000000000000000 _ZN14GrannyChordApp13NextSynthModeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3737   .text._ZN14GrannyChordApp13HandleButton2Ev:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4065   .text._ZN14GrannyChordApp13PrevSynthModeEv:0000000000000000 _ZN14GrannyChordApp13PrevSynthModeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3773   .text._ZN14GrannyChordApp22HandleButton1LongPressEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6837   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000000 _ZN14GrannyChordApp15SetLedSynthModeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3830   .text._ZN14GrannyChordApp22HandleButton2LongPressEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3870   .text._ZN14GrannyChordApp19HandleFileSelectionEl:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7550   .text._ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3952   .text._ZN14GrannyChordApp19HandleFileSelectionEl:0000000000000074 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:3961   .text._ZN14GrannyChordApp13NextSynthModeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6351   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000000 _ZN14GrannyChordApp14DebugPrintModeE9SynthMode
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4050   .text._ZN14GrannyChordApp13NextSynthModeEv:0000000000000074 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4059   .text._ZN14GrannyChordApp13PrevSynthModeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4148   .text._ZN14GrannyChordApp13PrevSynthModeEv:0000000000000074 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4160   .text._ZN14GrannyChordApp17UpdateSynthParamsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6078   .text._ZN14GrannyChordApp15MapKnobDeadzoneEf:0000000000000000 _ZN14GrannyChordApp15MapKnobDeadzoneEf
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6144   .text._ZN14GrannyChordApp18UpdateKnobPassThruEPbff:0000000000000000 _ZN14GrannyChordApp18UpdateKnobPassThruEPbff
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5740   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000000 _ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5940   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:0000000000000000 _ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4331   .text._ZN14GrannyChordApp17UpdateSynthParamsEv:0000000000000144 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4339   .text._ZN14GrannyChordApp11InitFileMgrEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4413   .text._ZN14GrannyChordApp9InitSynthEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7590   .text._ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_:0000000000000000 _ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4478   .text._ZN14GrannyChordApp9InitSynthEv:0000000000000058 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4490   .text._ZN14GrannyChordApp12InitPlaybackEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4580   .text._ZN14GrannyChordApp12InitPlaybackEv:000000000000007c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4910   .text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:0000000000000000 _ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4587   .text._ZN14GrannyChordApp12InitRecordInEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4642   .text._ZN14GrannyChordApp13InitWavWriterEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4648   .text._ZN14GrannyChordApp13InitWavWriterEv:0000000000000000 _ZN14GrannyChordApp13InitWavWriterEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7628   .text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:0000000000000000 _ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4696   .text._ZN14GrannyChordApp13InitWavWriterEv:000000000000003c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4701   .text._ZN14GrannyChordApp6InitFXEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4805   .text._ZN14GrannyChordApp6InitFXEv:00000000000000c4 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4813   .text._ZN14GrannyChordApp17InitPrevParamValsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4904   .text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4960   .text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:0000000000000000 _ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4945   .text._ZN14GrannyChordApp13AudioCallbackEPKPKfPPfj:0000000000000024 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:4954   .text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5074   .text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:0000000000000000 _ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5397   .text._ZN14GrannyChordApp16ProcessSynthesisEPPfj:0000000000000000 _ZN14GrannyChordApp16ProcessSynthesisEPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5062   .text._ZN14GrannyChordApp12ProcessAudioEPKPKfPPfj:0000000000000084 $d
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 197


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5068   .text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5219   .text._ZN14GrannyChordApp18ProcessWAVPlaybackEPPfj:00000000000000dc $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5224   .text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5230   .text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:0000000000000000 _ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5385   .text._ZN14GrannyChordApp15ProcessRecordInEPKPKfPPfj:00000000000000ec $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5391   .text._ZN14GrannyChordApp16ProcessSynthesisEPPfj:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5503   .text._ZN14GrannyChordApp9ProcessFXE6Sample:0000000000000000 _ZN14GrannyChordApp9ProcessFXE6Sample
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5497   .text._ZN14GrannyChordApp9ProcessFXE6Sample:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5622   .text._ZN14GrannyChordApp13RecordOutToSDEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7758   .text._ZN5daisy9WavWriterILj16384EE8OpenFileEPKc:0000000000000000 _ZN5daisy9WavWriterILj16384EE8OpenFileEPKc
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5686   .text._ZN14GrannyChordApp13RecordOutToSDEv:0000000000000060 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5691   .text._ZN14GrannyChordApp15FinishRecordingEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5734   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5770   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000020 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5778   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000040 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5927   .text._ZN14GrannyChordApp17UpdateKnob1ParamsEf9SynthMode:0000000000000188 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5934   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5965   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:000000000000001c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:5973   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:000000000000003c $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6066   .text._ZN14GrannyChordApp17UpdateKnob2ParamsEf9SynthMode:00000000000000e0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6072   .text._ZN14GrannyChordApp15MapKnobDeadzoneEf:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6132   .text._ZN14GrannyChordApp15MapKnobDeadzoneEf:0000000000000050 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6138   .text._ZN14GrannyChordApp18UpdateKnobPassThruEPbff:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6213   .text._ZN14GrannyChordApp18UpdateKnobPassThruEPbff:0000000000000068 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6235   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6265   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6269   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000028 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6311   .text._ZN14GrannyChordApp15DebugPrintStateE8AppState:0000000000000058 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6345   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6375   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000018 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6383   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000038 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6443   .text._ZN14GrannyChordApp14DebugPrintModeE9SynthMode:0000000000000080 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6455   .text._ZN14GrannyChordApp11InitColoursEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6549   .text._ZN14GrannyChordApp11InitColoursEv:00000000000000b0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6555   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6587   .text._ZN14GrannyChordApp14SetLedAppStateEv:000000000000001c $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6593   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000034 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6826   .text._ZN14GrannyChordApp14SetLedAppStateEv:0000000000000218 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6831   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6871   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000028 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:6879   .text._ZN14GrannyChordApp15SetLedSynthModeEv:0000000000000048 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7159   .text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7196   .text._ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7241   .text._ZN5daisy9DaisySeed9PrintLineIJciiEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7284   .text._ZN5daisy9WavWriterILj16384EE5WriteEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7847   .text._ZNK5daisy9WavWriterILj16384EE11IsRecordingEv:0000000000000000 _ZNK5daisy9WavWriterILj16384EE11IsRecordingEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7386   .text._ZN5daisy9WavWriterILj16384EE16GetLengthSecondsEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7433   .text._ZN5daisy9WavWriterILj16384EE8SaveFileEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7887   .text._ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7504   .text._ZN5daisy9DaisySeed9PrintLineIJfEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7544   .text._ZN5daisy9DaisySeed9PrintLineIJiPcEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7584   .text._ZN5daisy9DaisySeed9PrintLineIJjEEEvPKcDpT_:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7622   .text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7945   .text._ZN5daisy9WavWriterILj16384EE12CalcByteRateEv:0000000000000000 _ZN5daisy9WavWriterILj16384EE12CalcByteRateEv
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7744   .text._ZN5daisy9WavWriterILj16384EE4InitERKNS1_6ConfigE:00000000000000a0 $d
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7752   .text._ZN5daisy9WavWriterILj16384EE8OpenFileEPKc:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7841   .text._ZNK5daisy9WavWriterILj16384EE11IsRecordingEv:0000000000000000 $t
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 198


/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7881   .text._ZN5daisy9WavWriterILj16384EE12CalcFileSizeEv:0000000000000000 $t
/var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s:7939   .text._ZN5daisy9WavWriterILj16384EE12CalcByteRateEv:0000000000000000 $t
                           .group:0000000000000000 _ZN5daisy5ColorD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6System6GetNowEv
log10f
powf
tanf
time
rng_state
strcpy
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6RgbLed6SetRedEf
_ZN5daisy8DaisyPod10UpdateLedsEv
_ZN13GranularSynth4InitEPsS0_j
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod9StopAudioEv
_ZN5daisy7Encoder8DebounceEv
_ZN5daisy9DaisySeed6SetLedEb
_ZN5daisy13AnalogControl7ProcessEv
_ZN16AudioFileManager10SetBuffersEPsS0_
_ZN16AudioFileManager4InitEv
_ZN16AudioFileManager12ScanWavFilesEv
_ZN16AudioFileManager8LoadFileEt
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
memset
_ZN7daisysp10Compressor4InitEf
_ZN7daisysp7Limiter4InitEv
_ZN7daisysp6Chorus4InitEf
_ZN7daisysp8ReverbSc4InitEf
_ZN7daisysp10MoogLadder4InitEf
_ZN13GranularSynth13ProcessGrainsEv
_ZN7daisysp10MoogLadder7ProcessEf
_ZN7daisysp8ReverbSc10ProcessMixERKfS2_PfS3_
sprintf
_ZN13GranularSynth12SetGrainSizeEf
_ZN13GranularSynth13SetPitchRatioEf
_ZN13GranularSynth6SetPanEf
_ZN13GranularSynth12SetRndAmountEf
_ZN7daisysp6Chorus11SetLfoDepthEf
_ZN7daisysp6Chorus6SetPanEff
_ZN13GranularSynth11SetSpawnPosEf
_ZN13GranularSynth21SetTargetActiveGrainsEf
_ZN13GranularSynth12SetDirectionEf
_ZN13GranularSynth10SetRndBiasEf
_ZN7daisysp6Chorus6SetMixEf
_ZN5daisy5Color4InitENS0_11PresetColorE
_ZN5daisy5Color4InitEfff
_ZN5daisy6RgbLed8SetColorENS_5ColorE
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
pow
f_write
f_lseek
ARM GAS  /var/folders/2p/02m_5p7958535cp2tpgps0400000gn/T//ccVhFGqR.s 			page 199


f_close
f_open
